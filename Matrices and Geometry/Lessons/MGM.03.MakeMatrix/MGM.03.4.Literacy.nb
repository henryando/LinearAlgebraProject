(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    699736,      14607]
NotebookOptionsPosition[    634087,      13112]
NotebookOutlinePosition[    686653,      14203]
CellTagsIndexPosition[    686610,      14200]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.03 Using Aligners, Stretchers and Hangers to Make 2D Matrices Do What \
You Want\n",
 StyleBox[" LITERACY",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[TextData[StyleBox["What you should be able to handle when you are away \
from the machine.",
 FontSize->12]], "Subsection"],

Cell["L.1)", "Subsubsection"],

Cell["Here are the x and y axis unit vectors:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"xyunits", " ", "=", " ", 
  RowBox[{"Show", "[", "\n", "     ", 
   RowBox[{
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", "      ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Blue"}]}], "]"}], ",", " ", "\n", "   ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0, 0], Thickness[0.005], LineBox[{{0, 0}, {0.86, 0.}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{1, 0}, {0.8200000000000001, -0.054}, {0.86, 0.}, {
       0.8200000000000001, 0.054}, {1, 0}}]}}, {
    {RGBColor[0, 0, 1], Thickness[0.005], LineBox[{{0, 0}, {0., 0.86}}]}, 
    {RGBColor[0, 0, 1], Thickness[0.005], 
     PolygonBox[{{0, 1}, {0.054, 0.8200000000000001}, {0., 0.86}, {-0.054, 
       0.8200000000000001}, {0, 1}}]}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotRange->{{-1, 1}, {-1, 1}}]], "Output",
 CellChangeTimes->{3.5032342075943623`*^9}]
}, Open  ]],

Cell["Here's a perpendicular frame: ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "16"], ",", 
       RowBox[{"0.3", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"frameplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Blue"}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.7127382061467276, 0.48125279167891066`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.8287653559845669, 0.5595962693940821}, {
      0.7098057904546253, 0.41411561167998073`}, {0.7127382061467276, 
      0.48125279167891066`}, {0.6493693933600644, 0.503622270126314}, {
      0.8287653559845669, 0.5595962693940821}}]}}, {
    {RGBColor[0, 0, 1], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.48125279167891066`, 0.7127382061467274}}]}, 
    {RGBColor[0, 0, 1], Thickness[0.005], 
     PolygonBox[{{-0.5595962693940821, 
      0.8287653559845668}, {-0.4141156116799808, 
      0.7098057904546252}, {-0.48125279167891066`, 
      0.7127382061467274}, {-0.5036222701263139, 
      0.6493693933600643}, {-0.5595962693940821, 0.8287653559845668}}]}}, 
   InsetBox["\<\"perpframe[1]\"\>", \
{0.3315061423938268, 0.22383850775763287`}], 
   InsetBox["\<\"perpframe[2]\"\>", \
{-0.3917173885758575, 0.5801357491891967}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotRange->{{-1, 1}, {-1, 1}}]], "Output",
 CellChangeTimes->{3.503234207670396*^9}]
}, Open  ]],

Cell["\<\
When you hit the x-y axis unit vectors with the hanger corresponding to the \
this perpendicular frame, you get one of the following outcomes:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"original", " ", "=", " ", 
   RowBox[{"Show", "[", "\n", "     ", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], ",", 
       RowBox[{"Tail", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", "      ", 
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"perpframe", "[", "2", "]"}], ",", 
       RowBox[{"Tail", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "->", "Blue"}]}], "]"}], ",", " ", "\n", 
     "     ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot A\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xyunits", " ", "=", " ", 
   RowBox[{"Show", "[", "\n", "     ", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"Tail", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", "      ", 
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"Tail", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "->", "Blue"}]}], "]"}], ",", " ", "\n", "   ", 
     
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot B\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"original", ",", "xyunits"}], "}"}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{
        {RGBColor[1, 0, 0], Thickness[0.005], 
         LineBox[{{0, 0}, {0.7127382061467276, 0.48125279167891066`}}]}, 
        {RGBColor[1, 0, 0], Thickness[0.005], 
         PolygonBox[{{0.8287653559845669, 0.5595962693940821}, {
          0.7098057904546253, 0.41411561167998073`}, {0.7127382061467276, 
          0.48125279167891066`}, {0.6493693933600644, 0.503622270126314}, {
          0.8287653559845669, 0.5595962693940821}}]}}, {
        {RGBColor[0, 0, 1], Thickness[0.005], 
         LineBox[{{0, 0}, {-0.48125279167891066`, 0.7127382061467274}}]}, 
        {RGBColor[0, 0, 1], Thickness[0.005], 
         PolygonBox[{{-0.5595962693940821, 
          0.8287653559845668}, {-0.4141156116799808, 
          0.7098057904546252}, {-0.48125279167891066`, 
          0.7127382061467274}, {-0.5036222701263139, 
          0.6493693933600643}, {-0.5595962693940821, 0.8287653559845668}}]}}},
      
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      PlotLabel->FormBox["\"Plot A\"", TraditionalForm],
      PlotRange->{{-1, 1}, {-1, 1}}], {192., -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[{{
        {RGBColor[1, 0, 0], Thickness[0.005], 
         LineBox[{{0, 0}, {0.86, 0.}}]}, 
        {RGBColor[1, 0, 0], Thickness[0.005], 
         PolygonBox[{{1, 0}, {0.8200000000000001, -0.054}, {0.86, 0.}, {
           0.8200000000000001, 0.054}, {1, 0}}]}}, {
        {RGBColor[0, 0, 1], Thickness[0.005], 
         LineBox[{{0, 0}, {0., 0.86}}]}, 
        {RGBColor[0, 0, 1], Thickness[0.005], 
         PolygonBox[{{0, 1}, {0.054, 0.8200000000000001}, {0., 0.86}, {-0.054,
            0.8200000000000001}, {0, 1}}]}}},
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      PlotLabel->FormBox["\"Plot B\"", TraditionalForm],
      PlotRange->{{-1, 1}, {-1, 1}}], {576., -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.503234208096201*^9}]
}, Open  ]],

Cell["The correct plot is Plot.......", "Text"],

Cell["L.2)", "Subsubsection"],

Cell["Here's a perpendicular frame:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["\[Pi]", "16"], ",", 
       RowBox[{"0.3", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"frameplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Blue"}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.818077947344275, 0.2652328638554765}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.9512534271445058, 0.30841030680869364`}, {
      0.7966819668261642, 0.20152876651732549`}, {0.818077947344275, 
      0.2652328638554765}, {0.7633736536908253, 0.3042641366489321}, {
      0.9512534271445058, 0.30841030680869364`}}]}}, {
    {RGBColor[0, 0, 1], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.2652328638554764, 0.818077947344275}}]}, 
    {RGBColor[0, 0, 1], Thickness[0.005], 
     PolygonBox[{{-0.3084103068086935, 
      0.9512534271445058}, {-0.20152876651732538`, 
      0.7966819668261642}, {-0.2652328638554764, 
      0.818077947344275}, {-0.304264136648932, 
      0.7633736536908253}, {-0.3084103068086935, 0.9512534271445058}}]}}, 
   InsetBox["\<\"perpframe[1]\"\>", \
{0.38050137085780233`, 0.12336412272347747`}], 
   InsetBox["\<\"perpframe[2]\"\>", \
{-0.21588721476608547`, 0.6658773990011541}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotRange->{{-1, 1}, {-1, 1}}]], "Output",
 CellChangeTimes->{3.503234208187502*^9}]
}, Open  ]],

Cell["\<\
When you hit this perpendicular frame with the aligner corresponding to the \
same perpendicular frame, you get one of the following outcomes:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"original", " ", "=", " ", 
   RowBox[{"Show", "[", "\n", "     ", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], ",", 
       RowBox[{"Tail", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", "      ", 
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"perpframe", "[", "2", "]"}], ",", 
       RowBox[{"Tail", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "->", "Blue"}]}], "]"}], ",", " ", "\n", 
     "     ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot A\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xyunits", " ", "=", " ", 
   RowBox[{"Show", "[", "\n", "     ", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}], ",", 
       RowBox[{"Tail", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", "      ", 
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], ",", 
       RowBox[{"Tail", "->", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "->", "Blue"}]}], "]"}], ",", " ", "\n", "   ", 
     
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot B\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"original", ",", "xyunits"}], "}"}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{
        {RGBColor[1, 0, 0], Thickness[0.005], 
         LineBox[{{0, 0}, {0.818077947344275, 0.2652328638554765}}]}, 
        {RGBColor[1, 0, 0], Thickness[0.005], 
         PolygonBox[{{0.9512534271445058, 0.30841030680869364`}, {
          0.7966819668261642, 0.20152876651732549`}, {0.818077947344275, 
          0.2652328638554765}, {0.7633736536908253, 0.3042641366489321}, {
          0.9512534271445058, 0.30841030680869364`}}]}}, {
        {RGBColor[0, 0, 1], Thickness[0.005], 
         LineBox[{{0, 0}, {-0.2652328638554764, 0.818077947344275}}]}, 
        {RGBColor[0, 0, 1], Thickness[0.005], 
         PolygonBox[{{-0.3084103068086935, 
          0.9512534271445058}, {-0.20152876651732538`, 
          0.7966819668261642}, {-0.2652328638554764, 
          0.818077947344275}, {-0.304264136648932, 
          0.7633736536908253}, {-0.3084103068086935, 0.9512534271445058}}]}}},
      
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      PlotLabel->FormBox["\"Plot A\"", TraditionalForm],
      PlotRange->{{-1, 1}, {-1, 1}}], {192., -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[{{
        {RGBColor[1, 0, 0], Thickness[0.005], 
         LineBox[{{0, 0}, {0.86, 0.}}]}, 
        {RGBColor[1, 0, 0], Thickness[0.005], 
         PolygonBox[{{1, 0}, {0.8200000000000001, -0.054}, {0.86, 0.}, {
           0.8200000000000001, 0.054}, {1, 0}}]}}, {
        {RGBColor[0, 0, 1], Thickness[0.005], 
         LineBox[{{0, 0}, {0., 0.86}}]}, 
        {RGBColor[0, 0, 1], Thickness[0.005], 
         PolygonBox[{{0, 1}, {0.054, 0.8200000000000001}, {0., 0.86}, {-0.054,
            0.8200000000000001}, {0, 1}}]}}},
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      PlotLabel->FormBox["\"Plot B\"", TraditionalForm],
      PlotRange->{{-1, 1}, {-1, 1}}], {576., -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}]}, {}},
  ContentSelectable->True,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.503234208561081*^9}]
}, Open  ]],

Cell["The correct plot is Plot.......", "Text"],

Cell["L.3)", "Subsubsection"],

Cell["\<\
Agree or disagree:
When you hit a 2D perpendicular frame with a 2D matrix, you get another \
perpendicular frame.
Agree...............   Disagree.............\
\>", "Text"],

Cell["L.4)", "Subsubsection"],

Cell["Here's a perpendicular frame ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", "3"]}], ",", 
       RowBox[{"0.4", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"frameplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Blue"}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.6036537748017027, 0.6125374438902942}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.7019229939554682, 0.7122528417329003}, {
      0.6140385084970605, 0.5461434885473829}, {0.6036537748017027, 
      0.6125374438902942}, {0.5371152015899073, 0.6219511718945735}, {
      0.7019229939554682, 0.7122528417329003}}]}}, {
    {RGBColor[0, 0, 1], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.6125374438902942, 0.6036537748017027}}]}, 
    {RGBColor[0, 0, 1], Thickness[0.005], 
     PolygonBox[{{-0.7122528417329003, 
      0.7019229939554682}, {-0.5461434885473829, 
      0.6140385084970605}, {-0.6125374438902942, 
      0.6036537748017027}, {-0.6219511718945735, 
      0.5371152015899072}, {-0.7122528417329003, 0.7019229939554682}}]}}, 
   InsetBox["\<\"perpframe[1]\"\>", \
{0.28076919758218727`, 0.28490113669316014`}], 
   InsetBox["\<\"perpframe[2]\"\>", \
{-0.4985769892130302, 0.4913460957688277}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotRange->{{-1, 1}, {-1, 1}}]], "Output",
 CellChangeTimes->{3.503234208684313*^9}]
}, Open  ]],

Cell["Here is an ellipse:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1.5", " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{"0.8", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", 
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
   RowBox[{"PlotStyle", "->", 
    RowBox[{"Thickness", "[", "0.01", "]"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Thickness[0.01], LineBox[CompressedData["
1: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

     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234209033553*^9}]
}, Open  ]],

Cell["\<\
When you hit this ellipse with the hanger corresponding to the perpendicular \
frame plotted above, you get one of the following outcomes:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", " ", "=", " ", 
    RowBox[{"Show", "[", "\n", "     ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", "      ", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "2", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Blue"}]}], "]"}]}], "]"}]}], ";"}], " ",
   "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"Cplot", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1.5", " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"perpframe", "[", "1", "]"}]}], " ", "+", 
      RowBox[{"0.8", " ", 
       RowBox[{"Sin", "[", "t", "]"}], " ", 
       RowBox[{"perpframe", "[", "2", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Thickness", "[", "0.02", "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot C\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cplotframe", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"Cplot", ",", "frameplot"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Bplot", " ", "=", " ", "\n", "\t", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1.5", " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"perpframe", "[", "2", "]"}]}], " ", "+", 
      RowBox[{"0.8", " ", 
       RowBox[{"Sin", "[", "t", "]"}], " ", 
       RowBox[{"perpframe", "[", "1", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Thickness", "[", "0.02", "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot B\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Bplotframe", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"Bplot", ",", "frameplot"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Aplot", " ", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.8", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], " ", ",", 
       RowBox[{"1.5", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Thickness", "[", "0.02", "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot A\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Aplotframe", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"Aplot", ",", "frameplot"}], "]"}]}], ";"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"Aplotframe", ",", "Bplotframe", ",", "Cplotframe"}], "}"}], 
  "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], Thickness[0.02], LineBox[CompressedData["
1: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
s/8PSHxaZQ==
          "]]}}, {{
         {RGBColor[1, 0, 0], Thickness[0.005], 
          LineBox[{{0, 0}, {0.6036537748017027, 0.6125374438902942}}]}, 
         {RGBColor[1, 0, 0], Thickness[0.005], 
          PolygonBox[{{0.7019229939554682, 0.7122528417329003}, {
           0.6140385084970605, 0.5461434885473829}, {0.6036537748017027, 
           0.6125374438902942}, {0.5371152015899073, 0.6219511718945735}, {
           0.7019229939554682, 0.7122528417329003}}]}}, {
         {RGBColor[0, 0, 1], Thickness[0.005], 
          LineBox[{{0, 0}, {-0.6125374438902942, 0.6036537748017027}}]}, 
         {RGBColor[0, 0, 1], Thickness[0.005], 
          PolygonBox[{{-0.7122528417329003, 
           0.7019229939554682}, {-0.5461434885473829, 
           0.6140385084970605}, {-0.6125374438902942, 
           0.6036537748017027}, {-0.6219511718945735, 
           0.5371152015899072}, {-0.7122528417329003, 
           0.7019229939554682}}]}}}},
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      PlotLabel->FormBox["\"Plot A\"", TraditionalForm],
      PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{Automatic, Automatic}], {193.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], Thickness[0.02], LineBox[CompressedData["
1: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
OY8rrmc7XHoZ+PDaCqwjdhqsQC4OAy32vK1IIE6vO3ItdiETOUf2upwgXmIa
KisrysTjs/TUNcQrzV7dS1Vgogp33PUW8r7MfLQ71m1m4puss7O3ia+oBlFP
dpOc9y1YFIiFwiZ+iFozsTVroHqAvP/dNgu8rzkzMXV1scQd4ojNQk0DPkwc
NxWO/0LqSVO0oeZFPBNf1rNWORMPCwUs6k1l4sCi0wOzpB63fltUIv6OifdL
zgfKEJv8G3lxqZGJp8y2GmWQ+jUfHfnyiMbEk9cXHVEnNnonZP+J5NbQSBFv
ZVL/s89m6oZJrtXzvuefQu6HrJTvkxmSezfuuvf7f/enbJnrL96NfXj7wIOg
wd0caOMTsVm8rw87K4sy7Mn9kzmQcqwuvA+ZyZpGb8j9fKrZ2vo6nuRqO2u1
OXJ/f4T7PbmV2oczcQ4zEYYkd9j5jmyq6MMLiuHXzmwnOfdg9QbDeZLbzULf
3iP9IKbjnOe4UD/KcWVtKyL9QrarpOupVD9yBx8xmdMjOVtEXXlUrx/PrRa3
NdnCgb+lrxYbePejyQq/zQc2k/4Zq69dfq0fnbqqTx/cRM7nqYSrUXQ/9iRv
+rKH9CcP9Xf96tn9OFam93SG9K9L+9Ro2NePlX7S2p2qHNA3mFuycqIf08rn
JD+SfjeXu0bRiWcA5SZ/TTiTfqjx5IwES3YANTe3NIeR3BXzYGtO8dEB/Mr/
XHMn6adcF+9O97oMYNPtUvo0yVEnTWNXc/sMYE3+Jls70o+zZwerlGMGcOrp
dHQfyT2b9XeFadcMYMuFN14ySzmww+h59Cq9QXy+oqXHQ5D0RyujrPk9g+gR
t6TnA8kpydLOJt3Wg5hafCPakI/cL9ddw5Heg7h37a/qxVwkp8n+u3jj9SCe
493A+4hFwfdHzk1LFIbw8Jm2vLhRMq+fBlOXtYYw9NSa6fBhMk/XaZl1GxI/
y7J06Kdgd8dw0r3jQ5hh+mrXT5JDFihvOfv0/hAuLV36PruOAtkqiQU7+IYx
f8c2HcuvFJx1tJzTWDmMtUOLj7GqKZjxd5sQlx/GDQ92R0pVUMD9+XjND4Nh
LBJ6lL7pAwUW1p9iui4N48/JNQFOLyh4eMFc16d3GM94bW2uIjnhUJvQgPvb
EfTvLs8Y96Yg3GZu/HLpCBqL3qdJeVEg3un7IKhuBN0sBmPs3SlQfSj8xJsx
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
BblkybxW7hhZIJUyDOs0lloVknk+r/bD9HXWMPgzxUX3/2/ex8pG6X8YhrWe
6b1n0ilU+1E5Y9AwDBlDYWVuSRTWtaUps3lGoC08ZVVMBHnefScluFxGQOXb
07hesl88+5P2ce3FEZgRyYxQD6WQ5S2yYVvQCCwq9ewsCCT7S1ywnW38CLT4
p+2Ov0ghFWfYYFQ1AqmeKc+v2lG4P+ieV57iKAz4VWf1KVPY75vuytcxClYa
Ivf2kP0ow99YO3JgFDa+WTSeIk/2le3iMQsnyOf9h6WNpShc16kw27J0DNwc
VbebC1Goa6sos9JwDJILA/IsRsn+lmqzv/TJGGhMWybZkP2MY2Px8OWrMZgQ
cxSxZbKRHrUQbhWMQTddMOVAJxtHXiqEavwYA+ffi89Nkv2Oo5mTwDM/Brvj
q7qNXrExTqyu76waC86u+MoznsZGIauc2RXaLJC9sKsq+Rkb3TBL/q0uC5Kv
96j2PWTj7ViJB4M7WfBzv/STzRFs1HvAP736GAvEswqs653YePFEjGTEDRbk
f5lfqH6SjRY+Dq7dkSwwffT4dKgtG/ccDs/UussCObHwvWst2Vhg6Mhf/ZAF
BemHaySBjf1/DWbfvmbBsO15o31bSY4qKKyi57NgM7/rlctkH45bXHxl6QcW
3Hbp3VhG9uXW/NVxlhUsGFp3NKdzHRtXrrKYdP/CAuHJxxN/1rLxvey3bde+
sSCjVZWHX5r8e32+UzENLCj9/9+nl/n/36f/P4UQjT0=
          "]]}}, {{
         {RGBColor[1, 0, 0], Thickness[0.005], 
          LineBox[{{0, 0}, {0.6036537748017027, 0.6125374438902942}}]}, 
         {RGBColor[1, 0, 0], Thickness[0.005], 
          PolygonBox[{{0.7019229939554682, 0.7122528417329003}, {
           0.6140385084970605, 0.5461434885473829}, {0.6036537748017027, 
           0.6125374438902942}, {0.5371152015899073, 0.6219511718945735}, {
           0.7019229939554682, 0.7122528417329003}}]}}, {
         {RGBColor[0, 0, 1], Thickness[0.005], 
          LineBox[{{0, 0}, {-0.6125374438902942, 0.6036537748017027}}]}, 
         {RGBColor[0, 0, 1], Thickness[0.005], 
          PolygonBox[{{-0.7122528417329003, 
           0.7019229939554682}, {-0.5461434885473829, 
           0.6140385084970605}, {-0.6125374438902942, 
           0.6036537748017027}, {-0.6219511718945735, 
           0.5371152015899072}, {-0.7122528417329003, 
           0.7019229939554682}}]}}}},
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      PlotLabel->FormBox["\"Plot B\"", TraditionalForm],
      PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{Automatic, Automatic}], {580.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], Thickness[0.02], LineBox[CompressedData["
1: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
va9PPEkO1D8m5W3XPISFHizRvyQHNl3MqVUuH8JI211jIXI0vn3ZtflF8hDO
un5+fTDJdRaa+bn2x4YwUWFxmSHZm0JHrwbwHIZQcelMpTiyV/c0i/wMsRrC
OzV/ftFkD7/hdstHaQ5hqZHTsrgV5OdZdN/bPzqILjv8NyetonFkp4Tv+65B
PGw2evHbapLDVmWsmV83iH2nTmuLaNNYHbHPKPPVILrvsRTdtZbG51ICundP
D6KP1eoDqetoPOJ03vbdoUHUTaAOvjGgUWDGq6NtOwZR5MyG1mxDGm0/xzwS
XjOIZ6O01qRsoDF/a89jUS4HE207T9qY0HjZ47ncjx4OfjThq2gAjTHIfdvz
hYOXJl12TBMLGz1xTsjk4P48D5GEzTTGbU8ULzvFwUcHn7EjzWhM57+dGXCQ
g+CyYTOY05hkFr9ztQ0H86JPzRki/pN9tzRIi4PzQ9kztLaS+y0kNamgwEFR
8/pVn4iNXTRCc2eRXGAYX+VgST5fj+qH+mE2Nu9Ybe9pRePF4MDTezrYKAop
lhTxX3CPaKhm45rfh195biPnITaulJ/Kxk8CUnX7t5PcVyT9WCmWja6MD9cr
iJ+PdyRcuc7GC6iau8qaRuWi46rr3NmYppl9eIR4yONpZfNeNuZWL3baZEOe
O8qUDE+Ys1FQzvJXJLGjr7f/Xz2Sk4TVjTuITTlq966rstFsOGnZ0h3k/HXq
r82WZmPk6+TXh4hjVf7tvynMxsY3Sn2xxGYmlvNEaBZqVQm9rSPe8m5Llu8A
C09Yb1w9RXzn3A0TRiMLJ+aWbVe3JblU4s1HqxKSc91uSFoT973fq5v+hnjR
lbMniAe8ZZ6LPGGhs1d64FXiNw13pPdHsvCa/uTKeOJMWbewlCAWLk53CUoj
3rpeX4x3ioUPI0Z8coizq55HrT3IQjOFW3PeEd8R3q/tac1CgTlmO/L/9/7a
n8xkIxaeSVigk0Vc/0LrbYsmC6mzf/OTiU0+JiYLyrHwTqUgI5o4tu13gdpM
Fs41XZEdRBxyZPyX+U8mDs3yXe5CbO2y4uh/HCZa1FDGpsTpwfvFzrYwcSox
5ac8sd9f3d7gT0y8v+KxA4/cjwM5J+gbuUw0DWEdQGJf+TzLm8+Y2LLlxoww
YuktNYzrUUz8cvn+bhti73rn6qDL5LmiTslsNvG+P7r/PL2YOKy7vuPT/85T
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
V/n//14e///v5f8P1hSGcg==
          "]]}}, {{
         {RGBColor[1, 0, 0], Thickness[0.005], 
          LineBox[{{0, 0}, {0.6036537748017027, 0.6125374438902942}}]}, 
         {RGBColor[1, 0, 0], Thickness[0.005], 
          PolygonBox[{{0.7019229939554682, 0.7122528417329003}, {
           0.6140385084970605, 0.5461434885473829}, {0.6036537748017027, 
           0.6125374438902942}, {0.5371152015899073, 0.6219511718945735}, {
           0.7019229939554682, 0.7122528417329003}}]}}, {
         {RGBColor[0, 0, 1], Thickness[0.005], 
          LineBox[{{0, 0}, {-0.6125374438902942, 0.6036537748017027}}]}, 
         {RGBColor[0, 0, 1], Thickness[0.005], 
          PolygonBox[{{-0.7122528417329003, 
           0.7019229939554682}, {-0.5461434885473829, 
           0.6140385084970605}, {-0.6125374438902942, 
           0.6036537748017027}, {-0.6219511718945735, 
           0.5371152015899072}, {-0.7122528417329003, 
           0.7019229939554682}}]}}}},
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      PlotLabel->FormBox["\"Plot C\"", TraditionalForm],
      PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{Automatic, Automatic}], {967.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->{447., Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.503234209632141*^9}]
}, Open  ]],

Cell["The correct plot is Plot.......", "Text"],

Cell["L.5)", "Subsubsection"],

Cell["Here's a perpendicular frame shown with a certain ellipse: ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", "3"]}], ",", 
       RowBox[{"0.4", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"frameplot", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], ",", 
       RowBox[{"Tail", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"perpframe", "[", "2", "]"}], ",", 
       RowBox[{"Tail", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "\[Rule]", "Blue"}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<perpframe[1]\>\"", ",", 
        RowBox[{"0.4", " ", 
         RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<perpframe[2]\>\"", ",", 
        RowBox[{"0.7", " ", 
         RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ellipse", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1.5", " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
      RowBox[{"0.8", " ", 
       RowBox[{"Sin", "[", "t", "]"}], " ", 
       RowBox[{"perpframe", "[", "2", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Thickness", "[", "0.01", "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"ellipse", ",", "frameplot"}], "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], Thickness[0.01], LineBox[CompressedData["
1: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
zAxfZeL//16A93+/F/gfDJKGRA==
      "]]}}, {{
     {RGBColor[1, 0, 0], Thickness[0.005], 
      LineBox[{{0, 0}, {0.7604262940577358, -0.4016862597919152}}]}, 
     {RGBColor[1, 0, 0], Thickness[0.005], 
      PolygonBox[{{0.8842166209973672, -0.46707704626966884`}, {
       0.6998354687192789, -0.4307508754749863}, {
       0.7604262940577358, -0.4016862597919152}, {
       0.7502797897164033, -0.3352554804072706}, {
       0.8842166209973672, -0.46707704626966884`}}]}}, {
     {RGBColor[0, 0, 1], Thickness[0.005], 
      LineBox[{{0, 0}, {0.40168625979191536`, 0.7604262940577357}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.005], 
      PolygonBox[{{0.467077046269669, 0.8842166209973671}, {
       0.4307508754749864, 0.6998354687192789}, {0.40168625979191536`, 
       0.7604262940577357}, {0.33525548040727077`, 0.7502797897164031}, {
       0.467077046269669, 0.8842166209973671}}]}}, 
    InsetBox["\<\"perpframe[1]\"\>", \
{0.3536866483989469, -0.18683081850786754`}], 
    InsetBox["\<\"perpframe[2]\"\>", \
{0.3269539323887683, 0.618951634698157}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.50323421027625*^9}]
}, Open  ]],

Cell["\<\
When you hit this ellipse with the aligner corresponding to the perpendicular \
frame plotted above, you get one of the following outcomes:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", " ", "=", " ", 
    RowBox[{"Show", "[", "\n", "     ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", "      ", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "2", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Blue"}]}], "]"}]}], "]"}]}], ";"}], " ",
   "\n", " "}], "\n", 
 RowBox[{
  RowBox[{"Cplot", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"1.5", " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"perpframe", "[", "2", "]"}]}], " ", "+", 
      RowBox[{"0.8", " ", 
       RowBox[{"Sin", "[", "t", "]"}], " ", 
       RowBox[{"perpframe", "[", "1", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Thickness", "[", "0.02", "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot C\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Cplotframe", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"Cplot", ",", "frameplot"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Bplot", " ", "=", " ", "\n", "\t", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.8", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], " ", ",", 
       RowBox[{"1.5", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Thickness", "[", "0.02", "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot B\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Bplotframe", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"Bplot", ",", "frameplot"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Aplot", " ", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.5", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], " ", ",", 
       RowBox[{"0.8", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"Thickness", "[", "0.02", "]"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Plot A\>\""}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Aplotframe", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"Aplot", ",", "frameplot"}], "]"}]}], ";"}], "\n", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"Aplotframe", ",", "Bplotframe", ",", "Cplotframe"}], "}"}], 
  "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], Thickness[0.02], LineBox[CompressedData["
1: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

          "]]}}, {{
         {RGBColor[1, 0, 0], Thickness[0.005], 
          LineBox[{{0, 0}, {0.7604262940577358, -0.4016862597919152}}]}, 
         {RGBColor[1, 0, 0], Thickness[0.005], 
          PolygonBox[{{0.8842166209973672, -0.46707704626966884`}, {
           0.6998354687192789, -0.4307508754749863}, {
           0.7604262940577358, -0.4016862597919152}, {
           0.7502797897164033, -0.3352554804072706}, {
           0.8842166209973672, -0.46707704626966884`}}]}}, {
         {RGBColor[0, 0, 1], Thickness[0.005], 
          LineBox[{{0, 0}, {0.40168625979191536`, 0.7604262940577357}}]}, 
         {RGBColor[0, 0, 1], Thickness[0.005], 
          PolygonBox[{{0.467077046269669, 0.8842166209973671}, {
           0.4307508754749864, 0.6998354687192789}, {0.40168625979191536`, 
           0.7604262940577357}, {0.33525548040727077`, 0.7502797897164031}, {
           0.467077046269669, 0.8842166209973671}}]}}}},
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      PlotLabel->FormBox["\"Plot A\"", TraditionalForm],
      PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{Automatic, Automatic}], {193.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], Thickness[0.02], LineBox[CompressedData["
1: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
s/8PSHxaZQ==
          "]]}}, {{
         {RGBColor[1, 0, 0], Thickness[0.005], 
          LineBox[{{0, 0}, {0.7604262940577358, -0.4016862597919152}}]}, 
         {RGBColor[1, 0, 0], Thickness[0.005], 
          PolygonBox[{{0.8842166209973672, -0.46707704626966884`}, {
           0.6998354687192789, -0.4307508754749863}, {
           0.7604262940577358, -0.4016862597919152}, {
           0.7502797897164033, -0.3352554804072706}, {
           0.8842166209973672, -0.46707704626966884`}}]}}, {
         {RGBColor[0, 0, 1], Thickness[0.005], 
          LineBox[{{0, 0}, {0.40168625979191536`, 0.7604262940577357}}]}, 
         {RGBColor[0, 0, 1], Thickness[0.005], 
          PolygonBox[{{0.467077046269669, 0.8842166209973671}, {
           0.4307508754749864, 0.6998354687192789}, {0.40168625979191536`, 
           0.7604262940577357}, {0.33525548040727077`, 0.7502797897164031}, {
           0.467077046269669, 0.8842166209973671}}]}}}},
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      PlotLabel->FormBox["\"Plot B\"", TraditionalForm],
      PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{Automatic, Automatic}], {580.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}], InsetBox[
     GraphicsBox[{{{}, {}, 
        {Hue[0.67, 0.6, 0.6], Thickness[0.02], LineBox[CompressedData["
1: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
6kACj0hDN9NhBAwSTTZPUOcD9v/7fcP/Aenepcc=
          "]]}}, {{
         {RGBColor[1, 0, 0], Thickness[0.005], 
          LineBox[{{0, 0}, {0.7604262940577358, -0.4016862597919152}}]}, 
         {RGBColor[1, 0, 0], Thickness[0.005], 
          PolygonBox[{{0.8842166209973672, -0.46707704626966884`}, {
           0.6998354687192789, -0.4307508754749863}, {
           0.7604262940577358, -0.4016862597919152}, {
           0.7502797897164033, -0.3352554804072706}, {
           0.8842166209973672, -0.46707704626966884`}}]}}, {
         {RGBColor[0, 0, 1], Thickness[0.005], 
          LineBox[{{0, 0}, {0.40168625979191536`, 0.7604262940577357}}]}, 
         {RGBColor[0, 0, 1], Thickness[0.005], 
          PolygonBox[{{0.467077046269669, 0.8842166209973671}, {
           0.4307508754749864, 0.6998354687192789}, {0.40168625979191536`, 
           0.7604262940577357}, {0.33525548040727077`, 0.7502797897164031}, {
           0.467077046269669, 0.8842166209973671}}]}}}},
      Axes->True,
      AxesLabel->{
        FormBox["\"x\"", TraditionalForm], 
        FormBox["\"y\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      PlotLabel->FormBox["\"Plot C\"", TraditionalForm],
      PlotRange->{{-1.5, 1.5}, {-1.5, 1.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{Automatic, Automatic}], {967.5, -189.}, 
     ImageScaled[{0.5, 0.5}], {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->{472., Automatic},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.503234211051523*^9}]
}, Open  ]],

Cell["The correct plot is Plot.......", "Text"],

Cell["L.6)", "Subsubsection"],

Cell[TextData[{
 "Here's a 2D perpendicular frame \n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        SqrtBox["3"], "2"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       FractionBox[
        SqrtBox["3"], "2"]}], "}"}]}], "}"}]}]]],
 "\nGiven that the hanger corresponding to this perpendicular frame is\n      \
    ",
 Cell[BoxData[
  RowBox[{"hanger", "=", 
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], "\[NegativeThinSpace]", ")"}]}]]],
 ",\nfill in the appropriate values: \na = ................... b = \
...................\nc = ................... d = ..................."
}], "Text"],

Cell["L.7)", "Subsubsection"],

Cell[TextData[{
 "Here's a 2D perpendicular frame:\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox[
        SqrtBox["3"], "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SqrtBox["3"], "2"]}], ",", 
       FractionBox["1", "2"]}], "}"}]}], "}"}]}]]],
 "\nGiven that the aligner corresponding to this perpendicular frame is\n     \
      ",
 Cell[BoxData[
  RowBox[{"aligner", "=", 
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], "\[NegativeThinSpace]", ")"}]}]]],
 ",\nfill in the appropriate values: \na = ................... b = \
...................\nc = ................... d = ..................."
}], "Text"],

Cell["L.8)", "Subsubsection"],

Cell[TextData[{
 "Here's a cleared 2D perpendicular frame:\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "s", "]"}]}], ",", 
       RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}]]],
 "\n\nHere is a point in usual xy coordinates: "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.3", "  ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "9"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"0.2", "  ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "9"}], ",", "9"}], "}"}]}], "]"}]}]}], "}"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.7999999999999998`", ",", 
   RowBox[{"-", "0.2`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.503234211198798*^9}]
}, Open  ]],

Cell["\<\
The perpendicular frame coordinates (for the perpendicular frame specified \
above)  {u,v} of this point are given by
u = ..........................................................................\
..
v = ..........................................................................\
..\
\>", "Text"],

Cell["L.9)", "Subsubsection"],

Cell[TextData[{
 "Here's a cleared 2D perpendicular frame:\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "s", "]"}]}], ",", 
       RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}]]],
 "\n\nHere is a point with usual xy coordinates: "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0.3", "  ", 
     RowBox[{"Random", "[", 
      RowBox[{"Integer", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "9"}], ",", "9"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"0.2", "  ", 
     RowBox[{"Random", "[", 
      RowBox[{"Integer", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "9"}], "}"}]}], "]"}]}]}], "}"}]}]], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.1`"}], ",", "0.2`"}], "}"}]], "Output",
 CellChangeTimes->{3.503234211232028*^9}]
}, Open  ]],

Cell["\<\
Fill the blank below with either the word \"aligner\" or \"hanger.\"
I can calculate the perpframe coordinates of this point by hitting {x,y} with \
the 
 .........................   for this perpendicular frame.\
\>", "Text"],

Cell["L.10)", "Subsubsection"],

Cell[TextData[{
 "Here's a cleared 2D perpendicular frame:\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "s", "]"}]}], ",", 
       RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}]]],
 "\n\nHere is a point with usual perpframe coordinates: "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", "\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.3", "  ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "9"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"0.2", "  ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "9"}], "}"}]}], "]"}]}]}], "}"}]}]}]], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.6999999999999997`", ",", "0.8`"}], "}"}]], "Output",
 CellChangeTimes->{3.503234211265348*^9}]
}, Open  ]],

Cell["\<\
Fill the blank below with either the word \"aligner\" or \"hanger.\"
I can calculate the usual xy coordinates of this point by hitting {u,v} with \
the 
 .........................   for this perpendicular frame.\
\>", "Text"],

Cell["L.11)", "Subsubsection"],

Cell["Here is a perpendicular frame and a curve:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "1.5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"frameplot", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Vector", "[", 
        RowBox[{
         RowBox[{"perpframe", "[", "k", "]"}], ",", 
         RowBox[{"Tail", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<perpframe[1]\>\"", ",", 
        RowBox[{"0.4", " ", 
         RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<perpframe[2]\>\"", ",", 
        RowBox[{"0.7", " ", 
         RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", "\[Pi]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t_", "]"}], ",", 
     RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{"t", " ", 
     RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "0.2"}], " ", "t"}]], " ", 
     RowBox[{"Cos", "[", 
      RowBox[{"4", " ", "t"}], "]"}], " ", 
     RowBox[{"perpframe", "[", "2", "]"}]}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"curveplot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"curveplot", ",", "frameplot", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
sqOvuX0b3CbS+LiOh+ahhtqp2xiYoVTSMs6Bh3p+Ri47tjBQMXdkt84OHr7c
aWhA2TEQKCn9ZdkuHiqe6b45dQMDVbY7xg6587D+5bCG00punhqXHDU4wMMp
dypmTdNiYPRb9LddKTwULWyI6dVkoEdz5YBPOg/fRfTPy1Pj4jmquodn8rBP
4/tGiSI3D8N7zuXe4KGAujKr/IcEjJs2nJ/9kIeZwuAl1rUSIJV5Wv808FAt
27fsSYgEzui41rpMl8HDjYODSf4SyJfkFL+fJYPXF/YV7PaSwGq1D+et9WVQ
5PxSv9pJAhV8Dd21hjJobctf/X01Fy9/r7z9OhnM3bgj9/p4CYT9Kp095iWD
lyrtwlySh0B4QrzdokgG4zqf7u79awjU/rnddPChDLo7GMZ6Rw3Bd5VRg/wy
GcRLgSYrg4eA52G8QEckgzfGLZxrvmkIZq3seaHbIoPTfg1N71AYgiTRFq1r
irIY8fvEhVH+g2D/IMfNb48snnZ4GL95+gCoBTrMyFKXQ9NXqQ9Cj/eBPhQY
5vrIo5bZkZTu+T3gaPTI8GURH8tThJ3pU3pg2oNV/SaP+OiQpbXdnfTADS2X
tIxyPipnNF40au0GkUVdnkcNH22GO8penO+G7IxwfmsrHxuOlrVpy3fDxv5T
MXuVBahwoi++pK8LWq8+npC8S4CiQ0cTnZq7oCjsq6jAVYC7REb7tV51wX9f
s6peeAqw0mBNXE9+F9xakuE5HMTZ51w9+tavC+IM79UsiBZg85qz90eYTpiR
/652/B0BnuKN8uuEnfDmcntamFSAac79QfKqndz/ax90ylJoc+Kzhi2/EzzT
D49aUxT2F0b4w7cOGF5q80RjAoU+VyaJA8s6oNjl0/ij0yi81983ttmnA06a
8fT+WUXhDUe32i3OnL9kw2SZ3ylsaSy9G7K1A6wGbw+bWFLo9Omz3MS1HWDM
TwhKt6NwX/Gh1/d0OsBRxZm3zpVCZU+X8PJPNFR3jftNepzCKkWt5Xfe0KBU
fS5TcIrCPV1bkp88p6G2SfJZMZbCgkmTopY9pGE0fTBW6TyFRX0jOXfTaFiR
7HabvkZh0jZBVUYSDXo9RFqXS2FdZeri/Dgaug7njT7Jo7D8zLDZb5E0RB/O
kj9TSKFhZbXrbQ8axrxjBaPPKJSKMtUznWkY0lif+bKKQv+AI3n3HWmIW6Hd
ki6iMDbfpwE30pBQlGliVEdhstodvbblNFQVas80beP0EFnJNBnTsOOGZXI/
TWE1SbAcNaDBXiU+LfsLhdaFjwJT5tCgtpdxpPopTNW5fd1Hk4ZFbO+hVB7B
Oy5/f5RVo8HmnXvBNXmCq2J7/yhXoSH23NekXEJw0839hqUUDeFL47dfnUAw
M2bnG6kcDff8lExS1AiKBvL+c+Nx+hmtK47RJLhSFD2l5IcYQtqWZrrqEExd
P2iSKRFDnuktsn4GQaFpmFbRgBgM5XYo6c8mOFGuo36oTwxuBqU3iT7B4ObQ
4J3fxPCnsktn8wKCPpXK1GC3GILmNTwqWEzQ1F5y/l6XGIQhNfOOGROsflHf
cU8sBsXe98/VgaDF3Tllg21i0Lyyf6TenKCmxrHqXa2cf8KZx4lrCSbL0+P/
axaD196xX6z/IGjQ/Da5pEkMW4UFw3JWBPdu2x2Q0yiGmRNz/QtsCc7w1rpW
1iCGp7ItIbs2E3Sz1jMVcBxB+SiRrQRNDk41Df4shthkz/k3dhBsvrg4T5Vj
+xi5BotdBMMS1VLefxJDjXDfpHZnwr2HIwrPOT7a0PP5gBvB8Ns5cl0cX654
oa/oRdDyivNpA+587VxfQfI+gmrqI9nZHIvLDD10Aghel61w+p3LH5R23u7q
foJm2WkFaly9GwwmVk0/QHAsqidPievnlaXh07RDBNsPXrRayPWrMfnCGvUj
nN63p1w83CIGGd02q6hIgvMfeiYMc/osWFfROHiCoPnVcSsut4vhScXYoOMp
giVfZC4E0mKQLtpytjyG4PPU9hz/TjF0B+fc0z1LcLxbtU/KFzGk19VtDz9H
MOjSps6+HjEkND6PfptE0HdjjmZALxfvQPSK2Smc3fdPqXa/GDI+qocEp3Hx
S0eSmUExqEYeNyq9TBAn9NMjjBhU8Eco/xpBveWZ9LwRTs9ZaevW5hB8dlH6
fbwsDRqzfQJKbnH1vG5hyvg0uJbNr/16h+DGmf2ZGeO4fQq3KRYWEnRS+dLQ
rErD37KeU30ecPP8l/Uecw0ayrW3p8c+JrgWGw+8nEyDnHx6zo0ygkPe9n94
z6DhbUvS1veVBHtfCSSh3P4UX8yW7awmSEXsm1w0n4bHiU+MB2oIyjp9ystf
SkO38SqL0TcEtecOKfoADd9iPGcNvyO451Nv6eY1NMiGqiYOfCCo77jgqcd6
GlKkixM6P//0v0JybWmon/pR90MTwf8BQN13YA==
      "]]}}, {{
     {RGBColor[1, 0, 0], Thickness[0.005], 
      LineBox[{{0, 0}, {0.326066124467795, 0.7957894712011164}}]}, 
     {RGBColor[1, 0, 0], Thickness[0.005], 
      PolygonBox[{{0.3791466563579011, 0.9253365944199028}, {
       0.36086843431215365`, 0.7383020879809936}, {0.326066124467795, 
       0.7957894712011164}, {0.2609320821148042, 0.7792499268676469}, {
       0.3791466563579011, 0.9253365944199028}}]}}, {
     {RGBColor[1, 0, 0], Thickness[0.005], 
      LineBox[{{0, 0}, {-0.7957894712011164, 0.326066124467795}}]}, 
     {RGBColor[1, 0, 0], Thickness[0.005], 
      PolygonBox[{{-0.9253365944199028, 
       0.3791466563579011}, {-0.7383020879809936, 
       0.3608684343121537}, {-0.7957894712011164, 
       0.326066124467795}, {-0.7792499268676469, 
       0.2609320821148042}, {-0.9253365944199028, 0.3791466563579011}}]}}, 
    InsetBox["\<\"perpframe[1]\"\>", \
{0.15165866254316046`, 0.3701346377679611}], 
    InsetBox["\<\"perpframe[2]\"\>", \
{-0.6477356160939319, 0.26540265945053076`}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.503234211352563*^9}]
}, Open  ]],

Cell["\<\
Here is what you get when you hit this curve with a certain matrix A:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hitcurveplot", " ", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", "\n", "       ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"hitcurveplot", ",", "frameplot", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
s/HTGMUk2YdKB85y0XFCQ7tMdxTNnTRPJ2lzMW19pPMSy1H02t3iIqBCrv9N
7KS2DTl/kY+3lSwX768r1F/tMIp/v7XEUAW4uMKxqu+aM7lfkM8n+zEO+vvF
hNW7juIRx42YzeBgrPaPNaLuo5gw71HnhV8cbHgq/6vj/ihWd20cLCjg4L0f
zzoe+I7iTGbr3+WfOVj9oOQbP2AUzWy05H9GcNDKWeaXZegoemq1bVj9jIPU
e2tmd4eT6wn77rp9n4N1v9u4kxGjOJ3SZq12gYO04cOi7f+Nosp930v3rTm4
ISZLUyye1HNsk2eLKQcHVFcsFkoaRQ+19oBNezj4Xcsz83fyKMb99Y14vJVc
j2Es7fxxFH/XbkruVuWgDu+2etunUZyKb8/ZKcfBFCdHoRUZ5Poefj9DFnDw
2jtapNrnUTxsqt3CpnBwwXaYEv8yireVOlj6E2wsbtyz8vtXcv0JP/5rNhv7
d6wV1csh46/Qpo62s9FU6GVe0DdSf3THMqMaNq5L+GaQ+X0Ula77r4v9wUal
fZpxibmjaLx/8/bpL2zcFSrYdjlvFN1XdhqaJbPxfN63UUr+KMYO+VsmR7FR
lTg2fJHkgEt5Ku0hbEzL6gyJIdmVOTIx35eN6gn1e1JIPumoUgYebNz9SEk8
mOQ9XSfDr11hY5n2Iq4RyWrWQefjHNi4mKY/1E7uJ/Xnx/ZGSzaeG0+SMyR5
wowvJnaIjdXDLz18SX206g3NO4CNCuaZ0tGk/lKj00lOm9lo4v6X8ZSML7X0
hXvkOjYK3K0SMSfjf7mn4kD1SjZeWfP7xjDpj2f+3HIBaTbeeT+POEv6d05n
M3uTMBvlMrqc00l/jb+cz3Hks1B4lYB4I+n/ytSaE2U0FsoofPwUS9Z1EXUR
9akGFu72sqwxThlFTvzOafWfLBx+9si/+v0oZkfFRjxLZ6GU3/kBq3ej+E72
j1NBPIv0g5t+mswX/xfzdEdfs/B7TLjenuhR8n13azv2gIVNCrkdAWS+gfj7
D343WfjSLUtyjMxHlUcdnjlO5P6jf7ZvDib98DKUkzdn4aSXwXdd/1EMu7zc
tncNC79tWCJz9SaZbyxjDZnlLIzIOPrj1bVRPH3m/t/9kixcrZHKiLg8ilts
OFEfxpn4bu5fnSr5flUfyu10LWHiwc2D6s6HRvFb2XDquxwmRo/mXbUxGMWY
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
w///v02cWGQpGH2MjPf/AEKb67E=
      "]]}}, {{
     {RGBColor[1, 0, 0], Thickness[0.005], 
      LineBox[{{0, 0}, {0.326066124467795, 0.7957894712011164}}]}, 
     {RGBColor[1, 0, 0], Thickness[0.005], 
      PolygonBox[{{0.3791466563579011, 0.9253365944199028}, {
       0.36086843431215365`, 0.7383020879809936}, {0.326066124467795, 
       0.7957894712011164}, {0.2609320821148042, 0.7792499268676469}, {
       0.3791466563579011, 0.9253365944199028}}]}}, {
     {RGBColor[1, 0, 0], Thickness[0.005], 
      LineBox[{{0, 0}, {-0.7957894712011164, 0.326066124467795}}]}, 
     {RGBColor[1, 0, 0], Thickness[0.005], 
      PolygonBox[{{-0.9253365944199028, 
       0.3791466563579011}, {-0.7383020879809936, 
       0.3608684343121537}, {-0.7957894712011164, 
       0.326066124467795}, {-0.7792499268676469, 
       0.2609320821148042}, {-0.9253365944199028, 0.3791466563579011}}]}}, 
    InsetBox["\<\"perpframe[1]\"\>", \
{0.15165866254316046`, 0.3701346377679611}], 
    InsetBox["\<\"perpframe[2]\"\>", \
{-0.6477356160939319, 0.26540265945053076`}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.503234211438054*^9}]
}, Open  ]],

Cell["\<\
Given that this matrix A is either the aligner or the hanger based on the \
plotted perpendicular frame, which is it:
The aligner?
The hanger?\
\>", "Text"],

Cell["L.12)", "Subsubsection"],

Cell["Here is a perpendicular frame and a curve:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{"0.2", ",", "0.6"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"frameplot", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Vector", "[", 
        RowBox[{
         RowBox[{"perpframe", "[", "k", "]"}], ",", 
         RowBox[{"Tail", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<perpframe[1]\>\"", ",", 
        RowBox[{"0.4", " ", 
         RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<perpframe[2]\>\"", ",", 
        RowBox[{"0.7", " ", 
         RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], ",", "\[Pi]"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t_", "]"}], ",", 
     RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{
      SuperscriptBox["E", 
       RowBox[{
        RowBox[{"-", "0.2"}], " ", "t"}]], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"4", " ", "t"}], "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"curveplot", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"curveplot", ",", "frameplot", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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

      "]]}}, {{
     {RGBColor[1, 0, 0], Thickness[0.005], 
      LineBox[{{0, 0}, {0.7993836611386665, 0.3171525852086682}}]}, 
     {RGBColor[1, 0, 0], Thickness[0.005], 
      PolygonBox[{{0.9295158850449611, 0.3687820758240328}, {
       0.7821172578313659, 0.25220744438327897`}, {0.7993836611386665, 
       0.3171525852086682}, {0.7422887936423703, 0.3525951599681348}, {
       0.9295158850449611, 0.3687820758240328}}]}}, {
     {RGBColor[1, 0, 0], Thickness[0.005], 
      LineBox[{{0, 0}, {-0.3171525852086682, 0.7993836611386665}}]}, 
     {RGBColor[1, 0, 0], Thickness[0.005], 
      PolygonBox[{{-0.3687820758240328, 
       0.9295158850449611}, {-0.25220744438327897`, 
       0.7821172578313658}, {-0.3171525852086682, 
       0.7993836611386665}, {-0.3525951599681348, 
       0.7422887936423703}, {-0.3687820758240328, 0.9295158850449611}}]}}, 
    InsetBox["\<\"perpframe[1]\"\>", \
{0.37180635401798445`, 0.14751283032961313`}], 
    InsetBox["\<\"perpframe[2]\"\>", \
{-0.2581474530768229, 0.6506611195314728}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5032342115196953`*^9}]
}, Open  ]],

Cell["\<\
Here is what you get when you hit this curve with a certain matrix A:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hitcurveplot", " ", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", "\n", "       ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"hitcurveplot", ",", "frameplot", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.015], LineBox[CompressedData["
1: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
ljC11Wjhojy4qHaL62sNHI+x/a+qnewv/3Wd1ZcacNvLJWDfxUW5JP85ReJT
DSh89FBm93JRXt3T2q6RVgNnpfhu3x7kovzZa/vzc2oNBHiuWuQdJfZO6NgH
p5D1xxZSH46T/IXTFGqSa+BMr04AD4uLItPtsNqd8LUlJuE3p7goudL9ulcJ
j+/8Xjk+Teq92zO2kXDZK1l163kuyskr6gejib0b8wrFJRzclCUiWvsKyH6l
32/d28LDTSmuig0zIv5E0bqdA5dyU7rLAnepEX+fCG+4P8DPTTF4v2bPTRLP
1WDxkl0C3JSWrxfeK5B48/Ti1J8Kk9+XvHFXJ/lICf5W0SrKTbEP7XodR/Ll
GWUWskGCm6LnfFzVneRz3+JdPwcpbsq9ZrmN8STfwjOWr97+x03Ju+19U+N3
DZw8wd3fvp6b0vHyoapSZQ0UOidZiMhzU65vurHbh9Tz1aYH07sVuSm+0g+T
1JtrgKtZHkOUuSl1U1VWRaQfuiiv+76oclPUrtx7/Zr0yz+VQq1qdW6KM9NA
spVVAxNiyy/PaHNThDyXPPfgpkKOq9FBPj1uikDXmxt1y6kQL3HJSng3N8U/
7oZzqCgVXPhkhMT2EfuLx/fsUKCCwk7VDMED3JSCh5JLJFWp8OPmxgDeg9yU
po63kVY6VHA9sbe++yiJ36S+b8kRKuQ3HDlQdpybol3pduOSJRUuafFNpZzk
pvi9/xmi5kjO4wJO2lmTeLu+/+30pcKr/CUmO89wU3ptXoqXPKHCqJRf+1J7
bsoBygsrgZeElyl+i7zATXlLy5vP/UqFDybHne5c5aY4ng27H8Ek/iWFGm3w
5KaI9+b3qZLzf9hdMCrfi5sS6u0toShSC/dGJiLoPqReumuuK2yvhRuLDhrC
j0l+923wdfaqBeE+zdqgAG6KXPeG1p4AoifJDRNLg7gpN+JoU19e1UKzgeyX
0RCy3wfxRrsiwofCA3yjSf1cGxrnxesgKdLApuUVNyWufVubwZY6+PRj9a9t
sdyUsXVs877ddXDbQt6gIoHk262eQ825DrZ68Fyu/chN8fHYN8Uuq4NbThlc
/J+4KdULOlFcPXWgsjJYR/cL6R8BmobjbB2cEv4v9vk3Yk/7yj3trfWwZJR5
XyCfmxJUJxc3GVoPwsNKt2ULuCmK18q3/EirB+6+napqhaS/HVVnWsrq4ZeT
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
DNzc
      "]]}}, {{
     {RGBColor[1, 0, 0], Thickness[0.005], 
      LineBox[{{0, 0}, {0.7993836611386665, 0.3171525852086682}}]}, 
     {RGBColor[1, 0, 0], Thickness[0.005], 
      PolygonBox[{{0.9295158850449611, 0.3687820758240328}, {
       0.7821172578313659, 0.25220744438327897`}, {0.7993836611386665, 
       0.3171525852086682}, {0.7422887936423703, 0.3525951599681348}, {
       0.9295158850449611, 0.3687820758240328}}]}}, {
     {RGBColor[1, 0, 0], Thickness[0.005], 
      LineBox[{{0, 0}, {-0.3171525852086682, 0.7993836611386665}}]}, 
     {RGBColor[1, 0, 0], Thickness[0.005], 
      PolygonBox[{{-0.3687820758240328, 
       0.9295158850449611}, {-0.25220744438327897`, 
       0.7821172578313658}, {-0.3171525852086682, 
       0.7993836611386665}, {-0.3525951599681348, 
       0.7422887936423703}, {-0.3687820758240328, 0.9295158850449611}}]}}, 
    InsetBox["\<\"perpframe[1]\"\>", \
{0.37180635401798445`, 0.14751283032961313`}], 
    InsetBox["\<\"perpframe[2]\"\>", \
{-0.2581474530768229, 0.6506611195314728}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.503234211603716*^9}]
}, Open  ]],

Cell["\<\
Given that this matrix A is either the aligner or the hanger based on the \
plotted perpendicular frame, which is it:
The aligner?
The hanger?\
\>", "Text"],

Cell["L.13)", "Subsubsection"],

Cell["\<\
Here's a random 2D matrix 
              A = hanger.stretcher.aligner 
made through matrix maker ingredients:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"aligner", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.5", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"0.2", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}]}], "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stretcher", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hangerframe", "[", "1", "]"}], ",", 
     RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"hanger", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", 
    RowBox[{"(", 
     RowBox[{"stretcher", ".", "aligner"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.5853161545731465`", 
      RowBox[{"-", "1.28796147702664`"}]},
     {
      RowBox[{"-", "0.4111050497197637`"}], "2.641644989905605`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234211654847*^9}]
}, Open  ]],

Cell["\<\
When you hit the unit circle centered at {0,0} with A you get this ellipse:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t_", "]"}], ",", 
     RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranger", "=", 
   RowBox[{"1.2", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "1"}], "}"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"ellipseplot", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"A", ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
42MugV0zKn4nDjFgiZ3kccV/BG6RVCk+rsmEQ+Wzf85rJvCQk7TjwBMm/CVM
c9N6Q+DUkptHBtOZ0Kfzm4sV3VfWPXH26M1hwkXvPN3cMwi8MuIZr7KECV1S
PEMiUgm89FTxEc8uJlSUviZzLJHATYHWt28tZcHdFtXPdM4RuPuVSpOxBgvy
LNZ5jkQQOHa5ZEffWhZUm7tH/3kYgeea26/Q3MyCChfuyIkFE9j8wyJb//0s
eHK71EioN4HHs/qNphJYsLd/RctWKwIXhSufc3jMglVnSre9sCBw/rH8Ay9e
sODptwtbCTMCG3x+N2Kcx4JuHgr+TzYRWJTfJbOmlgUl9tgFJa8mcKRA5Q5n
Nhv+iG1pOT+bfp7Ui33Xw9hQUazMYOw73d8kRm2VP8eGYZ/Gk9NL6b54tV1Z
4hU2nJv0LOpAMRufu+PoHxvHhjv2HGksKGDjPJkSaJbFhgtkt91Y9YKNjevv
rb/fwYbpaeqHxS6ycYJ8mOuPv2x46+4to8Nn2FhfZVQw+Y8N882cUr+EsfHJ
p0UXTCfZ8MK4trZ/ABvHOkqXxcgQsDgv3OrifjZ2UMq/sMSEgNKtcVVp6+nj
Q0z1SQsCZvnMd87VZWPBKVm1iu0EDLqw4zrWoseTvUrDfS8BjY+d6itazsZ+
fbMWWR4n4FT796wQaTa+9OWlG/GAgNsv22VP9ND9LNoUqTpGwPb2jd8nb7Jw
TE614xCPgNZLv8e8j2Jhg7O3lbP/97177ZfGyIssXP5qxEODQ8K6UcXxsVAW
HpqpVNIqT8ITXnLHUrxY2PqVYt2OTSScze3P1DJk4XPnfZo+G5Nw8MkmtXQ9
Fu6VZOat20LC3ahWX3UNCzdnPZ+cuYOEry4bLpRczsI/U1XPnNhPQqPWaM2H
s1i44Jty8q6zJCwZYybyfzPxB8bGwhMXSVgx/6fimiYmbjARPIi7SsIb236Z
u9cwcVyXQ35xDAkfM+a/KCxj4lNVglUdySRcnrsCG75m4hlLO9QWfyThnpPv
fY6cZeL0RmNuqoiEZ98sFUtWYeLNM2J1/JgUjJDa4lMmz8TR+aqrtEgK+n1z
GO6XZuL+pA9bEyUpmOIt57mEZOJN2s6LNBZQ0NBo9Rr7vwx8PWmr+QJ9Cibo
MSSqMxk4LcO4MHQ9Ba/G5R7OSGXgUwL95tqNFJyZvGPm+UcMrLRkm0KICQUP
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
Oa0Bnfr/358P/f/vz/8PgJJmpA==
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-4.2, 4.2}, {-4.2, 4.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234211706294*^9}]
}, Open  ]],

Cell["\<\
Agree or disagree with each of the following statements:

1) When you change the stretcher by going with new stretch factors and \
replot, you are guaranteed to get the same physical ellipse as plotted above.
Agree...............   Disagree.............

2) When you change the aligner by going with a different aligner frame and \
replot, you are guaranteed to get the same physical ellipse as plotted above.
Agree...............   Disagree.............

3) When you change the hanger by going with a different hanger frame and \
replot, you are guaranteed to get the same physical ellipse as plotted above.
Agree...............   Disagree.............\
\>", "Text"],

Cell["L.14.i)", "Subsubsection"],

Cell["\<\
Here's a random 2D matrix 
              A = hanger.stretcher.aligner 
made through matrix maker ingredients.
The aligner is:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"aligner", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.9169805618617861`", 
      RowBox[{"-", "0.3989318853734847`"}]},
     {"0.39893188537348473`", "0.916980561861786`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5032342117519493`*^9}],

Cell["The stretcher is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.5", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"0.2", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}]}], "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stretcher", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.`", "0"},
     {"0", "1.8`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234211804495*^9}]
}, Open  ]],

Cell["The hanger is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hangerframe", "[", "1", "]"}], ",", 
     RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"hanger", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.6912201141301312`", 
      RowBox[{"-", "0.7226442788965595`"}]},
     {"0.7226442788965595`", "0.6912201141301312`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234211857602*^9}]
}, Open  ]],

Cell["\<\
The resulting matrix 
             A = hanger.stretcher.aligner 
is:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", 
    RowBox[{"(", 
     RowBox[{"stretcher", ".", "aligner"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.0164271141586423`", 
      RowBox[{"-", "2.295770335751824`"}]},
     {"3.146952565563505`", 
      RowBox[{"-", "0.012239643012878831`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234211905136*^9}]
}, Open  ]],

Cell["\<\
When you hit the unit circle centered at {0,0} with A you get this ellipse:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t_", "]"}], ",", 
     RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranger", "=", 
   RowBox[{"1.2", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "1"}], "}"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"ellipseplot", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"A", ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
PTfrx0XHm//f933/D8ABQ9k=
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-4.8, 4.8}, {-4.8, 4.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234211957159*^9}]
}, Open  ]]
}, Open  ]],

Cell["Look at this plot of the hanger frame and its negatives:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"ellipseplot", ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"hangerframe", "[", "1", "]"}], ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"hangerframe", "[", "2", "]"}], ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<hangerframe[1]\>\"", ",", 
      RowBox[{"0.6", " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<hangerframe[2]\>\"", ",", 
      RowBox[{"0.6", " ", 
       RowBox[{"hangerframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<hanger frame\>\""}]}], "]"}]], "Input",\

 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
PTfrx0XHm//f933/D8ABQ9k=
      "]]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.5944492981519128, 0.6214740798510411}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.6912201141301312, 0.7226442788965595}, {
      0.6058232846471218, 0.5552424225321517}, {0.5944492981519128, 
      0.6214740798510411}, {0.5277777025262933, 0.6298941948582059}, {
      0.6912201141301312, 0.7226442788965595}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.5944492981519128, -0.6214740798510411}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.6912201141301312, -0.7226442788965595}, \
{-0.6058232846471218, -0.5552424225321516}, {-0.5944492981519128, \
-0.6214740798510411}, {-0.5277777025262934, -0.6298941948582059}, \
{-0.6912201141301312, -0.7226442788965595}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.6214740798510411, 0.5944492981519128}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.7226442788965595, 
      0.6912201141301312}, {-0.5552424225321516, 
      0.6058232846471218}, {-0.6214740798510411, 
      0.5944492981519128}, {-0.6298941948582059, 
      0.5277777025262934}, {-0.7226442788965595, 0.6912201141301312}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.6214740798510411, -0.5944492981519128}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.7226442788965595, -0.6912201141301312}, {
      0.5552424225321517, -0.6058232846471218}, {
      0.6214740798510411, -0.5944492981519128}, {
      0.6298941948582059, -0.5277777025262933}, {
      0.7226442788965595, -0.6912201141301312}}]}}, 
   InsetBox["\<\"hangerframe[1]\"\>", \
{0.4147320684780787, 0.43358656733793566`}], 
   InsetBox["\<\"hangerframe[2]\"\>", \
{-0.43358656733793566`, 0.4147320684780787}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"hanger frame\"", TraditionalForm],
  PlotRange->{{-4.8, 4.8}, {-4.8, 4.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234212026222*^9}]
}, Open  ]],

Cell["\<\
Do you think the outcome is an accident? 
Yes.......
No........\
\>", "Text"],

Cell["L.14.ii)", "Subsubsection"],

Cell["\<\
Stay with the same set up as in part i) and look at this plot in which the \
unit hanger frame vectors have been multiplied by their associated stretch \
factors:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lastplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"ellipseplot", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"xstretch", " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "xstretch"}], " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"ystretch", " ", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "ystretch"}], " ", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<hangerframe[1]\>\"", ",", 
       RowBox[{"0.6", " ", "xstretch", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<hangerframe[2]\>\"", ",", 
       RowBox[{"0.6", " ", "ystretch", " ", 
        RowBox[{"hangerframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
PTfrx0XHm//f933/D8ABQ9k=
      "]]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {2.3777971926076513`, 2.4858963194041643`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{2.7648804565205247`, 2.890577115586238}, {2.423293138588487,
       2.220969690128607}, {2.3777971926076513`, 2.4858963194041643`}, {
      2.111110810105173, 2.5195767794328234`}, {2.7648804565205247`, 
      2.890577115586238}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-2.3777971926076513`, -2.4858963194041643`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-2.7648804565205247`, -2.890577115586238}, \
{-2.423293138588487, -2.2209696901286065`}, {-2.3777971926076513`, \
-2.4858963194041643`}, {-2.1111108101051737`, -2.5195767794328234`}, \
{-2.7648804565205247`, -2.890577115586238}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-1.1186533437318742`, 1.070008736673443}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-1.300759702013807, 
      1.2441962054342361`}, {-0.9994363605578731, 
      1.0904819123648193`}, {-1.1186533437318742`, 
      1.070008736673443}, {-1.1338095507447705`, 
      0.949999864547328}, {-1.300759702013807, 1.2441962054342361`}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {1.1186533437318742`, -1.070008736673443}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{1.300759702013807, -1.2441962054342361`}, {
      0.9994363605578731, -1.0904819123648193`}, {
      1.1186533437318742`, -1.070008736673443}, {
      1.1338095507447705`, -0.949999864547328}, {
      1.300759702013807, -1.2441962054342361`}}]}}, 
   InsetBox["\<\"hangerframe[1]\"\>", \
{1.6589282739123148`, 1.7343462693517426`}], 
   InsetBox["\<\"hangerframe[2]\"\>", \
{-0.7804558212082843, 0.7465177232605418}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-4.8, 4.8}, {-4.8, 4.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234212095854*^9}]
}, Open  ]],

Cell["\<\
Do you think the outcome is an accident? 
Yes.........
No.........
If not, why not?\
\>", "Text"],

Cell["L.14.iii)", "Subsubsection"],

Cell["Here's another look at the plot in part ii) above:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "lastplot", "]"}]], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
PTfrx0XHm//f933/D8ABQ9k=
      "]]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {2.3777971926076513`, 2.4858963194041643`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{2.7648804565205247`, 2.890577115586238}, {2.423293138588487,
       2.220969690128607}, {2.3777971926076513`, 2.4858963194041643`}, {
      2.111110810105173, 2.5195767794328234`}, {2.7648804565205247`, 
      2.890577115586238}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-2.3777971926076513`, -2.4858963194041643`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-2.7648804565205247`, -2.890577115586238}, \
{-2.423293138588487, -2.2209696901286065`}, {-2.3777971926076513`, \
-2.4858963194041643`}, {-2.1111108101051737`, -2.5195767794328234`}, \
{-2.7648804565205247`, -2.890577115586238}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-1.1186533437318742`, 1.070008736673443}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-1.300759702013807, 
      1.2441962054342361`}, {-0.9994363605578731, 
      1.0904819123648193`}, {-1.1186533437318742`, 
      1.070008736673443}, {-1.1338095507447705`, 
      0.949999864547328}, {-1.300759702013807, 1.2441962054342361`}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {1.1186533437318742`, -1.070008736673443}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{1.300759702013807, -1.2441962054342361`}, {
      0.9994363605578731, -1.0904819123648193`}, {
      1.1186533437318742`, -1.070008736673443}, {
      1.1338095507447705`, -0.949999864547328}, {
      1.300759702013807, -1.2441962054342361`}}]}}, 
   InsetBox["\<\"hangerframe[1]\"\>", \
{1.6589282739123148`, 1.7343462693517426`}], 
   InsetBox["\<\"hangerframe[2]\"\>", \
{-0.7804558212082843, 0.7465177232605418}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-4.8, 4.8}, {-4.8, 4.8}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234212157453*^9}]
}, Open  ]],

Cell["And look at the stretch factors used to make A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xstretch", ",", "ystretch"}], "}"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.`", ",", "1.8`"}], "}"}]], "Output",
 CellChangeTimes->{3.503234212235955*^9}]
}, Open  ]],

Cell["\<\
Fill the blanks.
The length of the long axis of this ellipse measures out to ...........
The length of the short axis of this ellipse measures out to ...........
The area enclosed by this ellipse measures out to.........
\
\>", "Text"],

Cell["L.15)", "Subsubsection"],

Cell["\<\
For what kind of perpendicular frames is the corresponding hanger guaranteed \
to be a rotation matrix?
For what kind of perpendicular frames is the corresponding aligner guaranteed \
to be a rotation matrix?\
\>", "Text"],

Cell["L.16)", "Subsubsection"],

Cell[TextData[{
 "Go with the hanger and the aligner corresponding to a given 2D \
perpendicular frame.\nWhen you multiply out \n            ",
 Cell[BoxData[
  RowBox[{"hanger", ".", "aligner"}]]],
 ", \nyou get\n             ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"hanger", ".", "aligner"}], " ", "=", 
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"\[Placeholder]", "\[Placeholder]"},
      {"\[Placeholder]", "\[Placeholder]"}
     }], "\[NegativeThinSpace]", ")"}]}]]],
 ".\n(Fill the boxes.)"
}], "Text"],

Cell["L.17)", "Subsubsection"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "b"},
     {"c", "d"}
    }], "\[NegativeThinSpace]", ")"}]]],
 " is the aligner corresponding to a given perpendicular frame, then the \
hanger corresponding to the same perpendicular frame is  hanger = ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".\n(Fill the boxes.)"
}], "Text"],

Cell["L.18)", "Subsubsection"],

Cell[TextData[{
 "You are given a perpendicular frame ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]]],
 ". Explain how you go about making a matrix A so that\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "1", "]"}]}], "=", 
   RowBox[{"3.2", " ", 
    RowBox[{"perpframe", "[", "1", "]"}]}]}]]],
 "\nand\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "=", 
   RowBox[{"0.5", " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]]],
 "."
}], "Text"],

Cell["L.19)", "Subsubsection"],

Cell[TextData[{
 "You are given a perpendicular frame ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]]],
 ". Explain how you  go about making a matrix A so that\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "1", "]"}]}], "=", 
   RowBox[{"0.7", " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]]],
 "\nand\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "=", 
   RowBox[{"1.3", " ", 
    RowBox[{"perpframe", "[", "1", "]"}]}]}]]],
 "."
}], "Text"],

Cell["L.20)", "Subsubsection"],

Cell["\<\
When you are making a matrix 
           A = hanger.stretcher.aligner,
what do you do so to be sure that A is invertible?\
\>", "Text"],

Cell["L.21)", "Subsubsection"],

Cell[TextData[{
 "You are given a line through ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}]]],
 " in the direction of a unit vector",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}]]],
 ".\nDefine ( by filling the boxes) \n            aligner =",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ", \n            stretcher = ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]"}
    }], "\[NegativeThinSpace]", ")"}]]],
 "  and \n            hanger =",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]"}
    }], "\[NegativeThinSpace]", ")"}]]],
 "\nso that when you hit any ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]]],
 " with \n            ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", "stretcher", ".", "aligner"}]}]]],
 ", \nyou get the point on the line closest to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]]],
 "."
}], "Text"],

Cell[TextData[{
 "Tip: The vector ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "b"}], ",", "a"}], "}"}]]],
 " is a unit vector perpendicular to the line."
}], "Subsubsection"],

Cell["L.22)", "Subsubsection"],

Cell[TextData[{
 "You make a 2D matrix A by choosing a perpendicular frame to define your \
aligner, choosing another perpendicular frame for your hanger and two stretch \
factors xstretch and ystretch and then putting\n\n             ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["hanger"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"xstretch", "0"},
     {"0", "ystretch"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["aligner"]],
 ".\n             \nUsing this, you can compute ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"t", " "}]]]],
 "via the formula:\n\na)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"xstretch", "0"},
     {"0", "ystretch"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["hanger"]],
 "    \n        \nb)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"ystretch", "0"},
     {"0", "xstretch"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 "\n\nc)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"ystretch", "0"},
     {"0", "xstretch"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "      \n\nd)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"xstretch", "0"},
     {"0", "ystretch"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "\n\nMy choice is ..........."
}], "Text"],

Cell["L.23)", "Subsubsection"],

Cell[TextData[{
 "You make a 2D matrix A by choosing a perpendicular frame to define your \
aligner, choosing another perpendicular frame for your hanger and two stretch \
factors xstretch and ystretch and then putting\n\n             ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["hanger"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"xstretch", "0"},
     {"0", "ystretch"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["aligner"]],
 ".\n             \nUsing this, you can compute ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{
    RowBox[{"-", "1"}], " "}]]]],
 "via the formula:\n\na)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      FractionBox["1", "xstretch"], "0"},
     {"0", 
      FractionBox["1", "ystretch"]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["hanger"]],
 "       \nb)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"\[NegativeThinSpace]", 
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {
       FractionBox["1", "xstretch"], "0"},
      {"0", 
       FractionBox["1", "ystretch"]}
     }], "\[NegativeThinSpace]", ")"}]}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 "\n \nc)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      FractionBox["1", "ystretch"], "0"},
     {"0", 
      FractionBox["1", "xstretch"]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "    \nd)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      FractionBox["1", "xstretch"], "0"},
     {"0", 
      FractionBox["1", "ystretch"]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "\n\nMy choice is ..........."
}], "Text"],

Cell["L.24)", "Subsubsection"],

Cell[TextData[{
 "You make a 2D matrix A by choosing a perpendicular frame to define your \
aligner, choosing another perpendicular frame for your hanger and two stretch \
factors xstretch and ystretch and the putting\n\n             ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"xstretch", "0"},
     {"0", "ystretch"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["hanger"]],
 ".\n             \nIf  ",
 Cell[BoxData[
  RowBox[{"xstretch", "\[NotEqual]", "0"}]]],
 "  and  ",
 Cell[BoxData[
  RowBox[{"ystretch", "\[NotEqual]", "0"}]]],
 " , then you are guaranteed that given any 2D vector Y, there is exactly one \
2D vector ",
 Cell[BoxData["X"]],
 " with ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", "X"}], "=", "Y"}]]],
 ".\nAgree........................................\n\
Disagree........................................"
}], "Text"],

Cell["L.25.i)", "Subsubsection"],

Cell["Here's a random matrix made with matrix maker ingredients", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
   "           ", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.5", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "8"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"0.2", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "7"}], "}"}]}], "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stretcher", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "2"}], ",", 
        RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hangerframe", "[", "1", "]"}], ",", 
     RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
   "           ", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"hanger", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"hanger", ".", "stretcher", ".", "aligner"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.6188914675588197`", 
      RowBox[{"-", "2.2735566239917664`"}]},
     {"0.6126001587931961`", "0.9811394775120413`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234212270535*^9}]
}, Open  ]],

Cell[TextData[{
 "Here are the ellipses you get what you get when you hit the unit circle \
centered at ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}]]],
 " with this matrix and its inverse:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "t", ",", "s"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t_", "]"}], ",", 
     RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "hitplotter", ",", "hitpointplotter", ",", "pointcolor", ",", 
    "actionarrows", ",", "matrix2D"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Ahit", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.012", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}], "x"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"invAhit", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Inverse", "[", "A", "]"}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"Ahit", ",", "invAhit", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.012], LineBox[CompressedData["
1:eJwt2nk0VO8fB/CZSxIlhagoqZBQtFjrc5MKqVBJksrWJkUSsle2iCKVVEgS
JSEJeW6yRLIXyb6PdWasM7bf8z3n9w/nde44c+/n+Xzez3PPsc7qqoktQaPR
fuMf//2u4n/hPv6rE84Zs15fju6E94cEOULJnfDRx/ZYz9tOKBA3T13v3wkW
K4s0LL7gz72PbNu9uxPGazSjNRo6wW9fkNmu1A7Yu5qplyPWBcjMTccqtB2+
3mqXqArrguNN5UoiD1pgT+Xa59t8ukG9Seecx4XfYOjzft1S414gsx8YxIk9
ApnK4tXlzH7ImihL13StRvYarhd2dg1BodmBotBv1ajNYbCgY3gIlntDVJNA
DeJVfccM4AyB8LlTSlee16CGo/9y84SGwcLBX9esoBbdVh8trVQfhuw5x7z9
gn+QKv3hw6f3hkHdUZcUeNqI9sx7P0/ePAIKq2trlKra0bVNW01fKjBhSFDD
WHSyHdXFzpTabmFC86hn/rhUB1pvr/RebjsT+milGm8vd6DTh8/kPd/FhD9/
Mnyq+TqRVOb3BhMjJuiWA5LS7kLFHmWdrc5MUH8YUG4W34NO1Euf9Mhhgq2W
8YLAHz3I6OtajdR8JrgGi1enDfcg8ciVZ/8VMGH/2rCJYc1eFKyl7yX3kwnj
4rqGkrW9iKHDavT/x4QXMznfVAgGqlMLEz03zYQ3Xt9UZ80HUKanQOktNRaU
ZzmJ/vIcQDJO+cvqNVlQE6K3IyoWX5djrFHezQIB5x3LRXsGUPjHU7crdVlw
952Gwddrgyg+bPZ0qzELKjjv9uTfGULnsjvfqF5mwaGivdLwZgTtm8xXjY9m
gWxtmJts6Qh69/5JgPNzFtwJYvHwDYygD3c/BOrEskAt9ESRqTgT1W6sC6l+
zYKW+JLcCnMmsghjBeWmsWB/SfSPmTYmihaiCvKLWOChLhS7vZ+F6lePUZ6D
LIhZonuOZ4aFzj5XZY4Ns8DORpldvoSN6tkMth0Le90zByMVNtokz76qNcEC
a8nbOhKubLSsesGOxHkWvKujtyfyjqJwgcXH/ZaxYWCY0JBeMYrm3JwvJYqw
4TgcWxopN4oMXyO9IjE2xIoUyVw2GEUS20NPj65kA89qPbM/YaMoMUmnXliG
Deeszr+IWTmGpFzHg/D3wv5NOX65CmOoWeNyr/Q2NtTdDXtUpzWGFEtSeQe3
s8HSjn/b+OkxBKP3PZzU2XBf1ev7SNwYKt4ddZQENgTHX2UXyY+jDQLVqq0H
2XD6ZrrTXY1xlKluaXLqEBvaWCdqdxuMIza/vELNYTYkFXrLvLw8jlq9C2hp
xmygup44iqWOo+z8F7sVT7Cho/7OqzqVCZTZczxR9hx+HrU9MZ17JpAzTey7
nhUblE3u2AwaT6CijpXfba3ZoPq0zHjAcQJxLn65HG7Lhvf+AzIvPk6g53xz
pkkX2dBQZbv61rcJ9Gs87G7cJTao5w8g4+oJdMVD7NGjy2y4tc1reoA5gXbs
HTrucIUNbMfGb7VbJtHAxq8nOq6xocml4KUnTCJ+vUr/dEdcj9cpfOuOTKLO
seZITyc2FKuvsTzmMIkUvYUP8Trjenpy93V5TqLSTyX4ptnAfef5+kroJErY
FO/lcoMNR3xUc+zfTSIe5Um5Ohc29N0rsuvInUSP/IT1b91kw5LjBW7GPyfR
y5jgA1KubKgVr/q2un8SSVsO/zN2Y0OB0x2rs3JTyAe1nfa8xYbH72PLYndO
oTSGle009oYPvDcb900hCdcF+s4ebKi4knVPw2YKff0sm2DqyQbxZQ8HLK9P
oRkXu9UUdol+tZen3xQKztJz2OCFPy+YopwYO4V4Qv0Tm7HvPevQSfswhc7G
p95T9WZDVeVnt4z8KUTsWG7oh60+Mlvx4dcUui3+rLcce7dC8O7XTVMoJXi7
5XIfNpjGbCuMGJhCbrt+fjDBVjxUe+oWdwopHDrUFIqdp6JLt1jEQbv3JXd+
x76hZJ22Q4KDnNfWFo1hO4ksteWX46CmvTl+0r64397Ir67bwUFVgUdXHcAO
efmw4okuB82pRoZcwDZKULllepSDbMad/t7B7jUZlFxixUEWrF5aDHbOrpQP
edc4KCJrkEjFThsy22LrzUEr9nq05vz3953tj/nuc5AhT0RUAXbn4+3dsTEc
NFWtLF+EHe61R2R7CgdpTR2O/O/6vQXTUtQXDnqsNNb4399veHycvu8HB/U+
lp55j82JPvCl4A8H2f2sn3yGveBm6R6Nbg56V7am4r/7Kwv/HZU0ykFJfDNe
/93/xcMXMoUJLnpteVPgv+e7u8fxivtSLor7IqC6HhtvRw3NklzkVX+llYvr
cyrlBUtTgYva3ZKXV2DbihpkPVDjovybP3/GYF91E1jfoctFFl+bBM5jm8u/
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
//+f/h9gu8mV
      "]]}}, {{}, {}, 
    {RGBColor[1, 0.5, 0], Thickness[0.01], LineBox[CompressedData["
1:eJwt23k8VN//B3CVilKJkkSWFEXSioq3NlnaqEQJSShCstUHUQiRJQkhayLJ
Tra3fd/Xmbn2fcsyU2nvd76Px++veTwfd+6de895vd/n3D9G1MhK69ZSNjY2
9WVsbP/7HNDcFOVyqx+MNBcSzMPbMT4me0Tfux+8HyyKxwe0Y8TmZy5yH/rh
QfrawW7PdvRU/+7V+qUf0nf/2rz3fjtW6Txd2nFsAHyW01uTNdpxnT6723Tz
AGSua7Ur+tWGA6p+V9kmB6Fqp/V7a502zDT//KB9zQhoNGpovWZvxdeiY3Q+
kRGojxlsrv/egk3z8o6X9o2AkkG+zeJMCx6fXnetWHsEuiqKDyp3tiAtolPi
zJsR+N4nwR2a0IIvatsua+wZhbGDUbzGp1qQ/T7P1iz1Mdj1L4pz9bJmrD5w
fA2f5QRohR2PMqXXY0m8gNNb5wlQfPs4R7W0Ht9x3G+W9ZsAh5D+IbGkehxp
FN+wP2UCPihxBJQ51uOx+dtJnycngOuR0OjHTfVYdtchUc54ElJsZWpOX6rD
V+V5N9kvTcFBnmy5VzU1yBc2npMuPAP526KEuN9UYkDPpakru2fAcbNa5LhH
JbZmNuotHp4BpZUaXz5ZVGK4WMeCqPYMNLQ5Kp8/XInqYrvdtvvOQNqf8p9H
OyuwreKg0fC3GVDce/bUrlUV+LYj8vO26s9w2eTSoL11GW4e+Zu1WmsOzD5K
hRgZFuOQepHAlP4cxC/eHLgtUYw+wVaJaD4HjqfNk8xmizA/RU7igsccDE3K
fz/jVIRXJMKurcibgxD2II2MV4V4/cjfo0Nr5kHyDDX2pyEfL34pDJKznAf3
bp4Lq/blojHG1W+0nYermperRL7noJCdv+Hcg3nQ65Yoky3OwQfmva+CPeah
qZZ6pqiegwX+99cmRswDbejhXi6jbBwz6Embqp0HxwaxLb4BmVigsrxgUGQB
AvSV23naP+JULdOgafsCyPJtkc289REt2tyacnYtQEfEgy6N76nYNZax7L8D
C3BB86S5iVAqcuoOpLScJt6+8u0J0xS88V/Dwse7C2D2CT9n/3iHOyJXyx/K
WYCKd5MehwRiUUDWuDksfwG+PPx3akNKDPYtaV39o3gBLlXmp35WjMH4DxFW
ydULwMVrMPbiRjSWwu5KGm0B2KS9a25oRuJJpRNFRj/J/eo9CfO2CMEl+5+W
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
eqg+Od700eHWJVlYf+hk3FFLJirbXR0JSzRHkebqQW9fJg60Xmx9UOaB2lKy
MnsqmSgrfurq95ww7LLzPH6xhnw/eVT6WnA4ht6BdJt68v08Xovce69x6+Xy
8LhWJr4L5Lx8TToSd2V/8mrsZWJo6K47CReiMaT++s5jX5noPiF/saEiDq9X
HHocK8LCL4b/XOSTkvFpAfdD2W0slNbalqux6T066rdlf9rOQvEgqyM6Hu8x
6eKzb0W7WMiuHV6gdyMFs3R9n/kdYGGHuHo09+ZU1L9u5qx6moWPd5fwe5an
4VH+s8923ibXe1Okoi6ThYo1HFwbzVn4vGmbT8HNLKTR6bO/LFg48Mv1i0RY
FlrvmaUVWLPwIWqtZi7LRn6v//axO7JQtf1brxo9G80n417neJDfF7rE9udx
LppwMjh1npLzqwNLBfJycUbvbvsXLxYeoAn17/ucizI7xB1EfFlI+xL3W/NK
Hta1XfsGQeT+Nqgaqkt9Qpn5gSdvIlloxutdyd+Wj148l5y+RbGwi2/4ZteK
AnRu8axTjWbhW5HDL/2OFGCr85RJfywLZ6yKXSbiCzBUV/xVRyK5v68Ba887
FOJ6zRUHVySxsMxTYaz7PVknnE/s2J/MwlnBqhndgUI0N8hY8iiFhRySkZfU
1IpQr6cjuC+NhbHOW/Z1CBTjMq1flVPpLDyTnb5t+/lilMs1UGVmsPB30sMB
yyfFKN42AawsFq44MuM9M12MDofMWIV55Hpn45T9CxF3qQ8lxn1iYVAHv2zC
POJe1Yr3HvksPFJYXK7LU4JcMlPRRwpZKLRGPUpPpQQtT2w7YoXk/MTZjP2p
JWimuxipXMLCNScXdlyqK0HHkvMPuEpZeG0sYdxqrASNqpNDX5Sx0KgzZU/Y
1lIcnICec+Us1D6mkvj2cCnS9V1esVew8PxX4TMftUsx7NJuW4NKFo4q7f2b
/rwUl+QffclexcKVpfm/3ieXojLs3x1PHGMmuTKmqhT/PRIvbasmz7f7pqTT
31Js9gyx/VzLQhdJn09f75ahb7GWqkkdC/nb9TWqvctwZH1hIJ1YyyA25UVC
GRY84vP4WM/CjYXaxYK9Zbg9u16Gp4GFHzyOGNC/lyHP0ZyzVsR3JBzSAjaU
43aPiin+Rhbu3Dt9ck6jHNPq88xuEas4xDmGmJZjuMWTaynEktoZivJPyvHk
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
+v//I938//8j/R80nM0s
      "]]}}},
  Axes->True,
  AxesLabel->{
    FormBox[
     RowBox[{"\"x\"", " ", "x"}], TraditionalForm], 
    FormBox[
     RowBox[{"x", " ", "\"y\""}], TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5032342123532343`*^9}]
}, Open  ]],

Cell["\<\
Put
      a = measurement of area enclosed by one of these ellipses
      b =   measurement of area enclosed by the other ellipse .
Without getting your hands dirty, calculate the product 
        a times b.\
\>", "Text"],

Cell["L.25.ii)", "Subsubsection"],

Cell["The stretch factors used to make the matrix in part i) are:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xstretch", ",", "ystretch"}], "}"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.5`", ",", "0.8`"}], "}"}]], "Output",
 CellChangeTimes->{3.503234212390771*^9}]
}, Open  ]],

Cell["\<\
Use what you see to measure the area enclosed by each ellipse.\
\>", "Text"],

Cell["L.26.i)", "Subsubsection"],

Cell["Here's a random matrix made with matrix maker ingredients", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
   "           ", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.4", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"0.3", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stretcher", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "2"}], ",", 
        RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hangerframe", "[", "1", "]"}], ",", 
     RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
   "           ", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"hanger", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"hanger", ".", "stretcher", ".", "aligner"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.0213882599843531`", "0.5934717880447815`"},
     {
      RowBox[{"-", "0.008053648903263322`"}], "1.4051663239276724`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234212440337*^9}]
}, Open  ]],

Cell["\<\
Here is the square with corners at {-1,-1}, {1,-1},{1,1}, and {-1,1}:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 0, 1], Thickness[0.01], 
   LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotLabel->FormBox["\"Before\"", TraditionalForm],
  PlotRange->All]], "Output",
 CellChangeTimes->{3.5032342124774303`*^9}]
}, Open  ]],

Cell["\<\
Here are the parallelograms you get what you get when you hit this square \
with this matrix and its transpose:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ahit", " ", "=", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"B", " ", "=", " ", 
   RowBox[{"Transpose", "[", "A", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"transAhit", " ", "=", "  ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"Ahit", ",", "transAhit", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", " ", 
   RowBox[{"Axes", "->", "True"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Thickness[0.01], 
    LineBox[{{-1.6148600480291346`, -1.3971126750244092`}, {
     0.4279164719395716, -1.4132199728309356`}, {1.6148600480291346`, 
     1.3971126750244092`}, {-0.4279164719395716, 
     1.4132199728309356`}, {-1.6148600480291346`, -1.3971126750244092`}}]}, 
   {RGBColor[0, 0, 1], Thickness[0.01], 
    LineBox[{{-1.0133346110810897`, -1.998638111972454}, {
     1.0294419088876166`, -0.8116945358828909}, {1.0133346110810897`, 
     1.998638111972454}, {-1.0294419088876166`, 
     0.8116945358828909}, {-1.0133346110810897`, -1.998638111972454}}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotRange->All]], "Output",
 CellChangeTimes->{3.50323421252636*^9}]
}, Open  ]],

Cell["\<\
Express the measurement of area enclosed by one of these parallelograms in \
terms of the measurement of the area enclosed by the other.\
\>", "Text"],

Cell["L.26.ii)", "Subsubsection"],

Cell["The stretch factors used to make the matrix in part i) are:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xstretch", ",", "ystretch"}], "}"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.6`", ",", "0.8999999999999999`"}], "}"}]], "Output",
 CellChangeTimes->{3.503234212557898*^9}]
}, Open  ]],

Cell["\<\
Use what you see to measure the area enclosed by each parallelogram.\
\>", "Text"],

Cell["L.27.i)", "Subsubsection"],

Cell["\<\
Here's a random 2D matrix 
              A = hanger.stretcher.aligner 
made through matrix maker ingredients.
The aligner is:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"aligner", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.8603049199156949`", "0.5097798002754226`"},
     {
      RowBox[{"-", "0.5097798002754225`"}], "0.860304919915695`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.50323421259061*^9}],

Cell["The stretcher is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.5", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"0.2", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"5", ",", "10"}], "}"}]}], "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"stretcher", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.5`", "0"},
     {"0", "1.6`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5032342126233463`*^9}]
}, Open  ]],

Cell["The hanger is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", "=", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hangerframe", "[", "1", "]"}], ",", 
     RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"hanger", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.16985182208865918`", "0.9854696131962479`"},
     {
      RowBox[{"-", "0.9854696131962479`"}], "0.16985182208865912`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234212657486*^9}]
}, Open  ]],

Cell["\<\
The resulting matrix 
             A = hanger.stretcher.aligner 
is:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", 
    RowBox[{"(", 
     RowBox[{"stretcher", ".", "aligner"}], ")"}]}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.2923607504499741`"}], "1.6595415684489452`"},
     {
      RowBox[{"-", "3.1058544930157583`"}], 
      RowBox[{"-", "1.5245047859551542`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5032342126900597`*^9}]
}, Open  ]],

Cell[TextData[{
 "When you hit the unit circle centered at {0,0} with ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " you get this ellipse:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t_", "]"}], ",", 
     RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ranger", "=", 
   RowBox[{"1.2", " ", 
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "1"}], "}"}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"ellipseplot", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Transpose", "[", "A", "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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

     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-4.2, 4.2}, {-4.2, 4.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234212732863*^9}]
}, Open  ]]
}, Open  ]],

Cell["Look at this plot of the aligner frame and its negatives:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"ellipseplot", ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"alignerframe", "[", "1", "]"}]}], ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"alignerframe", "[", "2", "]"}], ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<alignerframe[1]\>\"", ",", 
      RowBox[{"0.6", " ", 
       RowBox[{"alignerframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<alignerframe[2]\>\"", ",", 
      RowBox[{"0.6", " ", 
       RowBox[{"alignerframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<aligner frame\>\""}]}], 
  "]"}]], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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

      "]]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.7398622311274976, 0.4384106282368634}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.8603049199156949, 0.5097798002754226}, {
      0.7329781435457426, 0.371562970550399}, {0.7398622311274976, 
      0.4384106282368634}, {0.677921925115997, 0.46447590190129406`}, {
      0.8603049199156949, 0.5097798002754226}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.7398622311274976, -0.4384106282368634}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.8603049199156949, -0.5097798002754226}, \
{-0.7329781435457426, -0.371562970550399}, {-0.7398622311274976, \
-0.4384106282368634}, {-0.677921925115997, -0.4644759019012941}, \
{-0.8603049199156949, -0.5097798002754226}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.43841062823686333`, 0.7398622311274977}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.5097798002754225, 
      0.860304919915695}, {-0.3715629705503989, 
      0.7329781435457428}, {-0.43841062823686333`, 
      0.7398622311274977}, {-0.4644759019012939, 
      0.6779219251159971}, {-0.5097798002754225, 0.860304919915695}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.43841062823686333`, -0.7398622311274977}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.5097798002754225, -0.860304919915695}, {
      0.3715629705503989, -0.7329781435457428}, {
      0.43841062823686333`, -0.7398622311274977}, {
      0.46447590190129395`, -0.6779219251159971}, {
      0.5097798002754225, -0.860304919915695}}]}}, 
   InsetBox["\<\"alignerframe[1]\"\>", \
{0.5161829519494169, 0.3058678801652535}], 
   InsetBox["\<\"alignerframe[2]\"\>", \
{-0.30586788016525346`, 0.516182951949417}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"aligner frame\"", TraditionalForm],
  PlotRange->{{-4.2, 4.2}, {-4.2, 4.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234212801014*^9}]
}, Open  ]],

Cell["\<\
Do you think the outcome is an accident? 
Yes.......
No........
If not, explain your response.\
\>", "Text"],

Cell["L.27.ii)", "Subsubsection"],

Cell["\<\
Stay with the same set up as in part i) and look at this plot in which the \
unit hanger frame vectors have been multiplied by their associated stretch \
factors:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lastplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"ellipseplot", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"xstretch", " ", 
       RowBox[{"alignerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "xstretch"}], " ", 
       RowBox[{"alignerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"ystretch", " ", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "ystretch"}], " ", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<alignerframe[1]\>\"", ",", 
       RowBox[{"0.6", " ", "xstretch", " ", 
        RowBox[{"alignerframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<alignerframe[2]\>\"", ",", 
       RowBox[{"0.6", " ", "ystretch", " ", 
        RowBox[{"alignerframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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

      "]]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {2.5895178089462414`, 1.5344371988290217`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{3.011067219704932, 1.784229300963979}, {2.5654235024100993`,
       1.3004703969263964`}, {2.5895178089462414`, 1.5344371988290217`}, {
      2.3727267379059898`, 1.6256656566545291`}, {3.011067219704932, 
      1.784229300963979}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-2.5895178089462414`, -1.5344371988290217`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-3.011067219704932, -1.784229300963979}, \
{-2.5654235024100993`, -1.3004703969263964`}, {-2.5895178089462414`, \
-1.5344371988290217`}, {-2.3727267379059898`, -1.6256656566545291`}, \
{-3.011067219704932, -1.784229300963979}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.7014570051789814, 1.1837795698039963`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.815647680440676, 
      1.3764878718651121`}, {-0.5945007528806383, 
      1.1727650296731884`}, {-0.7014570051789814, 
      1.1837795698039963`}, {-0.7431614430420703, 
      1.0846750801855953`}, {-0.815647680440676, 1.3764878718651121`}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.7014570051789814, -1.1837795698039963`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.815647680440676, -1.3764878718651121`}, {
      0.5945007528806383, -1.1727650296731884`}, {
      0.7014570051789814, -1.1837795698039963`}, {
      0.7431614430420704, -1.0846750801855953`}, {
      0.815647680440676, -1.3764878718651121`}}]}}, 
   InsetBox["\<\"alignerframe[1]\"\>", \
{1.8066403318229594`, 1.0705375805783874`}], 
   InsetBox["\<\"alignerframe[2]\"\>", \
{-0.48938860826440556`, 0.8258927231190671}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-4.2, 4.2}, {-4.2, 4.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234212870962*^9}]
}, Open  ]],

Cell["\<\
Do you think the outcome is an accident? 
Yes.........
No.........
If not, explain your response.\
\>", "Text"],

Cell["L.27.iii)", "Subsubsection"],

Cell["Here's another look at the plot in part ii) above:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "lastplot", "]"}]], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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

      "]]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {2.5895178089462414`, 1.5344371988290217`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{3.011067219704932, 1.784229300963979}, {2.5654235024100993`,
       1.3004703969263964`}, {2.5895178089462414`, 1.5344371988290217`}, {
      2.3727267379059898`, 1.6256656566545291`}, {3.011067219704932, 
      1.784229300963979}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-2.5895178089462414`, -1.5344371988290217`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-3.011067219704932, -1.784229300963979}, \
{-2.5654235024100993`, -1.3004703969263964`}, {-2.5895178089462414`, \
-1.5344371988290217`}, {-2.3727267379059898`, -1.6256656566545291`}, \
{-3.011067219704932, -1.784229300963979}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.7014570051789814, 1.1837795698039963`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.815647680440676, 
      1.3764878718651121`}, {-0.5945007528806383, 
      1.1727650296731884`}, {-0.7014570051789814, 
      1.1837795698039963`}, {-0.7431614430420703, 
      1.0846750801855953`}, {-0.815647680440676, 1.3764878718651121`}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.7014570051789814, -1.1837795698039963`}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.815647680440676, -1.3764878718651121`}, {
      0.5945007528806383, -1.1727650296731884`}, {
      0.7014570051789814, -1.1837795698039963`}, {
      0.7431614430420704, -1.0846750801855953`}, {
      0.815647680440676, -1.3764878718651121`}}]}}, 
   InsetBox["\<\"alignerframe[1]\"\>", \
{1.8066403318229594`, 1.0705375805783874`}], 
   InsetBox["\<\"alignerframe[2]\"\>", \
{-0.48938860826440556`, 0.8258927231190671}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-4.2, 4.2}, {-4.2, 4.2}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234212933473*^9}]
}, Open  ]],

Cell["And look at the stretch factors used to make A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xstretch", ",", "ystretch"}], "}"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.5`", ",", "1.6`"}], "}"}]], "Output",
 CellChangeTimes->{3.503234212974359*^9}]
}, Open  ]],

Cell["\<\
Fill the blanks.
The length of the long axis of this ellipse measures out to ...........
The length of the short axis of this ellipse measures out to ...........
The area enclosed by this ellipse measures out to.........
\
\>", "Text"],

Cell["L.28.i)", "Subsubsection"],

Cell["\<\
Here's a random 2D matrix 
              A = hanger.stretcher.aligner 
made through matrix maker ingredients.
The aligner is:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"aligner", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.8100835531387505`", 
      RowBox[{"-", "0.5863144522643948`"}]},
     {"0.5863144522643949`", "0.8100835531387504`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234213028316*^9}],

Cell["The stretcher is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.5", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"0.4", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stretcher", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.5`", "0"},
     {"0", "0.8`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234213067698*^9}]
}, Open  ]],

Cell["The hanger is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"hanger", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.8129077007432006`", "0.5823925395061333`"},
     {
      RowBox[{"-", "0.5823925395061332`"}], "0.8129077007432006`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234213110002*^9}]
}, Open  ]],

Cell["\<\
The resulting matrix 
             A = hanger.stretcher.aligner 
is:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"hanger", ".", 
     RowBox[{"(", 
      RowBox[{"stretcher", ".", "aligner"}], ")"}]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.6024337095386789`", "0.1391195275283237`"},
     {"0.14540231777989243`", "0.6975511082752274`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503234213143663*^9}]
}, Open  ]],

Cell[TextData[{
 "When you hit the unit circle centered at {0,0} with ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " you get this ellipse:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t_", "]"}], ",", 
     RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", 
    RowBox[{"1.2", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch", ",", "1"}], "}"}], "]"}]}]}], 
   ";"}], " "}], "\n", 
 RowBox[{"ellipseplot", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Inverse", "[", "A", "]"}], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
P/e5tuL//79H8v/7v8f/AW3+zBE=
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234213197019*^9}]
}, Open  ]]
}, Open  ]],

Cell["Look at this plot of the aligner frame and its negatives:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lastplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"ellipseplot", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"alignerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"alignerframe", "[", "2", "]"}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<alignerframe[1]\>\"", ",", 
       RowBox[{"0.6", " ", 
        RowBox[{"alignerframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<alignerframe[2]\>\"", ",", 
       RowBox[{"0.6", " ", 
        RowBox[{"alignerframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<aligner frame\>\""}]}], 
   "]"}]}]], "Input",
 CellOpen->False,
 AspectRatioFixed->True],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
P/e5tuL//79H8v/7v8f/AW3+zBE=
      "]]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.6966718556993254, -0.5042304289473796}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.8100835531387505, -0.5863144522643948}, {
      0.6326075331514981, -0.5245223627262963}, {
      0.6966718556993254, -0.5042304289473796}, {
      0.6959294939960528, -0.4370333389873112}, {
      0.8100835531387505, -0.5863144522643948}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.6966718556993254, 0.5042304289473796}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.8100835531387505, 
      0.5863144522643948}, {-0.6326075331514981, 
      0.5245223627262964}, {-0.6966718556993254, 
      0.5042304289473796}, {-0.6959294939960526, 
      0.43703333898731117`}, {-0.8100835531387505, 0.5863144522643948}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.5042304289473797, 0.6966718556993253}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.5863144522643949, 0.8100835531387504}, {
      0.5245223627262964, 0.632607533151498}, {0.5042304289473797, 
      0.6966718556993253}, {0.43703333898731134`, 0.6959294939960526}, {
      0.5863144522643949, 0.8100835531387504}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.5042304289473797, -0.6966718556993253}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.5863144522643949, -0.8100835531387504}, \
{-0.5245223627262963, -0.632607533151498}, {-0.5042304289473797, \
-0.6966718556993253}, {-0.4370333389873114, -0.6959294939960525}, \
{-0.5863144522643949, -0.8100835531387504}}]}}, 
   InsetBox["\<\"alignerframe[1]\"\>", \
{0.48605013188325025`, -0.3517886713586369}], 
   InsetBox["\<\"alignerframe[2]\"\>", \
{0.35178867135863695`, 0.4860501318832502}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox["\"aligner frame\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234213543284*^9}]
}, Open  ]],

Cell["\<\
Do you think the outcome is an accident? 
Yes.......
No........
If not, explain your response.\
\>", "Text"],

Cell["L.28.ii)", "Subsubsection"],

Cell["Here's another look at the plot in part i) above:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"lastplot", ",", 
   RowBox[{"PlotLabel", "->", "None"}]}], "]"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
P/e5tuL//79H8v/7v8f/AW3+zBE=
      "]]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.6966718556993254, -0.5042304289473796}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.8100835531387505, -0.5863144522643948}, {
      0.6326075331514981, -0.5245223627262963}, {
      0.6966718556993254, -0.5042304289473796}, {
      0.6959294939960528, -0.4370333389873112}, {
      0.8100835531387505, -0.5863144522643948}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.6966718556993254, 0.5042304289473796}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.8100835531387505, 
      0.5863144522643948}, {-0.6326075331514981, 
      0.5245223627262964}, {-0.6966718556993254, 
      0.5042304289473796}, {-0.6959294939960526, 
      0.43703333898731117`}, {-0.8100835531387505, 0.5863144522643948}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {0.5042304289473797, 0.6966718556993253}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{0.5863144522643949, 0.8100835531387504}, {
      0.5245223627262964, 0.632607533151498}, {0.5042304289473797, 
      0.6966718556993253}, {0.43703333898731134`, 0.6959294939960526}, {
      0.5863144522643949, 0.8100835531387504}}]}}, {
    {RGBColor[1, 0, 0], Thickness[0.005], 
     LineBox[{{0, 0}, {-0.5042304289473797, -0.6966718556993253}}]}, 
    {RGBColor[1, 0, 0], Thickness[0.005], 
     PolygonBox[{{-0.5863144522643949, -0.8100835531387504}, \
{-0.5245223627262963, -0.632607533151498}, {-0.5042304289473797, \
-0.6966718556993253}, {-0.4370333389873114, -0.6959294939960525}, \
{-0.5863144522643949, -0.8100835531387504}}]}}, 
   InsetBox["\<\"alignerframe[1]\"\>", \
{0.48605013188325025`, -0.3517886713586369}], 
   InsetBox["\<\"alignerframe[2]\"\>", \
{0.35178867135863695`, 0.4860501318832502}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503234213610441*^9}]
}, Open  ]],

Cell["And look at the stretch factors used to make A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xstretch", ",", "ystretch"}], "}"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5`", ",", "0.8`"}], "}"}]], "Output",
 CellChangeTimes->{3.50323421364863*^9}]
}, Open  ]],

Cell["\<\
Fill the blanks.
The length of the long axis of this ellipse measures out to ...........
The length of the short axis of this ellipse measures out to ...........
The area enclosed by this ellipse measures out to.........
\
\>", "Text"]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 181, 6, 108, "Title"],
Cell[CellGroupData[{
Cell[6418, 138, 193, 7, 28, "Special2"],
Cell[6614, 147, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7931, 189, 38, 0, 43, "Subsubsection"],
Cell[7972, 191, 1344, 31, 156, "Input"],
Cell[9319, 224, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9492, 230, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26863, 713, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27110, 724, 39, 0, 35, "Subsubsection"],
Cell[27152, 726, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[29497, 801, 128, 2, 21, "Subsection"],
Cell[29628, 805, 29, 0, 23, "Subsubsection"],
Cell[29660, 807, 55, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[29740, 811, 1112, 33, 19, "Input",
 CellOpen->False],
Cell[30855, 846, 698, 15, 362, "Output"]
}, Open  ]],
Cell[31568, 864, 46, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[31639, 868, 2382, 73, 19, "Input",
 CellOpen->False],
Cell[34024, 943, 1229, 26, 362, "Output"]
}, Open  ]],
Cell[35268, 972, 166, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[35459, 979, 2497, 72, 19, "Input",
 CellOpen->False],
Cell[37959, 1053, 2196, 46, 196, "Output"]
}, Open  ]],
Cell[40170, 1102, 47, 0, 24, "Text"],
Cell[40220, 1104, 29, 0, 31, "Subsubsection"],
Cell[40252, 1106, 45, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[40322, 1110, 2382, 73, 19, "Input",
 CellOpen->False],
Cell[42707, 1185, 1227, 26, 362, "Output"]
}, Open  ]],
Cell[43949, 1214, 166, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[44140, 1221, 2497, 72, 19, "Input",
 CellOpen->False],
Cell[46640, 1295, 2190, 46, 196, "Output"]
}, Open  ]],
Cell[48845, 1344, 47, 0, 24, "Text"],
Cell[48895, 1346, 29, 0, 31, "Subsubsection"],
Cell[48927, 1348, 182, 5, 99, "Text"],
Cell[49112, 1355, 29, 0, 31, "Subsubsection"],
Cell[49144, 1357, 45, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[49214, 1361, 2405, 74, 19, "Input",
 CellOpen->False],
Cell[51622, 1437, 1222, 26, 362, "Output"]
}, Open  ]],
Cell[52859, 1466, 35, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[52919, 1470, 824, 27, 19, "Input",
 CellOpen->False],
Cell[53746, 1499, 18532, 310, 362, "Output"]
}, Open  ]],
Cell[72293, 1812, 162, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[72480, 1819, 4303, 123, 19, "Input",
 CellOpen->False],
Cell[76786, 1944, 53391, 895, 162, "Output"]
}, Open  ]],
Cell[130192, 2842, 47, 0, 24, "Text"],
Cell[130242, 2844, 29, 0, 31, "Subsubsection"],
Cell[130274, 2846, 75, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[130374, 2850, 3074, 94, 19, "Input",
 CellOpen->False],
Cell[133451, 2946, 17206, 290, 362, "Output"]
}, Open  ]],
Cell[150672, 3239, 163, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[150860, 3246, 4232, 122, 19, "Input",
 CellOpen->False],
Cell[155095, 3370, 56767, 948, 170, "Output"]
}, Open  ]],
Cell[211877, 4321, 47, 0, 24, "Text"],
Cell[211927, 4323, 29, 0, 31, "Subsubsection"],
Cell[211959, 4325, 952, 31, 204, "Text"],
Cell[212914, 4358, 29, 0, 31, "Subsubsection"],
Cell[212946, 4360, 956, 31, 204, "Text"],
Cell[213905, 4393, 29, 0, 31, "Subsubsection"],
Cell[213937, 4395, 615, 20, 140, "Text"],
Cell[CellGroupData[{
Cell[214577, 4419, 412, 14, 19, "Input",
 CellOpen->False],
Cell[214992, 4435, 155, 4, 22, "Output"]
}, Open  ]],
Cell[215162, 4442, 307, 7, 99, "Text"],
Cell[215472, 4451, 29, 0, 31, "Subsubsection"],
Cell[215504, 4453, 617, 20, 140, "Text"],
Cell[CellGroupData[{
Cell[216146, 4477, 499, 17, 19, "Input",
 CellOpen->False],
Cell[216648, 4496, 140, 4, 22, "Output"]
}, Open  ]],
Cell[216803, 4503, 236, 5, 74, "Text"],
Cell[217042, 4510, 30, 0, 31, "Subsubsection"],
Cell[217075, 4512, 624, 20, 140, "Text"],
Cell[CellGroupData[{
Cell[217724, 4536, 513, 17, 19, "Input",
 CellOpen->False],
Cell[218240, 4555, 136, 3, 22, "Output"]
}, Open  ]],
Cell[218391, 4561, 235, 5, 74, "Text"],
Cell[218629, 4568, 30, 0, 31, "Subsubsection"],
Cell[218662, 4570, 58, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[218745, 4574, 3660, 117, 19, "Input",
 CellOpen->False],
Cell[222408, 4693, 27100, 454, 371, "Output"]
}, Open  ]],
Cell[249523, 5150, 93, 2, 24, "Text"],
Cell[CellGroupData[{
Cell[249641, 5156, 1239, 39, 19, "Input",
 CellOpen->False],
Cell[250883, 5197, 19707, 333, 371, "Output"]
}, Open  ]],
Cell[270605, 5533, 166, 5, 99, "Text"],
Cell[270774, 5540, 30, 0, 31, "Subsubsection"],
Cell[270807, 5542, 58, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[270890, 5546, 3578, 115, 19, "Input",
 CellOpen->False],
Cell[274471, 5663, 19748, 334, 371, "Output"]
}, Open  ]],
Cell[294234, 6000, 93, 2, 24, "Text"],
Cell[CellGroupData[{
Cell[294352, 6006, 1281, 40, 19, "Input",
 CellOpen->False],
Cell[295636, 6048, 26095, 438, 371, "Output"]
}, Open  ]],
Cell[321746, 6489, 166, 5, 99, "Text"],
Cell[321915, 6496, 30, 0, 31, "Subsubsection"],
Cell[321948, 6498, 133, 4, 74, "Text"],
Cell[CellGroupData[{
Cell[322106, 6506, 3199, 107, 19, "Input",
 CellOpen->False],
Cell[325308, 6615, 740, 20, 54, "Output"]
}, Open  ]],
Cell[326063, 6638, 99, 2, 24, "Text"],
Cell[CellGroupData[{
Cell[326187, 6644, 1723, 57, 19, "Input",
 CellOpen->False],
Cell[327913, 6703, 15752, 264, 372, "Output"]
}, Open  ]],
Cell[343680, 6970, 677, 14, 324, "Text"],
Cell[344360, 6986, 32, 0, 31, "Subsubsection"],
Cell[344395, 6988, 149, 5, 99, "Text"],
Cell[CellGroupData[{
Cell[344569, 6997, 1215, 40, 19, "Input",
 CellOpen->False],
Cell[345787, 7039, 723, 19, 54, "Output"],
Cell[346513, 7060, 33, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[346571, 7064, 825, 27, 19, "Input",
 CellOpen->False],
Cell[347399, 7093, 632, 18, 54, "Output"]
}, Open  ]],
Cell[348046, 7114, 30, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[348101, 7118, 1249, 41, 19, "Input",
 CellOpen->False],
Cell[349353, 7161, 721, 19, 54, "Output"]
}, Open  ]],
Cell[350089, 7183, 92, 4, 74, "Text"],
Cell[CellGroupData[{
Cell[350206, 7191, 253, 8, 19, "Input",
 CellOpen->False],
Cell[350462, 7201, 743, 20, 54, "Output"]
}, Open  ]],
Cell[351220, 7224, 99, 2, 24, "Text"],
Cell[CellGroupData[{
Cell[351344, 7230, 1723, 57, 19, "Input",
 CellOpen->False],
Cell[353070, 7289, 14833, 249, 372, "Output"]
}, Open  ]]
}, Open  ]],
Cell[367930, 7542, 72, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[368027, 7546, 2086, 59, 19, "Input",
 CellOpen->False],
Cell[370116, 7607, 16724, 284, 388, "Output"]
}, Open  ]],
Cell[386855, 7894, 87, 4, 74, "Text"],
Cell[386945, 7900, 33, 0, 31, "Subsubsection"],
Cell[386981, 7902, 186, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[387192, 7910, 2279, 63, 19, "Input",
 CellOpen->False],
Cell[389474, 7975, 16673, 283, 372, "Output"]
}, Open  ]],
Cell[406162, 8261, 107, 5, 99, "Text"],
Cell[406272, 8268, 34, 0, 31, "Subsubsection"],
Cell[406309, 8270, 66, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[406400, 8274, 107, 3, 19, "Input",
 CellOpen->False],
Cell[406510, 8279, 16673, 283, 372, "Output"]
}, Open  ]],
Cell[423198, 8565, 63, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[423286, 8569, 104, 3, 19, "Input",
 CellOpen->False],
Cell[423393, 8574, 120, 3, 22, "Output"]
}, Open  ]],
Cell[423528, 8580, 245, 6, 124, "Text"],
Cell[423776, 8588, 30, 0, 31, "Subsubsection"],
Cell[423809, 8590, 232, 5, 99, "Text"],
Cell[424044, 8597, 30, 0, 31, "Subsubsection"],
Cell[424077, 8599, 522, 14, 172, "Text"],
Cell[424602, 8615, 30, 0, 31, "Subsubsection"],
Cell[424635, 8617, 531, 15, 120, "Text"],
Cell[425169, 8634, 30, 0, 31, "Subsubsection"],
Cell[425202, 8636, 648, 22, 124, "Text"],
Cell[425853, 8660, 30, 0, 31, "Subsubsection"],
Cell[425886, 8662, 649, 22, 124, "Text"],
Cell[426538, 8686, 30, 0, 31, "Subsubsection"],
Cell[426571, 8688, 145, 4, 74, "Text"],
Cell[426719, 8694, 30, 0, 31, "Subsubsection"],
Cell[426752, 8696, 1279, 40, 268, "Text"],
Cell[428034, 8738, 193, 7, 32, "Subsubsection"],
Cell[428230, 8747, 30, 0, 23, "Subsubsection"],
Cell[428263, 8749, 1962, 78, 541, "Text"],
Cell[430228, 8829, 30, 0, 31, "Subsubsection"],
Cell[430261, 8831, 2291, 92, 564, "Text"],
Cell[432555, 8925, 30, 0, 31, "Subsubsection"],
Cell[432588, 8927, 954, 30, 272, "Text"],
Cell[433545, 8959, 32, 0, 31, "Subsubsection"],
Cell[433580, 8961, 73, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[433678, 8965, 3496, 114, 19, "Input",
 CellOpen->False],
Cell[437177, 9081, 721, 19, 54, "Output"]
}, Open  ]],
Cell[437913, 9103, 224, 7, 49, "Text"],
Cell[CellGroupData[{
Cell[438162, 9114, 2279, 73, 19, "Input",
 CellOpen->False],
Cell[440444, 9189, 32616, 545, 191, "Output"]
}, Open  ]],
Cell[473075, 9737, 231, 6, 124, "Text"],
Cell[473309, 9745, 33, 0, 31, "Subsubsection"],
Cell[473345, 9747, 75, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[473445, 9751, 104, 3, 19, "Input",
 CellOpen->False],
Cell[473552, 9756, 121, 3, 22, "Output"]
}, Open  ]],
Cell[473688, 9762, 86, 2, 24, "Text"],
Cell[473777, 9766, 32, 0, 31, "Subsubsection"],
Cell[473812, 9768, 73, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[473910, 9772, 3496, 114, 19, "Input",
 CellOpen->False],
Cell[477409, 9888, 723, 19, 54, "Output"]
}, Open  ]],
Cell[478147, 9910, 93, 2, 24, "Text"],
Cell[CellGroupData[{
Cell[478265, 9916, 1092, 32, 19, "Input",
 CellOpen->False],
Cell[479360, 9950, 364, 10, 378, "Output"]
}, Open  ]],
Cell[479739, 9963, 135, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[479899, 9970, 2394, 74, 19, "Input",
 CellOpen->False],
Cell[482296, 10046, 802, 17, 440, "Output"]
}, Open  ]],
Cell[483113, 10066, 160, 3, 49, "Text"],
Cell[483276, 10071, 33, 0, 31, "Subsubsection"],
Cell[483312, 10073, 75, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[483412, 10077, 104, 3, 19, "Input",
 CellOpen->False],
Cell[483519, 10082, 136, 3, 22, "Output"]
}, Open  ]],
Cell[483670, 10088, 92, 2, 24, "Text"],
Cell[483765, 10092, 32, 0, 31, "Subsubsection"],
Cell[483800, 10094, 149, 5, 99, "Text"],
Cell[CellGroupData[{
Cell[483974, 10103, 1215, 40, 19, "Input",
 CellOpen->False],
Cell[485192, 10145, 719, 19, 54, "Output"],
Cell[485914, 10166, 33, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[485972, 10170, 825, 27, 19, "Input",
 CellOpen->False],
Cell[486800, 10199, 635, 18, 54, "Output"]
}, Open  ]],
Cell[487450, 10220, 30, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[487505, 10224, 1249, 41, 19, "Input",
 CellOpen->False],
Cell[488757, 10267, 723, 19, 54, "Output"]
}, Open  ]],
Cell[489495, 10289, 92, 4, 74, "Text"],
Cell[CellGroupData[{
Cell[489612, 10297, 253, 8, 19, "Input",
 CellOpen->False],
Cell[489868, 10307, 767, 21, 54, "Output"]
}, Open  ]],
Cell[490650, 10331, 155, 5, 26, "Text"],
Cell[CellGroupData[{
Cell[490830, 10340, 1762, 58, 19, "Input",
 CellOpen->False],
Cell[492595, 10400, 16029, 269, 372, "Output"]
}, Open  ]]
}, Open  ]],
Cell[508651, 10673, 73, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[508749, 10677, 2096, 59, 19, "Input",
 CellOpen->False],
Cell[510848, 10738, 17924, 304, 388, "Output"]
}, Open  ]],
Cell[528787, 11045, 118, 5, 99, "Text"],
Cell[528908, 11052, 33, 0, 31, "Subsubsection"],
Cell[528944, 11054, 186, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[529155, 11062, 2287, 63, 19, "Input",
 CellOpen->False],
Cell[531445, 11127, 17879, 303, 372, "Output"]
}, Open  ]],
Cell[549339, 11433, 121, 5, 99, "Text"],
Cell[549463, 11440, 34, 0, 31, "Subsubsection"],
Cell[549500, 11442, 66, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[549591, 11446, 107, 3, 19, "Input",
 CellOpen->False],
Cell[549701, 11451, 17879, 303, 372, "Output"]
}, Open  ]],
Cell[567595, 11757, 63, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[567683, 11761, 104, 3, 19, "Input",
 CellOpen->False],
Cell[567790, 11766, 121, 3, 22, "Output"]
}, Open  ]],
Cell[567926, 11772, 245, 6, 124, "Text"],
Cell[568174, 11780, 32, 0, 31, "Subsubsection"],
Cell[568209, 11782, 149, 5, 99, "Text"],
Cell[CellGroupData[{
Cell[568383, 11791, 1300, 44, 19, "Input",
 CellOpen->False],
Cell[569686, 11837, 721, 19, 54, "Output"],
Cell[570410, 11858, 33, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[570468, 11862, 848, 28, 19, "Input",
 CellOpen->False],
Cell[571319, 11892, 633, 18, 54, "Output"]
}, Open  ]],
Cell[571967, 11913, 30, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[572022, 11917, 1334, 45, 19, "Input",
 CellOpen->False],
Cell[573359, 11964, 721, 19, 54, "Output"]
}, Open  ]],
Cell[574095, 11986, 92, 4, 74, "Text"],
Cell[CellGroupData[{
Cell[574212, 11994, 275, 9, 19, "Input",
 CellOpen->False],
Cell[574490, 12005, 700, 18, 54, "Output"]
}, Open  ]],
Cell[575205, 12026, 174, 6, 27, "Text"],
Cell[CellGroupData[{
Cell[575404, 12036, 1549, 51, 19, "Input",
 CellOpen->False],
Cell[576956, 12089, 16773, 281, 329, "Output"]
}, Open  ]]
}, Open  ]],
Cell[593756, 12374, 73, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[593854, 12378, 1947, 52, 19, "Input",
 CellOpen->False],
Cell[595804, 12432, 18662, 316, 345, "Output"]
}, Open  ]],
Cell[614481, 12751, 118, 5, 99, "Text"],
Cell[614602, 12758, 33, 0, 31, "Subsubsection"],
Cell[614638, 12760, 65, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[614728, 12764, 141, 4, 19, "Input",
 CellOpen->False],
Cell[614872, 12770, 18621, 316, 329, "Output"]
}, Open  ]],
Cell[633508, 13089, 63, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[633596, 13093, 104, 3, 19, "Input",
 CellOpen->False],
Cell[633703, 13098, 120, 3, 22, "Output"]
}, Open  ]],
Cell[633838, 13104, 245, 6, 124, "Text"]
}
]
*)

(* End of internal cache information *)
