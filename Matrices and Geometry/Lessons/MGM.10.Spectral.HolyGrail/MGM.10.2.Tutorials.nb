(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    285653,       8982]
NotebookOptionsPosition[    218109,       7486]
NotebookOutlinePosition[    271163,       8595]
CellTagsIndexPosition[    270999,       8587]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.10 The Spectral Theorem for Symmetric Matrices and the Holy Grail of \
Matrix Theory\n",
 StyleBox["TUTORIALS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.1) If ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " is of full rank, then PseudoInverse[",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 "] =  ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 " ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "\nIf ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " is not of full rank, then the formula fails."
}], "Subsection",
 CellTags->"MGM.10.T1"],

Cell[CellGroupData[{

Cell[TextData[{
 "T.1.a.i)  If A is of full rank, then PseudoInverse[",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 "] =  ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 " ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]]
}], "Subsubsection"],

Cell["Here is a random full rank matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "7"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", 
    RowBox[{"hitdim", " ", "+", " ", 
     RowBox[{"Random", "[", 
      RowBox[{"Integer", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "6"}], "}"}]}], "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Check:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"rank", " ", "==", " ", "hitdim"}]}], "Input"],

Cell["If the last cell returns false, rerun everything.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Now look at Mathematica's calculation of PseudoInverse[A]:", "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PseudoInverse", "[", "A", "]"}], "]"}]], "Input"],

Cell[TextData[{
 "And Mathematica's calculation of  ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 " ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], ".", 
   RowBox[{"Transpose", "[", "A", "]"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "They are the same. This is superb evidence that \n               \
PseudoInverse[A] =  ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 " ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".\nExplain why this is guaranteed for any and all matrices A of full rank."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with any full rank matrix ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".\nGo with any Y in hangdimD. \n         ",
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 " = PseudoInverse[",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 "].Y\nmeans ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 " is closer to Y than any other hit with ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ". \n\nAnd because perpendicular distance is the shortest distance, this \
means \nY - ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 " is perpendicular to the subspace of hangdimD consisting of all hits with \
",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ". \n\nIn other words  (Y - ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 ").(",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".X) = 0 for all X's in hitdimD.\n\nIn view of the transpose manipulation, \
this is the same as \n           (",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " .(Y - ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 ")).X = 0 for all X in hitdimD.\n           \nThe only vector in hitdimD \
perpendicular to all the X's in hitdimD is {0,0,,...,0}.\n\nSo      {0,0,. . \
.,0} =  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " .(Y - ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 ") = ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".Y -  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 ")).\n\nThis is the same as\n            ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".Y =  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".",
  FontColor->GrayLevel[0]],
 "\nBecause A is of full rank, ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".A ",
  FontColor->RGBColor[0, 0, 1]],
 "is invertible.\n \nHit both sides with   ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 " to get\n  ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 Cell[BoxData[
  RowBox[{".", 
   SuperscriptBox["A", "t"]}]]],
 ".Y =  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
    RowBox[{"-", "1"}]], "."}]]],
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["  = ",
  FontColor->GrayLevel[0]],
 StyleBox["Xclosest",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[". = PseudoInverse[",
  FontColor->GrayLevel[0]],
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["].Y.\n  \n  Read across to see that\n        ",
  FontColor->GrayLevel[0]],
 " ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 Cell[BoxData[
  RowBox[{".", 
   SuperscriptBox["A", "t"]}]]],
 ".Y ",
 StyleBox[" = PseudoInverse[",
  FontColor->GrayLevel[0]],
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["].Y.\nBecause this happens for any Y in hangdimD, this tells you \
that\n          ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 Cell[BoxData[
  RowBox[{".", 
   SuperscriptBox["A", "t"]}]]],
 " =",
 StyleBox[" PseudoInverse[",
  FontColor->GrayLevel[0]],
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["].\nAnd you're out of here.",
  FontColor->GrayLevel[0]],
 "\n       "
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1.a.ii)  If A is of not of full rank, then the formula fails\
\>", "Subsubsection"],

Cell["Here is a full rank matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "7"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", 
    RowBox[{"hitdim", " ", "-", " ", 
     RowBox[{"Random", "[", 
      RowBox[{"Integer", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Now look atMathematica's calculation of PseudoInverse[A]:", "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"PseudoInverse", "[", "A", "]"}], "]"}]], "Input"],

Cell[TextData[{
 "And Mathematica's attempt at a calculation of  ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 " ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], ".", 
   RowBox[{"Transpose", "[", "A", "]"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "The calculation failed. \nThe upshot: The formula\n               \
PseudoInverse[A] =  ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 " ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".\nfails for this matrix.\nWhat gives?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 " The formula\n               PseudoInverse[A] =  ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}], ")"}], 
   RowBox[{"-", "1"}]]]],
 " ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "\nfails for a very good reason: The matrix A is not of full rank."
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"rank", " ", "==", " ", "hitdim"}]}], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.2) The Spectral Theorem says all symmetric matrices are diagonalizable. You \
just go with the eigenvectors for your hanger and aligner frames and the \
eigenvalues for your stretches.\
\>", "Subsection",
 CellTags->"MGM.10.T2"],

Cell[CellGroupData[{

Cell["\<\
T.2.a.i) When you make your aligner frame the same as your hanger frame, you \
make a symmetric matrix\
\>", "Subsubsection",
 Evaluatable->False],

Cell["\<\
You can make a symmetric matrix by:
a) Specifying a perpendicular frame which you use for both your aligner frame \
and your hanger frame.
b) Going with any stretch factors you like (including positive, zero or \
negative).
Try it and see what you get in 2D: \
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"perpframe", ",", "alignerframe", ",", "hangerframe"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"stretcher", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hanger", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hangerframe", "[", "1", "]"}], ",", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"hanger", ".", 
     RowBox[{"(", 
      RowBox[{"stretcher", ".", "aligner"}], ")"}]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"A", "==", 
  RowBox[{"Transpose", "[", "A", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Why did that work? 
Why will this work in any dimension?\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "Well, \n        ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", "stretcher", ".", "aligner"}]}]]],
 ".\nBecause the aligner frame is the same as the hanger frame, you are \
guaranteed that \n        ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 " = aligner\nand \n         ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 " = hanger.\nAnd because stretcher is a diagonal matrix,\n         ",
 Cell[BoxData[
  SuperscriptBox["stretcher", "t"]]],
 " = stretcher.\nSo\n          ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =    ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["aligner", "t"], ".", 
   SuperscriptBox["stretcher", "t"], ".", 
   SuperscriptBox["hanger", "t"]}]]],
 "\n               = ",
 Cell[BoxData[
  RowBox[{"hanger", ".", "stretcher", ".", "aligner"}]]],
 "\n              = ",
 Cell[BoxData["A"]],
 ". \nThis tells you that A is symmetric.\n"
}], "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell["\<\
T.2.a.ii) The Spectral Theorem tells you that all symmetric matrices can be \
made this way\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
How does the Spectral Theorem tell you that all symmetric matrices can be \
made this way?\
\>", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[BoxData[{
 FormBox[
  RowBox[{
  "Go", " ", "with", " ", "any", " ", "symmetric", " ", "matrix", " ", "A", 
   " ", "hitting", " ", "on", " ", 
   RowBox[{"hitdimD", ".", "\n", "The"}], " ", "Spectral", " ", "theorem", 
   " ", "gives", " ", "you", " ", "an", " ", "orthonormal", " ", "basis", " ",
    "of", " ", "hitdimD", " ", 
   RowBox[{"(", 
    RowBox[{
    "perpendicular", " ", "frame", " ", "spanning", " ", "all", " ", "of", 
     " ", "hitdimD"}], ")"}]}], TextForm], "\n", 
 FormBox[
  RowBox[{"           ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["X", "1"], ",", 
     SubscriptBox["X", "2"], ",", 
     SubscriptBox["X", "3"], ",", " ", 
     SubscriptBox["X", "4"], ",", 
     RowBox[{"...", "."}], ",", 
     SubscriptBox["X", "hitdim"]}], "}"}], " "}], TextForm], "\n", 
 FormBox[
  RowBox[{"\t", 
   RowBox[{
   "consisting", " ", "of", " ", "unit", " ", "eigenvectors", " ", "of", " ", 
    "A", " ", "with", " ", "corresponding", " ", "eigenvalues"}], "  "}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"\t         ", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["\[Lambda]", "1"], ",", 
     SubscriptBox["\[Lambda]", "2"], ",", 
     SubscriptBox["\[Lambda]", "3"], ",", 
     SubscriptBox["\[Lambda]", "4"], ",", 
     RowBox[{"...", "."}], ",", 
     SubscriptBox["\[Lambda]", "hitdim"]}], "}"}], "  "}], TextForm], "\n", 
 FormBox[
  RowBox[{"\t", 
   RowBox[{"so", " ", "that"}]}], TextForm], "\n", 
 FormBox[
  RowBox[{"           ", 
   RowBox[{
    RowBox[{"A", ".", 
     SubscriptBox["X", "j"]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["\[Lambda]", "j"], 
     SubscriptBox["X", "j"], " ", "for", " ", "all", " ", 
     RowBox[{"j", "'"}], 
     RowBox[{"s", ".", "\n", "\t", "When"}], " ", "you", " ", "put"}]}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"            ", 
   RowBox[{"aligner", " ", "=", "  ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["X", "1"], ",", 
      SubscriptBox["X", "2"], ",", 
      SubscriptBox["X", "3"], ",", " ", 
      SubscriptBox["X", "4"], ",", 
      RowBox[{"...", "."}], ",", 
      SubscriptBox["X", "hitdim"]}], "}"}]}]}], TextForm], "\n", 
 FormBox[
  RowBox[{"            ", 
   RowBox[{"stretcher", " ", "=", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], ",", 
       SubscriptBox["\[Lambda]", "2"], ",", 
       SubscriptBox["\[Lambda]", "3"], ",", 
       SubscriptBox["\[Lambda]", "4"], ",", 
       RowBox[{"...", "."}], ",", 
       SubscriptBox["\[Lambda]", "hitdim"]}], "}"}], " ", "]"}]}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"             ", 
   RowBox[{
    RowBox[{"hanger", " ", "=", " ", 
     SuperscriptBox["aligner", "t"]}], ",", "\n", 
    RowBox[{
     RowBox[{"it", "'"}], "s", " ", "automatic", " ", "that"}]}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"             ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"hanger", ".", "stretcher", ".", "aligner"}], " ", ")"}], ".", 
     " ", 
     SubscriptBox["X", "j"]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["\[Lambda]", "j"], 
     SubscriptBox["X", "j"], "     ", "for", " ", "all", " ", "the", " ", 
     RowBox[{"j", "'"}], 
     RowBox[{"s", ".", "\n", "Because"}]}]}], " "}], TextForm], "\n", 
 FormBox[
  RowBox[{"\t\t           ", 
   RowBox[{
    RowBox[{"A", ".", 
     SubscriptBox["X", "j"]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["\[Lambda]", "j"], 
     SubscriptBox["X", "j"], "  ", "for", " ", "all", " ", "the", " ", 
     RowBox[{"j", "'"}], "s"}]}], " "}], TextForm], "\n", 
 FormBox[
  RowBox[{
   RowBox[{"and", " ", "because", "  ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["X", "1"], ",", 
      SubscriptBox["X", "2"], ",", 
      SubscriptBox["X", "3"], ",", " ", 
      SubscriptBox["X", "4"], ",", 
      RowBox[{"...", "."}], ",", 
      SubscriptBox["X", "hitdim"]}], "}"}], " ", "is", " ", "a", " ", "basis",
     " ", "for", " ", "hitdimD"}], ",", " ", 
   RowBox[{
    RowBox[{"it", "'"}], "s", " ", "now", " ", "automatic", " ", "that"}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"             ", 
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"hanger", ".", "stretcher", ".", "aligner", "."}]}]}], 
  TextForm]}], "SmallText"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.2.a.iii) The   Spectral Theorem tells you that all symmetric matrices are \
diagonalizable\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
How does the Spectral Theorem tell you that all symmetric matrices are \
diagonalizable?\
\>", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Part", "  ", "ii"}], ")"}], " ", "above", " ", "said", " ", 
    "that", " ", "when", " ", "you", " ", "go", " ", "with", " ", "any", " ", 
    "symmetric", " ", "matrix", " ", "A", " ", "hitting", " ", "on", " ", 
    "hitdimD"}], ",", "\n", 
   RowBox[{
   "the", " ", "Spectral", " ", "theorem", " ", "gives", " ", "you", " ", 
    "an", " ", "orthonormal", " ", "basis", " ", "of", " ", "hitdimD", " ", 
    RowBox[{"(", 
     RowBox[{
     "perpendicular", " ", "frame", " ", "spanning", " ", "all", " ", "of", 
      " ", "hitdimD"}], ")"}]}]}], TextForm], "\n", 
 FormBox[
  RowBox[{
   FormBox[
    RowBox[{"           ", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["X", "1"], ",", 
       SubscriptBox["X", "2"], ",", 
       SubscriptBox["X", "3"], ",", " ", 
       SubscriptBox["X", "4"], ",", 
       RowBox[{"...", "."}], ",", 
       SubscriptBox["X", "hitdim"]}], "}"}]}],
    TextForm], " "}], TextForm], "\n", 
 FormBox[
  RowBox[{
   FormBox[
    RowBox[{"\t", 
     RowBox[{
     "consisting", " ", "of", " ", "unit", " ", "eigenvectors", " ", "of", 
      " ", "A", " ", "with", " ", "corresponding", " ", "eigenvalues"}]}],
    TextForm], "  "}], TextForm], "\n", 
 FormBox[
  RowBox[{
   FormBox[
    RowBox[{"\t         ", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], ",", 
       SubscriptBox["\[Lambda]", "2"], ",", 
       SubscriptBox["\[Lambda]", "3"], ",", 
       SubscriptBox["\[Lambda]", "4"], ",", 
       RowBox[{"...", "."}], ",", 
       SubscriptBox["\[Lambda]", "hitdim"]}], "}"}]}],
    TextForm], "  "}], TextForm], "\n", 
 FormBox[
  RowBox[{"\t", 
   RowBox[{"so", " ", "that"}]}], TextForm], "\n", 
 FormBox[
  RowBox[{"           ", 
   RowBox[{
    RowBox[{"A", ".", 
     SubscriptBox["X", "j"]}], " ", "=", " ", 
    RowBox[{
     SubscriptBox["\[Lambda]", "j"], 
     SubscriptBox["X", "j"], " ", "for", " ", "all", " ", 
     RowBox[{"j", "'"}], 
     RowBox[{"s", ".", "\n", "\t", "When"}], " ", "you", " ", "put"}]}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"            ", 
   RowBox[{"aligner", " ", "=", "  ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["X", "1"], ",", 
      SubscriptBox["X", "2"], ",", 
      SubscriptBox["X", "3"], ",", " ", 
      SubscriptBox["X", "4"], ",", 
      RowBox[{"...", "."}], ",", 
      SubscriptBox["X", "hitdim"]}], "}"}]}]}], TextForm], "\n", 
 FormBox[
  RowBox[{"            ", 
   RowBox[{"stretcher", " ", "=", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["\[Lambda]", "1"], ",", 
       SubscriptBox["\[Lambda]", "2"], ",", 
       SubscriptBox["\[Lambda]", "3"], ",", 
       SubscriptBox["\[Lambda]", "4"], ",", 
       RowBox[{"...", "."}], ",", 
       SubscriptBox["\[Lambda]", "hitdim"]}], "}"}], " ", "]"}]}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"             ", 
   RowBox[{
    RowBox[{"hanger", " ", "=", " ", 
     SuperscriptBox["aligner", "t"]}], ",", "\n", 
    RowBox[{
     RowBox[{"it", "'"}], "s", " ", "automatic", " ", "that"}]}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"        ", 
   RowBox[{
    RowBox[{"A", " ", "=", " ", 
     RowBox[{
      RowBox[{
      "hanger", ".", "stretcher", ".", "aligner", ".", "\n", "Because"}], " ",
       "hanger", " ", "and", " ", "aligner", " ", "are", " ", "both", " ", 
      "based", " ", "on", " ", "the", " ", "same", " ", "frame"}]}], ",", " ", 
    RowBox[{
     RowBox[{"it", "'"}], "s", " ", "automatic", " ", "that"}]}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"          ", 
   RowBox[{"aligner", " ", "=", " ", 
    RowBox[{
     SuperscriptBox["hanger", 
      RowBox[{"-", "1"}]], ".", "\n", "So"}]}]}], TextForm], "\n", 
 FormBox[
  RowBox[{"           ", 
   RowBox[{"A", " ", "=", " ", 
    RowBox[{
     RowBox[{"hanger", ".", "stretcher", ".", 
      SuperscriptBox["hanger", 
       RowBox[{"-", "1"}]], ".", "\n", "Now"}], " ", "put"}]}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"\t\t\t          ", 
   RowBox[{"SpannerMatrix", " ", "=", " ", "hanger"}]}], TextForm], "\n", 
 FormBox[
  RowBox[{"              ", 
   RowBox[{"diagonalmatrix", " ", "=", " ", "stretcher"}]}], 
  TextForm], "\n", 
 FormBox[
  RowBox[{"and", " ", "read", " ", "off"}], TextForm], "\n", 
 FormBox[
  FormBox[
   RowBox[{"              ", 
    RowBox[{"A", " ", "=", " ", 
     RowBox[{
      RowBox[{"SpannerMatrix", ".", "diagonal", ".", 
       SuperscriptBox["SpannerMatrix", 
        RowBox[{"-", "1"}]], ".", "\n", "This"}], " ", "is", " ", "enough", 
      " ", "to", " ", "be", " ", "able", " ", "to", " ", "proclaim", " ", 
      "that", " ", "A", " ", "is", " ", 
      RowBox[{"diagonalizable", "."}]}]}]}],
   TextForm], TextForm], "\n", 
 FormBox[
  RowBox[{"        "}], TextForm]}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3) Gradient vectors:  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"gradf", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"\[Del]", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "y"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}]}]]],
 ".\nHessian matrices : ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 " = ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "2"}], "}"}]], 
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"x", ",", "y"}]], 
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"x", ",", "y"}]], 
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "2"}], "}"}]], 
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}]}
     }], ")"}]}]]],
 ".\nLocal maximizers, minimizers and saddle points of functions"
}], "Subsection",
 CellTags->"MGM.10.T3"],

Cell[CellGroupData[{

Cell["\<\
T.3.a) Background: Gradient vectors and Hessian matrices: 
Using them for  function max-min\
\>", "Subsubsection"],

Cell[TextData[{
 "Take any function ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 ".\nThe gradient of ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 " at a point ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]]],
 " is\n             ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"gradf", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", " ", 
   RowBox[{
    RowBox[{"\[Del]", 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "y"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}]}]]]
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "gradf", ",", "x", ",", "y"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "x"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[PartialD]", "y"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}]}], "Input"],

Cell["\<\
The derivative of f[x,y] with respect to x is in the first slot.
\tThe derivative of f[x,y] with respect to y is in the second slot.  
\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "See the gradient ",
 Cell[BoxData[
  RowBox[{"\[Del]", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]]],
 " for \n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"Sin", "[", "y", "]"}]}]}]]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"Sin", "[", "y", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"gradf", "[", 
  RowBox[{"x", ",", "y"}], "]"}]}], "Input"],

Cell[TextData[{
 "See the gradient ",
 Cell[BoxData[
  RowBox[{"\[Del]", 
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}]}]]],
 " for\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{"2", " ", "x"}]], " ", 
    RowBox[{"Cos", "[", "y", "]"}]}]}]]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "f", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", 
    RowBox[{
     SuperscriptBox["E", 
      RowBox[{"2", " ", "x"}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"gradf", "[", 
  RowBox[{"x", ",", "y"}], "]"}]}], "Input"],

Cell[TextData[{
 "Get it? \n\nTake any function f[x,y].\nThe Hessian matrix ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 " of f[x,y] at a point {x,y} is"
}], "Text"],

Cell[TextData[{
 "              ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 " = ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          RowBox[{"x", ",", "2"}], "}"}]], 
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"x", ",", "y"}]], 
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}]},
      {
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"x", ",", "y"}]], 
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}], 
       RowBox[{
        SubscriptBox["\[PartialD]", 
         RowBox[{"{", 
          RowBox[{"y", ",", "2"}], "}"}]], 
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}]}
     }], ")"}]}]]]
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y", ",", "H"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    SubscriptBox["H", "f"], "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], "=", " ", 
   StyleBox[
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"x", ",", "y"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}]},
       {
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"x", ",", "y"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"{", 
           RowBox[{"y", ",", "2"}], "}"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}]}
      }], ")"}],
    FontColor->RGBColor[0, 0, 1]]}]}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "Input"],

Cell[TextData[{
 "First horizontal row of ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 ":\n{second derivative of f[x,y] with respect to x, \nderivative of f[x,y] \
first with respect to x and then with respect to y}.\nSecond horizontal row \
of ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 ":\n{derivative of f[x,y] first with respect to x and then with respect to \
y,\nsecond derivative of f[x,y] with respect to y}"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["The hessian matrix is guaranteed to be symmetric.", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{
    SubscriptBox["H", "f"], "[", 
    RowBox[{"x", ",", "y"}], "]"}], "]"}]}]], "Input"],

Cell[TextData[{
 "\nSee the gradient ",
 StyleBox["\[Del]f[x,y]",
  FontColor->RGBColor[0, 0, 1]],
 " for and the Hessian ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 "  for\n              ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox["x", "2"], "  ", "+", " ", 
    RowBox[{"3", " ", "x", " ", "y"}], " ", "+", 
    SuperscriptBox["y", "2"]}]}]]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"5", " ", 
      SuperscriptBox["x", "2"]}], "  ", "+", " ", 
     RowBox[{"3", " ", "x", " ", "y"}], " ", "+", 
     RowBox[{"4", " ", 
      SuperscriptBox["y", "2"]}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x", ",", "y"}], "]"}], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "Input"],

Cell[TextData[{
 "See the gradient ",
 StyleBox["\[Del]f[x,y]",
  FontColor->RGBColor[0, 0, 1]],
 " for and the Hessian ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 "   for\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox["x", "2"], " ", 
    RowBox[{"Sin", "[", "y", "]"}]}]}]]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"Sin", "[", "y", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x", ",", "y"}], "]"}], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "Input"],

Cell[TextData[{
 "See the gradient ",
 StyleBox["\[Del]f[x,y]",
  FontColor->RGBColor[0, 0, 1]],
 " for and the Hessian ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 "   for\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox["E", 
     RowBox[{"2", " ", "x"}]], " ", 
    RowBox[{"Cos", "[", "y", "]"}]}]}]]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "f", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", 
    RowBox[{
     SuperscriptBox["E", 
      RowBox[{"2", " ", "x"}]], " ", 
     RowBox[{"Cos", "[", "y", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x", ",", "y"}], "]"}], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "Input"],

Cell["Get it? ", "Text"],

Cell[TextData[{
 "The recipe for using the Hessian for function max-min is simple in \
principle.\nYou take your function, find {",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["x", "0"], ",", 
   SubscriptBox["y", "0"]}]]],
 "} so that\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[Del]", 
    RowBox[{"f", "[", 
     RowBox[{
      SubscriptBox["x", "0"], ",", 
      SubscriptBox["y", "0"]}], "]"}]}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}]]],
 ".\n You are guaranteed that {",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["x", "0"], ",", 
   SubscriptBox["y", "0"]}]]],
 "} is \n\[Rule] a local minimizer of f[x,y] if both eigenvalues of the \
Hessian ",
 Cell[BoxData[
  SubscriptBox["H", "f"]]],
 Cell[BoxData[
  RowBox[{"[", 
   RowBox[{
    SubscriptBox["x", "0"], ",", 
    SubscriptBox["y", "0"]}], "]"}]]],
 " are positive.\n \n\[Rule] a local maximizer of f[x,y] if both eigenvalues \
of the Hessian ",
 Cell[BoxData[
  SubscriptBox["H", "f"]]],
 Cell[BoxData[
  RowBox[{"[", 
   RowBox[{
    SubscriptBox["x", "0"], ",", 
    SubscriptBox["y", "0"]}], "]"}]]],
 " are negative\n \n\[Rule] a saddle point of f[x,y] if  ",
 Cell[BoxData[
  SubscriptBox["H", "f"]]],
 Cell[BoxData[
  RowBox[{"[", 
   RowBox[{
    SubscriptBox["x", "0"], ",", 
    SubscriptBox["y", "0"]}], "]"}]]],
 " has one positive and one negative eigenvalue.\n \n\[Rule] Otherwise, you \
get no information."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.a.i) Trying it out ", "Subsubsection"],

Cell["Here's a function:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y", ",", "gradf", ",", "H"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"0.4", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["x", "2"], "+", 
     RowBox[{"4", " ", 
      RowBox[{"Sin", "[", 
       SuperscriptBox["y", "2"], "]"}]}]}], ")"}]}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Analyze some of the points at which the gradient of f[x,y] is {0,0} \
determining whether they are local maximizers, local minimizers or saddle \
points.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Here are the gradient and Hessian of f[x,y]:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y", ",", "gradf", ",", "H"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Sin", "[", 
         SuperscriptBox["y", "2"], "]"}]}]}], ")"}]}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "x"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[PartialD]", "y"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", "  ", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]},
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "Input"],

Cell["Check out where the gradient is {0,0}:", "SmallText"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"gradf", "[", 
      RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}],
   FontColor->RGBColor[0, 0, 1]], "]"}]], "Input"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{
    "This", " ", "gives", " ", "rise", " ", "to", " ", "several", " ", 
     "critical", " ", 
     RowBox[{"points", ".", "\n", "Three"}], " ", "of", " ", "them", " ", 
     RowBox[{"are", ":", "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "1"], ",", 
         SubscriptBox["y", "1"]}], "}"}],
       FontColor->RGBColor[0, 0, 1]]}]}], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}],
     FontColor->RGBColor[0, 0, 1]]}], " ", ",", " ", 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["y", "2"]}], "}"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["  ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{"0", ",", 
         SqrtBox[
          FractionBox["\[Pi]", "2"]]}], "}"}],
       FontColor->RGBColor[0, 0, 1]], "   ", "and", " ", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "3"], ",", 
         SubscriptBox["y", "3"]}], "}"}],
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["=",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"-", 
           SqrtBox[
            FractionBox["\[Pi]", "2"]]}]}], "}"}],
        FontColor->RGBColor[0, 0, 1]], ".", "\n", "\t\t", "Check"}], " ", 
      "them", " ", 
      RowBox[{"out", ":"}]}]}]}]}], TextForm]], "SmallText"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["y", "1"]}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{
    SubscriptBox["x", "1"], ",", 
    SubscriptBox["y", "1"]}], "]"}], "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["y", "2"]}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       SqrtBox[
        FractionBox["\[Pi]", "2"]]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{
    SubscriptBox["x", "2"], ",", 
    SubscriptBox["y", "2"]}], "]"}], "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "3"], ",", 
       SubscriptBox["y", "3"]}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", 
        SqrtBox[
         FractionBox["\[Pi]", "2"]]}]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{
    SubscriptBox["x", "3"], ",", 
    SubscriptBox["y", "3"]}], "]"}], "]"}]}], "Input"],

Cell[TextData[{
 "The Hessian test tells you that  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "1"], ",", 
     SubscriptBox["y", "1"]}], "}"}], " "}]]],
 "is a local minimizer  and both ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["x", "2"], ",", 
    SubscriptBox["y", "2"]}], "}"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "3"], ",", 
     SubscriptBox["y", "3"]}], "}"}], " "}]]],
 " are saddle points.\n\nSee a plot of f[x,y] on a circle centered at the \
local minimizer at ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["x", "1"], ",", 
    SubscriptBox["y", "1"]}], "}"}]]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "r", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xbase", ",", "ybase"}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "1"], ",", 
       SubscriptBox["y", "1"]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"r_", ",", "s_"}], "]"}], " ", "=", " ", 
    RowBox[{"xbase", "+", " ", 
     RowBox[{"r", "  ", 
      RowBox[{"Cos", "[", "s", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", 
     RowBox[{"r_", ",", "s_"}], "]"}], " ", "=", " ", 
    RowBox[{"ybase", "+", " ", 
     RowBox[{"r", "  ", 
      RowBox[{"Sin", "[", "s", "]"}]}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fplot", " ", "=", " ", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"r", ",", "s"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"r", ",", "s"}], "]"}], ",", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"r", ",", "s"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"r", ",", "s"}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "0.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", 
        RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ViewPoint", "->", "CMView"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<f[x,y]\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<fplot\>\""}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"fplot", ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.5"}], "}"}], ",", 
     RowBox[{"Tail", "->", 
      RowBox[{"{", 
       RowBox[{"xbase", ",", "ybase", ",", 
        RowBox[{"f", "[", 
         RowBox[{"xbase", ",", "ybase"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"VectorColor", "->", "Red"}]}], "]"}]}], "]"}]}], "Input"],

Cell["\<\
Yessiree bob! Just as the Hessian predicted. A local minimizer at:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["x", "1"], ",", 
   SubscriptBox["y", "1"]}], "}"}]], "Input"],

Cell["Now check out the saddle point at:", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["x", "2"], ",", 
   SubscriptBox["y", "2"]}], "}"}]], "Input"],

Cell["Here you go:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "r", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xbase", ",", "ybase"}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["x", "2"], ",", 
       SubscriptBox["y", "2"]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"r_", ",", "s_"}], "]"}], " ", "=", " ", 
    RowBox[{"xbase", "+", " ", 
     RowBox[{"2", "r", " ", 
      RowBox[{"Cos", "[", "s", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", 
     RowBox[{"r_", ",", "s_"}], "]"}], " ", "=", " ", 
    RowBox[{"ybase", "+", " ", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", "s", "]"}]}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fplot", " ", "=", " ", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"r", ",", "s"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"r", ",", "s"}], "]"}], ",", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"r", ",", "s"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"r", ",", "s"}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "0.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", 
        RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"ViewPoint", "->", "CMView"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<f[x,y]\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"Mesh", "->", 
       RowBox[{"{", 
        RowBox[{"30", ",", "30"}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<fplot\>\""}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"fplot", ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.5"}], "}"}], ",", 
     RowBox[{"Tail", "->", 
      RowBox[{"{", 
       RowBox[{"xbase", ",", "ybase", ",", 
        RowBox[{"f", "[", 
         RowBox[{"xbase", ",", "ybase"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"VectorColor", "->", "Red"}]}], "]"}]}], "]"}]}], "Input"],

Cell["\<\
Jump on and ride the bronco! Just as the Hessian predicted. A saddle point at:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["x", "2"], ",", 
   SubscriptBox["y", "2"]}], "}"}]], "Input"],

Cell["Now check out the saddle point  at:", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox["x", "3"], ",", 
   SubscriptBox["y", "3"]}], "}"}]], "Input"],

Cell["Here you go:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "r", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xbase", ",", "ybase"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "3"], ",", 
      SubscriptBox["y", "3"]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"r_", ",", "s_"}], "]"}], " ", "=", " ", 
    RowBox[{"xbase", "+", " ", 
     RowBox[{"2", "r", " ", 
      RowBox[{"Cos", "[", "s", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", 
     RowBox[{"r_", ",", "s_"}], "]"}], " ", "=", " ", 
    RowBox[{"ybase", "+", " ", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", "s", "]"}]}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"fplot", " ", "=", " ", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"r", ",", "s"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"r", ",", "s"}], "]"}], ",", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"x", "[", 
           RowBox[{"r", ",", "s"}], "]"}], ",", 
          RowBox[{"y", "[", 
           RowBox[{"r", ",", "s"}], "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "0.3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
      RowBox[{"ViewPoint", "->", "CMView"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<f[x,y]\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<fplot\>\""}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"fplot", ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.2"}], "}"}], ",", 
     RowBox[{"Tail", "->", 
      RowBox[{"{", 
       RowBox[{"xbase", ",", "ybase", ",", 
        RowBox[{"f", "[", 
         RowBox[{"xbase", ",", "ybase"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"VectorColor", "->", "Red"}]}], "]"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "Yep! Another saddle point at ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    SubscriptBox["x", "3"], ",", 
    SubscriptBox["y", "3"]}], "}"}]]],
 ".\n Just as the Hessian predicted."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.a.ii) Why the Hessian test works", "Subsubsection"],

Cell[CellGroupData[{

Cell["Why does the Hessian test work?", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Near any point ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}]]],
 ", \n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"approxf", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "=", " ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"\[Del]", 
       RowBox[{"f", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "-", " ", "a"}], ",", 
        RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], " ", "+", 
     StyleBox[
      FractionBox[
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "-", " ", "a"}], ",", " ", 
          RowBox[{"y", " ", "-", " ", "b"}]}], "}"}], " ", ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["H", "f"], "[", 
           RowBox[{"a", ",", "b"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", " ", "-", " ", "a"}], ",", " ", 
            RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], ")"}]}], "2"],
      FontSize->18]}]}], TextForm]]],
 "\n mimics the behavior of ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 "."
}], "SmallText"],

Cell["\<\
This fact will be explained in the Tutorial immediately below.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Go with a critical point {a,b}. This makes   ",
 StyleBox["\[Del]f[a,b] = {0,0}",
  FontColor->RGBColor[0, 0, 1]],
 ", and so the gradient term in approxf[x,y] drops out, leaving\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"approxf", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "=", " ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}], "  ", "+", 
     StyleBox[
      FractionBox[
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "-", " ", "a"}], ",", " ", 
          RowBox[{"y", " ", "-", " ", "b"}]}], "}"}], " ", ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["H", "f"], "[", 
           RowBox[{"a", ",", "b"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", " ", "-", " ", "a"}], ",", " ", 
            RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], ")"}]}], "2"],
      FontSize->18]}]}], TextForm]]],
 "\nNow go with {x,y} \[NotEqual] {a,b} and put\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "=", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"eigvect", "[", "1", "]"}]}], "+", 
     RowBox[{"t", " ", 
      RowBox[{"eigvect", "[", "2", "]"}]}], "+", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}]}]}], ","}]]],
 "\nso that at least one of s and t is not 0."
}], "SmallText"],

Cell[TextData[{
 "Here eigvect[1] and eigvect[2] are mutually perpendicular unit eigenvectors \
of the symmetric matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{"a", ",", "b"}], "]"}], "."}],
    FontColor->GrayLevel[0]], TextForm]]],
 "\nwith associated eigenvalues eigval[1] and eigval[2] so that\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       SubscriptBox["H", "f"], "[", 
       RowBox[{"a", ",", "b"}], "]"}],
      FontColor->GrayLevel[0]], 
     StyleBox[".",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"eigvect", "[", "1", "]"}],
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{
     StyleBox[
      RowBox[{"eigval", "[", "1", "]"}],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"eigvect", "[", "1", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], TextForm], "\n", 
  FormBox[
   RowBox[{"\t", "and"}], TextForm], "\n", 
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       SubscriptBox["H", "f"], "[", 
       RowBox[{"a", ",", "b"}], "]"}],
      FontColor->GrayLevel[0]], 
     StyleBox[".",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"eigvect", "[", "2", "]"}],
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{
     StyleBox[
      RowBox[{"eigval", "[", "2", "]"}],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"eigvect", "[", "2", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], TextForm]}],
  FontSize->14]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "This gives\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{"     ", 
    FormBox[
     RowBox[{
      RowBox[{"approxf", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "=", " ", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"a", ",", "b"}], "]"}], "  ", "+", 
       StyleBox[
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"s", " ", 
              RowBox[{"eigvect", "[", "1", "]"}]}], " ", "+", " ", 
             RowBox[{"t", " ", 
              RowBox[{"eigvect", "[", "2", "]"}]}]}], ","}], ")"}], ".", 
          StyleBox[
           RowBox[{
            SubscriptBox["H", "f"], "[", 
            RowBox[{"a", ",", "b"}], "]"}],
           FontColor->GrayLevel[0]], 
          StyleBox[".",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"s", " ", 
               RowBox[{"eigvect", "[", "1", "]"}]}], " ", "+", " ", 
              RowBox[{"t", " ", 
               RowBox[{"eigvect", "[", "2", "]"}]}]}], ","}], ")"}],
           FontColor->RGBColor[0, 0.392187, 0]], "."}], "2"],
        FontSize->18]}]}],
     TextForm]}], TextForm]]],
 "\n         "
}], "SmallText"],

Cell["Multiply out on the right to get", "SmallText"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"approxf", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TextForm]]],
 " =       ",
 Cell[BoxData[
  RowBox[{"    ", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "  ", "+", 
    StyleBox[
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"s", " ", 
           RowBox[{"eigvect", "[", "1", "]"}]}], " ", "+", " ", 
          RowBox[{"t", " ", 
           RowBox[{"eigvect", "[", "2", "]"}]}]}], ","}], ")"}], ".", 
       RowBox[{
        StyleBox["(",
         FontColor->RGBColor[0, 0.392187, 0]], 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["s",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{"eigval", "[", "1", "]"}],
            FontColor->RGBColor[1, 0, 0]], 
           StyleBox["  ",
            FontColor->RGBColor[1, 0, 0]], 
           StyleBox[
            RowBox[{"eigvect", "[", "1", "]"}],
            FontColor->RGBColor[0, 0.392187, 0]]}], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox["+",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{" ", 
            StyleBox[" ",
             FontColor->RGBColor[0, 0.392187, 0]]}]], 
          RowBox[{
           StyleBox["t",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{"eigval", "[", "2", "]"}],
            FontColor->RGBColor[1, 0, 0]], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{"eigvect", "[", "2", "]"}],
            FontColor->RGBColor[0, 0.392187, 0]]}]}], 
         StyleBox[",",
          FontColor->RGBColor[0, 0.392187, 0]]}], 
        StyleBox[")",
         FontColor->RGBColor[0, 0.392187, 0]]}], "."}], "2"],
     FontSize->18]}]}]]]
}], "SmallText"],

Cell[TextData[{
 StyleBox["Reason",
  FontColor->GrayLevel[0]],
 ":\n ",
 StyleBox[" ",
  FontSize->14],
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{"a", ",", "b"}], "]"}],
     FontColor->GrayLevel[0]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0.392187, 0]], 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"s", " ", 
       RowBox[{"eigvect", "[", "1", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0.392187, 0]]}], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox["=",
    FontColor->RGBColor[0, 0.392187, 0]], 
   RowBox[{
    StyleBox["s",
     FontColor->RGBColor[0.229999, 0.370001, 0.170001]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0.392187, 0]], 
    StyleBox[
     RowBox[{"eigval", "[", "1", "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["  ",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"eigvect", "[", "1", "]"}],
     FontColor->RGBColor[0, 0.392187, 0]]}]}]],
  FontSize->14],
 StyleBox["\n  ",
  FontSize->14],
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{"a", ",", "b"}], "]"}],
     FontColor->GrayLevel[0]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0.392187, 0]], 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"t", " ", 
       RowBox[{"eigvect", "[", "2", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0.392187, 0]]}], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox["=",
    FontColor->RGBColor[0, 0.392187, 0]], 
   RowBox[{
    StyleBox["t",
     FontColor->RGBColor[0.229999, 0.370001, 0.170001]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0.392187, 0]], 
    StyleBox[
     RowBox[{"eigval", "[", "2", "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["  ",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"eigvect", "[", "2", "]"}],
     FontColor->RGBColor[0, 0.392187, 0]]}]}]],
  FontSize->14]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["This is the same as", "SmallText"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"approxf", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TextForm]]],
 " =   ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "  ", "+", 
    StyleBox[
     FractionBox[
      RowBox[{"s", " ", 
       RowBox[{
        RowBox[{"eigvect", "[", "1", "]"}], " ", ".", 
        RowBox[{
         StyleBox["(",
          FontColor->RGBColor[0, 0.392187, 0]], 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["s",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[" ",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[
             RowBox[{"eigval", "[", "1", "]"}],
             FontColor->RGBColor[1, 0, 0]], 
            StyleBox["  ",
             FontColor->RGBColor[1, 0, 0]], 
            StyleBox[
             RowBox[{"eigvect", "[", "1", "]"}],
             FontColor->RGBColor[0, 0.392187, 0]]}], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox["+",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{" ", 
             StyleBox[" ",
              FontColor->RGBColor[0, 0.392187, 0]]}]], 
           RowBox[{
            StyleBox["t",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[" ",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[
             RowBox[{"eigval", "[", "2", "]"}],
             FontColor->RGBColor[1, 0, 0]], 
            StyleBox[" ",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[
             RowBox[{"eigvect", "[", "2", "]"}],
             FontColor->RGBColor[0, 0.392187, 0]]}]}], 
          StyleBox[",",
           FontColor->RGBColor[0, 0.392187, 0]]}], 
         StyleBox[")",
          FontColor->RGBColor[0, 0.392187, 0]]}], "."}]}], "2"],
     FontSize->18]}]}]]],
 "\n                           + ",
 Cell[BoxData[
  StyleBox[
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{"t", " ", 
       RowBox[{"eigvect", "[", "2", "]"}]}], ",", 
      RowBox[{".", 
       RowBox[{
        StyleBox["(",
         FontColor->RGBColor[0, 0.392187, 0]], 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["s",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{"eigval", "[", "1", "]"}],
            FontColor->RGBColor[1, 0, 0]], 
           StyleBox["  ",
            FontColor->RGBColor[1, 0, 0]], 
           StyleBox[
            RowBox[{"eigvect", "[", "1", "]"}],
            FontColor->RGBColor[0, 0.392187, 0]]}], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox["+",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{" ", 
            StyleBox[" ",
             FontColor->RGBColor[0, 0.392187, 0]]}]], 
          RowBox[{
           StyleBox["t",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{"eigval", "[", "2", "]"}],
            FontColor->RGBColor[1, 0, 0]], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{"eigvect", "[", "2", "]"}],
            FontColor->RGBColor[0, 0.392187, 0]]}]}], 
         StyleBox[",",
          FontColor->RGBColor[0, 0.392187, 0]]}], 
        StyleBox[")",
         FontColor->RGBColor[0, 0.392187, 0]]}], "."}]}]}], "2"],
   FontSize->18]]]
}], "SmallText"],

Cell["This is the same as", "SmallText"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"approxf", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TextForm]]],
 " =   ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "  ", "+", 
    StyleBox[
     FractionBox[
      RowBox[{"s", " ", 
       RowBox[{
        RowBox[{"eigvect", "[", "1", "]"}], " ", ".", 
        RowBox[{
         StyleBox["(",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{
          StyleBox["s",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{"eigval", "[", "1", "]"}],
           FontColor->RGBColor[1, 0, 0]], 
          StyleBox["  ",
           FontColor->RGBColor[1, 0, 0]], 
          StyleBox[
           RowBox[{"eigvect", "[", "1", "]"}],
           FontColor->RGBColor[0, 0.392187, 0]]}], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0.392187, 0]], ")"}], "."}]}], "2"],
     FontSize->18]}]}]]],
 "\n                                          + ",
 Cell[BoxData[
  StyleBox[
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{"t", " ", 
       RowBox[{"eigvect", "[", "2", "]"}]}], ",", 
      RowBox[{".", 
       RowBox[{"(", 
        StyleBox[
         RowBox[{" ", 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]]}]], 
        RowBox[{
         StyleBox["t",
          FontColor->RGBColor[0, 0.392187, 0]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0.392187, 0]], 
         StyleBox[
          RowBox[{"eigval", "[", "2", "]"}],
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0.392187, 0]], 
         StyleBox[
          RowBox[{"eigvect", "[", "2", "]"}],
          FontColor->RGBColor[0, 0.392187, 0]]}], ")"}]}], 
      StyleBox[",",
       FontColor->RGBColor[0, 0.392187, 0]]}]}], "2"],
   FontSize->18]]],
 "."
}], "SmallText"],

Cell[TextData[{
 StyleBox["Reason",
  FontColor->GrayLevel[0]],
 ":\neigvect[1].eigvect[2] = 0"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"approxf", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TextForm]]],
 " =   ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}], "  ", "+", 
    StyleBox[
     FractionBox[
      RowBox[{"s", "  ", 
       RowBox[{
        RowBox[{
         StyleBox["(",
          FontColor->RGBColor[0, 0.392187, 0]], 
         RowBox[{
          StyleBox["s",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{"eigval", "[", "1", "]"}],
           FontColor->RGBColor[1, 0, 0]]}], 
         StyleBox["  ",
          FontColor->RGBColor[1, 0, 0]], ")"}], "."}]}], "2"],
     FontSize->18]}]}]]],
 "\n                                          + ",
 Cell[BoxData[
  StyleBox[
   FractionBox[
    RowBox[{" ", 
     RowBox[{"t", " ", 
      RowBox[{"(", 
       StyleBox[" ",
        FontColor->RGBColor[0, 0.392187, 0]], 
       RowBox[{
        StyleBox["t",
         FontColor->RGBColor[0, 0.392187, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[0, 0.392187, 0]], 
        StyleBox[
         RowBox[{"eigval", "[", "2", "]"}],
         FontColor->RGBColor[1, 0, 0]]}], 
       StyleBox[" ",
        FontColor->RGBColor[0, 0.392187, 0]], 
       StyleBox[")",
        FontColor->RGBColor[0, 0.392187, 0]]}]}]}], "2"],
   FontSize->18]]],
 "."
}], "SmallText"],

Cell[TextData[{
 StyleBox["Reason",
  FontColor->GrayLevel[0]],
 ":\neigvect[1] and eigvect[2] are unit vectors."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "This is the same as\n          ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"approxf", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "=", "  ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}], " ", "+", "  ", 
     RowBox[{
      SuperscriptBox["s", "2"], "  ", 
      RowBox[{"eigval", "[", "1", "]"}]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"eigval", "[", "2", "]"}]}]}]}], TextForm]]],
 ".\nNow milk this."
}], "SmallText"],

Cell[BoxData[
 FormBox[
  RowBox[{
  "Why", " ", "two", " ", "positive", " ", "eigenvalues", " ", "of", " ", 
   StyleBox[
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"a", ",", "b"}], "]"}],
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["reveal",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["that",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}],
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["is",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["a",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["local",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["minimizer",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["of",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox[
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}],
    FontColor->GrayLevel[0]], " "}], TextForm]], "Subsubsection"],

Cell[TextData[{
 "If eigval[1] and eigval[2] are both positive, then  ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["s", "2"], "  ", 
      RowBox[{"eigval", "[", "1", "]"}]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"eigval", "[", "2", "]"}], " "}]}]}], TextForm]]],
 " is also positive (because at least one of s and t is not 0) and so\n       \
       ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    FormBox[
     RowBox[{
      RowBox[{
       RowBox[{"approxf", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "=", "  ", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"a", ",", "b"}], "]"}], " ", "+", "  ", 
        StyleBox[
         RowBox[{
          SuperscriptBox["s", "2"], "  ", 
          RowBox[{"eigval", "[", "1", "]"}]}],
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["+",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[
         RowBox[{
          SuperscriptBox["t", "2"], " ", 
          RowBox[{"eigval", "[", "2", "]"}]}],
         FontColor->RGBColor[1, 0, 0]]}]}], " ", "\n", 
      "\t\t\t                       ", 
      RowBox[{"=", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"a", ",", "b"}], "]"}], " ", "+", 
          StyleBox[
           RowBox[{" ", 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 0]]}]], 
          StyleBox["positive",
           FontColor->RGBColor[1, 0, 0]]}], " ", ">", "  ", 
         RowBox[{"f", "[", 
          RowBox[{"a", ",", "b"}], "]"}]}], " ", "=", " ", 
        RowBox[{"approxf", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}]}]}],
     TextForm]}], TextForm]]],
 "\nThis means  {a,b} minimizes approxf[x,y]. \nAnd because approxf[x,y] \
mimics f[x,y] for {x,y} near {a,b}, this tells you that {a,b}  is a local \
minimizer of f[x,y]. "
}], "SmallText"],

Cell[BoxData[
 FormBox[
  RowBox[{
  "Why", " ", "two", " ", "negative", " ", "eigenvalues", " ", "of", " ", 
   StyleBox[
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"a", ",", "b"}], "]"}],
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["reveal",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["that",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}],
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["is",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["a",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["local",
    FontColor->GrayLevel[0]], 
   StyleBox["  ",
    FontColor->GrayLevel[0]], 
   StyleBox["maximizer",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["of",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox[
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}],
    FontColor->GrayLevel[0]], " "}], TextForm]], "Subsubsection"],

Cell[TextData[{
 "If eigval[1] and eigval[2] are both negative, then  ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["s", "2"], "  ", 
      RowBox[{"eigval", "[", "1", "]"}]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"eigval", "[", "2", "]"}], " "}]}]}], TextForm]]],
 " is also negative (because at least one of s and t is not 0)  and so\n      \
        ",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"approxf", "[", 
      RowBox[{"x", ",", "y"}], "]"}], "=", "  ", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", ",", "b"}], "]"}], " ", "+", 
      StyleBox[
       RowBox[{" ", 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 0]]}]], 
      StyleBox[
       RowBox[{
        SuperscriptBox["s", "2"], "  ", 
        RowBox[{"eigval", "[", "1", "]"}]}],
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["+",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{
        SuperscriptBox["t", "2"], " ", 
        RowBox[{"eigval", "[", "2", "]"}]}],
       FontColor->RGBColor[1, 0, 0]]}]}], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]]}], TextForm], "\[IndentingNewLine]", 
  FormBox[
   RowBox[{"=", "   ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"a", ",", "b"}], "]"}], " ", "+", "  ", 
       StyleBox["negative",
        FontColor->RGBColor[1, 0, 0]]}], 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]], "<", "  ", 
      RowBox[{"f", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], " ", "=", " ", 
     RowBox[{"approxf", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}]}], TextForm]}]],
 "\nThis means  {a,b} maximizes approxf[a,b]. \nAnd because approxf[x,y] \
mimics f[x,y] for {x,y} near {a,b}, this tells you that {a,b}  is a local \
maximizer of f[x,y]. "
}], "SmallText"],

Cell[BoxData[
 FormBox[
  RowBox[{
  "Why", " ", "one", " ", "positive", " ", "eigenvalue", " ", "and", " ", 
   "one", " ", "negative", " ", "eigenvalue", " ", "of", " ", 
   StyleBox[
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"a", ",", "b"}], "]"}],
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["reveal",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["that",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["that",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["the",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["plot",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["of",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox[
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}],
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["has",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["a",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["saddle",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["point",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox["at",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   StyleBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", 
       RowBox[{"f", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], "}"}], "."}],
    FontColor->GrayLevel[0]]}], TextForm]], "Subsubsection"],

Cell[TextData[{
 "If eigval[1] >0 and eigval[2] < 0  then \n              ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    RowBox[{
     RowBox[{
      SuperscriptBox["s", "2"], "  ", 
      RowBox[{"eigval", "[", "1", "]"}]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"eigval", "[", "2", "]"}], " "}]}]}], TextForm]]],
 " \n is positive for t = 0 and negative for s = 0. (because at least one of \
s and t is not 0).\nWhen you go with t = 0 and s not zero, you get\n          \
     ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    FormBox[
     RowBox[{
      RowBox[{
       RowBox[{"approxf", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "=", "  ", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"a", ",", "b"}], "]"}], " ", "+", "  ", 
        StyleBox[
         RowBox[{
          SuperscriptBox["s", "2"], "  ", 
          RowBox[{"eigval", "[", "1", "]"}]}],
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["+",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[
         RowBox[{
          SuperscriptBox["t", "2"], " ", 
          RowBox[{"eigval", "[", "2", "]"}]}],
         FontColor->RGBColor[1, 0, 0]]}]}], "\[IndentingNewLine]", 
      "                     ", 
      RowBox[{"=", "   ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"a", ",", "b"}], "]"}], " ", "+", 
          StyleBox[
           RowBox[{" ", 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 0]]}]], 
          StyleBox["positive",
           FontColor->RGBColor[1, 0, 0]]}], " ", ">", "  ", 
         RowBox[{"f", "[", 
          RowBox[{"a", ",", "b"}], "]"}]}], " ", "=", " ", 
        RowBox[{"approxf", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}]}]}],
     TextForm]}], TextForm]]],
 "\n\nWhen you go with s = 0 and t not zero, you get\n          ",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    FormBox[
     RowBox[{
      RowBox[{
       RowBox[{"approxf", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "=", "  ", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"a", ",", "b"}], "]"}], " ", "+", "  ", 
        StyleBox[
         RowBox[{
          SuperscriptBox["s", "2"], "  ", 
          RowBox[{"eigval", "[", "1", "]"}]}],
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["+",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[
         RowBox[{
          SuperscriptBox["t", "2"], " ", 
          RowBox[{"eigval", "[", "2", "]"}]}],
         FontColor->RGBColor[1, 0, 0]]}]}], " ", "\n", 
      "                             ", 
      RowBox[{"=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"xx", ",", "yy"}], "]"}], " ", "+", 
          StyleBox[
           RowBox[{" ", 
            StyleBox[" ",
             FontColor->RGBColor[1, 0, 0]]}]], 
          StyleBox["negative",
           FontColor->RGBColor[1, 0, 0]]}], " ", "<", "  ", 
         RowBox[{"f", "[", 
          RowBox[{"a", ",", "b"}], "]"}]}], " ", "=", " ", 
        RowBox[{"approxf", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}]}]}],
     TextForm]}], TextForm]]],
 "\n\nThis means that the plot of approxf[x,y] has a saddle point at {a,b}. \
And because approxf[x,y] mimics f[x,y] for {x,y} near {a,b}, this tells you \
that the plot of f[x,y] has a saddle point at {a,b}.\n\nThis also tells you \
that \n\[Rule]  When you leave {a,b} in the direction of eigvect[1], then \
f[x,y] initially goes up.\n\[Rule]  When you leave {a,b} in the direction of \
eigvect[2], then f[x,y] initially goes down.\n"
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.a.iii) Why \n",
 StyleBox["approxf[x,y] =",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{"f", "[", 
     RowBox[{"a", ",", "b"}], "]"}],
    FontSize->12], 
   StyleBox[" ",
    FontSize->12], 
   StyleBox["+",
    FontSize->12], 
   StyleBox[" ",
    FontSize->12], 
   StyleBox[
    RowBox[{
     RowBox[{"\[Del]", 
      RowBox[{"f", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}], ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", " ", "-", " ", "a"}], ",", 
       RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}],
    FontSize->12], 
   StyleBox[" ",
    FontSize->12], "+", 
   FractionBox[
    RowBox[{"  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "-", " ", "a"}], ",", 
        RowBox[{"y", " ", "-", " ", "b"}]}], "}"}], " ", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["H", "f"], "[", 
         RowBox[{"a", ",", "b"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "-", " ", "a"}], ",", 
          RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], ")"}]}]}], "2"]}]]],
 "\n mimics f[x,y] near {a,b}"
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this:\nNear any point ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}]]],
 ", \n approxf[x,y] =   ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"\[Del]", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", " ", "-", " ", "a"}], ",", 
      RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], " ", "+", 
   FractionBox[
    RowBox[{"  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "-", " ", "a"}], ",", 
        RowBox[{"y", " ", "-", " ", "b"}]}], "}"}], " ", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["H", "f"], "[", 
         RowBox[{"a", ",", "b"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "-", " ", "a"}], ",", 
          RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], ")"}]}]}], "2"]}]]],
 "\n mimics the behavior of ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 "."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[BoxData[{
 FormBox[
  RowBox[{"Take", " ", "any", " ", "fixed", " ", "point", " ", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}], " ", "and", " ", "put"}], TextForm], "\n", 
 FormBox[
  RowBox[{"       ", 
   RowBox[{
    RowBox[{"approxf", "[", 
     RowBox[{"x", ",", "y"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"\[Del]", 
       RowBox[{"f", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "-", " ", "a"}], ",", 
        RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], " ", "+", 
     FractionBox[
      RowBox[{"  ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "-", " ", "a"}], ",", 
          RowBox[{"y", " ", "-", " ", "b"}]}], "}"}], " ", ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SubscriptBox["H", "f"], "[", 
           RowBox[{"a", ",", "b"}], "]"}], ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", " ", "-", " ", "a"}], ",", 
            RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], ")"}]}]}], 
      "2"]}]}]}], TextForm], "\n", 
 FormBox[
  RowBox[{"Compare", 
   RowBox[{
    FormBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", ",", "b"}], "]"}], "  ", "and", " ", 
      RowBox[{"approxf", "[", 
       RowBox[{"a", ",", "b"}], "]"}]}],
     TextForm], ":"}]}], TextForm]}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "f", ",", "gradf", ",", "hessianf", ",", "x", ",", "y", ",", "a", ",", 
     "b", ",", "xbase", ",", "H", ",", "approxf", ",", "ybase"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gradf", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "y"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x", ",", "y"}], "]"}], "=", " ", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]},
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n", "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"approxf", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", ",", "b"}], "]"}], " ", "+", " ", 
      RowBox[{
       RowBox[{"gradf", "[", 
        RowBox[{"a", ",", "b"}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", " ", "-", " ", "a"}], ",", 
         RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], " ", "+", 
      FractionBox[
       RowBox[{"  ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", " ", "-", " ", "a"}], ",", 
           RowBox[{"y", " ", "-", " ", "b"}]}], "}"}], " ", ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["H", "f"], "[", 
            RowBox[{"a", ",", "b"}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", " ", "-", " ", "a"}], ",", 
             RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], ")"}]}]}], "2"]}]}],
    FontColor->RGBColor[0, 0, 1]], " ", ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"a", ",", "b"}], "]"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"approxf", "[", 
   RowBox[{"a", ",", "b"}], "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.50327097584265*^9, 3.503270976532484*^9}, 
   3.503271025678632*^9, {3.503271077723157*^9, 3.503271088857236*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"The", " ", 
    RowBox[{"result", ":", "\n", "\t\t", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}]}], "  ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"approxf", "[", 
       RowBox[{"a", ",", "b"}], "]"}], " ", ".", "\n", "\t\t", "Now"}], " ", 
     "compare", " ", "the", " ", "first", " ", "derivatives", " ", "at", " ", 
     
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}]}], ":"}]}], TextForm]], "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "x"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}], ",", "\n", "\t      ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "x"], 
     RowBox[{"approxf", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      StyleBox["y",
       FontColor->RGBColor[0, 0, 1]]], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}], ",", "\n", "\t      ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      StyleBox["y",
       FontColor->RGBColor[0, 0, 1]]], 
     RowBox[{"approxf", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}]}], "}"}]], "Input"],

Cell["\<\
The call:
     f[x,y] and approxf[x,y] have the same first partial derivatives at {a,b}.\
\>", "SmallText",
 CellChangeTimes->{{3.503271118342369*^9, 3.5032711203099337`*^9}}],

Cell[BoxData[
 FormBox["\t\t", TextForm]], "SmallText"],

Cell["\<\
Compare second partial derivatives at with respect to x and y at {a,b}:\
\>", "SmallText",
 CellChangeTimes->{{3.50327112766988*^9, 3.5032711295732317`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"x", ",", "2"}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["}",
        FontColor->RGBColor[0, 0, 1]]}]], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}], ",", "\n", "       ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{"x", ",", "2"}], "}"}],
       FontColor->RGBColor[0, 0, 1]]], 
     RowBox[{"approxf", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"y", ",", "2"}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["}",
        FontColor->RGBColor[0, 0, 1]]}]], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}], ",", "\n", "         ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      StyleBox[
       RowBox[{"{", 
        RowBox[{"y", ",", "2"}], "}"}],
       FontColor->RGBColor[0, 0, 1]]], 
     RowBox[{"approxf", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      StyleBox[
       RowBox[{"x", ",", "y"}],
       FontColor->RGBColor[0, 0, 1]]], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}], ",", "\n", "       ", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", 
      RowBox[{"x", 
       StyleBox[",",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["y",
        FontColor->RGBColor[0, 0, 1]]}]], 
     RowBox[{"approxf", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "->", "a"}], ",", 
      RowBox[{"y", "->", "b"}]}], "}"}]}]}], "}"}]], "Input"],

Cell[TextData[{
 "\nThe upshot: ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"approxf", "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 " have order of contact 2 at ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}]]],
 ".\nThis tells you that near any point ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}]]],
 ", \n      ",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"a", ",", "b"}], "]"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"\[Del]", 
     RowBox[{"f", "[", 
      RowBox[{"a", ",", "b"}], "]"}]}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", " ", "-", " ", "a"}], ",", 
      RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], " ", "+", 
   FractionBox[
    RowBox[{"  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "-", " ", "a"}], ",", 
        RowBox[{"y", " ", "-", " ", "b"}]}], "}"}], " ", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["H", "f"], "[", 
         RowBox[{"a", ",", "b"}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "-", " ", "a"}], ",", 
          RowBox[{"y", " ", "-", " ", "b"}]}], "}"}]}], ")"}]}]}], 
    "2"]}], "\n", 
  RowBox[{"                             "}]}]],
 "\n mimics the behavior of ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.4) Quadratic forms\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", "=", 
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b", " ", "x", " ", "y"}], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["y", "2"]}], "+", 
    RowBox[{"d", " ", "x"}], "+", 
    RowBox[{"e", " ", "y"}], "+", "g"}]}]]],
 "\nEllipses, hyperbolas and parabolas defined by setting a quadratic form \
equal to a constant "
}], "Subsection",
 CellTags->"MGM.10.T4"],

Cell[CellGroupData[{

Cell["\<\
T.4.a.i) A tilted off-set ellipse defined by setting a quadratic form equal \
to a constant\
\>", "Subsubsection"],

Cell["Here's an example of something folks call a quadratic form:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"1.1", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"1.9", " ", "x", " ", "y"}], "+", 
   RowBox[{"2.5", " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"12.4", " ", "x"}], "+", 
   RowBox[{"10.8", " ", "y"}]}]}]}], "Input",
 AspectRatioFixed->True],

Cell["And look at this plot: ", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"constant", "=", "5"}], ";"}], " "}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "15"}], ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "6"}], ",", "6"}], "}"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", "constant", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}]}], "Input",\

 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
The border of the black region is a plot of the curve consisting of all the \
points {x,y} for which
             f[x,y] = constant = 5.
Parameterize and plot this ellipse.
Give the perpendicular frame on which it is hung and measure the length of \
the long axis and the short axis.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Answer:", "Special1"],

Cell["\<\
Calculate the gradient of f[x,y] and find out where it is {0,0}:\
\>", "SmallText",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "gradf", ",", "H"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gradf", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "y"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"criticals", " ", "=", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"gradf", "[", 
       RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", "0"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xcritical", ",", "ycritical"}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"criticals", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]}], "Input"],

Cell["Throw a plot of {xcritical, ycritical} into the mix:", "Text"],

Cell[BoxData[
 RowBox[{"embellishedplot", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"curveplot", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"xcritical", ",", "ycritical"}], "}"}], "]"}]}], "}"}], 
     "]"}]}], "]"}], " "}]], "Input"],

Cell["\<\
Now calculate a perpendicular frame of eigenvectors of the Hessian of f[x,y] \
and throw them into the plot:
\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "H", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", "  ", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]},
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"Eigenvectors", "[", 
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scalefactor", " ", "=", " ", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"scalefactor", " ", 
         RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"setup", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"embellishedplot", " ", ",", "eigenplot", ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}], 
  " "}]}], "Input"],

Cell["Put the tails of the eigenvectors at {xcritical,ycritical}:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"adjustedeigenplot", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"scalefactor", " ", 
         RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"xcritical", ",", "ycritical"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"goodsetup", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"embellishedplot", " ", ",", "adjustedeigenplot", ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}], 
  " "}]}], "Input"],

Cell["\<\
The natural coordinate system for this set up is the {u,v} coordinate system \
coming from the two plotted unit eigenvectors. This is the perpendicular \
frame on which the ellipse is hung.

 To go from uv-coordinates to xy-coordinates, you just use:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"u", ",", "v"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xcritical", ",", "ycritical"}], "}"}], "+", 
   RowBox[{"u", " ", 
    RowBox[{"eigenvector", "[", "1", "]"}]}], "+", 
   RowBox[{"v", " ", 
    RowBox[{"eigenvector", "[", "2", "]"}]}]}]}]}], "Input"],

Cell["Look at this:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"f", "[", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"u", ",", "v"}], "]"}], ",", 
     RowBox[{"y", "[", 
      RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "]"}], "==", 
  "constant"}]], "Input"],

Cell["This is the same as:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "]"}], " ", "-", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"y", "[", 
        RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "->", "0"}], ",", 
       RowBox[{"v", "->", "0"}]}], "}"}]}], ")"}]}], " ", "==", " ", 
  RowBox[{"constant", " ", "-", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"y", "[", 
        RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "->", "0"}], ",", 
       RowBox[{"v", "->", "0"}]}], "}"}]}], ")"}]}]}]], "Input"],

Cell["Extract the numerical constants:", "SmallText"],

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "]"}], ",", 
    SuperscriptBox["u", "2"]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "]"}], ",", 
    SuperscriptBox["v", "2"]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{"constant", "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"y", "[", 
        RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "\[Rule]", "0"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "}"}]}], ")"}]}]}]], "Input"],

Cell["Now move in with the u-v parametrization:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "t", "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u", "[", "t_", "]"}], ",", 
     RowBox[{"v", "[", "t_", "]"}]}], "}"}], " ", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox["r"], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], 
      SqrtBox["a"]], ",", 
     FractionBox[
      RowBox[{
       SqrtBox["r"], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], 
      SqrtBox["b"]]}], "}"}]}]}]}], "Input"],

Cell["Now go to the x-y parameterization:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"xx", ",", "yy"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xx", "[", "t_", "]"}], ",", 
    RowBox[{"yy", "[", "t_", "]"}]}], "}"}], " ", "=", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], ",", 
      RowBox[{"v", "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{
      RowBox[{"u", "[", "t", "]"}], ",", 
      RowBox[{"v", "[", "t", "]"}]}], "]"}]}], "}"}]}]}], "Input"],

Cell["See it:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ellipseplot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xx", "[", "t", "]"}], ",", 
        RowBox[{"yy", "[", "t", "]"}]}], "}"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", " ", 
        RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red"}], "}"}], 
        "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"goodsetup", " ", ",", "ellipseplot", ",", " ", 
   RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}], "Input"],

Cell["\<\
Perfecto.
Make it look pretty:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ustretch", " ", "=", " ", 
    FractionBox[
     SqrtBox["r"], 
     SqrtBox["a"]]}], " ", ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vstretch", " ", "=", " ", 
    FractionBox[
     SqrtBox["r"], 
     SqrtBox["b"]]}], " ", ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tail", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xcritical", ",", "ycritical"}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"neweigenplot", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", " ", 
       RowBox[{
        RowBox[{"ustretch", " ", 
         RowBox[{"eigenvector", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "->", "tail"}], ",", 
        RowBox[{"VectorColor", "->", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", "ustretch"}], " ", 
         RowBox[{"eigenvector", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "->", "tail"}], ",", 
        RowBox[{"VectorColor", "->", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"Vector", "[", " ", 
       RowBox[{
        RowBox[{"vstretch", " ", 
         RowBox[{"eigenvector", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "->", "tail"}], ",", 
        RowBox[{"VectorColor", "->", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", "vstretch"}], " ", 
         RowBox[{"eigenvector", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "->", "tail"}], ",", 
        RowBox[{"VectorColor", "->", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
   "embellishedplot", " ", ",", "ellipseplot", ",", " ", "neweigenplot", ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}], 
  " "}]}], "Input"],

Cell["The lengths of the short and long axes are: ", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"2", " ", 
    FractionBox[
     SqrtBox["r"], 
     SqrtBox["a"]]}], "  ", ",", 
   RowBox[{"2", " ", 
    FractionBox[
     SqrtBox["r"], 
     SqrtBox["b"]]}]}], "  ", "}"}]], "Input"],

Cell["The ellipse is centered at:", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"xcritical", ",", "ycritical"}], "}"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.4.a.ii) A tilted off-set hyperbola defined by setting a quadratic form \
equal to a constant\
\>", "Subsubsection"],

Cell["\<\
Here's another example of something folks call a quadratic form:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"1.1", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"2.9", " ", "x", " ", "y"}], "+", 
   RowBox[{"1.4", " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"12.4", " ", "x"}], "+", 
   RowBox[{"10.8", " ", "y"}]}]}]}], "Input",
 AspectRatioFixed->True],

Cell["And look at this plot: ", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"constant", "=", "12"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "30"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", "constant", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}]}], "Input",\

 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
The border of the black region is a plot of the curve consisting of all the \
points {x,y} for which
             f[x,y] = constant = 12.
Parameterize and plot this hyperbola.
Give the perpendicular frame on which it is hung..\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Answer:", "Special1"],

Cell["\<\
Calculate the gradient of f[x,y] and find out where it is {0,0}:\
\>", "SmallText",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "gradf", ",", "H"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gradf", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "y"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"criticals", " ", "=", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"gradf", "[", 
       RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", "0"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xcritical", ",", "ycritical"}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"criticals", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]}], "Input"],

Cell["Throw a plot of {xcritical, ycritical} into the mix:", "SmallText"],

Cell[BoxData[
 RowBox[{"embellishedplot", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"curveplot", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"xcritical", ",", "ycritical"}], "}"}], "]"}]}], "}"}], 
     "]"}], ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}], 
  " "}]], "Input"],

Cell["\<\
Now calculate a perpendicular frame of eigenvectors of the Hessian of f[x,y] \
and throw them into the plot:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "H", "]"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", "  ", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]},
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"Eigenvectors", "[", 
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scalefactor", " ", "=", " ", "15"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"scalefactor", " ", 
         RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
        RowBox[{"HeadSize", "->", "3"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"setup", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"embellishedplot", " ", ",", "eigenplot", ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}], 
  " "}]}], "Input"],

Cell["Put the tails of the eigenvectors at {xcritical,ycritical}:", \
"SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"adjustedeigenplot", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"scalefactor", " ", 
         RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"xcritical", ",", "ycritical"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
        RowBox[{"HeadSize", "->", "3"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"goodsetup", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"embellishedplot", " ", ",", "adjustedeigenplot", ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}], 
  " "}]}], "Input"],

Cell["\<\
The natural coordinate system for this set up is the {u,v} coordinate system \
coming from the two plotted unit eigenvectors. This is the perpendicular \
frame on which the hyperbola is hung.

 To go from uv-coordinates to xy-coordinates, you just use:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"u", ",", "v"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xcritical", ",", "ycritical"}], "}"}], "+", 
   RowBox[{"u", " ", 
    RowBox[{"eigenvector", "[", "1", "]"}]}], "+", 
   RowBox[{"v", " ", 
    RowBox[{"eigenvector", "[", "2", "]"}]}]}]}]}], "Input"],

Cell["Look at this:", "SmallText"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "]"}], "==", "constant"}], 
  "]"}]], "Input"],

Cell["This is the same as:", "SmallText"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"y", "[", 
        RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "]"}], " ", "-", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"u", ",", "v"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "->", "0"}], ",", 
        RowBox[{"v", "->", "0"}]}], "}"}]}], ")"}]}], "==", " ", 
   RowBox[{"constant", " ", "-", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"u", ",", "v"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "->", "0"}], ",", 
        RowBox[{"v", "->", "0"}]}], "}"}]}], ")"}]}]}], "]"}]], "Input"],

Cell["Extract the numerical constants:", "SmallText"],

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "]"}], ",", 
    SuperscriptBox["u", "2"]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "]"}], ",", 
    SuperscriptBox["v", "2"]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{"constant", "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"y", "[", 
        RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "\[Rule]", "0"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "}"}]}], ")"}]}]}]], "Input"],

Cell["Now move in with the u-v parameterizations:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"u1", ",", "v1", ",", "u2", ",", "v2", ",", "t"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u1", "[", "t_", "]"}], ",", 
     RowBox[{"v1", "[", "t_", "]"}]}], "}"}], " ", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox["r"], " ", 
       RowBox[{
        StyleBox["Cosh",
         FontColor->RGBColor[1, 0, 0]], "[", "t", "]"}]}], 
      SqrtBox[
       RowBox[{"Abs", "[", "a", "]"}]]], ",", 
     FractionBox[
      RowBox[{
       SqrtBox["r"], " ", 
       RowBox[{
        StyleBox["Sinh",
         FontColor->RGBColor[1, 0, 0]], "[", "t", "]"}]}], 
      SqrtBox[
       RowBox[{"Abs", "[", "b", "]"}]]]}], "}"}]}]}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"u2", "[", "t_", "]"}], ",", 
     RowBox[{"v2", "[", "t_", "]"}]}], "}"}], " ", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"-", 
        SqrtBox["r"]}], " ", 
       RowBox[{
        StyleBox["Cosh",
         FontColor->RGBColor[1, 0, 0]], "[", "t", "]"}]}], 
      SqrtBox[
       RowBox[{"Abs", "[", "a", "]"}]]], ",", 
     FractionBox[
      RowBox[{
       SqrtBox["r"], " ", 
       RowBox[{
        StyleBox["Sinh",
         FontColor->RGBColor[1, 0, 0]], "[", "t", "]"}]}], 
      SqrtBox[
       RowBox[{"Abs", "[", "b", "]"}]]]}], "}"}]}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
If you want the formulas for Cosh[t] and Sinh[t] 
and a little more info about why Sinh[t] and Cosh[t] 
are used to parameterize hyperbolas, click on the right.\
\>", "Special5"],

Cell[TextData[{
 "                           ",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"Cosh", "[", "t", "]"}], "=", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["E", "t"], "+", 
      SuperscriptBox["E", 
       RowBox[{"-", "t"}]]}], ")"}]}]}], "\n", 
  RowBox[{
   RowBox[{"Sinh", "[", "t", "]"}], "=", 
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["E", "t"], "-", 
      SuperscriptBox["E", 
       RowBox[{"-", "t"}]]}], ")"}]}]}]}]],
 "\n\nThe reason Cos[t] and Sin[t] are used to parametrize ellipses boils \
down to:\n         ",
 Cell[BoxData[
  RowBox[{"x", "=", 
   RowBox[{"a", " ", 
    SqrtBox["r"], " ", 
    RowBox[{"Cos", "[", "t", "]"}]}]}]]],
 "  and  ",
 Cell[BoxData[
  RowBox[{"y", "=", 
   RowBox[{"b", " ", 
    SqrtBox["r"], " ", 
    RowBox[{"Sin", "[", "t", "]"}]}]}]]],
 " \n make \n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["x", "a"], ")"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["y", "b"], ")"}], "2"]}], "=", " ", "r"}]]]
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "r", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"a", " ", 
       SqrtBox["r"], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], "a"], ")"}], "2"], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"b", " ", 
       SqrtBox["r"], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], "b"], ")"}], "2"]}], " ", 
  "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", " ", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}], " "}]], "Input"],

Cell[TextData[{
 "\nThe reason Cosh[t] and Sinh[t] are used to parametrize hyperbolas boils \
down to:\n         ",
 Cell[BoxData[
  RowBox[{"x", "=", 
   RowBox[{"a", " ", 
    SqrtBox["r"], " ", 
    RowBox[{"Cosh", "[", "t", "]"}], "  "}]}]]],
 "and  ",
 Cell[BoxData[
  RowBox[{"y", "=", 
   RowBox[{"b", " ", 
    SqrtBox["r"], " ", 
    RowBox[{"Sinh", "[", "t", "]"}]}]}]]],
 " \n make \n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["x", "a"], ")"}], "2"], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["y", "b"], ")"}], "2"]}], "=", " ", "r"}]]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "r", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"a", " ", 
       SqrtBox["r"], " ", 
       RowBox[{
        StyleBox[
         RowBox[{"Cos", 
          StyleBox["h",
           FontColor->RGBColor[1, 0, 0]]}]], "[", "t", "]"}]}], "a"], ")"}], 
    "2"], "-", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{"b", " ", 
       SqrtBox["r"], " ", 
       RowBox[{
        StyleBox[
         RowBox[{"Sin", 
          StyleBox["h",
           FontColor->RGBColor[1, 0, 0]]}]], "[", "t", "]"}]}], "b"], ")"}], 
    "2"]}], " ", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"ParametricPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cosh", "[", "t", "]"}], ",", 
       RowBox[{"Sinh", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cosh", "[", "t", "]"}]}], ",", 
       RowBox[{"Sinh", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]], "Input"],

Cell["\<\
That's why 
\[Rule] Sinh[t] is called the hyperbolic Sine of t.
\[Rule] Cosh[t] is called the hyperbolic Cosine of t.\
\>", "Text"]
}, Closed]],

Cell["Now go to the x-y parameterizations:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x1", ",", "y1", ",", "y1", ",", "y2"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x1", "[", "t_", "]"}], ",", 
    RowBox[{"y1", "[", "t_", "]"}]}], "}"}], " ", "=", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{
      RowBox[{"u1", "[", "t", "]"}], ",", 
      RowBox[{"v1", "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{
      RowBox[{"u1", "[", "t", "]"}], ",", 
      RowBox[{"v1", "[", "t", "]"}]}], "]"}]}], "}"}]}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x2", "[", "t_", "]"}], ",", 
    RowBox[{"y2", "[", "t_", "]"}]}], "}"}], " ", "=", 
  RowBox[{"{", " ", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{
      RowBox[{"u2", "[", "t", "]"}], ",", 
      RowBox[{"v2", "[", "t", "]"}]}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{
      RowBox[{"u2", "[", "t", "]"}], ",", 
      RowBox[{"v2", "[", "t", "]"}]}], "]"}]}], "}"}]}]}], "Input"],

Cell["See it:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"branch1plot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1", "[", "t", "]"}], ",", 
        RowBox[{"y1", "[", "t", "]"}]}], "}"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Red"}], "}"}], 
        "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"branch2plot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x2", "[", "t", "]"}], ",", 
        RowBox[{"y2", "[", "t", "]"}]}], "}"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Red"}], "}"}], 
        "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
  "goodsetup", " ", ",", "branch1plot", " ", ",", "branch2plot", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", " ", 
   RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}], "Input"],

Cell["See more:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"branch1plot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x1", "[", "t", "]"}], ",", 
        RowBox[{"y1", "[", "t", "]"}]}], "}"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red"}], "}"}], 
        "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"branch2plot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x2", "[", "t", "]"}], ",", 
        RowBox[{"y2", "[", "t", "]"}]}], "}"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red"}], "}"}], 
        "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"niceplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"goodsetup", " ", ",", "branch1plot", " ", ",", "branch2plot", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}]}], "Input"],

Cell["\<\
Lookin' good and feelin' good.
Make it look pretty:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "]"}], ",", 
    SuperscriptBox["u", "2"]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"b", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"u", ",", "v"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"u", ",", "v"}], "]"}]}], "]"}], ",", 
    SuperscriptBox["v", "2"]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{"constant", "-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"y", "[", 
        RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "\[Rule]", "0"}], ",", 
       RowBox[{"v", "\[Rule]", "0"}]}], "}"}]}], ")"}]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ustretch", " ", "=", " ", 
    FractionBox[
     SqrtBox["r"], 
     SqrtBox[
      RowBox[{"Abs", "[", "a", "]"}]]]}], " ", ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vstretch", " ", "=", " ", 
    FractionBox[
     SqrtBox["r"], 
     SqrtBox[
      RowBox[{"Abs", "[", "b", "]"}]]]}], " ", ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tail", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"xcritical", ",", "ycritical"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"neweigenplot", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", " ", 
       RowBox[{
        RowBox[{"ustretch", " ", 
         RowBox[{"eigenvector", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "->", "tail"}], ",", 
        RowBox[{"VectorColor", "->", "Red"}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", "ustretch"}], " ", 
         RowBox[{"eigenvector", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "->", "tail"}], ",", 
        RowBox[{"VectorColor", "->", "Red"}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"Vector", "[", " ", 
       RowBox[{
        RowBox[{"vstretch", " ", 
         RowBox[{"eigenvector", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "->", "tail"}], ",", 
        RowBox[{"VectorColor", "->", "Red"}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", "vstretch"}], " ", 
         RowBox[{"eigenvector", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "->", "tail"}], ",", 
        RowBox[{"VectorColor", "->", "Red"}], ",", 
        RowBox[{"HeadSize", "->", "1"}]}], "]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
   "embellishedplot", ",", " ", "branch1plot", " ", ",", "branch2plot", ",", 
    " ", "neweigenplot", ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}], 
  " "}]}], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.4.a.iii) A tilted off-set parabola defined by setting a quadratic form \
equal to a constant\
\>", "Subsubsection"],

Cell["\<\
Here's yet another example of something folks call a quadratic form:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"2.0", " ", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"6.0", " ", "x", " ", "y"}], "+", 
   RowBox[{"4.5", " ", 
    SuperscriptBox["y", "2"]}], "-", 
   RowBox[{"2.0", " ", "x"}], "-", 
   RowBox[{"5.0", " ", "y"}]}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Look at this plot: ", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"constant", "=", "50"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "40"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", "constant", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}]}], "Input",\

 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
The border of the black region is a plot of the curve consisting of all the \
points {x,y} for which
             f[x,y] = constant = 50.
Parameterize, identify and plot this curve. 
Identify the point at the tip on the right.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["Answer:", "Special1"],

Cell["\<\
Copy, paste and edit:
Calculate the gradient of f[x,y] and find out where it is {0,0}:\
\>", "SmallText",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "gradf", ",", "H"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gradf", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "y"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"criticals", " ", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"gradf", "[", 
     RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", "0"}], "]"}]}]}], "Input"],

Cell["This time, there are no critical points.", "SmallText"],

Cell["\<\
In spite of this little set back, calculate a perpendicular frame of \
eigenvectors of the Hessian of f[x,y] and throw them into the plot:
\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "H", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"x", ",", "y"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"x", ",", "y"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], ",", 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"{", 
           RowBox[{"y", ",", "2"}], "}"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"Eigenvectors", "[", 
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{"x", ",", "y"}], "]"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scalefactor", " ", "=", " ", "20"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"scalefactor", " ", 
         RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Red"}], ",", 
        RowBox[{"HeadSize", "->", "3"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"setup", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"curveplot", " ", ",", "eigenplot", ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}], 
  " "}]}], "Input"],

Cell["\<\
This looks promising.
The natural coordinate system for this set up is the {u,v} coordinate system \
coming from the two plotted unit eigenvectors. This is the perpendicular \
frame on which the curve is hung.
 To go from uv-coordinates to xy-coordinates, you just use:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"u", ",", "v"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{"u_", ",", "v_"}], "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{"u", " ", 
    RowBox[{"eigenvector", "[", "1", "]"}]}], "+", 
   RowBox[{"v", " ", 
    RowBox[{"eigenvector", "[", "2", "]"}]}]}]}]}], "Input"],

Cell["Look at this:", "SmallText"],

Cell[BoxData[
 RowBox[{"uvequation", "=", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{"f", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"u", ",", "v"}], "]"}], ",", 
       RowBox[{"y", "[", 
        RowBox[{"u", ",", "v"}], "]"}]}], "]"}], "]"}], "==", "constant"}], 
   "]"}]}]], "Input"],

Cell["\<\
This exhibits v as a quadratic function of u and reveals that the curve is a \
parabola!
Solve for v in terms of u:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"soln", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"uvequation", ",", "v"}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"u", ",", "v"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v", "[", "u_", "]"}], " ", "=", 
  RowBox[{"v", "/.", 
   RowBox[{"soln", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]}], "Input"],

Cell["This is the u-v parametrization with parameter u.:", "SmallText"],

Cell["Now go to the x-y parameterization:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"xx", ",", "yy"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xx", "[", "u_", "]"}], ",", 
    RowBox[{"yy", "[", "u_", "]"}]}], "}"}], " ", "=", 
  RowBox[{"Expand", "[", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"x", "[", 
      RowBox[{"u", ",", 
       RowBox[{"v", "[", "u", "]"}]}], "]"}], ",", 
     RowBox[{"y", "[", 
      RowBox[{"u", ",", 
       RowBox[{"v", "[", "u", "]"}]}], "]"}]}], "}"}], "]"}]}]}], "Input"],

Cell["See it:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ulow", ",", "uhigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parabolaplot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xx", "[", "u", "]"}], ",", 
        RowBox[{"yy", "[", "u", "]"}]}], "}"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "ulow", ",", "uhigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Red"}], "}"}], 
        "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"curveplot", ",", "parabolaplot", ",", " ", 
   RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}], "Input"],

Cell["See more:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ulow", ",", "uhigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "4"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"parabolaplot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xx", "[", "u", "]"}], ",", 
        RowBox[{"yy", "[", "u", "]"}]}], "}"}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"u", ",", "ulow", ",", "uhigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Red"}], "}"}], 
        "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"niceplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"curveplot", ",", "parabolaplot", ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}]}], "Input"],

Cell["\<\
Okay.
To try to identify the point at the tip on the right, look at:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"v", "[", "u", "]"}]], "Input"],

Cell["Set v'[u] = 0 and solve for u:", "SmallText"],

Cell[BoxData[
 RowBox[{"usol", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"v", "'"}], "[", "u", "]"}], " ", "==", " ", "0"}], ",", "u"}], 
   "]"}]}]], "Input"],

Cell["In the u-v coordinate system, the tip is at", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"utip", ",", "vtip"}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"v", "[", "u", "]"}]}], "}"}], "/.", 
   RowBox[{"usol", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input"],

Cell["In the x-y coordinate system, the tip is at", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xtip", ",", "ytip"}], "}"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"utip", ",", "vtip"}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{"utip", ",", "vtip"}], "]"}]}], "}"}]}]], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"tipplot", " ", "=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"xtip", ",", "ytip"}], "}"}], "]"}]}], "}"}], "]"}]}], ";"}],
   " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"niceplot", ",", "tipplot", ",", " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}], 
  " "}]}], "Input"],

Cell["\<\
Nailed it.
And you're out of here.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.4.b) Eigenvalues and eigenvectors of the Hessian explain why the plots in \
part a) turned out the way they did\
\>", "Subsubsection"],

Cell[TextData[{
 "The facts behind the work above are:\nGo with the quadratic form\n         ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\t", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], " ", "=", 
     RowBox[{
      RowBox[{"a", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"b", " ", "x", " ", "y"}], "+", 
      RowBox[{"c", " ", 
       SuperscriptBox["y", "2"]}], "+", 
      RowBox[{"d", " ", "x"}], "+", 
      RowBox[{"e", " ", "y"}], "+", 
      RowBox[{"g", "."}]}]}]}], TextForm]]],
 "\n\nFind ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "0"], " ", ",", 
     SubscriptBox["y", "0"]}], "}"}], TextForm]]],
 " so that\n               ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"gradf", "[", 
    RowBox[{
     SubscriptBox["x", "0"], " ", ",", 
     SubscriptBox["y", "0"]}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}]]],
 ".\nCalculate two perpendicular unit eigenvectors, ",
 Cell[BoxData[
  RowBox[{"eigvec", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"eigvec", "[", "2", "]"}]]],
 ", and corresponding eigenvalues,",
 Cell[BoxData[
  RowBox[{"eigval", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"eigval", "[", "2", "]"}]]],
 " of the Hessian ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 "\nWhen you set \n         f[x,y] = constant\nand plot the resulting curve, \
here's what you can get:"
}], "Text"],

Cell["Ellipse:", "Subsubsection"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  RowBox[{"eigval", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"eigval", "[", "2", "]"}], " "}]]],
 "are both positive or are both negative, then you get an ellipse centered at \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "0"], " ", ",", 
     SubscriptBox["y", "0"]}], "}"}], TextForm]]],
 " framed by  ",
 Cell[BoxData[
  RowBox[{"eigvec", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"eigvec", "[", "2", "]"}]]],
 " ."
}], "Text"],

Cell["Hyperbola:", "Subsubsection"],

Cell[TextData[{
 "If  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"eigval", "[", "1", "]"}], ">", "0"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"eigval", "[", "2", " ", "]"}], "<", "0"}]]],
 " or ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"eigval", "[", "1", "]"}], "<", "0"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"eigval", "[", "2", " ", "]"}], ">", "0"}]]],
 ", then you get a hyperbola centered ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "0"], " ", ",", 
     SubscriptBox["y", "0"]}], "}"}], TextForm]]],
 " and framed by  ",
 Cell[BoxData[
  RowBox[{"eigvec", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"eigvec", "[", "2", "]"}]]],
 " ."
}], "Text"],

Cell["Line:", "Subsubsection"],

Cell[TextData[{
 "If  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"eigval", "[", "1", "]"}], "\[NotEqual]", " ", "0"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"eigval", "[", "2", " ", "]"}], " ", "=", "0"}]]],
 " , then you get a line running in the direction of ",
 Cell[BoxData[
  RowBox[{"eigvec", "[", "2", "]"}]]],
 "."
}], "Text"],

Cell["Parabola: ", "Subsubsection"],

Cell[TextData[{
 "If ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"gradf", "[", 
    RowBox[{"x", " ", ",", "y"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}]]],
 " has no solution  then you get a parabola framed by  ",
 Cell[BoxData[
  RowBox[{"eigvec", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"eigvec", "[", "2", "]"}]]],
 " ."
}], "Text"],

Cell[CellGroupData[{

Cell["Explain some of these good facts.", "Text"],

Cell["Answer:", "Special1"],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"Go", " ", "with"}], " "}], TextForm], "\n", 
 FormBox[
  RowBox[{"\t", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["=",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"a", " ", 
         SuperscriptBox["x", "2"]}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["+",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"b", " ", "x", " ", "y"}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["+",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"c", " ", 
         SuperscriptBox["y", "2"]}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["+",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"d", " ", "x"}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["+",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"e", " ", "y"}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["+",
        FontColor->RGBColor[0, 0, 1]], 
       RowBox[{
        RowBox[{
         StyleBox["g",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], "\n", "If"}], " ", 
        RowBox[{"gradf", "[", 
         RowBox[{"x", ",", "y"}], "]"}]}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "  ", "has", " ", "a", " ", 
       "solution", " ", 
       RowBox[{"{", 
        RowBox[{
         SubscriptBox["x", "0"], " ", ",", 
         SubscriptBox["y", "0"]}], "}"}]}]}]}], ",", " ", 
    RowBox[{"then", " ", "it", " ", "turns", " ", "out", " ", "that"}]}]}], 
  TextForm]}], "SmallText"],

Cell[BoxData[
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}],
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["=",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["  ",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]], 
   RowBox[{
    StyleBox[
     RowBox[{"f", "[", 
      RowBox[{
       SubscriptBox["x", "0"], " ", ",", 
       SubscriptBox["y", "0"]}], "]"}],
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["+",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{
      RowBox[{"\[Del]", 
       RowBox[{"f", "[", 
        RowBox[{
         SubscriptBox["x", "0"], " ", ",", 
         SubscriptBox["y", "0"]}], "]"}]}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "-", " ", 
         SubscriptBox["x", "0"]}], ",", 
        RowBox[{"y", " ", "-", " ", 
         SubscriptBox["y", "0"]}]}], "}"}]}],
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["+",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     StyleBox[
      RowBox[{
       StyleBox[
        "                                                                     \
                       ",
        FontSize->14], "  "}]],
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", " ", "-", " ", 
            SubscriptBox["x", "0"]}], ",", 
           RowBox[{"y", " ", "-", " ", 
            SubscriptBox["y", "0"]}]}], "}"}], " ", ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["H", "f"], "[", 
            RowBox[{
             SubscriptBox["x", "0"], " ", ",", 
             SubscriptBox["y", "0"]}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", " ", "-", " ", 
              SubscriptBox["x", "0"]}], ",", 
             RowBox[{"y", " ", "-", " ", 
              SubscriptBox["y", "0"]}]}], "}"}]}], ")"}]}]}], "2"],
      FontSize->14,
      FontColor->RGBColor[0, 0, 1]], "."}]}]}], TextForm]], "SmallText"],

Cell[BoxData[
 FormBox[
  RowBox[{"Check", " ", "this", " ", "with", " ", 
   RowBox[{"Mathematica", ".", "\n", "                             "}]}], 
  TextForm]], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "f", ",", "x", ",", "y", ",", "a", ",", "b", ",", "c", ",", "d", " ", ",",
      "e", ",", "g", ",", "gradf", ",", "H"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", 
    RowBox[{
     RowBox[{"a", " ", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"b", " ", "x", " ", "y"}], "+", 
     RowBox[{"c", " ", 
      SuperscriptBox["y", "2"]}], "+", 
     RowBox[{"d", " ", "x"}], "+", 
     RowBox[{"e", " ", "y"}], "+", "g"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gradf", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "x"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "y"], 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", "  ", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]},
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", " ", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     SubscriptBox["x", "0"], " ", ",", 
     SubscriptBox["y", "0"]}], "]"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"gradf", "[", 
     RowBox[{
      SubscriptBox["x", "0"], " ", ",", 
      SubscriptBox["y", "0"]}], "]"}], ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", " ", "-", " ", 
       SubscriptBox["x", "0"]}], ",", 
      RowBox[{"y", " ", "-", " ", 
       SubscriptBox["y", "0"]}]}], "}"}]}], " ", "+", "  ", 
   FractionBox[
    RowBox[{"  ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "-", " ", 
         SubscriptBox["x", "0"]}], ",", 
        RowBox[{"y", " ", "-", " ", 
         SubscriptBox["y", "0"]}]}], "}"}], " ", ".", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SubscriptBox["H", "f"], "[", 
         RowBox[{
          SubscriptBox["x", "0"], " ", ",", 
          SubscriptBox["y", "0"]}], "]"}], ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", " ", "-", " ", 
           SubscriptBox["x", "0"]}], ",", 
          RowBox[{"y", " ", "-", " ", 
           SubscriptBox["y", "0"]}]}], "}"}]}], ")"}]}]}], "2"]}], 
  "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input"],

Cell[BoxData[{
 FormBox[
  RowBox[{"So", " "}], TextForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{
   StyleBox[
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}],
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["=",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["  ",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]], 
   RowBox[{
    StyleBox[
     RowBox[{"f", "[", 
      RowBox[{
       SubscriptBox["x", "0"], " ", ",", 
       SubscriptBox["y", "0"]}], "]"}],
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["+",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{
      RowBox[{"\[Del]", 
       RowBox[{"f", "[", 
        RowBox[{
         SubscriptBox["x", "0"], " ", ",", 
         SubscriptBox["y", "0"]}], "]"}]}], ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", " ", "-", " ", 
         SubscriptBox["x", "0"]}], ",", 
        RowBox[{"y", " ", "-", " ", 
         SubscriptBox["y", "0"]}]}], "}"}]}],
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["+",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     StyleBox[
      RowBox[{
       StyleBox[
        "                                                                     \
                       ",
        FontSize->14], "  "}]],
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox[
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", " ", "-", " ", 
            SubscriptBox["x", "0"]}], ",", 
           RowBox[{"y", " ", "-", " ", 
            SubscriptBox["y", "0"]}]}], "}"}], " ", ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SubscriptBox["H", "f"], "[", 
            RowBox[{
             SubscriptBox["x", "0"], " ", ",", 
             SubscriptBox["y", "0"]}], "]"}], ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", " ", "-", " ", 
              SubscriptBox["x", "0"]}], ",", 
             RowBox[{"y", " ", "-", " ", 
              SubscriptBox["y", "0"]}]}], "}"}]}], ")"}]}]}], "2"],
      FontSize->14,
      FontColor->RGBColor[0, 0, 1]], "."}]}]}], TextForm]}], "SmallText"],

Cell[TextData[{
 "And because ",
 Cell[BoxData[
  RowBox[{"\[Del]", 
   RowBox[{"f", "[", 
    RowBox[{
     SubscriptBox["x", "0"], " ", ",", 
     SubscriptBox["y", "0"]}], "]"}]}]]],
 " = {0,0}, this simplifies to"
}], "SmallText"],

Cell[BoxData[{
 FormBox[
  RowBox[{"So", " "}], TextForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"   ", 
   RowBox[{
    StyleBox[
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}],
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["  ",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox[
      RowBox[{"f", "[", 
       RowBox[{
        SubscriptBox["x", "0"], " ", ",", 
        SubscriptBox["y", "0"]}], "]"}],
      FontSize->14,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontSize->14,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["+",
      FontSize->14,
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["  ",
      FontSize->14,
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       FractionBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", " ", "-", " ", 
             SubscriptBox["x", "0"]}], ",", 
            RowBox[{"y", " ", "-", " ", 
             SubscriptBox["y", "0"]}]}], "}"}], " ", ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             SubscriptBox["H", "f"], "[", 
             RowBox[{
              SubscriptBox["x", "0"], " ", ",", 
              SubscriptBox["y", "0"]}], "]"}], ".", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x", " ", "-", " ", 
               SubscriptBox["x", "0"]}], ",", 
              RowBox[{"y", " ", "-", " ", 
               SubscriptBox["y", "0"]}]}], "}"}]}], ")"}]}]}], "2"],
       FontSize->14,
       FontColor->RGBColor[0, 0, 1]], "."}]}]}]}], TextForm]}], "SmallText"],

Cell[BoxData[
 FormBox["", TextForm]], "SmallText"],

Cell[TextData[{
 "Go with {x,y} \[NotEqual] {",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "0"], " ", ",", 
    SubscriptBox["y", "0"]}], TextForm]]],
 "} and put\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], "=", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"eigvect", "[", "1", "]"}]}], "+", 
     RowBox[{"t", " ", 
      RowBox[{"eigvect", "[", "2", "]"}]}], "+", 
     RowBox[{"{", 
      FormBox[
       RowBox[{
        SubscriptBox["x", "0"], " ", ",", 
        SubscriptBox["y", "0"]}],
       TextForm], "}"}]}]}], ","}]]],
 "\nso that at least one of s and t is not 0."
}], "SmallText"],

Cell[TextData[{
 "Here eigvect[1] and eigvect[2] are mutually perpendicular unit eigenvectors \
of the symmetric matrix ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{
       SubscriptBox["x", "0"], " ", ",", 
       SubscriptBox["y", "0"]}], "]"}], "."}],
    FontColor->GrayLevel[0]], TextForm]]],
 "\nwith associated eigenvalues eigval[1] and eigval[2] so that\n",
 Cell[BoxData[{
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       SubscriptBox["H", "f"], "[", 
       RowBox[{
        SubscriptBox["x", "0"], " ", ",", 
        SubscriptBox["y", "0"]}], "]"}],
      FontColor->GrayLevel[0]], 
     StyleBox[".",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"eigvect", "[", "1", "]"}],
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{
     StyleBox[
      RowBox[{"eigval", "[", "1", "]"}],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"eigvect", "[", "1", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], TextForm], "\n", 
  FormBox[
   RowBox[{"\t", "and"}], TextForm], "\n", 
  FormBox[
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       SubscriptBox["H", "f"], "[", 
       RowBox[{
        SubscriptBox["x", "0"], " ", ",", 
        SubscriptBox["y", "0"]}], "]"}],
      FontColor->GrayLevel[0]], 
     StyleBox[".",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"eigvect", "[", "2", "]"}],
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{
     StyleBox[
      RowBox[{"eigval", "[", "2", "]"}],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"eigvect", "[", "2", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], TextForm]}],
  FontSize->14]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "This gives\n        ",
 Cell[BoxData[
  FormBox[
   RowBox[{"     ", 
    FormBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"x", ",", "y"}], "]"}], "=", " ", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{
         SubscriptBox["x", "0"], " ", ",", 
         SubscriptBox["y", "0"]}], "]"}], "  ", "+", 
       StyleBox[
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"s", " ", 
              RowBox[{"eigvect", "[", "1", "]"}]}], " ", "+", " ", 
             RowBox[{"t", " ", 
              RowBox[{"eigvect", "[", "2", "]"}]}]}], ","}], ")"}], ".", 
          StyleBox[
           RowBox[{
            SubscriptBox["H", "f"], "[", 
            RowBox[{
             SubscriptBox["x", "0"], " ", ",", 
             SubscriptBox["y", "0"]}], "]"}],
           FontColor->GrayLevel[0]], 
          StyleBox[".",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"s", " ", 
               RowBox[{"eigvect", "[", "1", "]"}]}], " ", "+", " ", 
              RowBox[{"t", " ", 
               RowBox[{"eigvect", "[", "2", "]"}]}]}], ","}], ")"}],
           FontColor->RGBColor[0, 0.392187, 0]], "."}], "2"],
        FontSize->18]}]}],
     TextForm]}], TextForm]]],
 "\n         "
}], "SmallText"],

Cell["Multiply out on the right to get", "SmallText"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TextForm]]],
 " =   ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{
     SubscriptBox["x", "0"], " ", ",", 
     SubscriptBox["y", "0"]}], "]"}], "  ", "+", 
   StyleBox[
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"s", " ", 
          RowBox[{"eigvect", "[", "1", "]"}]}], " ", "+", " ", 
         RowBox[{"t", " ", 
          RowBox[{"eigvect", "[", "2", "]"}]}]}], ","}], ")"}], ".", 
      RowBox[{
       StyleBox["(",
        FontColor->RGBColor[0, 0.392187, 0]], 
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["s",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{"eigval", "[", "1", "]"}],
           FontColor->RGBColor[1, 0, 0]], 
          StyleBox["  ",
           FontColor->RGBColor[1, 0, 0]], 
          StyleBox[
           RowBox[{"eigvect", "[", "1", "]"}],
           FontColor->RGBColor[0, 0.392187, 0]]}], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0.392187, 0]], 
         StyleBox["+",
          FontColor->RGBColor[0, 0.392187, 0]], 
         StyleBox[
          RowBox[{" ", 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]]}]], 
         RowBox[{
          StyleBox["t",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{"eigval", "[", "2", "]"}],
           FontColor->RGBColor[1, 0, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{"eigvect", "[", "2", "]"}],
           FontColor->RGBColor[0, 0.392187, 0]]}]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0.392187, 0]]}], 
       StyleBox[")",
        FontColor->RGBColor[0, 0.392187, 0]]}], "."}], "2"],
    FontSize->18]}]]]
}], "SmallText"],

Cell[TextData[{
 StyleBox["Reason",
  FontColor->GrayLevel[0]],
 ":\n ",
 StyleBox[" ",
  FontSize->14],
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{"f", "[", 
       RowBox[{
        SubscriptBox["x", "0"], " ", ",", 
        SubscriptBox["y", "0"]}], "]"}], " ", "]"}],
     FontColor->GrayLevel[0]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0.392187, 0]], 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"s", " ", 
       RowBox[{"eigvect", "[", "1", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0.392187, 0]]}], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox["=",
    FontColor->RGBColor[0, 0.392187, 0]], 
   RowBox[{
    StyleBox["s",
     FontColor->RGBColor[0.229999, 0.370001, 0.170001]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0.392187, 0]], 
    StyleBox[
     RowBox[{"eigval", "[", "1", "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["  ",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"eigvect", "[", "1", "]"}],
     FontColor->RGBColor[0, 0.392187, 0]]}]}]],
  FontSize->14],
 StyleBox["\n  ",
  FontSize->14],
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{"f", "[", 
       RowBox[{
        SubscriptBox["x", "0"], " ", ",", 
        SubscriptBox["y", "0"]}], "]"}], " ", "]"}],
     FontColor->GrayLevel[0]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0.392187, 0]], 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"t", " ", 
       RowBox[{"eigvect", "[", "2", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0.392187, 0]]}], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox["=",
    FontColor->RGBColor[0, 0.392187, 0]], 
   RowBox[{
    StyleBox["t",
     FontColor->RGBColor[0.229999, 0.370001, 0.170001]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0.392187, 0]], 
    StyleBox[
     RowBox[{"eigval", "[", "2", "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["  ",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{"eigvect", "[", "2", "]"}],
     FontColor->RGBColor[0, 0.392187, 0]]}]}]],
  FontSize->14]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["This is the same as", "SmallText"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TextForm]]],
 " =   ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      SubscriptBox["x", "0"], " ", ",", 
      SubscriptBox["y", "0"]}], "]"}], "  ", "+", 
    StyleBox[
     FractionBox[
      RowBox[{"s", " ", 
       RowBox[{
        RowBox[{"eigvect", "[", "1", "]"}], " ", ".", 
        RowBox[{
         StyleBox["(",
          FontColor->RGBColor[0, 0.392187, 0]], 
         RowBox[{
          RowBox[{
           RowBox[{
            StyleBox["s",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[" ",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[
             RowBox[{"eigval", "[", "1", "]"}],
             FontColor->RGBColor[1, 0, 0]], 
            StyleBox["  ",
             FontColor->RGBColor[1, 0, 0]], 
            StyleBox[
             RowBox[{"eigvect", "[", "1", "]"}],
             FontColor->RGBColor[0, 0.392187, 0]]}], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox["+",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{" ", 
             StyleBox[" ",
              FontColor->RGBColor[0, 0.392187, 0]]}]], 
           RowBox[{
            StyleBox["t",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[" ",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[
             RowBox[{"eigval", "[", "2", "]"}],
             FontColor->RGBColor[1, 0, 0]], 
            StyleBox[" ",
             FontColor->RGBColor[0, 0.392187, 0]], 
            StyleBox[
             RowBox[{"eigvect", "[", "2", "]"}],
             FontColor->RGBColor[0, 0.392187, 0]]}]}], 
          StyleBox[",",
           FontColor->RGBColor[0, 0.392187, 0]]}], 
         StyleBox[")",
          FontColor->RGBColor[0, 0.392187, 0]]}], "."}]}], "2"],
     FontSize->18]}]}]]],
 "\n                           + ",
 Cell[BoxData[
  StyleBox[
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{"t", " ", 
       RowBox[{"eigvect", "[", "2", "]"}]}], ",", 
      RowBox[{".", 
       RowBox[{
        StyleBox["(",
         FontColor->RGBColor[0, 0.392187, 0]], 
        RowBox[{
         RowBox[{
          RowBox[{
           StyleBox["s",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{"eigval", "[", "1", "]"}],
            FontColor->RGBColor[1, 0, 0]], 
           StyleBox["  ",
            FontColor->RGBColor[1, 0, 0]], 
           StyleBox[
            RowBox[{"eigvect", "[", "1", "]"}],
            FontColor->RGBColor[0, 0.392187, 0]]}], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox["+",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{" ", 
            StyleBox[" ",
             FontColor->RGBColor[0, 0.392187, 0]]}]], 
          RowBox[{
           StyleBox["t",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{"eigval", "[", "2", "]"}],
            FontColor->RGBColor[1, 0, 0]], 
           StyleBox[" ",
            FontColor->RGBColor[0, 0.392187, 0]], 
           StyleBox[
            RowBox[{"eigvect", "[", "2", "]"}],
            FontColor->RGBColor[0, 0.392187, 0]]}]}], 
         StyleBox[",",
          FontColor->RGBColor[0, 0.392187, 0]]}], 
        StyleBox[")",
         FontColor->RGBColor[0, 0.392187, 0]]}], "."}]}]}], "2"],
   FontSize->18]]]
}], "SmallText"],

Cell["This is the same as", "SmallText"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TextForm]]],
 " =   ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      SubscriptBox["x", "0"], " ", ",", 
      SubscriptBox["y", "0"]}], "]"}], "  ", "+", 
    StyleBox[
     FractionBox[
      RowBox[{"s", " ", 
       RowBox[{
        RowBox[{"eigvect", "[", "1", "]"}], " ", ".", 
        RowBox[{
         StyleBox["(",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{
          StyleBox["s",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{"eigval", "[", "1", "]"}],
           FontColor->RGBColor[1, 0, 0]], 
          StyleBox["  ",
           FontColor->RGBColor[1, 0, 0]], 
          StyleBox[
           RowBox[{"eigvect", "[", "1", "]"}],
           FontColor->RGBColor[0, 0.392187, 0]]}], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0.392187, 0]], ")"}], "."}]}], "2"],
     FontSize->18]}]}]]],
 "\n                                          + ",
 Cell[BoxData[
  StyleBox[
   FractionBox[
    RowBox[{" ", 
     RowBox[{
      RowBox[{"t", " ", 
       RowBox[{"eigvect", "[", "2", "]"}]}], ",", 
      RowBox[{".", 
       RowBox[{"(", 
        StyleBox[
         RowBox[{" ", 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]]}]], 
        RowBox[{
         StyleBox["t",
          FontColor->RGBColor[0, 0.392187, 0]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0.392187, 0]], 
         StyleBox[
          RowBox[{"eigval", "[", "2", "]"}],
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0.392187, 0]], 
         StyleBox[
          RowBox[{"eigvect", "[", "2", "]"}],
          FontColor->RGBColor[0, 0.392187, 0]]}], ")"}]}], 
      StyleBox[",",
       FontColor->RGBColor[0, 0.392187, 0]]}]}], "2"],
   FontSize->18]]],
 "."
}], "SmallText"],

Cell[TextData[{
 StyleBox["Reason",
  FontColor->GrayLevel[0]],
 ":\neigvect[1].eigvect[2] = 0"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 " And\n      ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], TextForm]]],
 " =   ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{
      SubscriptBox["x", "0"], " ", ",", 
      SubscriptBox["y", "0"]}], "]"}], "  ", "+", 
    StyleBox[
     FractionBox[
      RowBox[{"s", "  ", 
       RowBox[{
        RowBox[{
         StyleBox["(",
          FontColor->RGBColor[0, 0.392187, 0]], 
         RowBox[{
          StyleBox["s",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0.392187, 0]], 
          StyleBox[
           RowBox[{"eigval", "[", "1", "]"}],
           FontColor->RGBColor[1, 0, 0]]}], 
         StyleBox["  ",
          FontColor->RGBColor[1, 0, 0]], ")"}], "."}]}], "2"],
     FontSize->18]}]}]]],
 "\n                                          + ",
 Cell[BoxData[
  StyleBox[
   FractionBox[
    RowBox[{" ", 
     RowBox[{"t", " ", 
      RowBox[{"(", 
       StyleBox[" ",
        FontColor->RGBColor[0, 0.392187, 0]], 
       RowBox[{
        StyleBox["t",
         FontColor->RGBColor[0, 0.392187, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[0, 0.392187, 0]], 
        StyleBox[
         RowBox[{"eigval", "[", "2", "]"}],
         FontColor->RGBColor[1, 0, 0]]}], 
       StyleBox[" ",
        FontColor->RGBColor[0, 0.392187, 0]], 
       StyleBox[")",
        FontColor->RGBColor[0, 0.392187, 0]]}]}]}], "2"],
   FontSize->18]]],
 "."
}], "SmallText"],

Cell[TextData[{
 StyleBox["Reason",
  FontColor->GrayLevel[0]],
 ":\neigvect[1] and eigvect[2] are unit vectors."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "This is the same as\n          ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], "=", "  ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{
       SubscriptBox["x", "0"], " ", ",", 
       SubscriptBox["y", "0"]}], "]"}], " ", "+", "  ", 
     RowBox[{
      SuperscriptBox["s", "2"], "  ", 
      RowBox[{"eigval", "[", "1", "]"}]}], " ", "+", " ", 
     RowBox[{
      SuperscriptBox["t", "2"], " ", 
      RowBox[{"eigval", "[", "2", "]"}]}]}]}], TextForm]]],
 ".\nNow milk this."
}], "SmallText"],

Cell[TextData[{
 "\nWhen you set f[x,y] = constant, you get:\n       ",
 Cell[BoxData[
  FormBox[
   RowBox[{"     ", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{
        SubscriptBox["x", "0"], " ", ",", 
        SubscriptBox["y", "0"]}], "]"}], " ", "+", "  ", 
      RowBox[{
       SuperscriptBox["s", "2"], "  ", 
       RowBox[{"eigval", "[", "1", "]"}]}], " ", "+", " ", 
      RowBox[{
       SuperscriptBox["t", "2"], " ", 
       RowBox[{"eigval", "[", "2", "]"}]}]}], " ", "=", " ", "constant"}]}], 
   TextForm]]],
 " \nThis is the same as:\n         ",
 Cell[BoxData[
  FormBox[
   RowBox[{"  ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["s", "2"], "  ", 
       RowBox[{"eigval", "[", "1", "]"}]}], " ", "+", " ", 
      RowBox[{
       SuperscriptBox["t", "2"], " ", 
       RowBox[{"eigval", "[", "2", "]"}]}]}], " ", "=", " ", 
     RowBox[{"constant", "  ", "-", "    ", 
      RowBox[{"f", "[", 
       RowBox[{
        SubscriptBox["x", "0"], " ", ",", 
        SubscriptBox["y", "0"]}], "]"}], " "}]}]}], TextForm]]],
 "  \nIn the coordinate system coming from eigvec[1] and eigvect[2] with \
tails at {",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["x", "0"], " ", ",", 
   SubscriptBox["y", "0"]}]]],
 "}, this gives:\n\[FilledVerySmallSquare]Ellipses centered at {s,t} = {0,0}  \
if eigval[1] and eigval[2] are both positive or both negative.\n       When \
you go back to x-y coordinates, these ellipse are centered at the critical \
point ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["x", "0"], " ", ",", 
      SubscriptBox["y", "0"]}], "}"}], " "}], TextForm]]],
 "and framed by\n       eigvec[1] and eigvec[2].\n       \n\
\[FilledVerySmallSquare] Hyperbolas  centered at {s,t} = {0,0}  if eigval[1] \
> 0 and eigval[2] < 0 or if eigval[1] < 0 and eigval[2] > 0 \n   When you go \
back to x-y coordinates, these hyperbolas are centered at the critical point ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["x", "0"], " ", ",", 
     SubscriptBox["y", "0"]}], "}"}], TextForm]]],
 "and framed by\n    eigvec[1] and eigvec[2].\n    \n\[FilledVerySmallSquare] \
Lines defined by \n           ",
 Cell[BoxData[
  RowBox[{"s", "=", 
   RowBox[{"+", 
    SqrtBox[
     FractionBox[
      RowBox[{"constant", "-", 
       RowBox[{"f", "[", 
        RowBox[{
         SubscriptBox["x", "0"], ",", 
         SubscriptBox["x", "0"]}], "]"}]}], 
      RowBox[{"eigval", "[", "1", "]"}]]]}]}]]],
 "   and ",
 Cell[BoxData[
  RowBox[{"s", "=", 
   RowBox[{"-", 
    SqrtBox[
     FractionBox[
      RowBox[{"constant", "-", 
       RowBox[{"f", "[", 
        RowBox[{
         SubscriptBox["x", "0"], ",", 
         SubscriptBox["x", "0"]}], "]"}]}], 
      RowBox[{"eigval", "[", "1", "]"}]]]}]}]]],
 "\n if eigval[1] \[NotEqual] 0 and eigval[2] = 0.When you go back to x-y \
coordinates, these lines run parallel to eigvec[2].\n\nIf there is no \
solution of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"\[Del]", 
      RowBox[{"f", "[", 
       RowBox[{
        SubscriptBox["x", "0"], " ", ",", 
        SubscriptBox["y", "0"]}], "]"}]}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}], ","}], TextForm]]],
 " then f[x,y] has no maximum, no minimum and no saddle point.\nThe result: \
The plot of f[x,y] is an infinite mountain (or valley) whose cross sections \
are parabolas. (A more detailed explanation of the parabola case is possible \
but requires lots of algebra.)"
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.10.T1"->{
  Cell[29523, 803, 516, 22, 71, "Subsection",
   CellTags->"MGM.10.T1"]},
 "MGM.10.T2"->{
  Cell[40425, 1244, 240, 5, 86, "Subsection",
   CellTags->"MGM.10.T2"]},
 "MGM.10.T3"->{
  Cell[55480, 1744, 1589, 56, 120, "Subsection",
   CellTags->"MGM.10.T3"]},
 "MGM.10.T4"->{
  Cell[128379, 4339, 548, 17, 114, "Subsection",
   CellTags->"MGM.10.T4"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.10.T1", 270626, 8572},
 {"MGM.10.T2", 270716, 8575},
 {"MGM.10.T3", 270806, 8578},
 {"MGM.10.T4", 270899, 8581}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 185, 6, 108, "Title"],
Cell[CellGroupData[{
Cell[6422, 138, 193, 7, 28, "Special2"],
Cell[6618, 147, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7935, 189, 38, 0, 31, "Subsubsection"],
Cell[7976, 191, 1344, 31, 156, "Input"],
Cell[9323, 224, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9496, 230, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26867, 713, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27114, 724, 39, 0, 35, "Subsubsection"],
Cell[27156, 726, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29523, 803, 516, 22, 71, "Subsection",
 CellTags->"MGM.10.T1"],
Cell[CellGroupData[{
Cell[30064, 829, 340, 14, 42, "Subsubsection"],
Cell[30407, 845, 52, 0, 24, "Text"],
Cell[30462, 847, 1023, 33, 66, "Input"],
Cell[31488, 882, 22, 0, 24, "Text"],
Cell[31513, 884, 367, 11, 36, "Input"],
Cell[31883, 897, 116, 2, 12, "Special2"],
Cell[32002, 901, 74, 0, 24, "Text"],
Cell[32079, 903, 103, 2, 20, "Input"],
Cell[32185, 907, 262, 12, 28, "Text"],
Cell[32450, 921, 222, 6, 20, "Input"],
Cell[CellGroupData[{
Cell[32697, 931, 388, 13, 78, "Text"],
Cell[33088, 946, 27, 0, 23, "Special1"],
Cell[33118, 948, 4216, 170, 798, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[37383, 1124, 95, 2, 31, "Subsubsection"],
Cell[37481, 1128, 45, 0, 24, "Text"],
Cell[37529, 1130, 1023, 33, 66, "Input"],
Cell[38555, 1165, 73, 0, 24, "Text"],
Cell[38631, 1167, 103, 2, 20, "Input"],
Cell[38737, 1171, 275, 12, 28, "Text"],
Cell[39015, 1185, 222, 6, 20, "Input"],
Cell[CellGroupData[{
Cell[39262, 1195, 353, 13, 128, "Text"],
Cell[39618, 1210, 27, 0, 23, "Special1"],
Cell[39648, 1212, 346, 12, 78, "SmallText"],
Cell[39997, 1226, 367, 11, 36, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[40425, 1244, 240, 5, 86, "Subsection",
 CellTags->"MGM.10.T2"],
Cell[CellGroupData[{
Cell[40690, 1253, 156, 4, 52, "Subsubsection",
 Evaluatable->False],
Cell[40849, 1259, 304, 8, 124, "Text",
 Evaluatable->False],
Cell[41156, 1269, 3212, 112, 295, "Input"],
Cell[44371, 1383, 86, 2, 20, "Input"],
Cell[CellGroupData[{
Cell[44482, 1389, 101, 4, 49, "Text",
 Evaluatable->False],
Cell[44586, 1395, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[44637, 1398, 955, 31, 357, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[45619, 1433, 124, 3, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[45768, 1440, 114, 3, 49, "Text"],
Cell[45885, 1445, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[45936, 1448, 4266, 125, 491, "SmallText"]
}, Closed]],
Cell[CellGroupData[{
Cell[50239, 1578, 125, 3, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[50389, 1585, 112, 3, 49, "Text"],
Cell[50504, 1590, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[50555, 1593, 4864, 144, 648, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[55480, 1744, 1589, 56, 120, "Subsection",
 CellTags->"MGM.10.T3"],
Cell[CellGroupData[{
Cell[57094, 1804, 124, 3, 52, "Subsubsection"],
Cell[57221, 1809, 839, 32, 81, "Text"],
Cell[58063, 1843, 513, 18, 40, "Input"],
Cell[58579, 1863, 210, 6, 35, "Special2"],
Cell[58792, 1871, 352, 15, 52, "Text"],
Cell[59147, 1888, 307, 10, 55, "Input"],
Cell[59457, 1900, 377, 16, 52, "Text"],
Cell[59837, 1918, 413, 14, 70, "Input"],
Cell[60253, 1934, 220, 7, 99, "Text"],
Cell[60476, 1943, 943, 35, 51, "Text"],
Cell[61422, 1980, 1230, 41, 76, "Input"],
Cell[62655, 2023, 591, 17, 81, "Special2"],
Cell[63249, 2042, 65, 0, 24, "Text"],
Cell[63317, 2044, 249, 8, 20, "Input"],
Cell[63569, 2054, 498, 19, 77, "Text"],
Cell[64070, 2075, 564, 18, 85, "Input"],
Cell[64637, 2095, 438, 18, 52, "Text"],
Cell[65078, 2115, 454, 15, 85, "Input"],
Cell[65535, 2132, 463, 19, 52, "Text"],
Cell[66001, 2153, 555, 19, 100, "Input"],
Cell[66559, 2174, 24, 0, 24, "Text"],
Cell[66586, 2176, 1427, 50, 274, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[68050, 2231, 48, 0, 31, "Subsubsection"],
Cell[68101, 2233, 34, 0, 24, "Text"],
Cell[68138, 2235, 436, 15, 41, "Input"],
Cell[CellGroupData[{
Cell[68599, 2254, 177, 4, 49, "Text"],
Cell[68779, 2260, 27, 0, 23, "Special1"],
Cell[68809, 2262, 65, 0, 24, "SmallText"],
Cell[68877, 2264, 2030, 70, 161, "Input"],
Cell[70910, 2336, 59, 0, 24, "SmallText"],
Cell[70972, 2338, 277, 9, 20, "Input"],
Cell[71252, 2349, 1994, 68, 147, "SmallText"],
Cell[73249, 2419, 476, 17, 36, "Input"],
Cell[73728, 2438, 526, 19, 65, "Input"],
Cell[74257, 2459, 551, 20, 65, "Input"],
Cell[74811, 2481, 727, 29, 99, "SmallText"],
Cell[75541, 2512, 2365, 73, 171, "Input"],
Cell[77909, 2587, 95, 2, 24, "SmallText"],
Cell[78007, 2591, 118, 4, 20, "Input"],
Cell[78128, 2597, 55, 0, 24, "SmallText"],
Cell[78186, 2599, 118, 4, 20, "Input"],
Cell[78307, 2605, 33, 0, 24, "SmallText"],
Cell[78343, 2607, 2468, 76, 171, "Input"],
Cell[80814, 2685, 107, 2, 24, "SmallText"],
Cell[80924, 2689, 118, 4, 20, "Input"],
Cell[81045, 2695, 56, 0, 24, "SmallText"],
Cell[81104, 2697, 118, 4, 20, "Input"],
Cell[81225, 2703, 33, 0, 24, "SmallText"],
Cell[81261, 2705, 2316, 71, 186, "Input"],
Cell[83580, 2778, 220, 8, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[83849, 2792, 61, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[83935, 2796, 47, 0, 24, "Text"],
Cell[83985, 2798, 27, 0, 23, "Special1"],
Cell[84015, 2800, 1281, 44, 86, "SmallText"],
Cell[85299, 2846, 137, 4, 12, "Special2"],
Cell[85439, 2852, 1439, 44, 161, "SmallText"],
Cell[86881, 2898, 2068, 74, 85, "Special2"],
Cell[88952, 2974, 1297, 41, 86, "SmallText"],
Cell[90252, 3017, 53, 0, 24, "SmallText"],
Cell[90308, 3019, 2106, 66, 52, "SmallText"],
Cell[92417, 3087, 2065, 76, 41, "Special2"],
Cell[94485, 3165, 40, 0, 24, "SmallText"],
Cell[94528, 3167, 3718, 114, 73, "SmallText"],
Cell[98249, 3283, 40, 0, 24, "SmallText"],
Cell[98292, 3285, 1983, 67, 73, "SmallText"],
Cell[100278, 3354, 158, 6, 23, "Special2"],
Cell[100439, 3362, 1477, 53, 73, "SmallText"],
Cell[101919, 3417, 176, 6, 23, "Special2"],
Cell[102098, 3425, 521, 17, 77, "SmallText"],
Cell[102622, 3444, 1266, 48, 32, "Subsubsection"],
Cell[103891, 3494, 2056, 62, 198, "SmallText"],
Cell[105950, 3558, 1267, 48, 32, "Subsubsection"],
Cell[107220, 3608, 2016, 63, 182, "SmallText"],
Cell[109239, 3673, 1809, 68, 53, "Subsubsection"],
Cell[111051, 3743, 3889, 112, 487, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[114989, 3861, 1209, 46, 88, "Subsubsection"],
Cell[CellGroupData[{
Cell[116223, 3911, 1117, 39, 110, "Text"],
Cell[117343, 3952, 27, 0, 23, "Special1"],
Cell[117373, 3954, 1505, 47, 129, "SmallText"],
Cell[118881, 4003, 3216, 101, 222, "Input"],
Cell[122100, 4106, 509, 15, 75, "SmallText"],
Cell[122612, 4123, 586, 20, 36, "Input"],
Cell[123201, 4145, 694, 24, 46, "Input"],
Cell[123898, 4171, 185, 4, 49, "SmallText"],
Cell[124086, 4177, 55, 1, 24, "SmallText"],
Cell[124144, 4180, 167, 3, 24, "SmallText"],
Cell[124314, 4185, 864, 30, 46, "Input"],
Cell[125181, 4217, 866, 30, 46, "Input"],
Cell[126050, 4249, 806, 28, 46, "Input"],
Cell[126859, 4279, 1459, 53, 156, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[128379, 4339, 548, 17, 114, "Subsection",
 CellTags->"MGM.10.T4"],
Cell[CellGroupData[{
Cell[128952, 4360, 124, 3, 31, "Subsubsection"],
Cell[129079, 4365, 75, 0, 24, "Text"],
Cell[129157, 4367, 491, 16, 39, "Input"],
Cell[129651, 4385, 85, 2, 24, "Text",
 Evaluatable->False],
Cell[129739, 4389, 834, 24, 66, "Input"],
Cell[CellGroupData[{
Cell[130598, 4417, 353, 9, 149, "Text",
 Evaluatable->False],
Cell[130954, 4428, 27, 0, 23, "Special1"],
Cell[130984, 4430, 139, 4, 24, "SmallText",
 Evaluatable->False],
Cell[131126, 4436, 1042, 36, 86, "Input"],
Cell[132171, 4474, 68, 0, 24, "Text"],
Cell[132242, 4476, 400, 11, 36, "Input"],
Cell[132645, 4489, 133, 4, 74, "Text"],
Cell[132781, 4495, 2457, 77, 196, "Input"],
Cell[135241, 4574, 75, 0, 24, "Text"],
Cell[135319, 4576, 867, 23, 96, "Input"],
Cell[136189, 4601, 279, 6, 124, "SmallText"],
Cell[136471, 4609, 544, 18, 51, "Input"],
Cell[137018, 4629, 34, 0, 24, "SmallText"],
Cell[137055, 4631, 263, 9, 20, "Input"],
Cell[137321, 4642, 41, 0, 24, "SmallText"],
Cell[137365, 4644, 1029, 34, 36, "Input"],
Cell[138397, 4680, 53, 0, 24, "SmallText"],
Cell[138453, 4682, 313, 10, 26, "Input"],
Cell[138769, 4694, 313, 10, 26, "Input"],
Cell[139085, 4706, 432, 14, 20, "Input"],
Cell[139520, 4722, 62, 0, 24, "SmallText"],
Cell[139585, 4724, 554, 21, 66, "Input"],
Cell[140142, 4747, 56, 0, 24, "SmallText"],
Cell[140201, 4749, 565, 19, 36, "Input"],
Cell[140769, 4770, 28, 0, 24, "SmallText"],
Cell[140800, 4772, 759, 21, 66, "Input"],
Cell[141562, 4795, 59, 3, 49, "SmallText"],
Cell[141624, 4800, 2270, 65, 296, "Input"],
Cell[143897, 4867, 65, 0, 24, "SmallText"],
Cell[143965, 4869, 238, 10, 49, "Input"],
Cell[144206, 4881, 48, 0, 24, "SmallText"],
Cell[144257, 4883, 88, 2, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[144394, 4891, 127, 3, 31, "Subsubsection"],
Cell[144524, 4896, 88, 2, 24, "Text"],
Cell[144615, 4900, 491, 16, 39, "Input"],
Cell[145109, 4918, 85, 2, 24, "Text",
 Evaluatable->False],
Cell[145197, 4922, 936, 27, 96, "Input"],
Cell[CellGroupData[{
Cell[146158, 4953, 296, 8, 124, "Text",
 Evaluatable->False],
Cell[146457, 4963, 27, 0, 23, "Special1"],
Cell[146487, 4965, 139, 4, 24, "SmallText",
 Evaluatable->False],
Cell[146629, 4971, 1048, 36, 86, "Input"],
Cell[147680, 5009, 73, 0, 24, "SmallText"],
Cell[147756, 5011, 472, 13, 51, "Input"],
Cell[148231, 5026, 137, 3, 49, "SmallText"],
Cell[148371, 5031, 2458, 77, 196, "Input"],
Cell[150832, 5110, 82, 1, 24, "SmallText"],
Cell[150917, 5113, 867, 23, 96, "Input"],
Cell[151787, 5138, 281, 6, 124, "SmallText"],
Cell[152071, 5146, 544, 18, 51, "Input"],
Cell[152618, 5166, 34, 0, 24, "SmallText"],
Cell[152655, 5168, 301, 10, 20, "Input"],
Cell[152959, 5180, 41, 0, 24, "SmallText"],
Cell[153003, 5182, 1088, 35, 36, "Input"],
Cell[154094, 5219, 53, 0, 24, "SmallText"],
Cell[154150, 5221, 313, 10, 26, "Input"],
Cell[154466, 5233, 313, 10, 26, "Input"],
Cell[154782, 5245, 432, 14, 20, "Input"],
Cell[155217, 5261, 64, 0, 24, "SmallText"],
Cell[155284, 5263, 1477, 54, 116, "Input"],
Cell[CellGroupData[{
Cell[156786, 5321, 188, 4, 43, "Special5"],
Cell[156977, 5327, 1166, 44, 202, "Text"],
Cell[158146, 5373, 544, 19, 66, "Input"],
Cell[158693, 5394, 322, 10, 20, "Input"],
Cell[159018, 5406, 650, 25, 140, "Text"],
Cell[159671, 5433, 763, 28, 66, "Input"],
Cell[160437, 5463, 493, 16, 20, "Input"],
Cell[160933, 5481, 141, 4, 74, "Text"]
}, Closed]],
Cell[161089, 5488, 57, 0, 24, "SmallText"],
Cell[161149, 5490, 1039, 35, 51, "Input"],
Cell[162191, 5527, 28, 0, 24, "SmallText"],
Cell[162222, 5529, 1575, 47, 141, "Input"],
Cell[163800, 5578, 30, 0, 24, "SmallText"],
Cell[163833, 5580, 1613, 47, 141, "Input"],
Cell[165449, 5629, 80, 3, 49, "SmallText"],
Cell[165532, 5634, 313, 10, 26, "Input"],
Cell[165848, 5646, 313, 10, 26, "Input"],
Cell[166164, 5658, 432, 14, 20, "Input"],
Cell[166599, 5674, 2194, 62, 312, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[168842, 5742, 127, 3, 31, "Subsubsection"],
Cell[168972, 5747, 92, 2, 24, "Text"],
Cell[169067, 5751, 489, 16, 39, "Input"],
Cell[169559, 5769, 81, 2, 24, "Text",
 Evaluatable->False],
Cell[169643, 5773, 936, 27, 96, "Input"],
Cell[CellGroupData[{
Cell[170604, 5804, 296, 8, 124, "Text",
 Evaluatable->False],
Cell[170903, 5814, 27, 0, 23, "Special1"],
Cell[170933, 5816, 161, 5, 49, "SmallText",
 Evaluatable->False],
Cell[171097, 5823, 747, 25, 56, "Input"],
Cell[171847, 5850, 61, 0, 24, "SmallText"],
Cell[171911, 5852, 168, 4, 74, "SmallText"],
Cell[172082, 5858, 2419, 77, 176, "Input"],
Cell[174504, 5937, 298, 6, 124, "SmallText"],
Cell[174805, 5945, 469, 16, 36, "Input"],
Cell[175277, 5963, 34, 0, 24, "SmallText"],
Cell[175314, 5965, 342, 11, 20, "Input"],
Cell[175659, 5978, 144, 4, 49, "SmallText"],
Cell[175806, 5984, 117, 3, 20, "Input"],
Cell[175926, 5989, 308, 10, 51, "Input"],
Cell[176237, 6001, 71, 0, 24, "SmallText"],
Cell[176311, 6003, 56, 0, 24, "SmallText"],
Cell[176370, 6005, 542, 18, 36, "Input"],
Cell[176915, 6025, 28, 0, 24, "SmallText"],
Cell[176946, 6027, 940, 28, 81, "Input"],
Cell[177889, 6057, 30, 0, 24, "SmallText"],
Cell[177922, 6059, 982, 29, 81, "Input"],
Cell[178907, 6090, 97, 3, 49, "SmallText"],
Cell[179007, 6095, 54, 1, 20, "Input"],
Cell[179064, 6098, 51, 0, 24, "SmallText"],
Cell[179118, 6100, 211, 7, 20, "Input"],
Cell[179332, 6109, 64, 0, 24, "SmallText"],
Cell[179399, 6111, 273, 9, 20, "Input"],
Cell[179675, 6122, 64, 0, 24, "SmallText"],
Cell[179742, 6124, 283, 9, 20, "Input"],
Cell[180028, 6135, 27, 0, 24, "SmallText"],
Cell[180058, 6137, 524, 16, 36, "Input"],
Cell[180585, 6155, 63, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[180697, 6164, 146, 3, 52, "Subsubsection"],
Cell[180846, 6169, 1496, 52, 277, "Text"],
Cell[182345, 6223, 33, 0, 31, "Subsubsection"],
Cell[182381, 6225, 543, 23, 49, "Text"],
Cell[182927, 6250, 35, 0, 31, "Subsubsection"],
Cell[182965, 6252, 720, 31, 49, "Text"],
Cell[183688, 6285, 30, 0, 31, "Subsubsection"],
Cell[183721, 6287, 342, 13, 49, "Text"],
Cell[184066, 6302, 35, 0, 31, "Subsubsection"],
Cell[184104, 6304, 373, 15, 49, "Text"],
Cell[CellGroupData[{
Cell[184502, 6323, 49, 0, 24, "Text"],
Cell[184554, 6325, 27, 0, 23, "Special1"],
Cell[184584, 6327, 1881, 62, 80, "SmallText"],
Cell[186468, 6391, 2498, 88, 95, "SmallText"],
Cell[188969, 6481, 176, 4, 50, "SmallText"],
Cell[189148, 6487, 3455, 115, 157, "Input"],
Cell[192606, 6604, 77, 2, 20, "Input"],
Cell[192686, 6608, 2568, 90, 120, "SmallText"],
Cell[195257, 6700, 234, 9, 24, "SmallText"],
Cell[195494, 6711, 1820, 62, 70, "SmallText"],
Cell[197317, 6775, 51, 1, 24, "SmallText"],
Cell[197371, 6778, 682, 25, 74, "SmallText"],
Cell[198056, 6805, 2249, 80, 85, "Special2"],
Cell[200308, 6887, 1425, 45, 86, "SmallText"],
Cell[201736, 6934, 53, 0, 24, "SmallText"],
Cell[201792, 6936, 2073, 67, 36, "SmallText"],
Cell[203868, 7005, 2263, 82, 41, "Special2"],
Cell[206134, 7089, 40, 0, 24, "SmallText"],
Cell[206177, 7091, 3769, 116, 73, "SmallText"],
Cell[209949, 7209, 40, 0, 24, "SmallText"],
Cell[209992, 7211, 2034, 69, 73, "SmallText"],
Cell[212029, 7282, 158, 6, 23, "Special2"],
Cell[212190, 7290, 1539, 55, 98, "SmallText"],
Cell[213732, 7347, 176, 6, 23, "Special2"],
Cell[213911, 7355, 574, 19, 77, "SmallText"],
Cell[214488, 7376, 3581, 105, 764, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
