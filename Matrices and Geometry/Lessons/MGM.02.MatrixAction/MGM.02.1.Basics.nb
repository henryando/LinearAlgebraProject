(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    245929,       7893]
NotebookOptionsPosition[    178242,       6377]
NotebookOutlinePosition[    231425,       7490]
CellTagsIndexPosition[    231231,       7481]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.02  2D Matrix Action\n",
 StyleBox[" BASICS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1)  2D matrix hits via rows and via columns:\n              ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{"x", ",", "y"}],
      FontColor->RGBColor[1, 0, 0]], "}"}]}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"row1", ".", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"x", ",", "y"}],
        FontColor->RGBColor[1, 0, 0]], "}"}]}], ",", 
     RowBox[{"row2", ".", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"x", ",", "y"}],
        FontColor->RGBColor[1, 0, 0]], "}"}]}]}], "}"}]}]]],
 "\nand\n              ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{"x", ",", "y"}],
      FontColor->RGBColor[1, 0, 0]], "}"}]}], "=", 
   RowBox[{
    RowBox[{
     StyleBox["x",
      FontColor->RGBColor[1, 0, 0]], " ", "column1"}], " ", "+", " ", 
    RowBox[{
     StyleBox["y",
      FontColor->RGBColor[1, 0, 0]], " ", "column2"}]}]}]]],
 "\ngive you the same results"
}], "Subsection",
 CellTags->"MGM.02.B1"],

Cell[CellGroupData[{

Cell["B.1.a.i) Rows ", "Subsubsection"],

Cell["Here is a sample 2D matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.6", "0.4"},
        {"1.5", "2.9"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
What do folks mean when they talk about the horizontal rows of A?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Look at A again:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         StyleBox["1.6",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["0.4",
          FontColor->RGBColor[0, 0, 1]]},
        {"1.5", "2.9"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Folks say that the first horizontal row of A is\n         ",
 Cell[BoxData[
  RowBox[{"row1", "=", 
   RowBox[{"{", 
    RowBox[{"1.6", ",", "0.4"}], "}"}]}]]],
 "\nand the second horizontal row of A is\n          ",
 Cell[BoxData[
  RowBox[{"row2", "=", 
   RowBox[{"{", 
    RowBox[{"1.5", ",", "2.9"}], "}"}]}]]],
 "\n",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can fish them out for you: "
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"row", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]]}]], " ", "=", " ", 
  RowBox[{"A", "[", 
   RowBox[{"[", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"row", 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]]}]], " ", "=", " ", 
  RowBox[{"A", "[", 
   RowBox[{"[", 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.a.ii) Columns", "Subsubsection"],

Cell["Here is a new sample 2D matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"-", "1.7"}], "1.4"},
        {"0.6", 
         RowBox[{"-", "4.8"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
What do folks mean when they talk about the vertical columns of A?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Look at A again:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         StyleBox[
          RowBox[{"-", "1.7"}],
          FontColor->RGBColor[0, 0, 1]], "1.4"},
        {
         StyleBox["0.6",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"-", "4.8"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Folks say that the first vertical column of A is\n         ",
 Cell[BoxData[
  RowBox[{"column1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.7"}], ",", "0.6"}], "}"}]}]]],
 "\nand the second horizontal vertical column of A is\n          ",
 Cell[BoxData[
  RowBox[{"column2", "=", 
   RowBox[{"{", 
    RowBox[{"1.4", ",", 
     RowBox[{"-", "4.8"}]}], "}"}]}]]],
 "\n",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " can fish them out for you: "
}], "SmallText"],

Cell[BoxData[
 RowBox[{"column1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Transpose", "[", "A", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"column2", " ", "=", " ", 
  RowBox[{
   RowBox[{"Transpose", "[", "A", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1.a.iii) Matrix hits  via rows and via columns:\n              ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{"x", ",", "y"}],
      FontColor->RGBColor[1, 0, 0]], "}"}]}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"row1", ".", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"x", ",", "y"}],
        FontColor->RGBColor[1, 0, 0]], "}"}]}], ",", 
     RowBox[{"row2", ".", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"x", ",", "y"}],
        FontColor->RGBColor[1, 0, 0]], "}"}]}]}], "}"}]}]]],
 "\nand\n              ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{"x", ",", "y"}],
      FontColor->RGBColor[1, 0, 0]], "}"}]}], "=", 
   RowBox[{
    RowBox[{
     StyleBox["x",
      FontColor->RGBColor[1, 0, 0]], " ", "column1"}], " ", "+", " ", 
    RowBox[{
     StyleBox["y",
      FontColor->RGBColor[1, 0, 0]], " ", "column2"}]}]}]]],
 "\ngive you the same result"
}], "Subsubsection"],

Cell["Here is a new sample 2D matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.5", "3."},
        {"0.6", 
         RowBox[{"-", "1.7"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Here is ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of what you get when you hit A on a cleared point {x,y}"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]}]}], "Input"],

Cell["\<\
Some folks say that A.{x,y} is what you get when you multiply {x,y} by A.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell["Explain what happened in terms of the rows and columns of A.", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[StyleBox["Rows:",
 FontWeight->"Bold"]], "SmallText"],

Cell["Look at A again:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.5", "3."},
        {"0.6", 
         RowBox[{"-", "1.7"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
To see how to get A.{x,y} in terms of rows,look at A.{x,y} again:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]}]], "Input",
 AspectRatioFixed->True],

Cell["Fish out the horizontal rows of A:", "SmallText"],

Cell[BoxData[
 RowBox[{"row1", " ", "=", " ", 
  RowBox[{"A", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"row2", " ", "=", " ", 
  RowBox[{"A", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"],

Cell["In terms of rows, A.{x,y} is given by", "SmallText"],

Cell[TextData[{
 "            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{"x", ",", "y"}],
      FontColor->RGBColor[1, 0, 0]], "}"}]}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"row1", ".", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"x", ",", "y"}],
        FontColor->RGBColor[1, 0, 0]], "}"}]}], ",", 
     RowBox[{"row2", ".", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"x", ",", "y"}],
        FontColor->RGBColor[1, 0, 0]], "}"}]}]}], "}"}]}]]]
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"{", 
    StyleBox[
     RowBox[{"x", ",", "y"}],
     FontColor->RGBColor[1, 0, 0]], "}"}]}], " ", "==", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"row1", ".", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"x", ",", "y"}],
        FontColor->RGBColor[1, 0, 0]], "}"}]}], ")"}], ",", 
    RowBox[{"(", 
     RowBox[{"row2", ".", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"x", ",", "y"}],
        FontColor->RGBColor[1, 0, 0]], "}"}]}], ")"}]}], "}"}]}]], "Input"],

Cell[TextData[StyleBox["Columns:",
 FontWeight->"Bold"]], "SmallText"],

Cell["To see how to get A.{x,y} in terms of columns, look at A", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell["Look at A.{x,y} again:", "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]}]], "Input",
 AspectRatioFixed->True],

Cell["Fish out the vertical columns of A:", "SmallText"],

Cell[BoxData[
 RowBox[{"column1", " ", "=", " ", 
  RowBox[{
   RowBox[{"Transpose", "[", "A", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"column2", " ", "=", " ", 
  RowBox[{
   RowBox[{"Transpose", "[", "A", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"],

Cell[TextData[{
 "In terms of columns, A.{x,y} is given by\n     ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{"x", ",", "y"}],
      FontColor->RGBColor[1, 0, 0]], "}"}]}], "=", 
   RowBox[{
    RowBox[{
     StyleBox["x",
      FontColor->RGBColor[1, 0, 0]], " ", "column1"}], " ", "+", " ", 
    RowBox[{
     StyleBox["y",
      FontColor->RGBColor[1, 0, 0]], " ", "column2"}]}]}]]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{"x", ",", "y"}],
      FontColor->RGBColor[1, 0, 0]], "}"}]}], "==", 
   RowBox[{
    RowBox[{
     StyleBox["x",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], "column1"}], " ", "+", " ", 
    RowBox[{
     StyleBox["y",
      FontColor->RGBColor[1, 0, 0]], " ", "column2"}]}]}]}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.b) Hitting a matrix on the unit circle", "Subsubsection"],

Cell[CellGroupData[{

Cell["What do folks like to do with matrix hits?", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Folks like to hit matrices on curves.
A sample:
Here's the unit circle centered at {0.0}:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Purple"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit\>\""}]}], "]"}], 
  " "}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->0.5],

Cell["Here's a matrix A:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0.5", "0.9"},
        {
         RowBox[{"-", "0.3"}], "0.4"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["\<\
When you hit a point {x[t],y[t]} on the unit circle with A you get:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}]}], "}"}]}]], "Input"],

Cell["See how  A.{x[t],y[t]} plots out:", "SmallText"],

Cell[BoxData[
 RowBox[{"hitcurveplot", " ", "=", " ", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", "\n", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "->", "Automatic"}], ",", "\n", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<After the hit with A\>\""}]}], "]"}], 
  " "}]], "Input"],

Cell["\<\
After you hit the unit circle with A, you get a tilted ellipse.
Try it for random matrices A:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hitcurveplot", " ", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     StyleBox[
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
      FontColor->RGBColor[0, 0, 1]], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green"}], "}"}], 
       "}"}]}], ",", " ", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "->", "\"\<After the hit with random matrix A\>\""}]}], 
    "]"}]}], " "}], "\n", 
 RowBox[{"\"\<Here A is\>\"", 
  RowBox[{"MatrixForm", "[", "A", "]"}]}]}], "Input"],

Cell["\<\
Rerun many times, 
letting your eyes drink in what matrix hits do to the unit circle.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["You get an ellipse every time.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2) Matrix Action movies: \n                  ",
 Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.217391 0.5 0.217391 [
[.06522 .4875 -6 -9 ]
[.06522 .4875 6 0 ]
[.28261 .4875 -6 -9 ]
[.28261 .4875 6 0 ]
[.71739 .4875 -3 -9 ]
[.71739 .4875 3 0 ]
[.93478 .4875 -3 -9 ]
[.93478 .4875 3 0 ]
[1.025 .5 0 -6 ]
[1.025 .5 10 6 ]
[.4875 .06522 -12 -4.5 ]
[.4875 .06522 0 4.5 ]
[.4875 .28261 -12 -4.5 ]
[.4875 .28261 0 4.5 ]
[.4875 .71739 -6 -4.5 ]
[.4875 .71739 0 4.5 ]
[.4875 .93478 -6 -4.5 ]
[.4875 .93478 0 4.5 ]
[.5 1.025 -5 0 ]
[.5 1.025 5 12 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.06522 .5 m
.06522 .50625 L
s
[(-2)] .06522 .4875 0 1 Mshowa
.28261 .5 m
.28261 .50625 L
s
[(-1)] .28261 .4875 0 1 Mshowa
.71739 .5 m
.71739 .50625 L
s
[(1)] .71739 .4875 0 1 Mshowa
.93478 .5 m
.93478 .50625 L
s
[(2)] .93478 .4875 0 1 Mshowa
.125 Mabswid
.1087 .5 m
.1087 .50375 L
s
.15217 .5 m
.15217 .50375 L
s
.19565 .5 m
.19565 .50375 L
s
.23913 .5 m
.23913 .50375 L
s
.32609 .5 m
.32609 .50375 L
s
.36957 .5 m
.36957 .50375 L
s
.41304 .5 m
.41304 .50375 L
s
.45652 .5 m
.45652 .50375 L
s
.54348 .5 m
.54348 .50375 L
s
.58696 .5 m
.58696 .50375 L
s
.63043 .5 m
.63043 .50375 L
s
.67391 .5 m
.67391 .50375 L
s
.76087 .5 m
.76087 .50375 L
s
.80435 .5 m
.80435 .50375 L
s
.84783 .5 m
.84783 .50375 L
s
.8913 .5 m
.8913 .50375 L
s
.02174 .5 m
.02174 .50375 L
s
.97826 .5 m
.97826 .50375 L
s
.25 Mabswid
0 .5 m
1 .5 L
s
gsave
1.025 .5 -61 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 20 translate 1 -1 scale
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
69.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.5 .06522 m
.50625 .06522 L
s
[(-2)] .4875 .06522 1 0 Mshowa
.5 .28261 m
.50625 .28261 L
s
[(-1)] .4875 .28261 1 0 Mshowa
.5 .71739 m
.50625 .71739 L
s
[(1)] .4875 .71739 1 0 Mshowa
.5 .93478 m
.50625 .93478 L
s
[(2)] .4875 .93478 1 0 Mshowa
.125 Mabswid
.5 .1087 m
.50375 .1087 L
s
.5 .15217 m
.50375 .15217 L
s
.5 .19565 m
.50375 .19565 L
s
.5 .23913 m
.50375 .23913 L
s
.5 .32609 m
.50375 .32609 L
s
.5 .36957 m
.50375 .36957 L
s
.5 .41304 m
.50375 .41304 L
s
.5 .45652 m
.50375 .45652 L
s
.5 .54348 m
.50375 .54348 L
s
.5 .58696 m
.50375 .58696 L
s
.5 .63043 m
.50375 .63043 L
s
.5 .67391 m
.50375 .67391 L
s
.5 .76087 m
.50375 .76087 L
s
.5 .80435 m
.50375 .80435 L
s
.5 .84783 m
.50375 .84783 L
s
.5 .8913 m
.50375 .8913 L
s
.5 .02174 m
.50375 .02174 L
s
.5 .97826 m
.50375 .97826 L
s
.25 Mabswid
.5 0 m
.5 1 L
s
gsave
.5 1.025 -66 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 20 translate 1 -1 scale
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
0 0 1 r
.01 w
.71739 .5 m
.71738 .50169 L
.71737 .50322 L
.71733 .50499 L
.71729 .50666 L
.71718 .50964 L
.71701 .51287 L
.71677 .51642 L
.71645 .52018 L
.71572 .52691 L
.71474 .53382 L
.71363 .54027 L
.71037 .55481 L
.70602 .56938 L
.70117 .58241 L
.68725 .61044 L
.67199 .63296 L
.65226 .65516 L
.6309 .67356 L
.60571 .68996 L
.59259 .69669 L
.57791 .70295 L
.56489 .70748 L
.55029 .71149 L
.54332 .71303 L
.5358 .71442 L
.52926 .71541 L
.52212 .71626 L
.51792 .71665 L
.51403 .71694 L
.51031 .71715 L
.50843 .71723 L
.50636 .7173 L
.50449 .71734 L
.50278 .71737 L
.5009 .71739 L
.49996 .71739 L
.49892 .71739 L
.49718 .71737 L
.49531 .71734 L
.49355 .7173 L
.49195 .71724 L
.48864 .71709 L
.48501 .71687 L
.47767 .71624 L
.4709 .71543 L
.46459 .71449 L
.45049 .71168 L
.43559 .70763 L
.42186 .70286 L
Mistroke
.4073 .69664 L
.38212 .68265 L
.35943 .66582 L
.33789 .64484 L
.31908 .62052 L
.30468 .59544 L
.29893 .58263 L
.29377 .56875 L
.2898 .55545 L
.28693 .54315 L
.28465 .52972 L
.28375 .52227 L
.28343 .51884 L
.28314 .5152 L
.28295 .51209 L
.28286 .51044 L
.28278 .50866 L
.28272 .50703 L
.28268 .50553 L
.28265 .50411 L
.28262 .5026 L
.28261 .50096 L
.28261 .49921 L
.28262 .49756 L
.28264 .49606 L
.28268 .49429 L
.28274 .49238 L
.28289 .48891 L
.28309 .48552 L
.28336 .48189 L
.28401 .47535 L
.28504 .4676 L
.28622 .46056 L
.28957 .44543 L
.29374 .43134 L
.30449 .40495 L
.31745 .38196 L
.33331 .36045 L
.35374 .33916 L
.37538 .32187 L
.40098 .30647 L
.42732 .29512 L
.44108 .29074 L
.44895 .28869 L
.45644 .28702 L
.46338 .28572 L
.47095 .28456 L
.47785 .28374 L
.48425 .28318 L
.48783 .28295 L
Mistroke
.49118 .28279 L
.4931 .28272 L
.49486 .28267 L
.49583 .28265 L
.49689 .28263 L
.49789 .28262 L
.49882 .28261 L
.49979 .28261 L
.50084 .28261 L
.50183 .28262 L
.50274 .28263 L
.50447 .28265 L
.5063 .2827 L
.50827 .28277 L
.5101 .28284 L
.51426 .28308 L
.51799 .28335 L
.52143 .28367 L
.52919 .28458 L
.536 .28561 L
.54319 .28694 L
.55552 .28982 L
.56889 .29381 L
.5946 .30427 L
.62056 .3191 L
.64337 .33659 L
.66466 .35806 L
.68171 .38067 L
.69481 .40352 L
.70104 .41728 L
.70602 .43063 L
.70979 .44302 L
.71297 .45636 L
.71488 .46708 L
.71573 .47321 L
.71637 .47896 L
.71682 .48425 L
.71712 .48909 L
.71724 .49177 L
.71728 .49318 L
.71733 .49469 L
.71736 .49613 L
.71738 .49744 L
.71739 .49876 L
.71739 .5 L
Mfstroke
1 .5 0 r
.035 w
.71739 .5 Mdot
.962 .691 0 r
.70084 .58319 Mdot
.854 .854 0 r
.65372 .65372 Mdot
.691 .962 0 r
.58319 .70084 Mdot
.5 1 0 r
.5 .71739 Mdot
.309 .962 0 r
.41681 .70084 Mdot
.146 .854 0 r
.34628 .65372 Mdot
.038 .691 0 r
.29916 .58319 Mdot
0 .5 0 r
.28261 .5 Mdot
.038 .309 0 r
.29916 .41681 Mdot
.146 .146 0 r
.34628 .34628 Mdot
.309 .038 0 r
.41681 .29916 Mdot
.5 0 0 r
.5 .28261 Mdot
.691 .038 0 r
.58319 .29916 Mdot
.854 .146 0 r
.65372 .34628 Mdot
.962 .309 0 r
.70084 .41681 Mdot
1 .5 0 r
.005 w
.71739 .5 m
.86868 .14831 L
s
.88478 .11087 m
.84833 .15435 L
.86868 .14831 L
.87828 .16724 L
.88478 .11087 L
F
.962 .691 0 r
.70084 .58319 m
.90491 .25012 L
s
.92621 .21536 m
.88391 .25319 L
.90491 .25012 L
.91172 .27022 L
.92621 .21536 L
F
.854 .854 0 r
.65372 .65372 m
.87622 .39414 L
s
.90274 .36319 m
.855 .39384 L
.87622 .39414 L
.87975 .41506 L
.90274 .36319 L
F
.691 .962 0 r
.58319 .70084 m
.78489 .55566 L
s
.81797 .53185 m
.76433 .55036 L
.78489 .55566 L
.78338 .57683 L
.81797 .53185 L
F
.5 1 0 r
.5 .71739 m
.6443 .70041 L
s
.68478 .69565 m
.6289 .68581 L
.6443 .70041 L
.63271 .71819 L
.68478 .69565 L
F
.309 .962 0 r
.41681 .70084 m
.49747 .79828 L
s
.52347 .82967 m
.50137 .77741 L
.49747 .79828 L
.47625 .79821 L
.52347 .82967 L
F
.146 .854 0 r
.34628 .65372 m
.35665 .87279 L
s
.35858 .9135 m
.37229 .85845 L
.35665 .87279 L
.33972 .85999 L
.35858 .9135 L
F
.038 .691 0 r
.29916 .58319 m
.2247 .89474 L
s
.21522 .93438 m
.24371 .88531 L
.2247 .89474 L
.212 .87773 L
.21522 .93438 L
F
0 .5 0 r
.28261 .5 m
.13132 .85169 L
s
.11522 .88913 m
.15167 .84565 L
.13132 .85169 L
.12172 .83276 L
.11522 .88913 L
F
.038 .309 0 r
.29916 .41681 m
.09509 .74988 L
s
.07379 .78464 m
.11609 .74681 L
.09509 .74988 L
.08828 .72978 L
.07379 .78464 L
F
.146 .146 0 r
.34628 .34628 m
.12378 .60586 L
s
.09726 .63681 m
.145 .60616 L
.12378 .60586 L
.12025 .58494 L
.09726 .63681 L
F
.309 .038 0 r
.41681 .29916 m
.21511 .44434 L
s
.18203 .46815 m
.23567 .44964 L
.21511 .44434 L
.21662 .42317 L
.18203 .46815 L
F
.5 0 0 r
.5 .28261 m
.3557 .29959 L
s
.31522 .30435 m
.3711 .31419 L
.3557 .29959 L
.36729 .28181 L
.31522 .30435 L
F
.691 .038 0 r
.58319 .29916 m
.50253 .20172 L
s
.47653 .17033 m
.49863 .22259 L
.50253 .20172 L
.52375 .20179 L
.47653 .17033 L
F
.854 .146 0 r
.65372 .34628 m
.64335 .12721 L
s
.64142 .0865 m
.62771 .14155 L
.64335 .12721 L
.66028 .14001 L
.64142 .0865 L
F
.962 .309 0 r
.70084 .41681 m
.7753 .10526 L
s
.78478 .06562 m
.75629 .11469 L
.7753 .10526 L
.788 .12227 L
.78478 .06562 L
F
0 0 1 r
.01 w
.88478 .11087 m
.89504 .12313 L
.90469 .13808 L
.91295 .1553 L
.91894 .17277 L
.92162 .18338 L
.92365 .19378 L
.92505 .20343 L
.92567 .20899 L
.92612 .21421 L
.92631 .21693 L
.92649 .21988 L
.92661 .22245 L
.92671 .22527 L
.92676 .22699 L
.9268 .22859 L
.92683 .23013 L
.92684 .23177 L
.92685 .2334 L
.92685 .23493 L
.92682 .23781 L
.9268 .2393 L
.92676 .24095 L
.92666 .24429 L
.92653 .2474 L
.92639 .25032 L
.92594 .25698 L
.9253 .26421 L
.92378 .27712 L
.92191 .28931 L
.91606 .31767 L
.90907 .34349 L
.89978 .37163 L
.85058 .47818 L
.81673 .53373 L
.77449 .59297 L
.6768 .70364 L
.57038 .79623 L
.46343 .86635 L
.40887 .89368 L
.35228 .9156 L
.32558 .92345 L
.31183 .92681 L
.29753 .92977 L
.28527 .93187 L
.27205 .93363 L
.26634 .93423 L
.26028 .93474 L
.25462 .93511 L
.25216 .93524 L
Mistroke
.24951 .93535 L
.24657 .93545 L
.24382 .93551 L
.24116 .93554 L
.23873 .93555 L
.23611 .93553 L
.23325 .93548 L
.23182 .93544 L
.23029 .93539 L
.22755 .93528 L
.22225 .93498 L
.2173 .93458 L
.20822 .93357 L
.2031 .93282 L
.19777 .9319 L
.18843 .92991 L
.17872 .9273 L
.16845 .92385 L
.15125 .91622 L
.13687 .90761 L
.12264 .8964 L
.10951 .88268 L
.09941 .8688 L
.0904 .85236 L
.08359 .83539 L
.07888 .81881 L
.07686 .80912 L
.0752 .79854 L
.07416 .78922 L
.07374 .78383 L
.07344 .77872 L
.07332 .77586 L
.07327 .77434 L
.07323 .77272 L
.0732 .77131 L
.07317 .76974 L
.07315 .76696 L
.07315 .76425 L
.07319 .76132 L
.07325 .75853 L
.07333 .75595 L
.07345 .75293 L
.07359 .7501 L
.07401 .74361 L
.07456 .73721 L
.07529 .73028 L
.07704 .71717 L
.07913 .70484 L
.08546 .67618 L
.09289 .65013 L
Mistroke
.10261 .62184 L
.15345 .51471 L
.18813 .45896 L
.23112 .3998 L
.33011 .28957 L
.43738 .19795 L
.54468 .12922 L
.59928 .10274 L
.65561 .08191 L
.68222 .07459 L
.69589 .07152 L
.71005 .06888 L
.72222 .06707 L
.72857 .0663 L
.7353 .06562 L
.74141 .06514 L
.74691 .06481 L
.74954 .06469 L
.75239 .06458 L
.75506 .06451 L
.75751 .06447 L
.76015 .06445 L
.76291 .06446 L
.76526 .06449 L
.76781 .06455 L
.77054 .06464 L
.77345 .06477 L
.77862 .06509 L
.78378 .06552 L
.78859 .06603 L
.7974 .06726 L
.80763 .06919 L
.81674 .0714 L
.83616 .07795 L
.84968 .08427 L
.86143 .09125 L
.88478 .11087 L
Mfstroke
1 .5 0 r
.035 w
.88478 .11087 Mdot
.962 .691 0 r
.92621 .21536 Mdot
.854 .854 0 r
.90274 .36319 Mdot
.691 .962 0 r
.81797 .53185 Mdot
.5 1 0 r
.68478 .69565 Mdot
.309 .962 0 r
.52347 .82967 Mdot
.146 .854 0 r
.35858 .9135 Mdot
.038 .691 0 r
.21522 .93438 Mdot
0 .5 0 r
.11522 .88913 Mdot
.038 .309 0 r
.07379 .78464 Mdot
.146 .146 0 r
.09726 .63681 Mdot
.309 .038 0 r
.18203 .46815 Mdot
.5 0 0 r
.31522 .30435 Mdot
.691 .038 0 r
.47653 .17033 Mdot
.854 .146 0 r
.64142 .0865 Mdot
.962 .309 0 r
.78478 .06562 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  ImageSize->{135, 135},
  ImageMargins->{{0, 0}, {0, 0}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzdm1uPGzUUx925JZNsdrv33qBb2tBCr0ChLS0ggdRSEMpnWFVI7QMClb7n
sV9nP89+AJ55yuvgYx9fxvl74my2VUWk2ZmNZ875nYs9x57Jb4dvXv7+x+Gb
Vy8OD569Pvzr5asXfx88/fO1/Co/I4R4S9uBoONGHvKfJ6L59x+RC/WPPKLt
Z/VXfCBNX9OupIYsftI3ale0miJXfEx/MzGbiBv6tLtWQQ5Oz/Tp8nOOjipq
Kujq6/rqh2pXtq5h7WJDX3s81pLppKaiIyWAaJurnpERKciINS1FSia0Zs3a
VBrc5sqqkte5VUq1rZUVf9lzfB5z3sCezs1SrNo2gOy+FdCIZirUdimeHn0r
u+BWEtwyQ3lkoA2S0i7GhZXGjKa0MYsyLhKWW7J+p7Bat5KdbDU3nPdlF2Ho
lOSBBpaSR0DywHBMBQe7aQOHPaUZBj6kPUoAx+ySx4Gfm3eKHmgaK2wuSMjD
+QIFjzTFUW3SzpyzkailFziI9gXQt+918oL1+Z5DVg2BvjrUZ9LkPepD9u1p
fQ9sXrWdKqJORUr7QGkZV+rGbNfkhfUkZi9JcN+aXViHI2MHQBXycIeqr0BT
aZUi+5BSZB8PybMjkzxfAlWV9ezZFVQxsFTFVn0BVLlhXKhIxuKHlM51S4Pu
K70HlNaeUjoixUhpnWhpL3TqHZsqazZt3elS3ShRGzLRaQvM2tXKbwOL1zgi
4X2dLEcs/USWymdR2lkpe/8WYBnZ74K6SX5nUsAP+bvguhlLxWhxkgPCGhD2
liGUESFEOjJ7IuIs+hxADkA+KVOl6Aog9ldALANEsxEP31o/A4i2em35ccpb
IUwBgzzaS8StAG7oUYA7tr5i43zuqSGu+dA06v+m3FrYG98qsGbw92FRCcP5
ek1rdlwtd2a6dVKzCJwePX2WBK8SwUsAXp0AvG+dxydJUrXl/FeHQn9c4TF3
KzmqRbSErwB/quNRbbUXZkzhckefb4zgOZ88jM4Ig+/c/TVnpqCqUZahsQ5Z
VACLOqq3MWgyTpl4XXENgLu7WeOjIlKUO8j3HaTXQBM7ezz2o0D7dYA7CnB5
Ppma6qmO5eH6aieuSpCzAHJd57bkKhO5Ut3IXJ+AppwvIj+SB2kvt9PhQ37j
We7xcVi0MOSVGGSmhzUJtwng3JoJNLDNWizDWhArT60POjxo8o/aJOQWgNyM
Xn5KfJfT+bYB3xZHMhyEiA3VBTlgMgshx+KCVvdxvDdMWhNxSr0dQLUddF4m
Sh0BlYIcJByXAh/F+KQp/jBIGyHuroaIfJbZOAYcHNZLQHwT3GrG3i0QedF9
19iYoj7bHdN0PolWeGg1pzfy3o4Wv4TDihgQ59zFLqDCAvEWjSivty7BJHQU
6Yj28oiXItWdUdXC4b2Iq4fyJGxgIkeY8dLG4XGvczU6Txpri+ef5xUBjrrC
yHudIYY9re3dLIpftvDZBOv5AJkNyqyFqCrz7TK9veTy09gl9EOPfXD5nr2g
PWL6C4OpZlRAPtswBE2DgFxXoBNXSpoRwTPhVGww4fFtQIV/CXTteL0h8nSh
1vGy3bVqGWKc1WlLMFJOVzIj72DdXWwOL/3bHl62RmoTmyxm0K7uODp9LdaK
kUkwSUUht/EoXDz6cwaYmLCIeFzc0v6p5JYSx1OEPe2nYJD3KJEURLrvn8eD
EhqQECmaPu74ATROpg+vO+yCa7pMyGi6fy7mYjWQmvCG6x+EGl9rdtLoU/FR
m3nTS0TzKfgvwZqPgtVtU3FXH6lHM9pwAvM/BFYB0ZuOBCwDiNaasfVTR777
/jTJy7WX5Ix2v8I9VipaTpXcFVAXrirTFo7gno+3lyTmgrYrDbIOYq6djmZw
AtaRqYgz6+C0M9GpsNcg4v1ALvFGx4GCwPnp91YUqF0O6+96dqwym/Aec54/
fbD5OypBGa/4MHaxziuC5FE0vAlMnCSSSS+ewLln3Fkr8pUtPk48M12dz7yr
PuKybitbWCaecTZdHHhchXVVgMWeO7skVt6BlYn6KF4g595zChNMU7cTHh3R
Xh5d99na9c7YLdDMeytvYXHmSqauecaRCOYNDQ8g9mHNzPXwT30w509yFqLK
T0alPTVfRxMJWgFjqg1AVQEq5CseN7vilwFfSSIEdH0eyPTCVDfZ3Dty3o9O
r1mHIVPhQ7UAc60nchWAy2Rs7d135NGidRODJsHQTfUGBlsmr4plwfSQSjlF
G6LSj730LFKNoyibkJMKdmkd1GgkHC3fbAVA9B8C0o8KdblRxICQc6wTFzzO
QYuvm4lwN0O41JQqABz3x/FxfD04CGAPIN3yApgtg4T8xTc4iRRdP+fRgXBo
H6kgb3tUcG7wLvhG2gcSTbkNjQ53vAAmcJWJXC6U6qneBoAzrjDppW+mEcy7
y2Gmuq/is8ftJTT0wGno4QqhX2VD6XcvTpoD0lSHItKG31RkwRNJRhuaQ1U2
E9g3pgcJfhE1E9MmrJb0Sz2tZallTamipuQtU/i1q4nl8z5okc88NZ4Jflmt
UY+iG3696j0zxx/NN/bR/MwYQn6mrV6Ai8r2VNwewOUl/8lMFNZlBTGoI0VT
WGqvAGXe+++PtGIJk1l4JxU63BVIVtTh9IuFcAEBMVcrMPc4BXxmk7vKo2H5
TNsDn29+OkJsfcDUS2Qy105mrjOhVzBGAO0hRjPuiqEhd/UBWh2g+f1zbtRV
MX+MY6kXfOTfHqBBjkI0A48mTBCfBiV/i0v3Gu/JSWr4VqFC6f3Eo8pjIH0A
UkdBcH9ELvlOt/I6+YrKh7hjIaO/T9GLvD8Aek15MrHliX9ndUp/8DydLWMs
UsoF22Tm/b7iR5z4vi0nUbUe2NfugU4Hq0dxRmN8nah+pDNzMoNKf1pOKbJ5
CJSuswT6mGppwvXc07hKVE0iO+Mq85ZKFeD/ib6RzdOgCn2m9ZnuG9zb1DMP
vsKoRVFcAyrDORR9funUpkwbJIpHMpwGNIFTxgyBeP7FkZTufv+E7nL82zX/
PmzeAl0DYofaJim2x9bxr5U6xBadLlAzNTfkoBnEnDAz4tn1TSN1aCXmFm8Q
l7ju58Pc6KbWdkZWosJDb5mzsE1rA7tGXu2HjAJNW2a9t+gHhdvWBrdc6KoS
Nr0ltm8TqHXH6tCx5+mQ4kvD1bhpNHJgh8Tz1ndKzh5AYhPEc33FBWudfnCS
/kNB/+eZy1/W/bvBD+sXqG/R7pE14Ff9xbdAAI8ej0HT84VNoUBvOOpoemQj
bMZZ/jzvMIZ34sx/pqTaAA==\
\>"],
  ImageRangeCache->{{{0, 134}, {134, 0}} -> {-2.33867, -2.30003, 0.038648, 
  0.038648}}],
 "\nHitting with a 2D matrix on curves and assessing the result"
}], "Subsection",
 CellTags->"MGM.02.B2"],

Cell[CellGroupData[{

Cell["B.2.a.i) Hitting a curve with a matrix", "Subsubsection"],

Cell["Here's an ordinary sine wave plotted in true scale:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"3", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "t"}], "]"}]}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "5"}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit\>\""}]}], "]"}], 
  " "}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell[CellGroupData[{

Cell[TextData[{
 "Hit every point on this curve with the 2D matrix \n       A = ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {
       StyleBox["0.5`",
        StyleBoxAutoDelete->True,
        PrintPrecision->1], 
       StyleBox["0.9`",
        StyleBoxAutoDelete->True,
        PrintPrecision->1]},
      {
       RowBox[{"-", 
        StyleBox["0.8`",
         StyleBoxAutoDelete->True,
         PrintPrecision->1]}], "1.0"}
     }], ")"}],
   MatrixForm[#]& ]]],
 " \nand plot the result. \nDescribe what you see. "
}], "Text",
 AnimationDisplayTime->1],

Cell["Answer:", "Special1",
 AnimationDisplayTime->0.5],

Cell[TextData[{
 "When you hit a point ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}]}], "}"}]]],
 " on the plotted curve you get:"
}], "SmallText",
 AnimationDisplayTime->0.5],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", "  ", 
    TagBox[
     RowBox[{"(", GridBox[{
        {"0.5", "0.9"},
        {
         RowBox[{"-", "0.8"}], "1.0"}
       }], ")"}],
     MatrixForm[#]& ]}], " ", ";"}], " "}], "\n", 
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}]}], "}"}]}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell[TextData[{
 "When you hit every point ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}]}], "}"}]]],
 " on the plotted curve and plot the result you get:"
}], "SmallText",
 AnimationDisplayTime->1],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", "  ", 
    TagBox[
     RowBox[{"(", GridBox[{
        {"0.5", "0.9"},
        {
         RowBox[{"-", "0.8"}], "1.0"}
       }], ")"}],
     MatrixForm[#]& ]}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"hitcurveplot", " ", "=", " ", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[".",
      FontColor->RGBColor[1, 0, 0]], 
     RowBox[{"{", 
      StyleBox[
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}],
       FontColor->RGBColor[0, 0, 1]], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
      "}"}]}], ",", " ", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<After the matrix hit\>\""}]}], "]"}], 
  " "}]}], "Input",
 AnimationDisplayTime->1],

Cell["See both one after the other:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ListAnimate", "[", 
   RowBox[{"{", 
    RowBox[{"curveplot", ",", "hitcurveplot"}], "}"}], "]"}], " "}]], "Input",\

 AnimationDisplayTime->1],

Cell["\<\
At this stage, it's hard to describe in precise terms what the hit by A did. \
But in general terms, you can say that the hit by A simultaneously deformed \
the curve a bit and then rotated it quite a bit.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.a.ii) Hitting the unit circle with a matrix", "Subsubsection"],

Cell["Here's the unit circle plotted in true scale:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     StyleBox[
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}],
      FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit\>\""}]}], "]"}], 
  " "}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[{
 "Hit this every point on this curve with the 2D matrix \n       A = ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {"0.4", 
       RowBox[{"-", 
        StyleBox["0.7`",
         StyleBoxAutoDelete->True,
         PrintPrecision->1]}]},
      {"0.7", 
       StyleBox["1.30000000000000004`",
        StyleBoxAutoDelete->True,
        PrintPrecision->2]}
     }], ")"}],
   MatrixForm[#]& ]]],
 "\nand plot the result. \nDescribe what you see. "
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
When you hit a point {x[t],y[t]} on the plotted curve you get:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {"0.4", 
        RowBox[{"-", "0.7"}]},
       {"0.7", "1.3"}
      }], ")"}]}], ";"}], " "}], "\n", 
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}]}], "}"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
When you hit every point {x[t],y[t]} on the plotted curve and plot the result \
you get:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"hitcurveplot", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<After the matrix hit\>\""}]}], "]"}],
   " "}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"curveplot", ",", " ", "hitcurveplot"}], "}"}], "]"}]], "Input"],

Cell["An ellipse!", "SmallText"],

Cell["See both one after the other:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{"curveplot", ",", "hitcurveplot"}], "}"}], "]"}], " "}]], "Input",\

 AnimationDisplayTime->1],

Cell["\<\

At this stage, it's hard to describe precisely what the hit by A did. 
But in general terms, you can say that hit by A simultaneously deformed the \
curve and maybe A rotated it too.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.a.iii) Matrix action movies", "Subsubsection"],

Cell["Look at the two plots from part i):", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{"curveplot", ",", "hitcurveplot"}], "}"}], "]"}], " "}]], "Input",\

 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Surely the hit by A deformed the circle, but how can you get a feeling for \
whether A also rotated the circle?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Color code the points and watch where they go this way:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "12"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"curveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit\>\""}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"before", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"curveplot", ",", "pointplot"}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
To see what happens after the hit by A, copy paste and edit the plotting \
instructions above, replacing all
       {x[t],y[t]}'s with A.{x[t],y[t]}:\
\>", "SmallText",
 AnimationDisplayTime->1],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitcurveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"A", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", "\n", "\t\t", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the matrix hit\>\""}]}], 
     "]"}]}], " ", ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"after", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"hitcurveplot", ",", "hitpointplot"}], "]"}]}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->0.5],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "after"}], "}"}], "]"}]], "Input"],

Cell["\<\
The following graphic tries to explain what the color coding means:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.25"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
  "curveplot", ",", "hitcurveplot", ",", "pointplot", ",", "hitpointplot", 
   ",", "actionarrows", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}]}], "Input",\

 AspectRatioFixed->True],

Cell[TextData[{
 "In this plot, each arrow points from a point \n          ",
 StyleBox["{x[t],y[t]} ",
  FontColor->RGBColor[0, 0, 1]],
 "\non the circle to the point \n          A.",
 StyleBox["{x[t],y[t]}",
  FontColor->RGBColor[0, 0, 1]],
 "\nthat results from hitting {x[t],y[t]} with A.\nAs you can see, there is a \
strong hint of a rotation, but there is also a big stretch and squeeze.\n\
Here's a review:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"curveplot", ",", "pointplot"}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"curveplot", ",", "pointplot", ",", "actionarrows", ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}], ",", 
    " ", 
    RowBox[{"Show", "[", 
     RowBox[{"hitcurveplot", ",", "hitpointplot"}], "]"}]}], "}"}], 
  "]"}]], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->2],

Cell["\<\
To get maximum viewing pleasure and maximum information, 
look at one point and follow it. 
Then pick another point and follow it. 
Keep doing this until you have a good visual grasp of the action.\
\>", "Special5"],

Cell["Matrix action.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.a.iv) Another matrix action movie ", "Subsubsection"],

Cell[TextData[{
 "Go with this 2D matrix:\n                A = ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1.77`", "0.85`"},
      {
       RowBox[{"-", "1.79`"}], "0.9`"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["\<\
Make an action movie and analyze what a hit with this matrix does to the unit \
circle.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Copy, paste and edit to make an action movie:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", "  ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.77", "0.85"},
        {
         RowBox[{"-", "1.79"}], "0.9"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2.3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "16"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"curveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit\>\""}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitcurveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"A", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit\>\""}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.25"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"curveplot", ",", "pointplot"}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"curveplot", ",", "pointplot", ",", "actionarrows", ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}], ",", 
    " ", 
    RowBox[{"Show", "[", 
     RowBox[{"hitcurveplot", ",", "hitpointplot"}], "]"}]}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->0.5],

Cell["\<\
To get maximum viewing pleasure and maximum information, 
look at one point and follow it. 
Then pick another point and follow it. 
Keep doing this until you have a good visual grasp of the action.
\
\>", "Special5"],

Cell["\<\
There is a huge hint of simultaneous rotation and there is an equally huge \
hint of a big stretch, bigger in one direction than another.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.a.v) Matrix Action movie code", "Subsubsection"],

Cell[CellGroupData[{

Cell["Shorten up the code needed to make a matrix action movie.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Here is a modest attempt;  you might be able to do better.
First enter the matrix A and the parametrization for {x[t],y[t]} and run: \
\>", "SmallText"],

Cell["The code below goes with a random matrix.", "Special5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "x", ",", "y", ",", "t", ",", "hitplotter", ",", "hitpointplotter", ",", 
     "pointcolor", ",", "actionarrows", ",", "matrix2D"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0.4"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "12"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", 
     StyleBox[
      RowBox[{
       StyleBox["matrix2D",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], ":=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"matrix2D", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", 
     StyleBox[
      RowBox[{
       StyleBox["matrix2D",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"actionarrows", "[", 
     StyleBox[
      RowBox[{
       StyleBox["matrix2D",
        FontColor->RGBColor[0, 0, 1],
        Background->None], "_"}]], "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        StyleBox[
         RowBox[{
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
         FontColor->RGBColor[0, 0, 1]], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.25"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       StyleBox[
        RowBox[{"IdentityMatrix", "[", "2", "]"}],
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       StyleBox[
        RowBox[{"IdentityMatrix", "[", "2", "]"}],
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"actionarrows", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}], ",", 
    " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit\>\""}]}], "]"}]}], 
   "}"}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
To get maximum viewing pleasure and maximum information, 
look at one point and follow it. 
Then pick another point and follow it. 
Keep doing this until you have a good visual grasp of the action.
Then rerun several times.\
\>", "Special5"],

Cell["You can change the matrix A:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"2.3", 
         RowBox[{"-", "1.1"}]},
        {
         RowBox[{"-", "1.1"}], "1.0"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"actionarrows", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}], ",", 
    " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "A", "]"}], ",", 
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit\>\""}]}], "]"}]}], 
   "}"}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
To get maximum viewing pleasure and maximum information, 
look at one point and follow it. 
Then pick another point and follow it. 
Keep doing this until you have a good visual grasp of the action.\
\>", "Special5"],

Cell["Play.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3)  Making your own 2D matrices: \nThe identity matrix ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0"},
      {"0", "1"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]],
  FontSize->12],
 "  and the xy-stretchers ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"xstretch", "0"},
      {"0", "ystretch"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]],
  FontSize->12]
}], "Subsection",
 CellTags->"MGM.02.B3"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3.a) The 2D identity matrix ",
 Cell[BoxData[
  StyleBox[
   TagBox[
    RowBox[{" ", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1", "0"},
        {"0", "1"}
       }], "\[NoBreak]", ")"}]}],
    MatrixForm[#]& ],
   FontSize->12]]],
 " "
}], "Subsubsection"],

Cell["Here's the 2D identity matrix:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "1"}
    }], "\[NoBreak]", ")"}],
  MatrixForm[#]& ]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Why do nearly all folks like to call this matrix by the name \"identity \
matrix?\"\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Folks like to call this matrix by the name identity matrix because when you \
hit {x,y} with this matrix, absolutely nothing new happens:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"IdentityMatrix", "[", "2", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Hitting with the identity matrix is just like ",
 "multiplying",
 " by 1.\nThis happens because\n            ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       StyleBox["1",
        FontColor->RGBColor[1, 0, 1]], "0"},
      {
       StyleBox["0",
        FontColor->RGBColor[1, 0, 1]], "1"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]]],
 ".{x,y} = x{",
 StyleBox["1,0",
  FontColor->RGBColor[1, 0, 1]],
 "}",
 " ",
 "+ y",
 "{",
 StyleBox["0,1",
  FontColor->RGBColor[0, 0, 1]],
 "}",
 " = {",
 StyleBox["x,0",
  FontColor->RGBColor[1, 0, 1]],
 "} + {",
 StyleBox["0,y",
  FontColor->RGBColor[0, 0, 1]],
 "} = {",
 StyleBox["x",
  FontColor->RGBColor[1, 0, 1]],
 ",",
 StyleBox["y",
  FontColor->RGBColor[0, 0, 1]],
 "}."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3.b.i) Diagonal matrices: The xy-stretcher matrices  ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"xstretch", "0"},
      {"0", "ystretch"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]],
  FontSize->12]
}], "Subsubsection"],

Cell["Here's a cleared 2D diagonal matrix: ", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "d"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"DiagonalMatrix", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "d"}], "}"}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "d"}], "}"}], "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Nearly all folks like to call this matrix by the name \"diagonal matrix \
because all its non-zero entries lie on what the same folks call the main \
diagonal.
Why do some folks (especially clued-in eager folks such as you) also like to \
call 2D diagonal matrices by the name xy-stretchers? \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Here's a 2D diagonal matrix: and an action movie showing what it does to the \
unit circle:\
\>", "SmallText"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", "=", "3.0"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", "=", "2.0"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["\<\
And here's an action movie showing what a hit with A does to the unit circle:\
\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "x", ",", "y", ",", "t", ",", "hitplotter", ",", "hitpointplotter", ",", 
     "pointcolor", ",", "actionarrows", ",", "matrix2D"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "12"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"matrix2D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"actionarrows", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"matrix2D", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.25"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"actionarrows", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}], ",", 
    " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "A", "]"}], ",", 
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit\>\""}]}], "]"}]}], 
   "}"}], "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1]
}, Closed]],

Cell["\<\
To get maximum viewing pleasure and maximum information, 
look at one point and follow it. 
Then pick another point and follow it. 
Keep doing this until you have a good visual grasp of the action.\
\>", "Special5"],

Cell["When you hit the unit circle with:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
you stretched out all measurements 
        along the x-axis by a factor of xstretch = 3
and all measurements 
        along the y-axis by a factor of ystretch = 2.
        
That's why it's hard to resist the urge to call diagonal matrices like this \
one by the name \"xystretchers.\".

Check it out for cleared stretch factors:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"xstretch", ",", "ystretch"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["This happens because", "SmallText"],

Cell[TextData[{
 "        ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       StyleBox["xstretch",
        FontColor->RGBColor[1, 0, 1]], "0"},
      {
       StyleBox["0",
        FontColor->RGBColor[1, 0, 1]], "ystretch"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]]],
 ".{x,y} = x{",
 StyleBox["xstretch,0",
  FontColor->RGBColor[1, 0, 1]],
 "} + y{",
 StyleBox["0,ystretch",
  FontColor->RGBColor[0, 0, 1]],
 "}\n                                                   = { ",
 StyleBox["xstretch  ",
  FontColor->RGBColor[1, 0, 1]],
 "x",
 StyleBox[", 0",
  FontColor->RGBColor[1, 0, 1]],
 "} +y {",
 StyleBox["0,ystretch ",
  FontColor->RGBColor[0, 0, 1]],
 "y} \n                                                    = {",
 StyleBox["xstretch  ",
  FontColor->RGBColor[1, 0, 1]],
 "x",
 StyleBox["  ",
  FontColor->RGBColor[1, 0, 1]],
 ", ",
 StyleBox["ystretch ",
  FontColor->RGBColor[0, 0, 1]],
 "y",
 StyleBox["}",
  FontColor->RGBColor[0, 0, 1]],
 ".\n"
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3.b.ii) Making your own xy-stretchers", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Make an xy-stretcher matrix that stretches by a factor of 1.5 in the \
direction of the x-axis and shrinks by a factor of 0.4 direction of the y-axis.
Show off your answer with an action movie.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["The matrix you want is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.5", ",", "0.4"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Check what it does to {x,y}:", "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
Hits with A stretch by a factor of 1.5 in the direction of the x-axis and \
shrinks by a factor of 0.4 in the direction of the y-axis.
Just what it was made to do.
See this matrix do its work:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"actionarrows", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}], ",", 
    " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "A", "]"}], ",", 
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit\>\""}]}], "]"}]}], 
   "}"}], "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["\<\
To get maximum viewing pleasure and maximum information, 
look at one point and follow it. 
Then pick another point and follow it. 
Keep doing this until you have a good visual grasp of the action.\
\>", "Special5"],

Cell["\<\
In this case, one of the stretching factors is actually a shrinking factor.
Play with your own choices of xstretch and ystretch.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4)",
 StyleBox[" ",
  FontWeight->"Plain"],
 "Making your own 2D matrices: \nUsing perpendicular frames to make matrices \
for hanging, aligning and rotating.\nTo align, you load the perpendicular \
frame into the rows\n                ",
 StyleBox["aligner  =  ",
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], "\[RightArrow]"}]},
     {
      RowBox[{
       RowBox[{"perpframe", "[", "2", "]"}], "\[RightArrow]"}]}
    }], "\[NegativeThinSpace] ", ")"}]],
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 ".\nTo hang, you load the perpendicular frame into the columns\n             \
    ",
 StyleBox["hanger = ",
  FontSize->10,
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], "\[IndentingNewLine]"}], 
      RowBox[{"perpframe", "[", "2", "]"}]},
     {
      StyleBox["\[DownArrow]",
       FontSize->18], 
      StyleBox["\[DownArrow]",
       FontSize->18]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->10,
  FontColor->RGBColor[0, 0, 1]],
 ".\nTo rotate, you hang on right hand perpendicular frame"
}], "Subsection",
 CellTags->"MGM.02.B4"],

Cell[CellGroupData[{

Cell["\<\
B.4.a.i) Making  aligner matrices to align on the x and y axes\
\>", "Subsubsection"],

Cell["\<\
Here's a portion of an ellipse hung on a perpendicular frame:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", "0.34"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"1.5", " ", 
      RowBox[{"Cos", "[", "t", "]"}], " ", 
      RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
     RowBox[{"0.9", " ", 
      RowBox[{"Sin", "[", "t", "]"}], " ", 
      RowBox[{"perpframe", "[", "2", "]"}]}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "1.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox[
       RowBox[{"9", " ", "\[Pi]"}], "8"]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"curveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"perpframe", "[", "k", "]"}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
          RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[1]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[2]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"before", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"frameplot", ",", "curveplot", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}]}], "Input",
 AnimationDisplayTime->1],

Cell[TextData[{
 "Now make a matrix (called aligner) \n               ",
 StyleBox["aligner = ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], "\[RightArrow]"}]},
     {
      RowBox[{
       RowBox[{"perpframe", "[", "2", "]"}], "\[RightArrow]"}]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->RGBColor[0, 0, 1]],
 " \nwith\n        ",
 StyleBox["perpframe[1] in the first horizontal row",
  FontWeight->"Bold"],
 "\n and \n       ",
 StyleBox[" perpframe[2] in the second horizontal row.\n   ",
  FontWeight->"Bold"],
 "\nHere's how you do it:"
}], "Text",
 AnimationDisplayTime->1],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"aligner", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell["Compare", "Text"],

Cell[BoxData[{
 RowBox[{"perpframe", "[", "1", "]"}], "\n", 
 RowBox[{"perpframe", "[", "2", "]"}]}], "Input"],

Cell["\<\
Sure enough, 
         perpframe[1] is in the first horizontal row of aligner
and 
         perpframe[2] is in the second horizontal row of aligner.
Now see what happens when you hit this matrix on all points {x[t],y[t]} of \
the plotted curve:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitcurveplot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"aligner", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", "\n", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xyunitvectors", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{"after", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"xyunitvectors", " ", ",", "  ", "hitcurveplot", ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    "  ", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", "->", "\"\<Aligned on xy-axes\>\""}]}], 
   "]"}]}]}], "Input"],

Cell["Review both plots:", "Text"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "after"}], "}"}], "]"}]], "Input",
 AnimationDisplayTime->1],

Cell[CellGroupData[{

Cell[TextData[{
 "The hit with aligner aligns the curve on the x and y axes with \n    ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]]],
 " pointing out the positive x-axis playing the former role of ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 "\nand with \n     ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}]]],
 " pointing out the positive y-axis playing the former role of ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 "\nExplain why this was guaranteed to happen no matter what perpendicular \
frame you start with."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 StyleBox["The  matrix (called aligner) \n               aligner = ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox[
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], "\[RightArrow]"}],
       FontColor->RGBColor[1, 0, 1]]},
     {
      StyleBox[
       RowBox[{
        RowBox[{"perpframe", "[", "2", "]"}], "\[RightArrow]"}],
       FontColor->RGBColor[0, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->GrayLevel[0]],
 StyleBox[" \nwas made with\n        ",
  FontColor->GrayLevel[0]],
 StyleBox["perpframe[1] in the first horizontal row",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["\n and \n       ",
  FontColor->GrayLevel[0]],
 StyleBox[" perpframe[2] in the second horizontal row.",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]]
}], "Text",
 AnimationDisplayTime->1],

Cell[TextData[{
 "\nAccording to B.1) when you hit ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}]}], "}"}]]],
 " with"
}], "SmallText"],

Cell[TextData[{
 "              ",
 StyleBox[" aligner = ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox[
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], "\[RightArrow]"}],
       FontColor->RGBColor[1, 0, 1]]},
     {
      StyleBox[
       RowBox[{
        RowBox[{"perpframe", "[", "2", "]"}], "\[RightArrow]"}],
       FontColor->RGBColor[0, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontColor->GrayLevel[0]],
 " "
}], "SmallText"],

Cell["you get", "SmallText"],

Cell[TextData[{
 "       ",
 StyleBox["aligner .{x[t],y[t} =",
  FontColor->GrayLevel[0]],
 "    ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {
       StyleBox[
        RowBox[{
         RowBox[{"perpframe", "[", "1", "]"}], "\[RightArrow]"}],
        FontColor->RGBColor[1, 0, 1]]},
      {
       StyleBox[
        RowBox[{
         RowBox[{"perpframe", "[", "2", "]"}], "\[RightArrow]"}],
        FontColor->RGBColor[0, 0, 1]]}
     }], "\[NegativeThinSpace]", ")"}], ".", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}],
    FontColor->GrayLevel[0]]}]]],
 "\n          "
}], "SmallText"],

Cell[TextData[{
 "                                    =",
 Cell[BoxData[
  RowBox[{
   StyleBox["  ",
    FontColor->GrayLevel[0]], 
   RowBox[{
    StyleBox["{",
     FontColor->GrayLevel[0]], 
    RowBox[{
     StyleBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}], ".", " ", 
        StyleBox[
         RowBox[{"perpframe", "[", "1", "]"}],
         FontColor->RGBColor[1, 0, 1]]}], ")"}],
      FontColor->GrayLevel[0]], 
     StyleBox[",",
      FontColor->GrayLevel[0]], 
     RowBox[{
      StyleBox["(",
       FontColor->GrayLevel[0]], 
      RowBox[{
       StyleBox[
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}],
        FontColor->GrayLevel[0]], 
       StyleBox[".",
        FontColor->GrayLevel[0]], 
       StyleBox[" ",
        FontColor->GrayLevel[0]], 
       StyleBox[
        RowBox[{"perpframe", "[", "2", "]"}],
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox[")",
       FontColor->GrayLevel[0]]}]}], 
    StyleBox["}",
     FontColor->GrayLevel[0]]}]}]]],
 "\n          "
}], "SmallText"],

Cell["\<\
These are the coordinates of {x[t],y[t]} relative to the perpendicular frame. \
\>", "SmallText"],

Cell["You worked with these in the last lesson.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "And, according to the last lesson, this exactly what you what you plot to \
take a curve ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}]}], "}"}]]],
 " and align it on the x and y -axes with  \n      ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]]],
 " pointing out the positive x-axis playing the former role of ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 "\nand with \n     ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}]]],
 " pointing out the positive y-axis playing the former role of ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 ".\nSee it happen for some random perpendicular frames and random curves: "
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", " ", 
    RowBox[{
     RowBox[{"0.8", "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], " ", "-", "1"}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "]"}], " ", "t"}], "]"}], 
      RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
     RowBox[{"0.7", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "5"}], "}"}]}], "]"}], " ", "t"}], "]"}], "3"], 
      " ", 
      RowBox[{"perpframe", "[", "2", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"curveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"perpframe", "[", "k", "]"}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
          RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[1]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[2]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"frameplot", ",", "curveplot", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitcurveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"aligner", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xyunitvectors", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"xyunitvectors", ",", "hitcurveplot", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Aligned on xy-axes\>\""}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "after"}], "}"}], "]"}]}], "Input",
 AnimationDisplayTime->1],

Cell["\<\
Rerun a couple of times, always noticing that the long axis of the curve \
lines up on the x-axis.
That's because the long axis of the original curve lined up on perpframe[1].\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.4.b) Making  hanger matrices to hang curves on perpendicular frames\
\>", "Subsubsection"],

Cell["Here's a curve  shown with a perpendicular frame:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.8", " ", 
       RowBox[{"(", 
        RowBox[{"1", " ", "-", " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{"0.9", " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "t", "]"}], "5"]}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"curveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"-", "0.5"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"perpframe", "[", "k", "]"}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
          RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[1]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[2]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"before", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"frameplot", ",", "curveplot", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}]}], "Input",
 AnimationDisplayTime->1],

Cell[TextData[{
 "Now make a matrix (called hanger) \n          ",
 StyleBox["hanger = ",
  FontSize->10,
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], "\[IndentingNewLine]"}], 
      RowBox[{"perpframe", "[", "2", "]"}]},
     {
      StyleBox["\[DownArrow]",
       FontSize->18], 
      StyleBox["\[DownArrow]",
       FontSize->18]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->10,
  FontColor->RGBColor[0, 0, 1]],
 " \nwith\n        ",
 StyleBox["perpframe[1] in the first vertical column",
  FontWeight->"Bold"],
 "\n and \n       ",
 StyleBox[" perpframe[2] in the second  vertical column.\n   ",
  FontWeight->"Bold"],
 "\nHere's how you do it:"
}], "Text",
 AnimationDisplayTime->1],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hanger", " ", "=", " ", 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], ",", 
       RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["Compare", "Text"],

Cell[BoxData[{
 RowBox[{"perpframe", "[", "1", "]"}], "\n", 
 RowBox[{"perpframe", "[", "2", "]"}]}], "Input"],

Cell["\<\
Sure enough, 
         perpframe[1] is in the first vertical column of hanger
and 
         perpframe[2] is in the  second vertical column of hanger.
         
Now see what happens when you hit this hanger matrix on all points \
{x[t],y[t]} of the plotted curve:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitcurveplot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"hanger", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", "\n", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Green", ",", " ", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"after", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"frameplot", ",", " ", "hitcurveplot", ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", "->", "\"\<Hung on frame\>\""}]}], "]"}]}]}], "Input"],

Cell["Review both plots:", "Text"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "after"}], "}"}], "]"}]], "Input",
 AnimationDisplayTime->1],

Cell["Watch it happen:", "Text"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "after"}], "}"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "The hit with hanger hangs the ellipse on the plotted perpendicular frame \
with \n     ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 " playing the former role of ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], " "}]]],
 "pointing out the positive x-axis \nand with \n    ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 " playing the former role ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], " "}]]],
 "pointing out the positive y-axis.\nExplain why this was guaranteed to \
happen no matter what perpendicular frame you started with."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 StyleBox["The  matrix (called hanger) \n               hanger =",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontSize->10,
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      RowBox[{
       RowBox[{"prepframe", "[", "1", "]"}], "\[IndentingNewLine]"}], 
      RowBox[{"perpframe", "[", "2", "]"}]},
     {
      StyleBox["\[DownArrow]",
       FontSize->18], 
      StyleBox["\[DownArrow]",
       FontSize->18]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->10,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\nwas made with\n        ",
  FontColor->GrayLevel[0]],
 StyleBox["perpframe[1] in the first vertical column",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox["\n and \n       ",
  FontColor->GrayLevel[0]],
 StyleBox[" perpframe[2] in the second vertical column",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]]
}], "Text",
 AnimationDisplayTime->1],

Cell[TextData[{
 "\nAccording to B.1) when you hit ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}]}], "}"}]]],
 " with"
}], "SmallText"],

Cell[TextData[{
 "             ",
 StyleBox["  hanger =",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontSize->10,
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{
   StyleBox["(",
    FontColor->GrayLevel[0]], "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox[
       RowBox[{
        RowBox[{"prepframe", "[", "1", "]"}], "\[IndentingNewLine]"}],
       FontColor->RGBColor[1, 0, 1]], 
      RowBox[{"perpframe", "[", "2", "]"}]},
     {
      StyleBox["\[DownArrow]",
       FontSize->18,
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["\[DownArrow]",
       FontSize->18]}
    }], "\[NegativeThinSpace]", 
   StyleBox[")",
    FontColor->GrayLevel[0]]}]],
  FontSize->10,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontColor->GrayLevel[0]],
 " "
}], "SmallText"],

Cell["you get", "SmallText"],

Cell[TextData[{
 "       ",
 StyleBox["hanger.{x[t],y[t} =",
  FontColor->GrayLevel[0]],
 "    ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox["(",
     FontSize->10,
     FontColor->GrayLevel[0]], 
    StyleBox["\[NegativeThinSpace]",
     FontSize->10], 
    StyleBox[GridBox[{
       {
        StyleBox[
         RowBox[{
          RowBox[{"prepframe", "[", "1", "]"}], "\[IndentingNewLine]"}],
         FontColor->RGBColor[1, 0, 1]], 
        RowBox[{"perpframe", "[", "2", "]"}]},
       {
        StyleBox["\[DownArrow]",
         FontSize->18,
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox["\[DownArrow]",
         FontSize->18]}
      }],
     FontSize->10], "\[NegativeThinSpace]", 
    StyleBox[")",
     FontColor->GrayLevel[0]]}], 
   StyleBox[" ",
    FontColor->GrayLevel[0]], ".", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}],
    FontColor->GrayLevel[0]]}]]],
 "\n          "
}], "SmallText"],

Cell[TextData[{
 "                                    =",
 Cell[BoxData[
  RowBox[{
   StyleBox["  ",
    FontColor->GrayLevel[0]], 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], 
     StyleBox[
      RowBox[{" ", 
       StyleBox[" ",
        FontColor->GrayLevel[0]]}]], 
     StyleBox[
      RowBox[{"perpframe", "[", "1", "]"}],
      FontColor->RGBColor[1, 0, 1]]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], 
     StyleBox[" ",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{
       RowBox[{"perpframe", "[", "2", "]"}], "."}],
      FontColor->RGBColor[0, 0, 1]]}]}]}]]],
 "\n          "
}], "SmallText"],

Cell[TextData[{
 "\nand this is  exactly the formula used in the last lesson to take a curve ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], ",", 
    RowBox[{"y", "[", "t", "]"}]}], "}"}]]],
 " and hang it on   \n               ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]]],
 "\nwith\n    ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 " playing the former role of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "0"}], "}"}]]],
 "pointing out the positive x-axis \nand with \n    ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 " playing the former role ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}]]],
 " pointing out the positive y-axis.\n    \n    See it happen for some random \
perpendicular frames and random curves:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.8", "  ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], " ", "-", "1"}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}]}], "]"}], " ", "t"}], "]"}]}], ",", 
      RowBox[{"0.7", 
       RowBox[{"Sin", "[", 
        RowBox[{"0.7", "  ", 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "3"}], "}"}]}], "]"}], " ", "t"}], "]"}]}]}], 
     "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"curveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Orange", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"perpframe", "[", "k", "]"}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
          RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[1]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[2]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"frameplot", ",", "curveplot", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitcurveplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"hanger", ".", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"frameplot", ",", "hitcurveplot", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Hung on perp frame\>\""}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "after"}], "}"}], "]"}]}], "Input",
 AnimationDisplayTime->2],

Cell["Rerun several times.", "Text"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.5)  Matrix multiplication: \nA hit with ",
 StyleBox["A.B",
  FontColor->RGBColor[0, 0, 1]],
 " is the same a hit with ",
 StyleBox["B",
  FontColor->RGBColor[0, 0, 1]],
 " followed by a hit with ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " .\nTo get the",
 StyleBox[" first ",
  FontColor->RGBColor[0, 0, 1]],
 "column of A.B , you hit A on the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " column of B. \nTo get the",
 StyleBox[" second ",
  FontColor->RGBColor[0, 0, 1]],
 "column of A.B , you hit A on the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " column of B. \nWhy you ",
 StyleBox["shouldn't",
  FontColor->RGBColor[0, 0, 1]],
 " expect that ",
 StyleBox["A",
  FontColor->RGBColor[1, 0, 1]],
 ".",
 StyleBox["B",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["B",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["A",
  FontColor->RGBColor[1, 0, 1]],
 " "
}], "Subsection",
 CellTags->"MGM.02.B5"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.5.a.i) A hit with ",
 StyleBox["A.B",
  FontColor->RGBColor[0, 0, 1]],
 " is the same a hit with ",
 StyleBox["B",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["followed",
  FontColor->RGBColor[1, 0, 0]],
 " by a hit with ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " "
}], "Subsubsection"],

Cell["Here is a cleared 2D matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"a", "b"},
        {"c", "d"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Here's another cleared 2D matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"r", ",", "s", ",", "t", ",", "v"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"r", "s"},
        {"t", "v"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "B", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Here is ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of A times B:"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A", ".", "B"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Maybe not what you expected.
Why do almost all folks agree that this is the right way to multiply matrices?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Folks all across the world have agreed on this way of matrix multiplication \
so that a hit with ",
 StyleBox["A.B",
  FontColor->RGBColor[0, 0, 1]],
 " is the same as a hit with ",
 StyleBox["B",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["followed",
  FontColor->RGBColor[1, 0, 0]],
 " by a hit with ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".\nWatch it happen:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox["hitbyB",
   FontColor->RGBColor[1, 0, 1]], "=", 
  RowBox[{"B", ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}]}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{
    StyleBox["hitbyB",
     FontColor->RGBColor[1, 0, 1]], "followedby", 
    StyleBox["hitbyA",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], ".", 
    StyleBox["hitbyB",
     FontColor->RGBColor[1, 0, 1]]}], "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"hitby", 
    StyleBox["AB",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{"A", ".", "B"}],
      FontColor->RGBColor[0, 0, 1]], ")"}], ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{"A", ".", "B"}],
      FontColor->RGBColor[0, 0, 1]], ")"}], ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "==", 
  RowBox[{"Expand", "[", 
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["B",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], "]"}]}]], "Input",
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.5.a.ii) What matrix multiplication is good for", "Subsubsection"],

Cell[CellGroupData[{

Cell["What's matrix multiplication good for?", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
You can do two hits at once. By multiplying A.B and then hitting, you get the \
same result as hitting by B and then hitting by A.

Sometimes you see what A.B does in terms of what A and B do.
To see more on this, go in to part iii)\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.5.a.iii) To get the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " column of A.B, you hit A on the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " column of B.\n                 To get the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " column of A.B, you hit A on the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " column of B"
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Given two 2D matrices A and ",
 StyleBox["B",
  FontColor->GrayLevel[0]],
 ", explain how to calculate ",
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["B",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "by hitting A on the columns of ",
 StyleBox["B.",
  FontColor->GrayLevel[0]]
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "To get the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " column of A.B, you hit A on the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " column of B. \nTo get the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " column of A.B, you hit A on the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " column of B."
}], "SmallText"],

Cell["Try this out on these cleared 2D matrices A and B:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "r", ",", "s", ",", "t", ",", 
     "v"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"a", "b"},
        {"c", "d"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"r", "s"},
        {"t", "v"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " ", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\"\<A is\>\"", 
   RowBox[{"MatrixForm", "[", "A", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<B is\>\"", " ", 
  RowBox[{"MatrixForm", "[", "B", "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["The first vertical column of B is", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "Bcol", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Bcol", "[", "1", "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"r", ",", "t"}], "}"}]}]}], "Input"],

Cell["The second vertical column of B is", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bcol", "[", "2", "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"s", ",", "v"}], "}"}]}]], "Input"],

Cell[TextData[{
 "Here's what you get when you hit A on the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " column of B:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", 
  RowBox[{"Bcol", "[", 
   StyleBox["1",
    FontColor->RGBColor[0, 0, 1]], "]"}]}]], "Input"],

Cell[TextData[{
 "That",
 "; ",
 "s the same as the vector that's in ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " column of A.B:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A", ".", "B"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Here's what you get when you hit A on the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " column of B:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", 
  RowBox[{"Bcol", "[", 
   StyleBox["2",
    FontColor->RGBColor[0, 0, 1]], "]"}]}]], "Input"],

Cell[TextData[{
 "That's the same as the vector that is in the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " column of A.B:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A", ".", "B"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "This confirms this rule:\nTo get the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " column of A.B, you hit A on the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " column of B. \nTo get the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " column of A.B, you hit A on the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " column of B."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.5.a.iv) The action of A.B in terms of the action of B and the action of A\
\>", "Subsubsection"],

Cell["Here's a hanger matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", "0.6"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 StyleBox["Hits with this hanger hang on the chosen ",
  FontVariations->{"CompatibilityType"->0}],
 "perpendicular",
 StyleBox[" frame.",
  FontVariations->{"CompatibilityType"->0}]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Here's an xystretcher matrix", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", " ", "=", " ", "2.0"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", "=", " ", "0.8"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xystretcher", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "xystretcher", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[StyleBox["Hits with this xystretcher \nmultiply all \
measurements in the direction of the x axis by 2 and\nmultiply all \
measurements in the direction of the y axis by 0.8",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Put A = hanger and B = xystretcher and calculate A.B:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", "hanger"}], ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", " ", "=", " ", "xystretcher"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A", ".", "B"}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[{
 "Predict what a hit with A.B does to the unit circle centered at ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}]]],
 " and test out your prediction with an action movie."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Because hits with B stretch along the x and y axes, a hit with B will stretch \
the unit circle into and ellipse.
When you follow the hit by B with a hit with the hanger matrix A, you gotta \
get a tilted ellipse. 

Try it out:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "x", ",", "y", ",", "t", ",", "hitplotter", ",", "hitpointplotter", ",", 
     "pointcolor", ",", "actionarrows", ",", "matrix2D"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", 
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "12"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"matrix2D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"actionarrows", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"matrix2D", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.25"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"actionarrows", "[", 
       RowBox[{"A", ".", "B"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}], ",", 
    " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"A", ".", "B"}], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"A", ".", "B"}], "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit\>\""}]}], "]"}]}], 
   "}"}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
Exactly as predicted.
You can view this in three stages:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"stage1", "=", 
  RowBox[{"Show", "[", "before", "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
Hitting this circle with A.B is the same as hitting the circle with B and \
then hitting the result with A. Here's what you get when you hit the circle \
with B:\
\>", "SmallText",
 AnimationDisplayTime->1],

Cell[BoxData[
 RowBox[{"stage2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", "B", "]"}], ",", 
    RowBox[{"hitpointplotter", "[", "B", "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit with B\>\""}]}], 
   "]"}]}]], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["Here's what you get when you hit the ellipse with A:", "SmallText",
 AnimationDisplayTime->1],

Cell[BoxData[
 RowBox[{"stage3", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"A", ".", "B"}], "]"}], ",", 
    RowBox[{"hitpointplotter", "[", 
     RowBox[{"A", ".", "B"}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit with A.B\>\""}]}], 
   "]"}]}]], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.5.a.v)  Why you can't expect that A.B = B.A", "Subsubsection"],

Cell["Make sure all the code from part iii) above is live.", "Special5"],

Cell[TextData[StyleBox["Stay with the same matrices A and B as in the last \
part and look at the result of hitting the unit circle with B.A",
 FontColor->RGBColor[0, 0, 0.500008]]], "Text"],

Cell[BoxData[
 RowBox[{"BAhitplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"B", ".", "A"}], "]"}], ",", 
    RowBox[{"hitpointplotter", "[", 
     RowBox[{"B", ".", "A"}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit by B.A\>\""}]}], 
   "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell["Compare what you get when you hit the unit circle with A.B", "Text"],

Cell[BoxData[
 RowBox[{"ABhitplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"A", ".", "B"}], "]"}], ",", 
    RowBox[{"hitpointplotter", "[", 
     RowBox[{"A", ".", "B"}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit by B.A\>\""}]}], 
   "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell["See them both:", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"ABhitplot", ",", "BAhitplot", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\< A.B and B.A\>\""}]}], "]"}]], "Input",\

 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Describe what you see and explain why it happened and explain what it means.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Take another look:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"ABhitplot", ",", "BAhitplot", ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Both hits\>\""}]}], "]"}], 
  " "}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
One of these ellipses results from hitting the unit circle with A.B;  the \
other results from hitting the unit circle with B.A.
Because these ellipse are not the same, you are left with the vivid \
conclusion that 
          A.B \[NotEqual] B.A:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"A", ".", "B"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"B", ".", "A"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
This is natural because:
\[Rule] The hit with B stretches out along the x and y -axes.
\[Rule] The hit with A rotates.
Consequently: 
\[Rule] The hit with A.B stretches and then rotates, 
but
\[Rule] The hit with B.A rotates and then stretches. 
And the results are not the same.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.02.B1"->{
  Cell[29457, 802, 1056, 38, 136, "Subsection",
   CellTags->"MGM.02.B1"]},
 "MGM.02.B2"->{
  Cell[46113, 1453, 15932, 881, 209, "Subsection",
   CellTags->"MGM.02.B2"]},
 "MGM.02.B3"->{
  Cell[97968, 3548, 499, 20, 76, "Subsection",
   CellTags->"MGM.02.B3"]},
 "MGM.02.B4"->{
  Cell[113481, 4125, 1326, 42, 239, "Subsection",
   CellTags->"MGM.02.B4"]},
 "MGM.02.B5"->{
  Cell[155391, 5526, 968, 39, 136, "Subsection",
   CellTags->"MGM.02.B5"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.02.B1", 230759, 7463},
 {"MGM.02.B2", 230851, 7466},
 {"MGM.02.B3", 230946, 7469},
 {"MGM.02.B4", 231037, 7472},
 {"MGM.02.B5", 231131, 7475}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 119, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6356, 137, 193, 7, 28, "Special2"],
Cell[6552, 146, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7869, 188, 38, 0, 31, "Subsubsection"],
Cell[7910, 190, 1344, 31, 156, "Input"],
Cell[9257, 223, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9430, 229, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26801, 712, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27048, 723, 39, 0, 31, "Subsubsection"],
Cell[27090, 725, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29457, 802, 1056, 38, 136, "Subsection",
 CellTags->"MGM.02.B1"],
Cell[CellGroupData[{
Cell[30538, 844, 39, 0, 31, "Subsubsection"],
Cell[30580, 846, 43, 0, 24, "Text"],
Cell[30626, 848, 334, 11, 55, "Input"],
Cell[CellGroupData[{
Cell[30985, 863, 89, 2, 24, "Text"],
Cell[31077, 867, 27, 0, 23, "Special1"],
Cell[31107, 869, 37, 0, 24, "SmallText"],
Cell[31147, 871, 454, 15, 55, "Input"],
Cell[31604, 888, 439, 15, 124, "SmallText"],
Cell[32046, 905, 245, 9, 20, "Input"],
Cell[32294, 916, 245, 9, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[32588, 931, 42, 0, 31, "Subsubsection"],
Cell[32633, 933, 47, 0, 24, "Text"],
Cell[32683, 935, 362, 13, 55, "Input"],
Cell[CellGroupData[{
Cell[33070, 952, 90, 2, 24, "Text"],
Cell[33163, 956, 27, 0, 23, "Special1"],
Cell[33193, 958, 37, 0, 24, "SmallText"],
Cell[33233, 960, 483, 17, 55, "Input"],
Cell[33719, 979, 500, 17, 124, "SmallText"],
Cell[34222, 998, 154, 4, 20, "Input"],
Cell[34379, 1004, 154, 4, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[34582, 1014, 1037, 37, 122, "Subsubsection"],
Cell[35622, 1053, 47, 0, 24, "Text"],
Cell[35672, 1055, 336, 12, 55, "Input"],
Cell[36011, 1069, 163, 5, 49, "Text"],
Cell[36177, 1076, 202, 7, 36, "Input"],
Cell[36382, 1085, 148, 4, 12, "Special2"],
Cell[CellGroupData[{
Cell[36555, 1093, 76, 0, 24, "Text"],
Cell[36634, 1095, 27, 0, 23, "Special1"],
Cell[36664, 1097, 67, 1, 24, "SmallText"],
Cell[36734, 1100, 37, 0, 24, "SmallText"],
Cell[36774, 1102, 336, 12, 55, "Input"],
Cell[37113, 1116, 94, 2, 24, "SmallText"],
Cell[37210, 1120, 121, 4, 20, "Input"],
Cell[37334, 1126, 55, 0, 24, "SmallText"],
Cell[37392, 1128, 114, 3, 20, "Input"],
Cell[37509, 1133, 114, 3, 20, "Input"],
Cell[37626, 1138, 58, 0, 24, "SmallText"],
Cell[37687, 1140, 551, 21, 24, "SmallText"],
Cell[38241, 1163, 562, 20, 20, "Input"],
Cell[38806, 1185, 70, 1, 24, "SmallText"],
Cell[38879, 1188, 77, 0, 24, "SmallText"],
Cell[38959, 1190, 63, 1, 20, "Input"],
Cell[39025, 1193, 43, 0, 24, "SmallText"],
Cell[39071, 1195, 121, 4, 20, "Input"],
Cell[39195, 1201, 56, 0, 24, "SmallText"],
Cell[39254, 1203, 154, 4, 20, "Input"],
Cell[39411, 1209, 154, 4, 20, "Input"],
Cell[39568, 1215, 461, 17, 49, "SmallText"],
Cell[40032, 1234, 449, 16, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[40530, 1256, 67, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[40622, 1260, 58, 0, 24, "Text"],
Cell[40683, 1262, 27, 0, 23, "Special1"],
Cell[40713, 1264, 118, 4, 74, "SmallText"],
Cell[40834, 1270, 1494, 49, 111, "Input"],
Cell[42331, 1321, 39, 0, 24, "SmallText"],
Cell[42373, 1323, 317, 11, 55, "Input"],
Cell[42693, 1336, 96, 2, 24, "SmallText"],
Cell[42792, 1340, 156, 5, 20, "Input"],
Cell[42951, 1347, 54, 0, 24, "SmallText"],
Cell[43008, 1349, 841, 24, 51, "Input"],
Cell[43852, 1375, 122, 3, 49, "SmallText"],
Cell[43977, 1380, 1858, 57, 115, "Input"],
Cell[45838, 1439, 160, 5, 23, "Special2"],
Cell[46001, 1446, 51, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[46113, 1453, 15932, 881, 209, "Subsection",
 CellTags->"MGM.02.B2"],
Cell[CellGroupData[{
Cell[62070, 2338, 63, 0, 31, "Subsubsection"],
Cell[62136, 2340, 67, 0, 24, "Text"],
Cell[62206, 2342, 1790, 59, 141, "Input"],
Cell[CellGroupData[{
Cell[64021, 2405, 572, 21, 122, "Text"],
Cell[64596, 2428, 55, 1, 23, "Special1"],
Cell[64654, 2431, 248, 9, 24, "SmallText"],
Cell[64905, 2442, 439, 17, 55, "Input"],
Cell[65347, 2461, 270, 9, 24, "SmallText"],
Cell[65620, 2472, 1451, 47, 100, "Input"],
Cell[67074, 2521, 50, 0, 24, "SmallText"],
Cell[67127, 2523, 178, 6, 20, "Input"],
Cell[67308, 2531, 234, 4, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[67591, 2541, 72, 0, 31, "Subsubsection"],
Cell[67666, 2543, 61, 0, 24, "Text"],
Cell[67730, 2545, 1826, 59, 156, "Input"],
Cell[CellGroupData[{
Cell[69581, 2608, 486, 17, 122, "Text"],
Cell[70070, 2627, 27, 0, 23, "Special1"],
Cell[70100, 2629, 91, 2, 24, "SmallText"],
Cell[70194, 2633, 362, 14, 55, "Input"],
Cell[70559, 2649, 117, 3, 24, "SmallText"],
Cell[70679, 2654, 1155, 34, 66, "Input"],
Cell[71837, 2690, 135, 3, 20, "Input"],
Cell[71975, 2695, 32, 0, 24, "SmallText"],
Cell[72010, 2697, 50, 0, 24, "SmallText"],
Cell[72063, 2699, 178, 6, 20, "Input"],
Cell[72244, 2707, 212, 5, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[72505, 2718, 56, 0, 31, "Subsubsection"],
Cell[72564, 2720, 51, 0, 24, "Text"],
Cell[72618, 2722, 177, 6, 20, "Input"],
Cell[CellGroupData[{
Cell[72820, 2732, 135, 3, 49, "Text"],
Cell[72958, 2737, 27, 0, 23, "Special1"],
Cell[72988, 2739, 76, 0, 24, "SmallText"],
Cell[73067, 2741, 3181, 102, 297, "Input"],
Cell[76251, 2845, 204, 5, 74, "SmallText"],
Cell[76458, 2852, 2035, 60, 156, "Input"],
Cell[78496, 2914, 125, 3, 20, "Input"],
Cell[78624, 2919, 96, 2, 24, "SmallText"],
Cell[78723, 2923, 1254, 36, 96, "Input"],
Cell[79980, 2961, 432, 10, 199, "SmallText"],
Cell[80415, 2973, 511, 14, 51, "Input"],
Cell[80929, 2989, 225, 5, 55, "Special5"],
Cell[81157, 2996, 35, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[81241, 3002, 63, 0, 31, "Subsubsection"],
Cell[81307, 3004, 273, 11, 72, "Text"],
Cell[CellGroupData[{
Cell[81605, 3019, 111, 3, 24, "Text"],
Cell[81719, 3024, 27, 0, 23, "Special1"],
Cell[81749, 3026, 66, 0, 24, "SmallText"],
Cell[81818, 3028, 6622, 206, 557, "Input"],
Cell[88443, 3236, 226, 6, 67, "Special5"],
Cell[88672, 3244, 166, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[88887, 3253, 58, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[88970, 3257, 73, 0, 24, "Text"],
Cell[89046, 3259, 27, 0, 23, "Special1"],
Cell[89076, 3261, 162, 3, 49, "SmallText"],
Cell[89241, 3266, 61, 0, 20, "Special5"],
Cell[89305, 3268, 6778, 215, 496, "Input"],
Cell[96086, 3485, 251, 6, 67, "Special5"],
Cell[96340, 3493, 49, 0, 24, "SmallText"],
Cell[96392, 3495, 1258, 37, 145, "Input"],
Cell[97653, 3534, 225, 5, 55, "Special5"],
Cell[97881, 3541, 26, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[97968, 3548, 499, 20, 76, "Subsection",
 CellTags->"MGM.02.B3"],
Cell[CellGroupData[{
Cell[98492, 3572, 289, 13, 47, "Subsubsection"],
Cell[98784, 3587, 46, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[98855, 3591, 129, 3, 20, "Input"],
Cell[98987, 3596, 153, 6, 38, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[99177, 3607, 107, 3, 24, "Text"],
Cell[99287, 3612, 27, 0, 23, "Special1"],
Cell[99317, 3614, 166, 3, 49, "SmallText"],
Cell[99486, 3619, 268, 9, 36, "Input"],
Cell[99757, 3630, 796, 38, 97, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[100602, 3674, 278, 10, 47, "Subsubsection"],
Cell[100883, 3686, 53, 0, 24, "Text"],
Cell[100939, 3688, 245, 8, 36, "Input"],
Cell[101187, 3698, 178, 5, 20, "Input"],
Cell[CellGroupData[{
Cell[101390, 3707, 316, 6, 99, "Text"],
Cell[101709, 3715, 27, 0, 23, "Special1"],
Cell[101739, 3717, 120, 3, 49, "SmallText"],
Cell[CellGroupData[{
Cell[101884, 3724, 474, 16, 66, "Input"],
Cell[102361, 3742, 108, 3, 24, "SmallText"],
Cell[102472, 3747, 5195, 160, 447, "Input"]
}, Closed]],
Cell[107682, 3910, 225, 5, 55, "Special5"],
Cell[107910, 3917, 55, 0, 24, "SmallText"],
Cell[107968, 3919, 88, 2, 20, "Input"],
Cell[108059, 3923, 358, 10, 224, "SmallText"],
Cell[108420, 3935, 403, 13, 51, "Input"],
Cell[108826, 3950, 244, 8, 36, "Input"],
Cell[109073, 3960, 41, 0, 24, "SmallText"],
Cell[109117, 3962, 1011, 41, 122, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[110177, 4009, 64, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[110266, 4013, 217, 4, 74, "Text"],
Cell[110486, 4019, 27, 0, 23, "Special1"],
Cell[110516, 4021, 44, 0, 24, "SmallText"],
Cell[110563, 4023, 463, 16, 51, "Input"],
Cell[111029, 4041, 49, 0, 24, "SmallText"],
Cell[111081, 4043, 121, 4, 20, "Input"],
Cell[111205, 4049, 221, 5, 99, "SmallText"],
Cell[111429, 4056, 1603, 50, 156, "Input"],
Cell[113035, 4108, 225, 5, 55, "Special5"],
Cell[113263, 4115, 157, 3, 49, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[113481, 4125, 1326, 42, 239, "Subsection",
 CellTags->"MGM.02.B4"],
Cell[CellGroupData[{
Cell[114832, 4171, 95, 2, 31, "Subsubsection"],
Cell[114930, 4175, 85, 2, 24, "Text"],
Cell[115018, 4179, 3961, 123, 377, "Input"],
Cell[118982, 4304, 709, 22, 222, "Text"],
Cell[119694, 4328, 288, 8, 36, "Input"],
Cell[119985, 4338, 23, 0, 24, "Text"],
Cell[120011, 4340, 110, 2, 36, "Input"],
Cell[120124, 4344, 268, 7, 149, "Text"],
Cell[120395, 4353, 2232, 64, 156, "Input"],
Cell[122630, 4419, 34, 0, 24, "Text"],
Cell[122667, 4421, 151, 4, 20, "Input"],
Cell[CellGroupData[{
Cell[122843, 4429, 606, 17, 149, "Text"],
Cell[123452, 4448, 27, 0, 23, "Special1"],
Cell[123482, 4450, 904, 28, 172, "Text"],
Cell[124389, 4480, 207, 8, 49, "SmallText"],
Cell[124599, 4490, 569, 21, 47, "SmallText"],
Cell[125171, 4513, 28, 0, 24, "SmallText"],
Cell[125202, 4515, 715, 26, 72, "SmallText"],
Cell[125920, 4543, 1236, 45, 49, "SmallText"],
Cell[127159, 4590, 107, 2, 24, "SmallText"],
Cell[127269, 4594, 108, 2, 12, "Special2"],
Cell[127380, 4598, 790, 23, 149, "SmallText"],
Cell[128173, 4623, 7241, 222, 588, "Input"],
Cell[135417, 4847, 204, 4, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[135670, 4857, 102, 2, 31, "Subsubsection"],
Cell[135775, 4861, 65, 0, 24, "Text"],
Cell[135843, 4863, 3961, 124, 346, "Input"],
Cell[139807, 4989, 816, 27, 235, "Text"],
Cell[140626, 5018, 541, 17, 36, "Input"],
Cell[141170, 5037, 23, 0, 24, "Text"],
Cell[141196, 5039, 110, 2, 36, "Input"],
Cell[141309, 5043, 286, 8, 174, "Text"],
Cell[141598, 5053, 1316, 37, 96, "Input"],
Cell[142917, 5092, 34, 0, 24, "Text"],
Cell[142954, 5094, 151, 4, 20, "Input"],
Cell[143108, 5100, 32, 0, 24, "Text"],
Cell[143143, 5102, 125, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[143293, 5109, 662, 20, 149, "Text"],
Cell[143958, 5131, 27, 0, 23, "Special1"],
Cell[143988, 5133, 953, 31, 185, "Text"],
Cell[144944, 5166, 207, 8, 49, "SmallText"],
Cell[145154, 5176, 798, 31, 60, "SmallText"],
Cell[145955, 5209, 28, 0, 24, "SmallText"],
Cell[145986, 5211, 1013, 39, 85, "SmallText"],
Cell[147002, 5252, 662, 25, 49, "SmallText"],
Cell[147667, 5279, 930, 29, 249, "SmallText"],
Cell[148600, 5310, 6691, 207, 539, "Input"],
Cell[155294, 5519, 36, 0, 24, "Text"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[155391, 5526, 968, 39, 136, "Subsection",
 CellTags->"MGM.02.B5"],
Cell[CellGroupData[{
Cell[156384, 5569, 322, 14, 31, "Subsubsection"],
Cell[156709, 5585, 44, 0, 24, "Text"],
Cell[156756, 5587, 428, 15, 71, "Input"],
Cell[157187, 5604, 49, 0, 24, "Text"],
Cell[157239, 5606, 428, 15, 70, "Input"],
Cell[157670, 5623, 121, 5, 24, "Text"],
Cell[157794, 5630, 111, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[157930, 5637, 131, 3, 49, "Text"],
Cell[158064, 5642, 27, 0, 23, "Special1"],
Cell[158094, 5644, 416, 15, 74, "SmallText"],
Cell[158513, 5661, 303, 11, 36, "Input"],
Cell[158819, 5674, 392, 14, 20, "Input"],
Cell[159214, 5690, 373, 14, 20, "Input"],
Cell[159590, 5706, 554, 20, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[160193, 5732, 73, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[160291, 5736, 54, 0, 24, "Text"],
Cell[160348, 5738, 27, 0, 23, "Special1"],
Cell[160378, 5740, 261, 6, 124, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[160688, 5752, 413, 14, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[161126, 5770, 354, 14, 49, "Text"],
Cell[161483, 5786, 27, 0, 23, "Special1"],
Cell[161513, 5788, 383, 14, 49, "SmallText"],
Cell[161899, 5804, 71, 0, 24, "SmallText"],
Cell[161973, 5806, 900, 31, 150, "Input"],
Cell[162876, 5839, 54, 0, 24, "SmallText"],
Cell[162933, 5841, 238, 7, 36, "Input"],
Cell[163174, 5850, 55, 0, 24, "SmallText"],
Cell[163232, 5852, 137, 4, 20, "Input"],
Cell[163372, 5858, 148, 5, 24, "SmallText"],
Cell[163523, 5865, 128, 4, 20, "Input"],
Cell[163654, 5871, 159, 7, 24, "SmallText"],
Cell[163816, 5880, 111, 3, 20, "Input"],
Cell[163930, 5885, 149, 5, 24, "SmallText"],
Cell[164082, 5892, 128, 4, 20, "Input"],
Cell[164213, 5898, 154, 5, 24, "SmallText"],
Cell[164370, 5905, 111, 3, 20, "Input"],
Cell[164484, 5910, 409, 14, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[164942, 5930, 108, 2, 31, "Subsubsection"],
Cell[165053, 5934, 39, 0, 24, "Text"],
Cell[165095, 5936, 1149, 38, 100, "Input"],
Cell[166247, 5976, 261, 8, 12, "Special2"],
Cell[166511, 5986, 44, 0, 24, "Text"],
Cell[166558, 5988, 503, 16, 66, "Input"],
Cell[167064, 6006, 293, 5, 35, "Special2"],
Cell[167360, 6013, 69, 0, 24, "Text"],
Cell[167432, 6015, 316, 10, 51, "Input"],
Cell[CellGroupData[{
Cell[167773, 6029, 219, 6, 49, "Text"],
Cell[167995, 6037, 27, 0, 23, "Special1"],
Cell[168025, 6039, 256, 7, 149, "SmallText"],
Cell[168284, 6048, 5969, 184, 507, "Input"],
Cell[174256, 6234, 85, 3, 49, "SmallText"],
Cell[174344, 6239, 115, 3, 20, "Input"],
Cell[174462, 6244, 216, 5, 49, "SmallText"],
Cell[174681, 6251, 323, 9, 36, "Input"],
Cell[175007, 6262, 99, 1, 24, "SmallText"],
Cell[175109, 6265, 377, 11, 36, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[175535, 6282, 70, 0, 31, "Subsubsection"],
Cell[175608, 6284, 72, 0, 20, "Special5"],
Cell[175683, 6286, 190, 2, 49, "Text"],
Cell[175876, 6290, 352, 10, 36, "Input"],
Cell[176231, 6302, 74, 0, 24, "Text"],
Cell[176308, 6304, 352, 10, 36, "Input"],
Cell[176663, 6316, 30, 0, 24, "Text"],
Cell[176696, 6318, 235, 6, 20, "Input"],
Cell[CellGroupData[{
Cell[176956, 6328, 100, 2, 24, "Text"],
Cell[177059, 6332, 27, 0, 23, "Special1"],
Cell[177089, 6334, 39, 0, 24, "SmallText"],
Cell[177131, 6336, 254, 7, 20, "Input"],
Cell[177388, 6345, 275, 6, 99, "SmallText"],
Cell[177666, 6353, 111, 3, 20, "Input"],
Cell[177780, 6358, 111, 3, 20, "Input"],
Cell[177894, 6363, 308, 9, 199, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
