(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    199353,       5023]
NotebookOptionsPosition[    139122,       3701]
NotebookOutlinePosition[    191688,       4792]
CellTagsIndexPosition[    191645,       4789]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.04 SVD Analysis of 2D Matrices\n",
 StyleBox[" LITERACY",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[TextData[StyleBox["What you should be able to handle when you are away \
from the machine.",
 FontSize->12]], "SmallText"],

Cell["L.1)", "Subsubsection"],

Cell[TextData[{
 "Explain this:\nGiven a 2D matrix A, if you can come up with an s (in \
radians) so that\n   ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "s", "]"}], ",", 
     RowBox[{"Sin", "[", "s", "]"}]}], "}"}]}]]],
 " is perpendicular to ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"s", "+", 
       FractionBox["\[Pi]", "2"]}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"s", "+", 
       FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]]],
 ", then you can read off \n   1) SVD aligner for A\n   2) SVD stretchfactors \
for A\n   3) SVD hanger for A"
}], "Text"],

Cell["L.2)", "Subsubsection"],

Cell["Here's a random 2D matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", "\n", 
     "             ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1.5"}], "}"}]}], "]"}], ",", 
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2.68789606229459`", "1.346799564107765`"},
     {"1.4580273608185434`", 
      RowBox[{"-", "1.3237364166954555`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5032372539790916`*^9}]
}, Open  ]],

Cell["\<\
Here's the ellipse you get when you hit this matrix on the unit circle \
centered at {0,0}:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", 
    RowBox[{"1.1", " ", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"SingularValues", "[", "A", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "t", "]"}], ";"}], "\n", 
 RowBox[{"ellipseplot", " ", "=", " ", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"A", ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], ",", 
       RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0, 0, 1], Thickness[0.01], LineBox[CompressedData["
1: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
Ag==
     "]]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotRange->{{-3.4449840774229203`, 
   3.4449840774229203`}, {-3.4449840774229203`, 3.4449840774229203`}},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.503237254172275*^9}]
}, Open  ]],

Cell["The SVD hanger matrix for A is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hanger", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.9408169969639395`"}], "0.3389150014734588`"},
     {
      RowBox[{"-", "0.3389150014734588`"}], 
      RowBox[{"-", "0.9408169969639395`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503237254241599*^9}]
}, Open  ]],

Cell["The SVD stretcher matrix for A is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stretcher", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
     "\[RightDoubleBracket]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3.131803706748109`", "0.`"},
     {"0.`", "1.763117051065994`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503237254274951*^9}]
}, Open  ]],

Cell["The SVD aligner matrix for A is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aligner", "=", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "3", 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.9652474834568204`"}], 
      RowBox[{"-", "0.2613375129602998`"}]},
     {
      RowBox[{"-", "0.26133751296029983`"}], "0.9652474834568204`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503237254308526*^9}]
}, Open  ]],

Cell["\<\
Fill the blanks:
The length of the long axis of this ellipse is ....................
The length of the short axis of this ellipse is....................
The perpendicular frame {perpframe[1],perpframe[2]} that defines the long and \
the short axes of this ellipse is 
              perpframe[1] = {.........................., \
......................}
              perpframe[2] = {.........................., \
......................}
The area enclosed by this ellipse is (...............................) times \
(............................)  times \[Pi].\
\>", "Text",
 Evaluatable->False],

Cell["L.3)", "Subsubsection"],

Cell["\<\
Given a 2D matrix A how do you use the SVD stretch factors of A to determine \
whether A is invertible?\
\>", "Text"],

Cell["L.4)", "Subsubsection"],

Cell["\<\
Given a 2D matrix A how do you use the SVD stretch factors of A to determine \
the rank of A?\
\>", "Text"],

Cell["L.5)", "Subsubsection"],

Cell["\<\
Lots of folks like to say that a given 2D matrix A is:
\[Rule] invertible if Det[A] \[NotEqual] 0
\[Rule] not invertible if Det[A] = 0.
Explain why they are right.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["L.6)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "0"},
     {"0", "b"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".aligner.\nwith a and b both positive. \nThis information tells you that \
given any 2D vector Y, there is exactly one 2D vector X with A.X = Y.\n\
Agree........................................\n\
Disagree........................................"
}], "Text"],

Cell["L.7)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "0"},
     {"0", "0"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".aligner.\nwith a > 0. \nThis information tells you that the rank of A is \
......................"
}], "Text"],

Cell["L.8)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "0"},
     {"0", "0"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".aligner.\nwith a >0. \nThis information tells you that if a 2D vector Y is \
on a certain line through {0,0}, then there is exactly one 2D vector X with \
A.X = Y.\nAgree........................................\n\
Disagree........................................"
}], "Text"],

Cell["L.9)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"1.234", "0"},
     {"0", "0.0"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".aligner.\nThis information tells you that given a 2D vector Y, then  \
either\nA.X = Y has no solution X or A.X = Y has many solutions X.\n.\n\
Agree........................................\n\
Disagree........................................"
}], "Text"],

Cell["L.10)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"3.0", "0"},
     {"0", "2.0"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".aligner.\nYou plot the SVD aligner frame and learn it is a right hand \
perpendicular frame.\nYou plot the SVD hanger frame and learn it is a right \
hand perpendicular frame.\nFill the blank:\nDet[A] = \
........................................."
}], "Text"],

Cell["L.11)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"2.0", "0"},
     {"0", "5.0"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".aligner.\nYou plot the SVD aligner frame and learn it is a left hand \
perpendicular frame.\nYou plot the SVD hanger frame and learn it is a left \
hand perpendicular frame.\nFill the blank:\nDet[A] = \
........................................."
}], "Text"],

Cell["L.12)", "Subsubsection"],

Cell["\<\
You are given a 2D matrix A and learn that  Det[A] < 0. This tells you that a \
hit with A incorporates a flip.
Agree....... Disagree........\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["L.13)", "Subsubsection"],

Cell["\<\
You are given a 2D matrix A and learn that  Det[A] > 0. This tells you that  \
a hit with A incorporates no flip.
Agree....... Disagree........\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["L.14)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"4.0", "0"},
     {"0", "0.5"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".aligner.\nYou plot the SVD aligner frame and learn it is a right hand \
perpendicular frame.\nYou plot the SVD hanger frame and learn it is a left \
hand perpendicular frame.\nFill the blank:\nDet[A] = \
........................................."
}], "Text"],

Cell["L.15)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"3.0", "0"},
     {"0", "2.0"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".aligner.\nYou plot the aligner frame and learn it is a left hand \
perpendicular frame.\nYou plot the hanger frame and learn it is a right hand \
perpendicular frame.\nFill the blank:\nDet[A] = \
........................................."
}], "Text"],

Cell["L.16)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n             ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["hanger"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "0"},
     {"0", "b"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["aligner"]],
 ".\nUsing this, you can compute ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"t", " "}]]]],
 "via the formula:\n\na)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"b", "0"},
     {"0", "a"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["hanger"]],
 "             b)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"b", "0"},
     {"0", "a"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 "\n\nc)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "0"},
     {"0", "b"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "         d)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"b", "0"},
     {"0", "a"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "\n\nMy choice is ..........."
}], "Text"],

Cell["L.17)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n             ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["hanger"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "0"},
     {"0", "b"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["aligner"]],
 ".\nThe aligner frame for A serves as a hanger frame for ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " and the hanger frame for A serves as an aligner frame for ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".\nAgree........ Disagree........."
}], "Text"],

Cell["L.18)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A, explain why\n\t\tDet[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] = Det[A]. "
}], "Text"],

Cell["L.19)", "Subsubsection"],

Cell[TextData[{
 "Given an invertible 2D matrix A you do an SVD analysis and get\n            \
 ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["hanger"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "0"},
     {"0", "b"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["aligner"]],
 ".\nUsing this, you can compute ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{
    RowBox[{"-", "1"}], " "}]]]],
 "via the formula:\n\na)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      FractionBox["1", "a"], "0"},
     {"0", 
      FractionBox["1", "b"]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["hanger"]],
 "       b)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"\[NegativeThinSpace]", 
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {
       FractionBox["1", "a"], "0"},
      {"0", 
       FractionBox["1", "b"]}
     }], "\[NegativeThinSpace]", ")"}]}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 "\n \nc)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      FractionBox["1", "a"], "0"},
     {"0", 
      FractionBox["1", "b"]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "    d)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      FractionBox["1", "b"], "0"},
     {"0", 
      FractionBox["1", "a"]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "\n\nMy choice is ..........."
}], "Text"],

Cell["L.20)", "Subsubsection"],

Cell[TextData[{
 "Given an invertible 2D matrix A you do an SVD analysis and get\n            \
 ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["hanger"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "0"},
     {"0", "b"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ". ",
 Cell[BoxData["aligner"]],
 ".\nThe aligner frame for A serves as a hanger frame for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " and the hanger frame for A serves as an aligner frame for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ".\nAgree......... Disagree.........."
}], "Text"],

Cell["L.21)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D invertible matrix A, explain why\n\t\tDet[",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 "] = ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", " ", "[", "A", "]"}]]]],
 ". "
}], "Text"],

Cell["L.22)", "Subsubsection"],

Cell["\<\
You are given a 2D matrix A and after you do your SVD analysis of it, you \
learn that both xstretch and ystretch are positive.
You make the call: 
Can there be an {x,y} with 
      {x,y} \[NotEqual] {0,0}
and with 
        A.{x,y} = {0,0}? \
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["L.23)", "Subsubsection"],

Cell["\<\
You are given a 2D matrix A and after you do your SVD analysis of it, you \
learn that both xstretch is positive and ystretch = 0.
You make the call: 
Can there be an {x,y} with 
      {x,y} \[NotEqual] {0,0}
and with 
        A.{x,y} = {0,0}? \
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["L.24)", "Subsubsection"],

Cell["Here's a  2D matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", " ", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "5"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"0.5", " ", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "5"}], "}"}]}], "]"}]}]}], "}"}], ",", "   ", 
     "\n", "\t\t       ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", " ", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "5"}], "}"}]}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "0.5"}], " ", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "5"}], "}"}]}], "]"}]}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.5`", "1.`"},
     {"2.5`", 
      RowBox[{"-", "1.5`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503237254343519*^9}]
}, Open  ]],

Cell["\<\
Here is the square with corners at {-1,-1}, {1,-1},{1,1}, and {-1,1}:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ranger", "=", 
   RowBox[{"Max", "[", 
    RowBox[{"{", 
     RowBox[{"1.2", ",", 
      RowBox[{
       RowBox[{"Norm", "[", 
        RowBox[{"A", ".", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "]"}], "+", 
       RowBox[{"Norm", "[", 
        RowBox[{"A", ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 0, 1], Thickness[0.01], 
   LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotLabel->FormBox["\"Before\"", TraditionalForm],
  PlotRange->{{-4.718251585154645, 4.718251585154645}, {-4.718251585154645, 
   4.718251585154645}}]], "Output",
 CellChangeTimes->{3.503237254376742*^9}]
}, Open  ]],

Cell["Here's what you get when you hit this square with A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}], 
   ",", "\n", "     ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", "\n",
    "     ", 
   RowBox[{"Axes", "->", "True"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<After\>\""}]}], "]"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], Thickness[0.01], 
   LineBox[{{-2.5, -1.}, {0.5, 4.}, {2.5, 1.}, {-0.5, -4.}, {-2.5, -1.}}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotLabel->FormBox["\"After\"", TraditionalForm],
  PlotRange->{{-4.718251585154645, 4.718251585154645}, {-4.718251585154645, 
   4.718251585154645}}]], "Output",
 CellChangeTimes->{3.503237254426497*^9}]
}, Open  ]],

Cell["The determinant of A is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "A", "]"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"-", "4.75`"}]], "Output",
 CellChangeTimes->{3.5032372544626904`*^9}]
}, Open  ]],

Cell["\<\
The area enclosed by the parallelogram is......................\
\>", "Text"],

Cell["L.25)", "Subsubsection"],

Cell["Here are two vectors X and Y and their plot:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"X", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"0.2", " ", 
     RowBox[{"Random", "[", 
      RowBox[{"Integer", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "10"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"0.2", 
     RowBox[{"Random", "[", 
      RowBox[{"Integer", ",", 
       RowBox[{"{", 
        RowBox[{"4", ",", "10"}], "}"}]}], "]"}]}]}], "}"}]}], "\n", 
 RowBox[{"X", ";"}], "\n", 
 RowBox[{"Y", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.5"}], " ", 
     RowBox[{"Random", "[", 
      RowBox[{"Integer", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"0.5", " ", 
     RowBox[{"Random", "[", 
      RowBox[{"Integer", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "5"}], "}"}]}], "]"}]}]}], "}"}]}], "\n", 
 RowBox[{"Y", ";"}], "\n", 
 RowBox[{"vectorplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Vector", "[", 
     RowBox[{"X", ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Blue"}]}], "]"}], ",", "\n", 
    "\t\t       ", 
    RowBox[{"Vector", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Blue"}]}], "]"}], ",", "\n", "\t", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<X\>\"", ",", 
         RowBox[{"X", "/", "2"}]}], "]"}]}], "}"}], "]"}], ",", "\t", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<Y\>\"", ",", 
         RowBox[{"Y", "/", "2"}]}], "]"}]}], "}"}], "]"}], ",", "\n", "\t", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.4000000000000001`", ",", "1.6`"}], "}"}]], "Output",
 CellChangeTimes->{3.5032372544954643`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.5`"}], ",", "2.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.5032372544989853`*^9}],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0, 0, 1], Thickness[0.005], 
     LineBox[{{0, 0}, {1.2040000000000002`, 1.3760000000000001`}}]}, 
    {RGBColor[0, 0, 1], Thickness[0.005], 
     PolygonBox[{{1.4000000000000001`, 1.6}, {1.2344000000000002`, 
      1.2364000000000002`}, {1.2040000000000002`, 1.3760000000000001`}, {
      1.0616, 1.3876000000000002`}, {1.4000000000000001`, 1.6}}]}}, {
    {RGBColor[0, 0, 1], Thickness[0.005], LineBox[{{0, 0}, {-2.15, 2.15}}]}, 
    {RGBColor[0, 0, 1], Thickness[0.005], 
     PolygonBox[{{-2.5, 2.5}, {-1.9150000000000003`, 
      2.1849999999999996`}, {-2.15, 2.15}, {-2.1849999999999996`, 
      1.9150000000000003`}, {-2.5, 2.5}}]}}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"X\"\>", {0.7000000000000001, 0.8}]}, 
   {RGBColor[1, 0, 0], InsetBox["\<\"Y\"\>", {-1.25, 1.25}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm]},
  PlotRange->All]], "Output",
 CellChangeTimes->{3.5032372545025454`*^9}]
}, Open  ]],

Cell["Here is the parallelogram these two vectors define:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"vectorplot", ",", "\n", "\t   ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"Line", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "X", ",", 
       RowBox[{"X", "+", " ", "Y"}], ",", "Y", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}]}], 
  "]"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{{
     {RGBColor[0, 0, 1], Thickness[0.005], 
      LineBox[{{0, 0}, {1.2040000000000002`, 1.3760000000000001`}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.005], 
      PolygonBox[{{1.4000000000000001`, 1.6}, {1.2344000000000002`, 
       1.2364000000000002`}, {1.2040000000000002`, 1.3760000000000001`}, {
       1.0616, 1.3876000000000002`}, {1.4000000000000001`, 1.6}}]}}, {
     {RGBColor[0, 0, 1], Thickness[0.005], 
      LineBox[{{0, 0}, {-2.15, 2.15}}]}, 
     {RGBColor[0, 0, 1], Thickness[0.005], 
      PolygonBox[{{-2.5, 2.5}, {-1.9150000000000003`, 
       2.1849999999999996`}, {-2.15, 2.15}, {-2.1849999999999996`, 
       1.9150000000000003`}, {-2.5, 2.5}}]}}, 
    {RGBColor[1, 0, 0], InsetBox["\<\"X\"\>", {0.7000000000000001, 0.8}]}, 
    {RGBColor[1, 0, 0], InsetBox["\<\"Y\"\>", {-1.25, 1.25}]}}, 
   LineBox[{{0, 0}, {1.4000000000000001`, 1.6}, {-1.0999999999999999`, 
     4.1}, {-2.5, 2.5}, {0, 0}}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm]},
  PlotRange->All]], "Output",
 CellChangeTimes->{3.503237254551569*^9}],

Cell[TextData[{
 "Tell how you would use X and Y to set up a matrix A so that |Det[A]| \
calculates the  area of this parallelogram.\n              A = ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"\[Placeholder]", "\[Placeholder]"},
     {"\[Placeholder]", "\[Placeholder]"}
    }], "\[NegativeThinSpace]", ")"}]]]
}], "Text"]
}, Open  ]],

Cell["L.26)", "Subsubsection"],

Cell["Here's a 2D matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.7", ",", "1.8"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.8"}], ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.7`", "1.8`"},
     {
      RowBox[{"-", "0.8`"}], "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.50323725459863*^9}]
}, Open  ]],

Cell[TextData[{
 "Here are ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ", the transpose of A, and ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ", the inverse of A:"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "A", "]"}], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", "A", "]"}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.7`", 
      RowBox[{"-", "0.8`"}]},
     {"1.8`", "0"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503237254647974*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.`", 
      RowBox[{"-", "1.25`"}]},
     {"0.5555555555555556`", "0.48611111111111116`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503237254653942*^9}]
}, Open  ]],

Cell["\<\
They don't look much alike. 
But see what they do when you hit both on the unit circle:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "t", ",", "s"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t_", "]"}], ",", 
     RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "t", "]"}], ",", 
     RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "hitplotter", ",", "hitpointplotter", ",", "pointcolor", ",", 
    "actionarrows", ",", "matrix2D"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitplotter", "[", "matrix2D_", "]"}], ":=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"matrix2D", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.02", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"Transpose", "[", "A", "]"}], "]"}], ",", 
    RowBox[{"hitplotter", "[", 
     RowBox[{"Inverse", "[", "A", "]"}], "]"}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Hits with Transpose[A] and Inverse[A]\>\""}],
     ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}]}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.02], LineBox[CompressedData["
1:eJxd2nk4VO/7OHCUNalEaXsrqZCyVip1S1LI2mIrRFJU2hclFIUkadGCpBKV
SqSy3ZKdyhJZkn2GwcyZxTZzyvf5/P78zR9cr+uM82z3Msc1izz9HbwlxMTE
CsmP//0+8P9eDPhW/b8XDabf+58VOTMg6ssLqwpi3RzuiTnWDFgQsLa8gHj1
SGy9rwkDQsJCTdOJLyR1V2QbMGD/shs5d4gjNEROf5cyYJ6Ts+5p4kgb3pWN
cxnwpJh6avO/62rd1gFTGfDw+x7lRcTpk/o/vxNjwPao1NDBKhpCHi+s6uT3
QlJ5B/cdsTr3RehUZi/MnaS09yjxHZPEfoOWXvjt71CqTty9SP3vzm+98Gg0
fcXPShrOnXItOlbYC8lr1t2+SGzl6WN8LbMXSkPkRxcQlyyLcX32oBe8JDo/
W1XQYP9lXOpVVC/M95o1p6mcht3nak++DuqF/WpjZ/YST607kfjYuxfm1K3V
2VFGQ+jh2563nHrBOKYl4mspDScUawSBVr1gsy2tW5u4aq9zzFa9Xtgh7n2X
VUyDtop0krp6LwScSBraSLxf6nYkPasXuvJTtkR9pSHjpPLfeLoH2CFfh2cU
0XBMIScjqawHgs75ulYU0NA215y3M6cHvl5b8LE3nwb69rFlk9N74NfIUiVR
Hg2r9ty/uCO2BwxnLK6fnkuD+SPjFdl7ekDSxtevL5uspzTviKltDyiFH22q
/kCDmwYrr2JTD1g/+LLtZRYNzVzfOxVLe8Dm+zFDu/fkfDfND42muqHo5lyT
bek0XHFWvsfv6obbqe9+CF7RkHR0du2Ohm6Y6BLuf/iSBmVBwA/JnG74mvrv
Sc0LGjzK2y11r3TDLPqAf/8TGnZK8zWSlbrhV5fPy+o7NIz0DFfflOyGwqSk
kO5YGnQuq4mdG+mCnuLb2rwYGhS1YYlRUxfkxPVMjETRoLSyvPvsoy7499zh
dWIoDfJXVoqPL+yCzTrznh84QcPJAMMnt2Z0wUHF4gmhPw19+itnLZHoAvbp
xUbXjtBwcOxpjHF3J/g4NJpdO0jD1siLm1c+74RHT0y7lriR8W58DV2o0Qla
Hlcb27bSsOtcQvhBlU4Iq//lTZnRYHv9beormU6I9dNpF26iYbpCkO3i/g7Y
J7/79uh6Gh7HrMhuSuuAj9dL5sTo0ND43LndXasD9jd1H9yoTMM/j09bJ2z/
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
      "]]}}, {{}, {}, 
    {RGBColor[0, 0, 1], Thickness[0.02], LineBox[CompressedData["
1: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
/VVS/UXwly8tYUzmZfXr7I5ZhSLIGNvGyS3golTZKUf3IhFoLnimtiqHi0+U
qk+2lopA0G1rE5bBxdbxeaGR1SII/PTi/cF3XGwPu0wx2kTg9MOY8TCci5f9
m3LvDYlg/087huppYs/Znz/8EcG6vZHCnTZczIl1kSgfE8GQRPRsKysuvnTI
axoUo2HNpRrba6ZcTOWG1srMpWHhwoAv17dwsUJs2ZsLqjRkpcmbPZ3KxSlF
v/YYqdNwXvP5S/t/HCyyWgEL19Dw+oi/5No/HDS1KVZN3kDDdrmYwx97ONio
o14do0vDpKvZ8dfqOPhyzXXhGzMaEm7O/Kb6ioPLRuLvbjpCQ/OmazUJkeR5
xV94McucBtdWRTnlRxzku7jKZVnTwGBZm88K4CCrdNM3Xwca0qOul8U4c9Do
vyLp1VdpkLmysad3Mwc1IxW1n3vSwNc62B6yjtzvuHnV1Bs0aOXKHVyzkoOK
dsla5X40ZAYqfjuykIPdBYOjc+/SoKT2St5+lI1p5yD1QRQNDxRKLnnnstH3
meae+Bc0rJRp9S77zEaDGVn6Ga9okPdfrzE3mY3DuxcdKYmj4cMb96DgF2xU
nDZOx7+nYe2W6v07fNjY4LEj6kg2DVOZHstTgY3fdufNkM6loV7pht8bLTYm
Tp5fVZJHwzl79puI9Wy8sM7aVqWQBr+ImUedldi4XUwUFVlKw4yjxT61Eyyc
ONVSqFZOg1Nvju3LIRa2lbbpffpBQ4x92pIzfSyc6+myIb2KhuvjszdR7Sz8
7Nsk5lZPg9Dw0/S3OSysiI8oamigweAvR9w0nYWTSuVbNvyiQSdTtq/nHQvV
eL+Gmppp8Jw744nCcxYa16UPshk0bIur8dC9xsKw6hFtOSYNj5rcVmZeZOFS
lmSNIYuGv+quTevOslDZ0IIXxqGhckR/z5yjLHx7ziSNR9GgwRt7/UCThUvK
jde1dtLwpmh2jfsaFj74FpTyo4uGh6r6nyxUWPjpXn1ZdDcNdVs2x0jPY2HW
vLN7p/WT9ekxtTtIM9Fqu9xIHfHyJN+r87uZ+OLInvdRQhqK1q3+r5HNxDUS
jipKIhoOWao57atlYl6yh2nnIA20Q7KueCoTT4dNUnnwm4Yl24PzExKZeH5H
9Pi6IRp63rkrGL1iIjvaNcd2mIY035YTV0OYqJJ6IoYmrpMP2Dc7kIk3Thbd
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
u/8PywKKVA==
      "]]}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  PlotLabel->FormBox[
   "\"Hits with Transpose[A] and Inverse[A]\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.503237254744728*^9}]
}, Open  ]],

Cell["\<\
Describe what you see and try to explain why you see it.
Some questions to ponder:
Both ellipses seem to be hanging on the same perpendicular frame. What \
perpendicular frame is it?
Why does the long axis of each ellipse line up with the short axis of the \
other?
When you multiply the area enclosed by one of the ellipses times the area \
enclosed by other ellipse, what do you get? \
\>", "Text"],

Cell["L.27)", "Subsubsection"],

Cell["Here's a random matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
   "           ", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.4", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"0.3", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stretcher", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "Pi"}], "/", "2"}], ",", 
        RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hangerframe", "[", "1", "]"}], ",", 
     RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
   "           ", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"hanger", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"hanger", ".", "stretcher", ".", "aligner"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.5828388240304028`", "0.6145460707532207`"},
     {
      RowBox[{"-", "0.2039217395090336`"}], "1.020317576189024`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.503237254793569*^9, {3.503237297536078*^9, 3.503237326850616*^9}}]
}, Open  ]],

Cell["\<\
Here is the square with corners at {-1,-1}, {1,-1},{1,1}, and {-1,1}:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 0, 1], Thickness[0.01], 
   LineBox[{{-1, -1}, {1, -1}, {1, 1}, {-1, 1}, {-1, -1}}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotLabel->FormBox["\"Before\"", TraditionalForm],
  PlotRange->All]], "Output",
 CellChangeTimes->{
  3.5032372548294888`*^9, {3.5032372998333597`*^9, 3.5032373269128637`*^9}}]
}, Open  ]],

Cell["\<\
Here are the parallelograms you get what you get when you hit this square \
with this matrix and its transpose:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ahit", " ", "=", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"B", " ", "=", " ", 
   RowBox[{"Transpose", "[", "A", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"transAhit", " ", "=", "  ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "1"}]}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1"}], ",", 
             RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"Ahit", ",", "transAhit", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", "  ", 
   RowBox[{"Axes", "->", "True"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Thickness[0.01], 
    LineBox[{{-1.1973848947836234`, -0.8163958366799904}, \
{-0.03170724672281788, -1.2242393156980576`}, {1.1973848947836234`, 
     0.8163958366799904}, {0.03170724672281788, 
     1.2242393156980576`}, {-1.1973848947836234`, -0.8163958366799904}}]}, 
   {RGBColor[0, 0, 1], Thickness[0.01], 
    LineBox[{{-0.3789170845213692, -1.6348636469422446`}, {
     0.7867605635394364, -0.4057715054358033}, {0.3789170845213692, 
     1.6348636469422446`}, {-0.7867605635394364, 
     0.4057715054358033}, {-0.3789170845213692, -1.6348636469422446`}}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotRange->All]], "Output",
 CellChangeTimes->{
  3.503237254865829*^9, {3.503237304620886*^9, 3.5032373269674187`*^9}}]
}, Open  ]],

Cell["\<\
Express the measurement of area enclosed by one of these parallelograms in \
terms of the measurement of the area enclosed by the other.\
\>", "Text"],

Cell["L.28)", "Subsubsection"],

Cell["Here's a random matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
   "           ", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"0.4", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "5"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"0.3", " ", 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stretcher", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"Random", "[", 
    RowBox[{"Real", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "Pi"}], "/", "2"}], ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hangerframe", "[", "1", "]"}], ",", 
     RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
   "           ", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"hanger", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"hanger", ".", "stretcher", ".", "aligner"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.8300317324922302`", "0.20588047785530875`"},
     {
      RowBox[{"-", "0.8013041709830249`"}], "0.23771561260203983`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503237254918005*^9}]
}, Open  ]],

Cell["\<\
Here is the square with corners at {0,0},{1,0},{1,1}, and{0,1}:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 0, 1], Thickness[0.01], 
   LineBox[{{0, 0}, {1, 0}, {1, 1}, {0, 1}, {0, 0}}]},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotLabel->FormBox["\"Before\"", TraditionalForm],
  PlotRange->All]], "Output",
 CellChangeTimes->{3.5032372549755487`*^9}]
}, Open  ]],

Cell["\<\
Here are the parallelograms you get what you get when you hit this square \
with this matrix and its inverse:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Ahit", " ", "=", " ", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}],
   ";"}], "\n", 
 RowBox[{
  RowBox[{"B", " ", "=", " ", 
   RowBox[{"Inverse", "[", "A", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"invAhit", " ", "=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], ",", 
          RowBox[{"B", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"Ahit", ",", "invAhit", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", " ", 
   RowBox[{"Axes", "->", "True"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], Thickness[0.01], 
    LineBox[{{0., 0.}, {1.8300317324922302`, -0.8013041709830249}, {
     2.035912210347539, -0.563588558380985}, {0.20588047785530875`, 
     0.23771561260203983`}, {0., 0.}}]}, 
   {RGBColor[0, 0, 1], Thickness[0.01], 
    LineBox[{{0., 0.}, {0.39619268767006643`, 1.335506951638375}, {
     0.053058557911218496`, 4.385559839125426}, {-0.34313412975884794`, 
     3.0500528874870505`}, {0., 0.}}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  PlotRange->All]], "Output",
 CellChangeTimes->{3.503237255013564*^9}]
}, Open  ]],

Cell["\<\
Express the measurement of area enclosed by one of these parallelograms in \
terms of the measurement of the area enclosed by the other.\
\>", "Text"],

Cell["Hand Calculation Literacy", "Section"],

Cell["LHC.1) Determinants", "Subsubsection"],

Cell["Here's a random 2D matrix:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "}"}]}], 
     "}"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "2"}], "1"},
     {
      RowBox[{"-", "1"}], 
      RowBox[{"-", "1"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503237255146556*^9, 3.503237344236333*^9}]
}, Open  ]],

Cell["Give a hand calculation of the determinant of A.", "Text"],

Cell["\<\
LHC.2) Solving 2D systems by hand via the Cramer's rule formula\
\>", "Subsubsection"],

Cell["Here is a 2D linear system:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", " ", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", 
           RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"dim", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"linearsystem", " ", "=", " ", 
  RowBox[{"ColumnForm", "[", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "1", "]"}], ",", 
        RowBox[{"x", "[", "2", "]"}]}], "}"}]}], " ", "==", "  ", "Y"}], 
    "]"}], "]"}]}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     RowBox[{
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"x", "[", "1", "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"x", "[", "2", "]"}]}]}], "\[Equal]", "1"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1.5`"}], " ", 
        RowBox[{"x", "[", "1", "]"}]}], "-", 
       RowBox[{"6", " ", 
        RowBox[{"x", "[", "2", "]"}]}]}], "\[Equal]", 
      RowBox[{"-", "1"}]}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  ColumnForm[{
   2 $CellContext`x[1] + 3 $CellContext`x[2] == 
    1, (-1.5) $CellContext`x[1] - 6 $CellContext`x[2] == -1}],
  Editable->False]], "Output",
 CellChangeTimes->{3.5032372551811523`*^9, 3.503237349015841*^9}]
}, Open  ]],

Cell["\<\
Use the hand-style Cramer's rule to come up with the solution {x[1], x[2]}.\
\>", "Text"],

Cell["\<\
LHC.3) Inverting a 2D matrices by hand via the Cramer's rule formula\
\>", "Subsubsection"],

Cell["Here is a 2D matrix:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.5", " ", 
        RowBox[{"Random", "[", 
         RowBox[{"Integer", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], ",", 
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", 
           RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", 
      RowBox[{"-", "3"}]},
     {
      RowBox[{"-", "0.5`"}], 
      RowBox[{"-", "8"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503237255238141*^9, 3.5032373565442142`*^9}]
}, Open  ]],

Cell["\<\
Use hand-style Cramer's rule to come up with the inverse of A.\
\>", "Text"]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 131, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6368, 137, 193, 7, 28, "Special2"],
Cell[6564, 146, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7881, 188, 38, 0, 43, "Subsubsection"],
Cell[7922, 190, 1344, 31, 156, "Input"],
Cell[9269, 223, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9442, 229, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26813, 712, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27060, 723, 39, 0, 35, "Subsubsection"],
Cell[27102, 725, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[29447, 800, 127, 2, 20, "SmallText"],
Cell[29577, 804, 29, 0, 31, "Subsubsection"],
Cell[29609, 806, 693, 22, 157, "Text"],
Cell[30305, 830, 29, 0, 31, "Subsubsection"],
Cell[30337, 832, 44, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[30406, 836, 915, 30, 19, "Input",
 CellOpen->False],
Cell[31324, 868, 720, 19, 54, "Output"]
}, Open  ]],
Cell[32059, 890, 115, 3, 24, "Text"],
Cell[CellGroupData[{
Cell[32199, 897, 1275, 41, 19, "Input",
 CellOpen->False],
Cell[33477, 940, 17931, 300, 372, "Output"]
}, Open  ]],
Cell[51423, 1243, 47, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[51495, 1247, 300, 8, 19, "Input",
 CellOpen->False],
Cell[51798, 1257, 765, 21, 54, "Output"]
}, Open  ]],
Cell[52578, 1281, 50, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[52653, 1285, 311, 8, 19, "Input",
 CellOpen->False],
Cell[52967, 1295, 665, 18, 54, "Output"]
}, Open  ]],
Cell[53647, 1316, 48, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[53720, 1320, 262, 7, 19, "Input",
 CellOpen->False],
Cell[53985, 1329, 766, 21, 54, "Output"]
}, Open  ]],
Cell[54766, 1353, 604, 13, 224, "Text",
 Evaluatable->False],
Cell[55373, 1368, 29, 0, 31, "Subsubsection"],
Cell[55405, 1370, 127, 3, 49, "Text"],
Cell[55535, 1375, 29, 0, 31, "Subsubsection"],
Cell[55567, 1377, 117, 3, 49, "Text"],
Cell[55687, 1382, 29, 0, 31, "Subsubsection"],
Cell[55719, 1384, 233, 7, 99, "Text",
 Evaluatable->False],
Cell[55955, 1393, 29, 0, 31, "Subsubsection"],
Cell[55987, 1395, 494, 11, 197, "Text"],
Cell[56484, 1408, 29, 0, 31, "Subsubsection"],
Cell[56516, 1410, 347, 9, 122, "Text"],
Cell[56866, 1421, 29, 0, 31, "Subsubsection"],
Cell[56898, 1423, 512, 11, 197, "Text"],
Cell[57413, 1436, 29, 0, 31, "Subsubsection"],
Cell[57445, 1438, 497, 11, 197, "Text"],
Cell[57945, 1451, 30, 0, 31, "Subsubsection"],
Cell[57978, 1453, 500, 11, 172, "Text"],
Cell[58481, 1466, 30, 0, 31, "Subsubsection"],
Cell[58514, 1468, 498, 11, 172, "Text"],
Cell[59015, 1481, 30, 0, 31, "Subsubsection"],
Cell[59048, 1483, 211, 6, 74, "Text",
 Evaluatable->False],
Cell[59262, 1491, 30, 0, 31, "Subsubsection"],
Cell[59295, 1493, 213, 6, 74, "Text",
 Evaluatable->False],
Cell[59511, 1501, 30, 0, 31, "Subsubsection"],
Cell[59544, 1503, 499, 11, 172, "Text"],
Cell[60046, 1516, 30, 0, 31, "Subsubsection"],
Cell[60079, 1518, 491, 11, 172, "Text"],
Cell[60573, 1531, 30, 0, 31, "Subsubsection"],
Cell[60606, 1533, 1721, 76, 295, "Text"],
Cell[62330, 1611, 30, 0, 31, "Subsubsection"],
Cell[62363, 1613, 584, 20, 151, "Text"],
Cell[62950, 1635, 30, 0, 31, "Subsubsection"],
Cell[62983, 1637, 135, 5, 51, "Text"],
Cell[63121, 1644, 30, 0, 31, "Subsubsection"],
Cell[63154, 1646, 2064, 91, 328, "Text"],
Cell[65221, 1739, 30, 0, 31, "Subsubsection"],
Cell[65254, 1741, 638, 23, 153, "Text"],
Cell[65895, 1766, 30, 0, 31, "Subsubsection"],
Cell[65928, 1768, 242, 10, 60, "Text"],
Cell[66173, 1780, 30, 0, 31, "Subsubsection"],
Cell[66206, 1782, 311, 10, 174, "Text",
 Evaluatable->False],
Cell[66520, 1794, 30, 0, 31, "Subsubsection"],
Cell[66553, 1796, 314, 10, 174, "Text",
 Evaluatable->False],
Cell[66870, 1808, 30, 0, 31, "Subsubsection"],
Cell[66903, 1810, 38, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[66966, 1814, 1032, 33, 19, "Input",
 CellOpen->False],
Cell[68001, 1849, 660, 19, 54, "Output"]
}, Open  ]],
Cell[68676, 1871, 93, 2, 24, "Text"],
Cell[CellGroupData[{
Cell[68794, 1877, 1743, 55, 19, "Input",
 CellOpen->False],
Cell[70540, 1934, 445, 11, 388, "Output"]
}, Open  ]],
Cell[71000, 1948, 68, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[71093, 1952, 1501, 47, 19, "Input",
 CellOpen->False],
Cell[72597, 2001, 459, 11, 388, "Output"]
}, Open  ]],
Cell[73071, 2015, 40, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[73136, 2019, 74, 2, 19, "Input",
 CellOpen->False],
Cell[73213, 2023, 93, 2, 22, "Output"]
}, Open  ]],
Cell[73321, 2028, 87, 2, 24, "Text"],
Cell[73411, 2032, 30, 0, 31, "Subsubsection"],
Cell[73444, 2034, 60, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[73529, 2038, 2076, 63, 19, "Input",
 CellOpen->False],
Cell[75608, 2103, 138, 3, 22, "Output"],
Cell[75749, 2108, 142, 4, 22, "Output"],
Cell[75894, 2114, 1006, 20, 263, "Output"]
}, Open  ]],
Cell[76915, 2137, 67, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[77007, 2141, 424, 13, 19, "Input",
 CellOpen->False],
Cell[77434, 2156, 1133, 23, 398, "Output"],
Cell[78570, 2181, 355, 8, 97, "Text"]
}, Open  ]],
Cell[78940, 2192, 30, 0, 31, "Subsubsection"],
Cell[78973, 2194, 37, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[79035, 2198, 328, 11, 19, "Input",
 CellOpen->False],
Cell[79366, 2211, 657, 19, 54, "Output"]
}, Open  ]],
Cell[80038, 2233, 204, 9, 27, "Text"],
Cell[CellGroupData[{
Cell[80267, 2246, 200, 5, 19, "Input",
 CellOpen->False],
Cell[80470, 2253, 658, 19, 54, "Output"],
Cell[81131, 2274, 692, 19, 54, "Output"]
}, Open  ]],
Cell[81838, 2296, 111, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[81974, 2303, 1859, 57, 19, "Input",
 CellOpen->False],
Cell[83836, 2362, 29865, 499, 518, "Output"]
}, Open  ]],
Cell[113716, 2864, 410, 9, 174, "Text"],
Cell[114129, 2875, 30, 0, 31, "Subsubsection"],
Cell[114162, 2877, 41, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[114228, 2881, 3496, 114, 19, "Input",
 CellOpen->False],
Cell[117727, 2997, 769, 20, 54, "Output"]
}, Open  ]],
Cell[118511, 3020, 93, 2, 24, "Text"],
Cell[CellGroupData[{
Cell[118629, 3026, 1092, 32, 19, "Input",
 CellOpen->False],
Cell[119724, 3060, 417, 11, 378, "Output"]
}, Open  ]],
Cell[120156, 3074, 135, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[120316, 3081, 2395, 74, 19, "Input",
 CellOpen->False],
Cell[122714, 3157, 850, 18, 440, "Output"]
}, Open  ]],
Cell[123579, 3178, 160, 3, 49, "Text"],
Cell[123742, 3183, 30, 0, 31, "Subsubsection"],
Cell[123775, 3185, 41, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[123841, 3189, 3470, 113, 19, "Input",
 CellOpen->False],
Cell[127314, 3304, 723, 19, 54, "Output"]
}, Open  ]],
Cell[128052, 3326, 87, 2, 24, "Text"],
Cell[CellGroupData[{
Cell[128164, 3332, 930, 26, 19, "Input",
 CellOpen->False],
Cell[129097, 3360, 358, 10, 377, "Output"]
}, Open  ]],
Cell[129470, 3373, 133, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[129628, 3380, 2047, 62, 19, "Input",
 CellOpen->False],
Cell[131678, 3444, 653, 15, 440, "Output"]
}, Open  ]],
Cell[132346, 3462, 160, 3, 49, "Text"],
Cell[132509, 3467, 44, 0, 40, "Section"],
Cell[132556, 3469, 44, 0, 23, "Subsubsection"],
Cell[132603, 3471, 42, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[132670, 3475, 1002, 32, 19, "Input",
 CellOpen->False],
Cell[133675, 3509, 715, 21, 54, "Output"]
}, Open  ]],
Cell[134405, 3533, 64, 0, 24, "Text"],
Cell[134472, 3535, 96, 2, 31, "Subsubsection"],
Cell[134571, 3539, 43, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[134639, 3543, 1521, 52, 19, "Input",
 CellOpen->False],
Cell[136163, 3597, 878, 27, 41, "Output"]
}, Open  ]],
Cell[137056, 3627, 99, 2, 24, "Text"],
Cell[137158, 3631, 101, 2, 31, "Subsubsection"],
Cell[137262, 3635, 36, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[137323, 3639, 971, 32, 19, "Input",
 CellOpen->False],
Cell[138297, 3673, 720, 21, 54, "Output"]
}, Open  ]],
Cell[139032, 3697, 86, 2, 24, "Text"]
}
]
*)

(* End of internal cache information *)
