(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    220201,       6655]
NotebookOptionsPosition[    151500,       5126]
NotebookOutlinePosition[    204547,       6235]
CellTagsIndexPosition[    204383,       6227]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.07 Ill-conditioned Matrices and Roundoff\n",
 StyleBox[" BASICS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.1) Rank one matrices.
 Using SVD to build matrices with sums of well-chosen rank one matrices\
\>", "Subsection",
 CellTags->"MGM.07.B1"],

Cell[CellGroupData[{

Cell["\<\
B.1.a.i)  A sample rank one matrix hitting on 2D and hanging in 3D\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Give a sample of a rank one matrix hitting on 2D and hanging in 3D.
Show off the action of its hits.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Here's a rank one matrix hitting on 2D and hanging in 3D", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.536", 
         RowBox[{"-", "1.024"}]},
        {"1.92", 
         RowBox[{"-", "1.28"}]},
        {
         RowBox[{"-", "1.728"}], "1.152"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[
 RowBox[{"rank", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "[", 
    RowBox[{"[", 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}]], "Input"],

Cell["\<\
See what a hit with this matrix does to these random points in 2D:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "2"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", "  ", "a"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"points", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "600"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "k_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", "0.3"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"pointplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "->", "\"\<Before the hit with rank 1 matrix\>\""}]}], "]"}],
   " "}]}], "Input",
 AspectRatioFixed->True],

Cell["Now hit all those points into 3D with A:", "SmallText"],

Cell[BoxData[
 RowBox[{"hitpointplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           StyleBox["A",
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{
           "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<After the hit with rank 1 matrix\>\""}], 
    ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}], " "}]], "Input"],

Cell["\<\
The rank 1 matrix A hits all those 2D points onto one 3D line - just as you \
would expect of a rank one matrix.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.a.ii)  Making a rank one matrix", "Subsubsection"],

Cell["Make a rank one matrix A hitting on 6D and hanging in 4D ", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go back to the SVD ingredients\n",
 StyleBox["          A = hanger.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretcher.",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["aligner ",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell["\<\
Because A is a rank 1 , the SVD of A consists of 
\[FilledVerySmallSquare] one 4D hangerframe (unit) vector
\[FilledVerySmallSquare] one stretch factor,
\[FilledVerySmallSquare] one 6D alignerframe (unit)vector
Make one of each and build the resulting hanger, stretcher and aligner:
\[FilledVerySmallSquare]The hanger:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", "=", "6"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", "=", "4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangerframevector", " ", "=", " ", 
    RowBox[{"Normalize", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         StyleBox[
          RowBox[{
           StyleBox["hang",
            FontColor->RGBColor[0, 0, 1]], "dim"}]]}], "}"}]}], "]"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["hangerframevector",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["\<\
This isn't a vector. This is a matrix consisting of a single column. 
    The vector in the column is the hangerframe vector\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\[FilledVerySmallSquare]The stretcher:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stretch", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stretch", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["stretch",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell["\<\
This isn't a number. This is a matrix consisting of one row and one column. 
  The lone entry is the stretch factor\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\[FilledVerySmallSquare]The aligner:", "SmallText"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"alignerframevector", " ", "=", " ", 
     RowBox[{"Normalize", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          StyleBox[
           RowBox[{
            StyleBox["hit",
             FontColor->RGBColor[0, 0, 1]], "dim"}]]}], "}"}]}], "]"}], 
      "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["=",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["alignerframevector",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}]}], 
    StyleBox[";",
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", "aligner", "]"}]}]}]], "Input"],

Cell["\<\
This isn't a vector. This is a matrix consisting of a single row. 
    The vector in the row is the alignerframe vector\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Here is the resulting rank 1 matrix: ", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Check it out:", "SmallText"],

Cell[BoxData[
 RowBox[{"rank", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]], "Input"],

Cell["Had it all the way.", "SmallText"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.1.a.iii)  The action of a rank one matrix A is
              A.X = stretch (X.alignerframevector) hangerframevector\
\>", "Subsubsection"],

Cell["\<\
Here's what you do to build a random rank one matrix hitting on 5D and \
hanging in 7D:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", "=", "5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", "=", "7"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangerframevector", " ", "=", " ", 
    RowBox[{"Normalize", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         StyleBox[
          RowBox[{
           StyleBox["hang",
            FontColor->RGBColor[0, 0, 1]], "dim"}]]}], "}"}]}], "]"}], 
     "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["hangerframevector",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["\<\
This isn't a vector. This is a matrix consisting of a single column. 
    The vector in the column is the hangerframe vector\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\[FilledVerySmallSquare]The stretcher:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stretch", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stretch", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["stretch",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell["\<\
This isn't a number. This is a matrix consisting of one row and one column. 
  The lone entry is the stretch factor\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\[FilledVerySmallSquare]The aligner:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"alignerframevector", " ", "=", " ", 
    RowBox[{"Normalize", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         StyleBox[
          RowBox[{
           StyleBox["hit",
            FontColor->RGBColor[0, 0, 1]], "dim"}]]}], "}"}]}], "]"}], 
     "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["aligner",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox["alignerframevector",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell["\<\
This isn't a vector. This is a matrix consisting of a single row. 
    The vector in the row is the alignerframe vector\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["The resulting rank 1 matrix is: ", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Check it out:", "Text"],

Cell[BoxData[
 RowBox[{"rank", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Talk about the action of A in terms of the hangerframe vector, the \
alignerframe vector and the stretch factor.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "When you hit  A = hanger.",
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 ".",
 StyleBox["aligner",
  FontColor->RGBColor[0, 0, 1]],
 " on a 5D vector X, you get\n                      A.X  =  ",
 StyleBox["stretch ",
  FontColor->RGBColor[1, 0, 1]],
 "(",
 StyleBox["alignerframevector.X)",
  FontColor->RGBColor[0, 0, 1]],
 " hangerframevector",
 "; ",
 "\n Check this out:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "x", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], ",", 
      RowBox[{"x", "[", "2", "]"}], ",", 
      RowBox[{"x", "[", "3", "]"}], ",", 
      RowBox[{"x", "[", "4", "]"}], ",", 
      RowBox[{"x", "[", "5", "]"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"A", ".", "X"}]}], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   StyleBox["stretch",
    FontColor->RGBColor[1, 0, 1]], 
   RowBox[{"(", 
    StyleBox[
     RowBox[{"alignerframevector", ".", "X"}],
     FontColor->RGBColor[0, 0, 1]], ")"}], " ", "hangerframevector"}], 
  "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.1.b)  SVD tells you that any matrix is the sum of rank 1 matrices\
\>", "Subsubsection"],

Cell["\<\
Old matrix hands know that you can use SVD to see that any matrix is the sum \
of well-chosen rank 1 matrices.
Demonstrate what they mean by going with this random matrix:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "7"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[" And duplicating it with a sum of rank one matrices.", "Text"],

Cell["Answer:", "Special1"],

Cell["Do SVD analysis of A:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "stretch", ",", "hangerframe", ",", "k"}], 
    "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["rank",
     FontColor->RGBColor[0, 0, 1]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"hangerframe", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "rank"}], "}"}]}], "]"}], "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"stretch", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "rank"}], "}"}]}], "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"alignerframe", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "rank"}], "}"}]}], "]"}], "]"}]}], "Input"],

Cell[TextData[{
 "For each k with 1 \[LessEqual] k \[LessEqual] rank, build the rank 1 matrix \
",
 StyleBox["rankOne[k]",
  FontColor->RGBColor[1, 0, 0]],
 " whose \n        \[FilledVerySmallSquare]  hangerframe vector is ",
 StyleBox["hangerframe[k] \n        ",
  FontColor->RGBColor[0, 0, 1]],
 "\[FilledVerySmallSquare]  stretch factor is",
 StyleBox[" stretch[k]",
  FontColor->RGBColor[1, 0, 1]],
 "  and\n        \[FilledVerySmallSquare]  alignerframe vector is ",
 StyleBox["alignerframe[k].\n        \n",
  FontColor->RGBColor[0, 0, 1]],
 " Here are ",
 StyleBox["rankOne[k]",
  FontColor->RGBColor[1, 0, 0]],
 " for k = 1, 2, ... , rank:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"hanger", ",", "stretcher", ",", "aligner", ",", "rankOne"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"hanger", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"stretcher", "[", "k_", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"alignerframe", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["rankOne",
      FontColor->RGBColor[1, 0, 0]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"hanger", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"stretcher", "[", "k", "]"}],
      FontColor->RGBColor[1, 0, 1]], ".", 
     StyleBox[
      RowBox[{"aligner", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"rankOne", "[", "k", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "rank"}], "}"}]}], "]"}], "]"}]}], "Input"],

Cell["These are all rank 1 matrices and their sum is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sum", " ", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "rank"], 
     RowBox[{"rankOne", "[", "k", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "sum", "]"}]}], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell["Yessiree Bob.", "SmallText"],

Cell[TextData[{
 "          A = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "rank"], 
   RowBox[{"rankOne", "[", "k", "]"}]}]]]
}], "SmallText"],

Cell["Try it for other random matrices A:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "7"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "stretch", ",", "hangerframe", ",", "k"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["rank",
     FontColor->RGBColor[0, 0, 1]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"hanger", ",", "stretcher", ",", "aligner", ",", "rankOne"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"hanger", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"stretcher", "[", "k_", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"alignerframe", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["rankOne",
      FontColor->RGBColor[1, 0, 0]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"hanger", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"stretcher", "[", "k", "]"}],
      FontColor->RGBColor[1, 0, 1]], ".", 
     StyleBox[
      RowBox[{"aligner", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"MatrixForm", "[", 
     RowBox[{"rankOne", "[", "k", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "rank"}], "}"}]}], "]"}], "]"}]}], "Input"],

Cell["These are all rank 1 matrices and their sum is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sum", " ", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "rank"], 
     RowBox[{"rankOne", "[", "k", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "sum", "]"}]}], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell["It works that way every time.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.2) Image and data compression:
Creative rounding of matrices by zeroing out insignificant stretch factors \
\>", "Subsection",
 CellTags->"MGM.07.B2"],

Cell["\<\
Few beginning matrix theory students have ever had the opportunity to learn \
about this hot topic.\
\>", "Special5"],

Cell[CellGroupData[{

Cell["\<\
B.2.a.i) Data matrices as images.
Using SVD and rank 1 matrices to compress an image by zeroing out \
insignificant stretch factors\
\>", "Subsubsection"],

Cell[TextData[{
 "From the really great book by\nDavid Kahaner, Cleve Moler and Stephen Nash \
- ",
 StyleBox["Numerical Methods and Software",
  FontSlant->"Italic"],
 ", Prentice-Hall, 1989:"
}], "Text"],

Cell[TextData[{
 "\"Suppose that a satellite in space is taking photographs of Jupiter to be \
sent back to earth. The satellite digitizes the picture by subdividing it \
into tiny squares called pixels or picture elements. Each pixel is \
represented by a single number that records the average light intensity in \
that square. If each photograph were divided into 500 [by] 500 pixels, it \
would have to send 250,000 numbers to earth for each picture. [This amounts \
to a 500D matrix.] This would take a great deal of time and would limit the \
number of photographs that could be transmitted.\n ",
 StyleBox["It [is sometimes] possible to approximate this matrix with a \
matrix which requires less storage.\"",
  FontColor->RGBColor[0, 0, 1]]
}], "Special5"],

Cell[TextData[{
 "If getting in on the ground floor of this topic interests you, go on.\n\n\
Start by taking a look at this graphic which is based on a 2D matrix A whose \
entries are random numbers between ",
 StyleBox["0.0",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["1.0",
  FontColor->RGBColor[0, 0, 1]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox["1", "dim"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"box", ",", "boxlabel", ",", "x", ",", "y"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"box", "[", 
     RowBox[{"matrix_", ",", "x_", ",", "y_"}], "]"}], ":=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GrayLevel", "[", 
        RowBox[{"matrix", "\[LeftDoubleBracket]", 
         RowBox[{
          RowBox[{
           RowBox[{"dim", " ", "y"}], "+", "1"}], ",", 
          RowBox[{
           RowBox[{"dim", " ", "x"}], "+", "1"}]}], "\[RightDoubleBracket]"}],
         "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"1", "-", "y"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "jump"}], ",", 
            RowBox[{"1", "-", "y"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "jump"}], ",", 
            RowBox[{"1", "-", "y", "-", "jump"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"1", "-", "y", "-", "jump"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"1", "-", "y"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"boxlabel", "[", 
     RowBox[{"matrix_", ",", "i_", ",", "j_"}], "]"}], ":=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"LightRed", ",", 
       RowBox[{"Text", "[", 
        RowBox[{
         RowBox[{"matrix", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{
            RowBox[{"dim", " ", "y"}], "+", "1"}], ",", 
           RowBox[{
            RowBox[{"dim", " ", "x"}], "+", "1"}]}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "+", 
            RowBox[{"0.5", " ", "jump"}]}], ",", 
           RowBox[{"1", "-", "y", "-", 
            RowBox[{"0.5", " ", "jump"}]}]}], "}"}]}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"box", "[", 
        RowBox[{"A", ",", "x", ",", "y"}], "]"}], ",", 
       RowBox[{"boxlabel", "[", 
        RowBox[{"A", ",", "x", ",", "y"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], "]"}], 
  " "}]}], "Input"],

Cell["Compare:", "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell["\<\
The gray level specification for each square 
is determined by the corresponding entry in the matrix A. \
\>", "Special5"],

Cell["Kick up the dimension:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", "3"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox["1", "dim"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"box", "[", 
        RowBox[{"A", ",", "x", ",", "y"}], "]"}], ",", 
       RowBox[{"boxlabel", "[", 
        RowBox[{"A", ",", "x", ",", "y"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], "]"}], 
  " "}]}], "Input"],

Cell["Compare:", "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell["Again:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", "4"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox["1", "dim"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"box", "[", 
        RowBox[{"A", ",", "x", ",", "y"}], "]"}], ",", 
       RowBox[{"boxlabel", "[", 
        RowBox[{"A", ",", "x", ",", "y"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], "]"}], 
  " "}]}], "Input"],

Cell["Compare:", "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell["\<\
Get it?
Now look at this graphic which is based on a 16D matrix A whose entries are \
numbers between 0.0 and 1.0:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", "16"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"N", "[", 
       FractionBox[
        RowBox[{"1", "+", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["1", "4"], " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"i", "+", "j"}], ")"}]}], "]"}], "+", 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.1"}], "}"}]}], "]"}]}], "2.5"], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox["1", "dim"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"original", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"box", "[", 
       RowBox[{"A", ",", "x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Original Image\>\""}]}], "]"}], 
  " "}]}], "Input"],

Cell["\<\
Attached to the gray level of each square is the corresponding entry in A.\
\>", "Special5"],

Cell[CellGroupData[{

Cell["\<\
To reproduce this exactly, you need to keep track of all of the 256 (= 16 \
\[Times] 16)  entries of A.
How do image compression folks use SVD go about trying to nearly reproduce \
this image keeping track of much less data? \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Set up the rank one matrices whose sum is A:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "stretch", ",", "hangerframe", ",", "k"}], 
    "]"}], ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["rank",
     FontColor->RGBColor[0, 0, 1]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"hanger", ",", "stretcher", ",", "aligner", ",", "rankOne"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"hanger", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"stretcher", "[", "k_", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"alignerframe", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["rankOne",
      FontColor->RGBColor[1, 0, 0]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"hanger", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"stretcher", "[", "k", "]"}],
      FontColor->RGBColor[1, 0, 1]], ".", 
     StyleBox[
      RowBox[{"aligner", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}]}], "Input"],

Cell["This cell has no visible output but run it anyway.", "Special5"],

Cell[TextData[{
 "At this stage you know\n                ",
 Cell[BoxData[
  RowBox[{"A", " ", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "rank"], 
    RowBox[{"rankOne", "[", "k", "]"}]}]}]]],
 "\nTrot out your SVD analysis of A and look at the SVD stretch factors for A:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
  StyleBox["2",
   FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]], "Input"],

Cell[TextData[{
 "The only SVD stretch factors that pack much punch are the first three.\n\n\
Data compression folks use this fact to creatively roundoff A so that only \
the",
 StyleBox[" first three ",
  FontColor->RGBColor[1, 0, 0]],
 "significant SVD stretch factors are preserved and the others are",
 StyleBox[" zeroed out",
  FontWeight->"Bold"],
 "."
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"roundedA", " ", "=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]], 
     RowBox[{"rankOne", "[", "k", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SingularValues", "[", "roundedA", "]"}], "[", 
  RowBox[{"[", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}], "Input"],

Cell["The rank of roundedA is 3..", "Special5"],

Cell["Then they plot the resulting image:", "SmallText"],

Cell[BoxData[
 RowBox[{"compressed", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"box", "[", 
       RowBox[{"roundedA", ",", "x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Compressed Image\>\""}]}], "]"}], 
  " "}]], "Input"],

Cell["\<\
Cool.
Compare:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "original", "]"}], " "}]], "Input"]
}, Closed]]
}, Closed]],

Cell["Compare them through animating:", "SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"original", ",", "compressed"}], "}"}], "]"}]], "Input"],

Cell["\<\
If anything, the compressed image is cleaner than the original!\
\>", "SmallText"],

Cell[CellGroupData[{

Cell["\<\
B.2.a.ii) Why the compressed image can be sent with less data\
\>", "Subsubsection"],

Cell["Here are the two images from part i):", "Text"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"original", ",", "compressed"}], "}"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Explain in detail why the compressed image can be communicated by sending \
much less data than is needed to communicate the original.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["To send the data for the compressed image, you send only:", "SmallText"],

Cell[TextData[{
 "             ",
 Cell[BoxData[
  RowBox[{"roundedA", " ", "=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], 
     StyleBox["3",
      FontColor->RGBColor[1, 0, 0]]], 
    RowBox[{"rankOne", "[", "k", "]"}]}]}]]]
}], "SmallText"],

Cell["where rankOne[k] = hanger[k].stretcher[k].aligner[k]", "SmallText"],

Cell["To communicate this roundedA you need to send these data:", "SmallText"],

Cell[BoxData[
 RowBox[{"hangerdata", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"hangerframe", "[", "k", "]"}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"stretchdata", "  ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"stretch", "[", "k", "]"}],
     FontColor->RGBColor[1, 0, 1]], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"alignerdata", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"alignerframe", "[", "k", "]"}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[TextData[{
 "You would tell the recipient of the data to multiply everything out to get\n\
 ",
 StyleBox["rankOne[k] = Transpose[{hangerframe[k]}].{",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretch[k]",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["}.{aligner[k]}",
  FontColor->RGBColor[0, 0, 1]],
 " \n and then put"
}], "Special5"],

Cell[TextData[Cell[BoxData[
 RowBox[{"roundedA", " ", "=", " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], 
    StyleBox["3",
     FontColor->RGBColor[1, 0, 0]]], 
   RowBox[{"rankOne", "[", "k", "]"}]}]}]],
 FontSize->12]], "Special5"],

Cell[TextData[{
 "The total count of the individual numbers needed to communicate ",
 StyleBox["roundedA",
  FontColor->RGBColor[0, 0, 1]],
 "  is:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"totalcompressed", " ", "=", " ", 
  RowBox[{
   RowBox[{"Length", "[", 
    RowBox[{"Flatten", "[", "hangerdata", "]"}], "]"}], "+", " ", 
   RowBox[{"Length", "[", "stretchdata", "]"}], " ", "+", " ", 
   RowBox[{"Length", "[", 
    RowBox[{"Flatten", "[", "alignerdata", "]"}], "]"}]}]}]], "Input"],

Cell[TextData[{
 "The total count of the individual numbers needed to communicate the \
original data matrix ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " is"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"totaloriginal", " ", "=", " ", 
  RowBox[{"16", "\[Times]", "16"}]}]], "Input"],

Cell["The relative savings in decimals:", "SmallText"],

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["totalcompressed", "totaloriginal"], "]"}]], "Input"],

Cell[TextData[{
 "You can send the cleaner compressed image with only about ",
 StyleBox["39 %",
  FontColor->RGBColor[0, 0, 1]],
 " of the total data count needed to send the original."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2.a.iii) Why you don't want to multiply out  \n           ",
 StyleBox["rankOne[k] = Transpose[{hangerframe[k]}].{",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretch[k]",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["}.{aligner[k]}",
  FontColor->RGBColor[0, 0, 1]],
 " \nbefore you send them out"
}], "Subsubsection"],

Cell[TextData[{
 "Above it says that you would tell the recipient of the data to multiply \
everything out to get\n                 ",
 StyleBox["rankOne[k] = Transpose[{hangerframe[k]}].{",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretch[k]",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["}.{aligner[k]}",
  FontColor->RGBColor[0, 0, 1]],
 " \n and then put"
}], "Text"],

Cell[TextData[{
 "                    ",
 Cell[BoxData[
  RowBox[{"roundedA", " ", "=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], 
     StyleBox["3",
      FontColor->RGBColor[1, 0, 0]]], 
    RowBox[{"rankOne", "[", "k", "]"}]}]}]],
  FontSize->16]
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "Why ",
 StyleBox["shouldn't ",
  FontWeight->"Bold"],
 "you be nice enough to multiply everything out before you send the data?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Look at what happens when you multiply out:\n           ",
 StyleBox["rankOne[1] , rankOne[2] and rankone[3]",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"rankOne", "[", "1", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"rankOne", "[", "2", "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"rankOne", "[", "3", "]"}], "]"}]], "Input"],

Cell["\<\
These three matrices each have as many entries as the original matrix A. So \
if you send them multiplied out, you will have to send 3 times as many \
numbers as need to communicate the original data matrix:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"totalmultipliedout", " ", "=", " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], 
    StyleBox["3",
     FontColor->RGBColor[1, 0, 0]]], 
   RowBox[{"Length", "[", 
    RowBox[{"Flatten", "[", 
     RowBox[{"rankOne", "[", "k", "]"}], "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox[
   RowBox[{"totalmultipliedout", " "}], "totaloriginal"], "]"}]], "Input"],

Cell["Multiplying out before sending is a big step backwards,", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.a.iv) Seeing the image emerge", "Subsubsection"],

Cell["Look at:", "Text"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"box", "[", " ", 
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], 
            StyleBox["p",
             FontColor->RGBColor[1, 0, 0]]], 
           RowBox[{"rankOne", "[", "k", "]"}]}], ",", "x", ",", "y"}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", 
          RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "p"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["p",
       FontColor->RGBColor[1, 0, 0]], ",", "1", ",", "4", ",", "1"}], "}"}]}],
    "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.503265705509201*^9, 3.5032657207139378`*^9}},
 AnimationDisplayTime->1],

Cell[CellGroupData[{

Cell["What do these depict?", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The plot labeled \"1\" shows what image compression you get by rounding off A \
preserving only the first SVD stretch factor and zeroing out all the others.\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"box", "[", 
       RowBox[{
        RowBox[{"rankOne", "[", "p", "]"}], ",", "x", ",", "y"}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "p"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
Terrible.
The plot labeled \"2\" shows what image compression you get by rounding off A \
preserving only the first two SVD stretch factors and zeroing out all the \
others:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"box", "[", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"rankOne", "[", "k", "]"}]}], ",", "x", ",", "y"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "p"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
Shaping up a bit.
The plot labeled \"3\" shows what image compression you get by rounding off A \
preserving only the first three SVD stretch factors and zeroing out all the \
others:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"box", "[", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"rankOne", "[", "k", "]"}]}], ",", "x", ",", "y"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "p"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
Excellent.
The plot labeled \"4\" shows what image compression you get by rounding off A \
preserving only the first four SVD stretch factors and zeroing out all the \
others:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"box", "[", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"rankOne", "[", "k", "]"}]}], ",", "x", ",", "y"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "p"}]}], "]"}], " "}]}], "Input"],

Cell["Maybe that's overkill.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.3) Ill-conditioned coefficient matrices A can lead to big round-off \
disasters for linear systems A.X = Y;  trying to get around these disasters \
with creative rounding of A\
\>", "Subsection",
 CellTags->"MGM.07.B3"],

Cell[CellGroupData[{

Cell["\<\
B.3.a) Ill-conditioned matrices have some stretch factors much smaller than \
other stretch factors.
Deep round-off doo-doo caused by ill-conditioned coefficient matrices\
\>", "Subsubsection"],

Cell["\<\
You are working as a summer intern with Danville PowerTrain Foundry and your \
boss brings in a simple 3D linear system. 
It is:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", "=", "3"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", "=", "3"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"-", "0.1716"}], "2.9474", "1.4518"},
        {
         RowBox[{"-", "2.0640"}], "1.8970", 
         RowBox[{"-", "2.1660"}]},
        {
         RowBox[{"-", "1.4421"}], 
         RowBox[{"-", "1.2106"}], 
         RowBox[{"-", "2.9971"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"x", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"y", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "hangdim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"linearsystem", " ", "=", " ", 
  RowBox[{"Column", "[", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"A", ".", "X"}], " ", "==", "  ", "Y"}], "]"}], 
   "]"}]}]}], "Input"],

Cell["\<\
You say: \"Let me check the rank of the coefficient matrix A:\"\
\>", "Text"],

Cell[BoxData[
 RowBox[{"rankA", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
    "\[RightDoubleBracket]"}], "]"}]}]], "Input"],

Cell["\<\
The boss says: \"Good. This linear system is exactly determined. We have \
three independent readings for Y:\"\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"Y1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "3.1071"}], ",", "7.4542", ",", "8.5967"}], "}"}]}], "\n", 
 RowBox[{"Y2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "3.1076"}], ",", "7.4545", ",", "8.5960"}], "}"}]}], "\n", 
 RowBox[{"Y3", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "3.1077"}], ",", "7.4522", ",", "8.5967"}], 
   "}"}]}]}], "Input"],

Cell[TextData[{
 "The boss says: \"They are all in pretty good agreement. Let's roundoff all \
of them to\n           ",
 StyleBox["  Y = {-3.11, 7.45, 8.60} ",
  FontColor->RGBColor[0, 0, 1]],
 "\nand report the solution as ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ".Y:"
}], "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"bossY", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.11"}], ",", "7.45", ",", "8.60"}], "}"}]}], ";"}], 
   " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{"Xsol", "=", 
  RowBox[{
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   StyleBox["bossY",
    FontColor->RGBColor[0, 0, 1]]}]}]}], "Input"],

Cell["\<\
After the boss leaves, you look again at the individual readings for Y1,Y2 \
and Y3:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{"Y1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "3.1071"}], ",", "7.4542", ",", "8.5967"}], "}"}]}], "\n", 
 RowBox[{"Y2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "3.1076"}], ",", "7.4545", ",", "8.5960"}], "}"}]}], "\n", 
 RowBox[{"Y3", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "3.1077"}], ",", "7.4522", ",", "8.5967"}], 
   "}"}]}]}], "Input"],

Cell["\<\
And then, you look at the solutions that you would have gotten from each of \
the three unrounded individual readings Y1, Y2, Y3:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{"Xsol", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   StyleBox["Y1",
    FontColor->RGBColor[0, 0, 1]]}]}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"Xsol", 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   StyleBox[
    RowBox[{"Y", 
     StyleBox["2",
      FontColor->RGBColor[0, 0, 1]]}]]}]}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"Xsol", 
    StyleBox["3",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   StyleBox[
    RowBox[{"Y", 
     StyleBox["3",
      FontColor->RGBColor[0, 0, 1]]}]]}]}]}], "Input"],

Cell["\<\
All of them are radically different! 
And none of them is anything like the solution the boss got by rounding Y1, \
Y2, Y3 to a common value Y:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"bosssol", "=", 
  RowBox[{
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   StyleBox["bossY",
    FontColor->RGBColor[0, 0, 1]]}]}]], "Input"],

Cell[CellGroupData[{

Cell["How do you account for this? ", "Text"],

Cell["Answer:", "Special1"],

Cell["Look at the SVD stretch factors for A:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"stretch", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", "=", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
      "\[RightDoubleBracket]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"2", ",", "k"}], "\[RightDoubleBracket]"}]}], ";"}], " "}], "\n", 
 RowBox[{"stretches", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"stretch", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "rank"}], "}"}]}], "]"}]}]}], "Input"],

Cell["\<\
The round-off mess is caused by the fact that one stretch factor is so much \
smaller than the others. \
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"stretch", "[", "3", "]"}]], "Input"],

Cell[TextData[{
 "When this happens, lots of folks call the matrix ",
 StyleBox["ill-conditioned",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Special5"],

Cell[TextData[{
 "The reason:\nFor any given Y, the solution to the linear system is\n\n      \
    ",
 Cell[BoxData[
  RowBox[{"Xsol", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "rank"], 
    RowBox[{
     FractionBox[
      RowBox[{"(", 
       RowBox[{"Y", ".", 
        RowBox[{"hangerframe", "[", "k", "]"}]}], " ", ")"}], 
      RowBox[{
       StyleBox[
        RowBox[{"stretch", "[", "k", "]"}],
        FontColor->RGBColor[1, 0, 1]], " "}]], 
     RowBox[{"alignerframe", "[", "k", "]"}]}]}]}]]],
 ".\n\nBecause",
 StyleBox[" stretch[3]",
  FontColor->RGBColor[1, 0, 1]],
 " is so small relative to the others, the third term has a ",
 StyleBox["huge",
  FontWeight->"Bold"],
 " influence on the solution ",
 StyleBox["Xsol:",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"Y", ",", "hangerframe", ",", "alignerframe"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y", ".", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], ")"}], " "}], 
   RowBox[{"stretch", "[", "3", "]"}]], 
  StyleBox[
   RowBox[{"alignerframe", "[", "3", "]"}],
   FontColor->RGBColor[0, 0, 1]]}]}], "Input"],

Cell[TextData[{
 "This happens because ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"stretch", "[", "3", "]"}]]]],
 " is so, so big:"
}], "SmallText"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"stretch", "[", "3", "]"}]]], "Input"],

Cell[TextData[{
 "This also tells you that unless \n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y", ".", 
    RowBox[{"hangerframe", "[", "3", "]"}]}], "=", "0"}]]],
 ", \nyou will have",
 StyleBox[" big",
  FontWeight->"Bold"],
 " trouble with small round-offs when you try to solve \n                 A.X \
= Y.\nSee the radical differences in the third term of the solution Xsol for \
the Y1, Y2, and Y3 used above:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "hangerframe", ",", "stretch", ",", "k"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y1", ".", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], ")"}], " "}], 
   StyleBox[
    RowBox[{"stretch", "[", "3", "]"}],
    FontColor->RGBColor[1, 0, 1]]], 
  RowBox[{"alignerframe", "[", "3", "]"}]}], "\n", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y2", ".", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], ")"}], " "}], 
   StyleBox[
    RowBox[{"stretch", "[", "3", "]"}],
    FontColor->RGBColor[1, 0, 1]]], 
  RowBox[{"alignerframe", "[", "3", "]"}]}], "\n", 
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y3", ".", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], ")"}], " "}], 
   StyleBox[
    RowBox[{"stretch", "[", "3", "]"}],
    FontColor->RGBColor[1, 0, 1]]], 
  RowBox[{"alignerframe", "[", "3", "]"}]}]}], "Input"],

Cell["\<\
This is why the solutions of 
          A.X = Y1, A.X = Y2 and A.X = Y3 
are so different:\
\>", "SmallText"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Xsol1", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "rank"], 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"Y1", ".", 
        RowBox[{"hangerframe", "[", "k", "]"}]}], 
       StyleBox[
        RowBox[{"stretch", "[", "k", "]"}],
        FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
     RowBox[{"alignerframe", "[", "k", "]"}]}]}]}],
  FontSize->12]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Xsol2", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "rank"], 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"Y2", ".", 
        RowBox[{"hangerframe", "[", "k", "]"}]}], 
       StyleBox[
        RowBox[{"stretch", "[", "k", "]"}],
        FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
     RowBox[{"alignerframe", "[", "k", "]"}]}]}]}],
  FontSize->12]], "Input"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Xsol3", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "rank"], 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"Y3", ".", 
        RowBox[{"hangerframe", "[", "k", "]"}]}], 
       StyleBox[
        RowBox[{"stretch", "[", "k", "]"}],
        FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
     RowBox[{"alignerframe", "[", "k", "]"}]}]}]}],
  FontSize->12]], "Input"],

Cell["\<\
All this because stretch[3] is way smaller than the other stretch factors.
Ill conditioned matrices can bite hard.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.3.a.ii) Getting around the problem through creative round-off of the \
coefficient matrix A\
\>", "Subsubsection"],

Cell["Look at the linear system again:", "Text"],

Cell[BoxData["linearsystem"], "Input"],

Cell["And the three readings:", "Text"],

Cell[BoxData[{"Y1", "\n", "Y2", "\n", "Y3"}], "Input"],

Cell[CellGroupData[{

Cell["\<\
How do you try to deal with coming up with a reasonable solution X so that \
A.X is a reasonable approximation of all three of Y1, Y2 and Y3? \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
This is a matter of individual taste. 

There are folks out there who say that if an experiment results in an \
ill-conditioned linear system (as this one is), then the design of the \
experiment was flawed and the experiment should be reconsidered.

Others say: Ill-conditioning could have resulted from small measurement \
errors (noise). They respond by trying to roundoff A in such a way that \
PseudoInverse[roundedA] is completely insensitive to the components of Y in \
the direction of hangerframe[3]. 
To see how to do this trot out your SVD analysis of A and look at the SVD \
stretch factors for A:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"stretches", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell["\<\
Now use rank one matrices to round off A so that the small stretch factor is \
rounded to 0 but so that 
        alignerframe[1], stretch[1], hangerframe[1], 
        alignerframe[2], stretch[2] and hangerframe[2] 
are preserved.
Here's how to do it for this matrix A:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "stretch", ",", "hangerframe", ",", "k"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["rank",
     FontColor->RGBColor[0, 0, 1]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"hanger", ",", "stretcher", ",", "aligner", ",", "rankOne"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"hanger", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"stretcher", "[", "k_", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"alignerframe", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["rankOne",
      FontColor->RGBColor[1, 0, 0]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"hanger", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"stretcher", "[", "k", "]"}],
      FontColor->RGBColor[1, 0, 1]], ".", 
     StyleBox[
      RowBox[{"aligner", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"roundedA", " ", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]]], 
     RowBox[{"rankOne", "[", "k", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "roundedA", "]"}]}], "Input"],

Cell["Compare with the original ill-conditioned matrix A:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell[TextData[{
 "roundedA[2] and A are almost the same. \nBut the apparently insignificant \
difference between them shows up in a big way because a hit with ",
 StyleBox["PseudoInverse[roundedA] zeroes out hangerframe[3]",
  FontColor->RGBColor[0, 0, 1]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{"PseudoInverse", "[", "roundedA", "]"}], ".", 
   StyleBox[
    RowBox[{"hangerframe", "[", "3", "]"}],
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox["]",
   FontColor->GrayLevel[0]]}]], "Input"],

Cell[TextData[{
 "But a  hit with ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " ",
 StyleBox["does not ",
  FontWeight->"Bold"],
 StyleBox[" zero",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" out hangerframe[3]",
  FontColor->RGBColor[0, 0, 1]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", "A", "]"}], ".", 
  StyleBox[
   RowBox[{"hangerframe", "[", "3", "]"}],
   FontColor->RGBColor[0, 0, 1]]}]], "Input"],

Cell["Now check out:", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"newX", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{
   StyleBox[
    RowBox[{"PseudoInverse", "[", "roundedA", "]"}],
    FontColor->RGBColor[1, 0, 0]], ".", 
   StyleBox[
    RowBox[{"Y", 
     StyleBox["1",
      FontColor->RGBColor[0, 0, 1]]}]]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"newX", 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{
   StyleBox[
    RowBox[{"PseudoInverse", "[", "roundedA", "]"}],
    FontColor->RGBColor[1, 0, 0]], ".", 
   StyleBox[
    RowBox[{"Y", 
     StyleBox["2",
      FontColor->RGBColor[0, 0, 1]]}]]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"newX", 
    StyleBox["3",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{
   StyleBox[
    RowBox[{"PseudoInverse", "[", "roundedA", "]"}],
    FontColor->RGBColor[1, 0, 0]], ".", 
   StyleBox[
    RowBox[{"Y", 
     StyleBox["3",
      FontColor->RGBColor[0, 0, 1]]}]]}]}]], "Input"],

Cell["\<\
These are all reasonably close!
A seat of the pants solution is:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"reasonablesolution", "=", 
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1.361"}], ",", 
     RowBox[{"-", "0.054"}], ",", 
     RowBox[{"-", "2.192"}]}], "}"}],
   FontColor->RGBColor[0, 0, 1]]}]], "Input"],

Cell["Check it out:", "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", "reasonablesolution"}]], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[{"Y1", "\n", "Y2", "\n", "Y3"}], "Input"],

Cell["Not bad at all.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3.a.iii) Comparison with image compression", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Is the procedure of creatively rounding a matrix as done in part ii) above \
the same as the procedure of creatively rounding a matrix for image \
compression?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[StyleBox["Yes!",
 FontColor->RGBColor[1, 0, 0]]], "Accident"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3.a.iv) Creative round-off  doesn't always work", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Does the stunt creatively rounding a matrix  done in part ii) always fix an \
ill-conditioned linear system?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Only when the Y's have reasonably small hangerframe[k] components for k's \
corresponding to the really small stretch factors.
In part ii), this was the case:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Y1", ".", 
    StyleBox[
     RowBox[{"hangerframe", "[", "3", "]"}],
     FontColor->RGBColor[0, 0, 1]]}], ")"}], " ", 
  RowBox[{"hangerframe", "[", "3", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Y2", ".", 
    StyleBox[
     RowBox[{"hangerframe", "[", "3", "]"}],
     FontColor->RGBColor[0, 0, 1]]}], ")"}], " ", 
  RowBox[{"hangerframe", "[", "3", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Y3", ".", 
    StyleBox[
     RowBox[{"hangerframe", "[", "3", "]"}],
     FontColor->RGBColor[0, 0, 1]]}], ")"}], " ", 
  RowBox[{"hangerframe", "[", "3", "]"}]}]], "Input"],

Cell["\<\

But if the original Y1, Y2, Y3 had been:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"newY1", "=", 
  RowBox[{"Y1", "+", 
   RowBox[{"0.51", " ", 
    RowBox[{"hangerframe", "[", "3", "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"newY2", "=", 
  RowBox[{"Y2", "+", 
   RowBox[{"0.53", " ", 
    RowBox[{"hangerframe", "[", "3", "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"newY3", "=", 
  RowBox[{"Y3", "+", 
   RowBox[{"0.52", " ", 
    RowBox[{"hangerframe", "[", "3", "]"}]}]}]}]], "Input"],

Cell["\<\
Note that newY1, newY2 and newY3 have been cooked up to have significant \
components in the direction of hangerframe[3].\
\>", "Special5"],

Cell["You would have been led to:", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"newX", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{
   StyleBox[
    RowBox[{"PseudoInverse", "[", "roundedA", "]"}],
    FontColor->RGBColor[1, 0, 0]], ".", 
   StyleBox[
    RowBox[{"newY", 
     StyleBox["1",
      FontColor->RGBColor[0, 0, 1]]}]]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"newX", 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{
   StyleBox[
    RowBox[{"PseudoInverse", "[", "roundedA", "]"}],
    FontColor->RGBColor[1, 0, 0]], ".", 
   StyleBox[
    RowBox[{"newY", 
     StyleBox["2",
      FontColor->RGBColor[0, 0, 1]]}]]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"newX", 
    StyleBox["3",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{
   StyleBox[
    RowBox[{"PseudoInverse", "[", "roundedA", "]"}],
    FontColor->RGBColor[1, 0, 0]], ".", 
   StyleBox[
    RowBox[{"newY", 
     StyleBox["3",
      FontColor->RGBColor[0, 0, 1]]}]]}]}]], "Input"],

Cell["These are all in reasonable agreement, but look at this:", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    StyleBox[
     RowBox[{"newX", 
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]]}]]}], ",", 
   StyleBox[
    RowBox[{"newY", 
     StyleBox["1",
      FontColor->RGBColor[0, 0, 1]]}]]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    StyleBox[
     RowBox[{"newX", 
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]]}]]}], ",", 
   StyleBox[
    RowBox[{"newY", 
     StyleBox["2",
      FontColor->RGBColor[0, 0, 1]]}]]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    StyleBox[
     RowBox[{"newX", 
      StyleBox["3",
       FontColor->RGBColor[0, 0, 1]]}]]}], ",", 
   StyleBox[
    RowBox[{"newY", 
     StyleBox["3",
      FontColor->RGBColor[0, 0, 1]]}]]}], "}"}]], "Input"],

Cell[TextData[{
 "Garbage. \nEven though:\n         newX",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 ", newX",
 StyleBox["2 ",
  FontColor->RGBColor[0, 0, 1]],
 "and new X",
 StyleBox["3",
  FontColor->RGBColor[0, 0, 1]],
 " are in reasonable agreement\nand \n         newY",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 ", newY",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 ", and newY",
 StyleBox["3",
  FontColor->RGBColor[0, 0, 1]],
 " are in reasonable agreement,\nthe truth is that\n       ",
 StyleBox["  A",
  FontColor->RGBColor[0, 0, 1]],
 ".newX",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 " is not close to newY",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 ",\nand\n         ",
 StyleBox[" A",
  FontColor->RGBColor[0, 0, 1]],
 ".newX",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 " is not close to newY",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 ",\nand\n        ",
 StyleBox[" A",
  FontColor->RGBColor[0, 0, 1]],
 ".newX",
 StyleBox["3",
  FontColor->RGBColor[0, 0, 1]],
 " is not close to newY",
 StyleBox["3.\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["It's a mess that cannot be fixed.",
  FontColor->GrayLevel[0]],
 "\n    \nYou gotta throw in the towel on this one. \nKiss it off."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4) Principal Component Data Analysis via SVD ", "Subsection",
 CellTags->"MGM.07.B4"],

Cell[CellGroupData[{

Cell["B.4.a.i)  Principal component data Analysis via SVD ", "Subsubsection"],

Cell["Here's a little data sample:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.8"}], ",", " ", 
        RowBox[{"-", "0.6"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", " ", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.2"}], ",", " ", "0.35"}], "}"}], ",", " ", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", " ", "0.96"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", " ", "1.63"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.4", ",", " ", "1.99"}], "}"}], ",", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"1.8", ",", " ", "2.61"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.6", ",", " ", "3.57"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.2", ",", " ", "3.76"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.6", ",", " ", "4.60"}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"dataplot", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}]}], "]"}], 
  " "}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
No one line runs through all these points, but your eyes tell you that they \
are strung out more or less in a straight line. Use SVD analysis to come up \
with a line that does a good job of approximating these data points.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Take the data:", "SmallText"],

Cell[BoxData["data"], "Input"],

Cell["\<\
Calculate the mean (average) of the data by adding all the data up and \
dividing by the number of data points:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"mean", "=", 
  FractionBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], 
     RowBox[{"Length", "[", "data", "]"}]], 
    RowBox[{"data", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
   
   RowBox[{"Length", "[", "data", "]"}]]}]], "Input"],

Cell["See the mean plotted with the data:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"dataplot", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.07", "]"}], ",", 
       RowBox[{"Point", "[", "mean", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<data points and mean\>\""}]}], "]"}], 
  " "}]], "Input"],

Cell["\<\
Center the data on {0,0} by subtracting the mean from the data points:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "f", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["f",
      FontColor->RGBColor[0, 0, 1]], "[", "X_", "]"}], " ", ":=", " ", 
    StyleBox[
     RowBox[{"X", " ", "-", "mean"}],
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"centereddata", " ", "=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{
    StyleBox["f",
     FontColor->RGBColor[0, 0, 1]], ",", "data"}], " ", "]"}]}]}], "Input"],

Cell["See these points:", "SmallText"],

Cell[BoxData[
 RowBox[{"centereddataplot", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"centereddata", " ", ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", "\n", "\t", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.04", "]"}]}], "}"}]}]}], "]"}], 
  " "}]], "Input"],

Cell["Use the centered data plot to define a matrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"centereddatamatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "centereddata", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "centereddatamatrix", " ", "]"}]}], "Input"],

Cell[TextData[{
 "The centered data set is \n",
 StyleBox["{{x[1],y[1]},{x[2],y[2]},{x[3],y[3]},{x[4],y[4]},{x[5],y[5]},{x[6],\
\n    y[6]},{x[7],y[7]},{x[8],y[8]},{x[9],y[9]},{x[10],y[10]}}",
  FontColor->RGBColor[0, 0, 1]],
 ".\n    \n  The centereddata matrix is\n\n",
 StyleBox[" ",
  FontSize->12],
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"x", "[", "1", "]"}], 
       RowBox[{"x", "[", "2", "]"}], 
       RowBox[{"x", "[", "3", "]"}], 
       RowBox[{"x", "[", "4", "]"}], 
       RowBox[{"x", "[", "5", "]"}], 
       RowBox[{"x", "[", "6", "]"}], 
       RowBox[{"x", "[", "7", "]"}], 
       RowBox[{"x", "[", "8", "]"}], 
       RowBox[{"x", "[", "9", "]"}], 
       RowBox[{"x", "[", "10", "]"}]},
      {
       RowBox[{"y", "[", "1", "]"}], 
       RowBox[{"y", "[", "2", "]"}], 
       RowBox[{"y", "[", "3", "]"}], 
       RowBox[{"y", "[", "4", "]"}], 
       RowBox[{"y", "[", "5", "]"}], 
       RowBox[{"y", "[", "6", "]"}], 
       RowBox[{"y", "[", "7", "]"}], 
       RowBox[{"y", "[", "8", "]"}], 
       RowBox[{"y", "[", "9", "]"}], 
       RowBox[{"y", "[", "10", "]"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]],
  FontSize->12]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["The centereddatamatrix hangs in 2D.", "SmallText"],

Cell["Look at the SVD stretch factors of centereddatamatrix :", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"stretch", "[", "1", "]"}], ",", 
    RowBox[{"stretch", "[", "2", "]"}]}], "}"}], "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]], "Input"],

Cell[TextData[{
 "That first stretch factor is",
 StyleBox[" lots bigger",
  FontWeight->"Bold"],
 " than the other. \nThis is your signal that the line through {0,0} running \
inn the direction of ",
 StyleBox["hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 " runs with the flow of the centered data,\nSee it:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hangerframe", "[", "1", "]"}], ",", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox[
      RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"centereddataplot", ",", " ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"stretch", "[", "1", "]"}], " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Orange"}]}], "]"}], ",", " ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"stretch", "[", "1", "]"}]}], " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Orange"}]}], "]"}], ",", 
    RowBox[{
    "PlotLabel", "->", "\"\<Centered data with hangerframe[1]\>\""}]}], "]"}],
   " "}]}], "Input"],

Cell["\<\
The principal component of the centered data is hangerframe[1].
The principal component line is the line through the mean running in the \
direction of hangerframe[1].\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"principalline", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"principalline", "[", "t_", "]"}], " ", "=", " ", 
    RowBox[{"mean", " ", "+", " ", 
     RowBox[{"t", " ", 
      RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], ";"}], " ", "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"thigh", " ", "=", " ", "6"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"principalcomponentplot", " ", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"principalline", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "thigh"}], ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Yellow", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", "principalcomponentplot", ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Original data and \\nprincipal component line\>\""}]}], 
  "]"}]}], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.a.ii)  Why it works", "Subsubsection"],

Cell[CellGroupData[{

Cell["Why did that work?", "Text"],

Cell["Answer:", "Special1"],

Cell["Go back to the centered data:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "centereddataplot", "]"}], " "}]], "Input"],

Cell["Now look at:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "stretch"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"hangerframe", "[", "1", "]"}], ",", 
     RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox["=",
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], 
  RowBox[{
   StyleBox[
    RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[0, 0, 1]], 
   RowBox[{
    StyleBox["[",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["1",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["]",
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox["]",
    FontColor->RGBColor[0, 0, 1]]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"stretch", "[", "1", "]"}], ",", 
     RowBox[{"stretch", "[", "2", "]"}]}], "}"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox["=",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  RowBox[{
   StyleBox[
    RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[1, 0, 1]], 
   RowBox[{
    StyleBox["[",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["]",
     FontColor->RGBColor[1, 0, 1]]}], 
   StyleBox["]",
    FontColor->RGBColor[1, 0, 1]]}]}]], "Input"],

Cell["\<\
This tells you that when you hit the unit sphere of Length[data]D with \
centereddatamatrix, you get this ellipse:  \
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretch", "[", "1", "]"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[
    RowBox[{"Cos", "[", "t", "]"}],
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[
    RowBox[{"hangerframe", "[", "1", "]"}],
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox["+",
   FontColor->RGBColor[0, 0, 1]], 
  RowBox[{
   StyleBox[
    RowBox[{"stretch", "[", "2", "]"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[
    RowBox[{"Sin", "[", "t", "]"}],
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[
    RowBox[{"hangerframe", "[", "2", "]"}],
    FontColor->RGBColor[0, 0, 1]]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "ellipseplotter", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ellipseplotter", "[", "t_", "]"}], " ", "=", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"stretch", "[", "1", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[
       RowBox[{"Cos", "[", "t", "]"}],
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "1", "]"}],
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox["+",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"stretch", "[", "2", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[
       RowBox[{"Sin", "[", "t", "]"}],
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "2", "]"}],
       FontColor->RGBColor[0, 0, 1]]}]}]}], ";"}], " "}], "\n", 
 RowBox[{"cigar", " ", "=", " ", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"ellipseplotter", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.005", "]"}], ",", "Blue"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], 
  " "}]}], "Input"],

Cell["\<\
A long thin cigar.
See this cigar along with the centered data plot:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"cigar", ",", "centereddataplot"}], "]"}], " "}]], "Input"],

Cell["\<\
All the centered data are automatically in this ellipse because they are hits \
on the 10D coordinate unit vectors\
\>", "SmallText"],

Cell[TextData[{
 "             ",
 StyleBox["{{1,0,0,0,0,0,0,0,0,0},{0,1,0,0,0,0,0,0,0,0},{0,0,1,0,0,0,0,0,0,0},\
{0,0,0,1,0,0,0,0,0,0},{0,0,0,0,1,0,0,0,0,0},\n                    \
{0,0,0,0,0,1,0,0,0,0},{0,0,0,0,0,0,1,0,0,0},{0,0,0,0,0,0,0,1,0,0},{1,0,0,0,0,\
0,0,0,1,0},{0,0,0,0,0,0,0,0,0,1}}.",
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 "\n The line through {0,0} in the direction of hangerframe[1] runs right \
along the long axis of this ellipse. \nSee it:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"cigar", ",", "centereddataplot", ",", "  ", "\n", "\t", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"stretch", "[", "1", "]"}], " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", 
       RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
      RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", "\n", "   ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"stretch", "[", "1", "]"}]}], " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", 
       RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
      RowBox[{"HeadSize", "->", "1"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Everything\>\""}]}], "]"}], 
  " "}]], "Input"],

Cell["Now uncenter everything and you get:", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", "  ", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"stretch", "[", "1", "]"}], " ", 
      RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
     RowBox[{"Tail", "->", "mean"}], ",", 
     RowBox[{"VectorColor", "->", 
      RowBox[{"Darker", "[", "Yellow", "]"}]}]}], "]"}], ",", " ", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"stretch", "[", "1", "]"}]}], " ", 
      RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
     RowBox[{"Tail", "->", "mean"}], ",", 
     RowBox[{"VectorColor", "->", 
      RowBox[{"Darker", "[", "Yellow", "]"}]}]}], "]"}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<original data and \\n SVD regression line\>\""}], 
   ",", " ", 
   RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}]], "Input"],

Cell["\<\
State of art principal component line fit through the visual eyes of SVD.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.b.i)  3D data", "Subsubsection"],

Cell["Here is a data set consisting of points in 3D:", "Text"],

Cell[BoxData[
 RowBox[{"data", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.2", ",", "0.59", ",", "1.33"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.60", ",", "0.56", ",", "1.32"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", "0.62", ",", "1.44"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.40", ",", "0.80", ",", "1.56"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.8", ",", "1.11", ",", "0.99"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.2", ",", "1.2", ",", "1.30"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.60", ",", "1.23", ",", "1.27"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.00", ",", "1.27", ",", "1.0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.4", ",", "1.71", ",", "0.92"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.8", ",", "1.7", ",", "0.61"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.20", ",", "1.57", ",", "0.93"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.6", ",", "2.16", ",", "0.51"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.0", ",", "2.10", ",", "0.71"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.4", ",", "2.23", ",", "0.82"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.8", ",", "2.24", ",", "0.22"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6.2", ",", "2.31", ",", "0.13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6.60", ",", "2.73", ",", "0.02"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.0", ",", "2.76", ",", "0.13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.4", ",", "2.74", ",", 
      RowBox[{"-", "0.02"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.8", ",", "2.86", ",", "0.23"}], "}"}]}], "}"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Use SVD data analysis to determine whether this data clusters about a 3D \
line. If so, come up with a good line and plot it along with the data.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Calculate the mean:", "SmallText"],

Cell[BoxData[
 RowBox[{"mean", "=", 
  FractionBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], 
     RowBox[{"Length", "[", "data", "]"}]], 
    RowBox[{"data", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
   
   RowBox[{"Length", "[", "data", "]"}]]}]], "Input"],

Cell["Center the data and make the centered data matrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "f", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["f",
      FontColor->RGBColor[0, 0, 1]], "[", "X_", "]"}], " ", ":=", " ", 
    StyleBox[
     RowBox[{"X", " ", "-", "mean"}],
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"centereddata", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      StyleBox["f",
       FontColor->RGBColor[0, 0, 1]], ",", "data"}], " ", "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"centereddatamatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "centereddata", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "centereddatamatrix", " ", "]"}]}], "Input"],

Cell["Look at the SVD stretch factors for this matrix :", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"stretch", "[", "1", "]"}], ",", 
     RowBox[{"stretch", "[", "2", "]"}], ",", 
     RowBox[{"stretch", "[", "3", "]"}]}], "}"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox["=",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  RowBox[{
   StyleBox[
    RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[1, 0, 1]], 
   RowBox[{
    StyleBox["[",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["]",
     FontColor->RGBColor[1, 0, 1]]}], 
   StyleBox["]",
    FontColor->RGBColor[1, 0, 1]]}]}]], "Input"],

Cell[TextData[{
 "That big stretch factor",
 StyleBox[" stretch[1]",
  FontColor->RGBColor[1, 0, 1]],
 " indicates that data are basically linear.\nThey cluster in around a line \
through mean that runs in the direction of ",
 StyleBox["hangerframe[1].",
  FontColor->RGBColor[0, 0, 1]],
 "\nSee the data points along with the resulting principal component line:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}], ",", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataplot", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"principalline", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"principalline", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{"mean", " ", "+", " ", 
      RowBox[{"t", " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}]}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"thigh", " ", "=", "5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"principallineplot", " ", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"principalline", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "thigh"}], ",", "thigh"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"directionvector", " ", "=", " ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", "mean"}], ",", 
      RowBox[{"VectorColor", "->", "Orange"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"finalproduct", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
   "dataplot", ",", "principallineplot", ",", "directionvector", ",", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input"],

Cell["Look right down that line:", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"finalproduct", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"12", " ", 
     RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}]], "Input"],

Cell["Clustered nicely along the line.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.b.ii)  3D data", "Subsubsection"],

Cell["Here is a data set consisting of points in 3D:", "Text"],

Cell[BoxData[
 RowBox[{"data", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.2", ",", "2.59", ",", "0.33"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.60", ",", "2.56", ",", "0.32"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", "0.62", ",", "1.44"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.40", ",", "0.80", ",", "0.56"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.8", ",", "1.11", ",", "1.99"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.2", ",", "1.2", ",", "0.30"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2.60", ",", "1.23", ",", "1.27"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.00", ",", "1.27", ",", 
      RowBox[{"-", "0.7"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.4", ",", "1.71", ",", "0.92"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.8", ",", "0.7", ",", "1.61"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.20", ",", "2.57", ",", "1.93"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.6", ",", "2.16", ",", 
      RowBox[{"-", "0.51"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.0", ",", "2.10", ",", 
      RowBox[{"-", "0.71"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.4", ",", "2.04", ",", "1.82"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.8", ",", "0.24", ",", "1.22"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6.2", ",", "2.31", ",", "1.13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"6.60", ",", "2.73", ",", "1.02"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.0", ",", "2.76", ",", "1.13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.4", ",", "2.74", ",", 
      RowBox[{"-", "0.02"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7.8", ",", "2.86", ",", "1.23"}], "}"}]}], "}"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Use SVD data analysis to determine whether this data clusters about a 3D \
line. If so, come up with a good line and plot it along with the data.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Calculate the mean:", "SmallText"],

Cell[BoxData[
 RowBox[{"mean", "=", 
  FractionBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], 
     RowBox[{"Length", "[", "data", "]"}]], 
    RowBox[{"data", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
   
   RowBox[{"Length", "[", "data", "]"}]]}]], "Input"],

Cell["Center the data and make the centered data matrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "f", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["f",
      FontColor->RGBColor[0, 0, 1]], "[", "X_", "]"}], " ", ":=", " ", 
    StyleBox[
     RowBox[{"X", " ", "-", "mean"}],
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"centereddata", " ", "=", " ", 
    RowBox[{"Map", "[", 
     RowBox[{
      StyleBox["f",
       FontColor->RGBColor[0, 0, 1]], ",", "data"}], " ", "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"centereddatamatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "centereddata", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "centereddatamatrix", " ", "]"}]}], "Input"],

Cell["Look at the SVD stretch factors for this matrix :", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"stretch", "[", "1", "]"}], ",", 
     RowBox[{"stretch", "[", "2", "]"}], ",", 
     RowBox[{"stretch", "[", "3", "]"}]}], "}"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox["=",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  RowBox[{
   StyleBox[
    RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[1, 0, 1]], 
   RowBox[{
    StyleBox["[",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["]",
     FontColor->RGBColor[1, 0, 1]]}], 
   StyleBox["]",
    FontColor->RGBColor[1, 0, 1]]}]}]], "Input"],

Cell[TextData[{
 "That big stretch factor",
 StyleBox[" stretch[1]",
  FontColor->RGBColor[1, 0, 1]],
 " indicates that data are sort of linear but the other stretch factors \
indicate the data are not all that closely clustered around the principal \
component line running through the mean in the direction of",
 StyleBox[" hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 ".\n\nSee the data points along with the resulting principal component \
line:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}], ",", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataplot", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Blue", ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"principalline", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"principalline", "[", "t_", "]"}], " ", "=", " ", 
     RowBox[{"mean", " ", "+", " ", 
      RowBox[{"t", " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"thigh", " ", "=", "8"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"principallineplot", " ", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"principalline", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "thigh"}], ",", "thigh"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"directionvector", " ", "=", " ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", "mean"}], ",", 
      RowBox[{"VectorColor", "->", "Orange"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"finalproduct", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
   "dataplot", ",", "principallineplot", ",", "directionvector", ",", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input"],

Cell["Look right down that line:", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"finalproduct", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"12", " ", 
     RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}]], "Input"],

Cell["\<\
Not so closely clustered around the principal component line.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.07.B1"->{
  Cell[29477, 802, 149, 4, 61, "Subsection",
   CellTags->"MGM.07.B1"]},
 "MGM.07.B2"->{
  Cell[63072, 2012, 162, 4, 61, "Subsection",
   CellTags->"MGM.07.B2"]},
 "MGM.07.B3"->{
  Cell[91661, 3011, 231, 5, 86, "Subsection",
   CellTags->"MGM.07.B3"]},
 "MGM.07.B4"->{
  Cell[119032, 4056, 93, 1, 36, "Subsection",
   CellTags->"MGM.07.B4"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.07.B1", 204017, 6212},
 {"MGM.07.B2", 204106, 6215},
 {"MGM.07.B3", 204196, 6218},
 {"MGM.07.B4", 204286, 6221}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 139, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6376, 137, 193, 7, 28, "Special2"],
Cell[6572, 146, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7889, 188, 38, 0, 31, "Subsubsection"],
Cell[7930, 190, 1344, 31, 156, "Input"],
Cell[9277, 223, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9450, 229, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26821, 712, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27068, 723, 39, 0, 35, "Subsubsection"],
Cell[27110, 725, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29477, 802, 149, 4, 61, "Subsection",
 CellTags->"MGM.07.B1"],
Cell[CellGroupData[{
Cell[29651, 810, 99, 2, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[29775, 816, 124, 3, 49, "Text"],
Cell[29902, 821, 27, 0, 23, "Special1"],
Cell[29932, 823, 77, 0, 24, "SmallText"],
Cell[30012, 825, 423, 14, 73, "Input"],
Cell[30438, 841, 27, 0, 24, "SmallText"],
Cell[30468, 843, 239, 7, 20, "Input"],
Cell[30710, 852, 95, 2, 24, "SmallText"],
Cell[30808, 856, 2626, 82, 222, "Input"],
Cell[33437, 940, 61, 0, 24, "SmallText"],
Cell[33501, 942, 1119, 29, 81, "Input"],
Cell[34623, 973, 141, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[34813, 982, 60, 0, 31, "Subsubsection"],
Cell[34876, 984, 73, 0, 24, "Text"],
Cell[34952, 986, 27, 0, 23, "Special1"],
Cell[34982, 988, 248, 8, 49, "SmallText"],
Cell[35233, 998, 347, 7, 149, "SmallText"],
Cell[35583, 1007, 1530, 54, 96, "Input"],
Cell[37116, 1063, 199, 5, 23, "Special2"],
Cell[37318, 1070, 59, 0, 24, "SmallText"],
Cell[37380, 1072, 1036, 37, 66, "Input"],
Cell[38419, 1111, 190, 5, 23, "Special2"],
Cell[38612, 1118, 57, 0, 24, "SmallText"],
Cell[38672, 1120, 1203, 39, 81, "Input"],
Cell[39878, 1161, 194, 5, 23, "Special2"],
Cell[40075, 1168, 58, 0, 24, "SmallText"],
Cell[40136, 1170, 679, 24, 36, "Input"],
Cell[40818, 1196, 34, 0, 24, "SmallText"],
Cell[40855, 1198, 217, 6, 20, "Input"],
Cell[41075, 1206, 40, 0, 24, "SmallText"]
}, Closed]],
Cell[CellGroupData[{
Cell[41152, 1211, 150, 3, 52, "Subsubsection"],
Cell[41305, 1216, 111, 3, 24, "Text"],
Cell[41419, 1221, 1564, 54, 96, "Input"],
Cell[42986, 1277, 199, 5, 23, "Special2"],
Cell[43188, 1284, 54, 0, 24, "Text"],
Cell[43245, 1286, 1036, 37, 66, "Input"],
Cell[44284, 1325, 190, 5, 23, "Special2"],
Cell[44477, 1332, 52, 0, 24, "Text"],
Cell[44532, 1334, 1160, 39, 66, "Input"],
Cell[45695, 1375, 194, 5, 23, "Special2"],
Cell[45892, 1382, 48, 0, 24, "Text"],
Cell[45943, 1384, 679, 24, 36, "Input"],
Cell[46625, 1410, 29, 0, 24, "Text"],
Cell[46657, 1412, 217, 6, 20, "Input"],
Cell[CellGroupData[{
Cell[46899, 1422, 136, 3, 49, "Text"],
Cell[47038, 1427, 27, 0, 23, "Special1"],
Cell[47068, 1429, 422, 16, 74, "SmallText"],
Cell[47493, 1447, 488, 15, 51, "Input"],
Cell[47984, 1464, 29, 0, 24, "SmallText"],
Cell[48016, 1466, 277, 9, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[48342, 1481, 100, 2, 31, "Subsubsection"],
Cell[48445, 1485, 195, 4, 74, "Text"],
Cell[48643, 1491, 979, 32, 66, "Input"],
Cell[CellGroupData[{
Cell[49647, 1527, 68, 0, 24, "Text"],
Cell[49718, 1529, 27, 0, 23, "Special1"],
Cell[49748, 1531, 42, 0, 24, "SmallText"],
Cell[49793, 1533, 1033, 33, 66, "Input"],
Cell[50829, 1568, 604, 19, 36, "Input"],
Cell[51436, 1589, 532, 16, 36, "Input"],
Cell[51971, 1607, 666, 18, 149, "SmallText"],
Cell[52640, 1627, 3307, 120, 111, "Input"],
Cell[55950, 1749, 68, 0, 24, "SmallText"],
Cell[56021, 1751, 292, 9, 68, "Input"],
Cell[56316, 1762, 29, 0, 24, "SmallText"],
Cell[56348, 1764, 63, 1, 20, "Input"],
Cell[56414, 1767, 34, 0, 24, "SmallText"],
Cell[56451, 1769, 191, 7, 50, "SmallText"],
Cell[56645, 1778, 56, 0, 24, "SmallText"],
Cell[56704, 1780, 979, 32, 66, "Input"],
Cell[57686, 1814, 4808, 171, 201, "Input"],
Cell[62497, 1987, 68, 0, 24, "SmallText"],
Cell[62568, 1989, 292, 9, 68, "Input"],
Cell[62863, 2000, 29, 0, 24, "SmallText"],
Cell[62895, 2002, 63, 1, 20, "Input"],
Cell[62961, 2005, 50, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[63072, 2012, 162, 4, 61, "Subsection",
 CellTags->"MGM.07.B2"],
Cell[63237, 2018, 127, 3, 20, "Special5"],
Cell[CellGroupData[{
Cell[63389, 2025, 164, 4, 74, "Subsubsection"],
Cell[63556, 2031, 205, 6, 74, "Text"],
Cell[63764, 2039, 764, 12, 115, "Special5"],
Cell[64531, 2053, 336, 10, 99, "Text"],
Cell[64870, 2065, 3325, 104, 252, "Input"],
Cell[68198, 2171, 24, 0, 24, "Text"],
Cell[68225, 2173, 63, 1, 20, "Input"],
Cell[68291, 2176, 132, 3, 31, "Special5"],
Cell[68426, 2181, 38, 0, 24, "Text"],
Cell[68467, 2183, 1160, 38, 147, "Input"],
Cell[69630, 2223, 24, 0, 24, "Text"],
Cell[69657, 2225, 63, 1, 20, "Input"],
Cell[69723, 2228, 22, 0, 24, "Text"],
Cell[69748, 2230, 1160, 38, 147, "Input"],
Cell[70911, 2270, 24, 0, 24, "Text"],
Cell[70938, 2272, 63, 1, 20, "Input"],
Cell[71004, 2275, 138, 4, 74, "Text"],
Cell[71145, 2281, 1426, 44, 222, "Input"],
Cell[72574, 2327, 102, 2, 20, "Special5"],
Cell[CellGroupData[{
Cell[72701, 2333, 249, 5, 99, "Text"],
Cell[72953, 2340, 27, 0, 23, "Special1"],
Cell[72983, 2342, 65, 0, 24, "SmallText"],
Cell[73051, 2344, 4565, 164, 171, "Input"],
Cell[77619, 2510, 70, 0, 20, "Special5"],
Cell[77692, 2512, 330, 9, 100, "SmallText"],
Cell[78025, 2523, 180, 4, 20, "Input"],
Cell[78208, 2529, 375, 10, 99, "SmallText"],
Cell[78586, 2541, 461, 15, 68, "Input"],
Cell[79050, 2558, 47, 0, 20, "Special5"],
Cell[79100, 2560, 56, 0, 24, "SmallText"],
Cell[79159, 2562, 557, 15, 36, "Input"],
Cell[79719, 2579, 43, 3, 49, "SmallText"],
Cell[79765, 2584, 82, 2, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[79874, 2590, 52, 0, 24, "SmallText"],
Cell[79929, 2592, 127, 3, 20, "Input"],
Cell[80059, 2597, 92, 2, 24, "SmallText"],
Cell[CellGroupData[{
Cell[80176, 2603, 94, 2, 31, "Subsubsection"],
Cell[80273, 2607, 53, 0, 24, "Text"],
Cell[80329, 2609, 127, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[80481, 2616, 158, 3, 49, "Text"],
Cell[80642, 2621, 27, 0, 23, "Special1"],
Cell[80672, 2623, 78, 0, 24, "SmallText"],
Cell[80753, 2625, 283, 10, 50, "SmallText"],
Cell[81039, 2637, 73, 0, 24, "SmallText"],
Cell[81115, 2639, 78, 0, 24, "SmallText"],
Cell[81196, 2641, 330, 10, 20, "Input"],
Cell[81529, 2653, 323, 10, 20, "Input"],
Cell[81855, 2665, 332, 10, 20, "Input"],
Cell[82190, 2677, 342, 10, 43, "Special5"],
Cell[82535, 2689, 267, 8, 40, "Special5"],
Cell[82805, 2699, 165, 5, 24, "SmallText"],
Cell[82973, 2706, 324, 7, 36, "Input"],
Cell[83300, 2715, 183, 6, 49, "SmallText"],
Cell[83486, 2723, 103, 2, 20, "Input"],
Cell[83592, 2727, 54, 0, 24, "SmallText"],
Cell[83649, 2729, 101, 2, 42, "Input"],
Cell[83753, 2733, 203, 5, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[84005, 2744, 339, 9, 74, "Subsubsection"],
Cell[84347, 2755, 373, 10, 99, "Text"],
Cell[84723, 2767, 301, 11, 50, "Text"],
Cell[CellGroupData[{
Cell[85049, 2782, 158, 5, 49, "Text"],
Cell[85210, 2789, 27, 0, 23, "Special1"],
Cell[85240, 2791, 177, 4, 49, "SmallText"],
Cell[85420, 2797, 97, 2, 20, "Input"],
Cell[85520, 2801, 97, 2, 20, "Input"],
Cell[85620, 2805, 97, 2, 20, "Input"],
Cell[85720, 2809, 236, 4, 74, "SmallText"],
Cell[85959, 2815, 315, 9, 49, "Input"],
Cell[86277, 2826, 123, 3, 42, "Input"],
Cell[86403, 2831, 76, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[86528, 2837, 58, 0, 31, "Subsubsection"],
Cell[86589, 2839, 24, 0, 24, "Text"],
Cell[86616, 2841, 1054, 30, 106, "Input"],
Cell[CellGroupData[{
Cell[87695, 2875, 37, 0, 24, "Text"],
Cell[87735, 2877, 27, 0, 23, "Special1"],
Cell[87765, 2879, 185, 3, 49, "SmallText"],
Cell[87953, 2884, 619, 19, 51, "Input"],
Cell[88575, 2905, 202, 5, 74, "SmallText"],
Cell[88780, 2912, 782, 24, 96, "Input"],
Cell[89565, 2938, 212, 5, 74, "SmallText"],
Cell[89780, 2945, 782, 24, 96, "Input"],
Cell[90565, 2971, 204, 5, 74, "SmallText"],
Cell[90772, 2978, 782, 24, 96, "Input"],
Cell[91557, 3004, 43, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91661, 3011, 231, 5, 86, "Subsection",
 CellTags->"MGM.07.B3"],
Cell[CellGroupData[{
Cell[91917, 3020, 203, 4, 74, "Subsubsection"],
Cell[92123, 3026, 152, 4, 74, "Text"],
Cell[92278, 3032, 1415, 50, 181, "Input"],
Cell[93696, 3084, 87, 2, 24, "Text"],
Cell[93786, 3088, 202, 5, 20, "Input"],
Cell[93991, 3095, 134, 3, 49, "Text"],
Cell[94128, 3100, 400, 13, 51, "Input"],
Cell[94531, 3115, 310, 10, 77, "Text"],
Cell[94844, 3127, 384, 14, 36, "Input"],
Cell[95231, 3143, 108, 3, 24, "Text"],
Cell[95342, 3148, 400, 13, 51, "Input"],
Cell[95745, 3163, 153, 3, 49, "Text"],
Cell[95901, 3168, 767, 31, 51, "Input"],
Cell[96671, 3201, 167, 4, 74, "Text"],
Cell[96841, 3207, 165, 5, 20, "Input"],
Cell[CellGroupData[{
Cell[97031, 3216, 45, 0, 24, "Text"],
Cell[97079, 3218, 27, 0, 23, "Special1"],
Cell[97109, 3220, 59, 0, 24, "SmallText"],
Cell[97171, 3222, 802, 24, 66, "Input"],
Cell[97976, 3248, 132, 3, 49, "SmallText"],
Cell[98111, 3253, 60, 1, 20, "Input"],
Cell[98174, 3256, 152, 5, 20, "Special5"],
Cell[98329, 3263, 824, 27, 200, "SmallText"],
Cell[99156, 3292, 438, 15, 57, "Input"],
Cell[99597, 3309, 154, 6, 35, "SmallText"],
Cell[99754, 3317, 81, 2, 42, "Input"],
Cell[99838, 3321, 445, 12, 149, "SmallText"],
Cell[100286, 3335, 1976, 65, 195, "Input"],
Cell[102265, 3402, 119, 4, 74, "SmallText"],
Cell[102387, 3408, 457, 15, 49, "Input"],
Cell[102847, 3425, 457, 15, 49, "Input"],
Cell[103307, 3442, 457, 15, 49, "Input"],
Cell[103767, 3459, 143, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[103959, 3468, 126, 3, 31, "Subsubsection"],
Cell[104088, 3473, 48, 0, 24, "Text"],
Cell[104139, 3475, 38, 0, 20, "Input"],
Cell[104180, 3477, 39, 0, 24, "Text"],
Cell[104222, 3479, 54, 0, 51, "Input"],
Cell[CellGroupData[{
Cell[104301, 3483, 166, 3, 49, "Text"],
Cell[104470, 3488, 27, 0, 23, "Special1"],
Cell[104500, 3490, 638, 13, 274, "SmallText"],
Cell[105141, 3505, 224, 5, 20, "Input"],
Cell[105368, 3512, 297, 7, 149, "SmallText"],
Cell[105668, 3521, 4920, 175, 236, "Input"],
Cell[110591, 3698, 72, 0, 24, "SmallText"],
Cell[110666, 3700, 63, 1, 20, "Input"],
Cell[110732, 3703, 279, 6, 74, "SmallText"],
Cell[111014, 3711, 257, 8, 20, "Input"],
Cell[111274, 3721, 314, 14, 27, "SmallText"],
Cell[111591, 3737, 168, 5, 20, "Input"],
Cell[111762, 3744, 35, 0, 24, "SmallText"],
Cell[111800, 3746, 340, 13, 20, "Input"],
Cell[112143, 3761, 340, 13, 20, "Input"],
Cell[112486, 3776, 340, 13, 20, "Input"],
Cell[112829, 3791, 93, 3, 49, "SmallText"],
Cell[112925, 3796, 246, 8, 20, "Input"],
Cell[113174, 3806, 34, 0, 24, "SmallText"],
Cell[113211, 3808, 66, 1, 20, "Input"],
Cell[113280, 3811, 29, 0, 24, "SmallText"],
Cell[113312, 3813, 54, 0, 51, "Input"],
Cell[113369, 3815, 36, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[113454, 3821, 69, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[113548, 3825, 183, 4, 49, "Text"],
Cell[113734, 3831, 27, 0, 23, "Special1"],
Cell[113764, 3833, 75, 1, 56, "Accident"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[113888, 3840, 74, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[113987, 3844, 132, 3, 49, "Text"],
Cell[114122, 3849, 27, 0, 23, "Special1"],
Cell[114152, 3851, 187, 4, 74, "SmallText"],
Cell[114342, 3857, 226, 7, 20, "Input"],
Cell[114571, 3866, 226, 7, 20, "Input"],
Cell[114800, 3875, 226, 7, 20, "Input"],
Cell[115029, 3884, 70, 3, 49, "SmallText"],
Cell[115102, 3889, 144, 4, 20, "Input"],
Cell[115249, 3895, 144, 4, 20, "Input"],
Cell[115396, 3901, 144, 4, 20, "Input"],
Cell[115543, 3907, 149, 3, 31, "Special5"],
Cell[115695, 3912, 48, 0, 24, "SmallText"],
Cell[115746, 3914, 343, 13, 20, "Input"],
Cell[116092, 3929, 343, 13, 20, "Input"],
Cell[116438, 3944, 343, 13, 20, "Input"],
Cell[116784, 3959, 77, 0, 24, "SmallText"],
Cell[116864, 3961, 278, 11, 20, "Input"],
Cell[117145, 3974, 278, 11, 20, "Input"],
Cell[117426, 3987, 278, 11, 20, "Input"],
Cell[117707, 4000, 1264, 49, 374, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[119032, 4056, 93, 1, 36, "Subsection",
 CellTags->"MGM.07.B4"],
Cell[CellGroupData[{
Cell[119150, 4061, 77, 0, 31, "Subsubsection"],
Cell[119230, 4063, 44, 0, 24, "Text"],
Cell[119277, 4065, 1386, 41, 96, "Input"],
Cell[CellGroupData[{
Cell[120688, 4110, 248, 4, 74, "Text"],
Cell[120939, 4116, 27, 0, 23, "Special1"],
Cell[120969, 4118, 35, 0, 24, "SmallText"],
Cell[121007, 4120, 30, 0, 20, "Input"],
Cell[121040, 4122, 140, 3, 49, "SmallText"],
Cell[121183, 4127, 310, 9, 50, "Input"],
Cell[121496, 4138, 56, 0, 24, "SmallText"],
Cell[121555, 4140, 366, 10, 36, "Input"],
Cell[121924, 4152, 99, 2, 24, "SmallText"],
Cell[122026, 4156, 545, 17, 51, "Input"],
Cell[122574, 4175, 38, 0, 24, "SmallText"],
Cell[122615, 4177, 416, 11, 36, "Input"],
Cell[123034, 4190, 67, 0, 24, "SmallText"],
Cell[123104, 4192, 233, 5, 36, "Input"],
Cell[123340, 4199, 1276, 38, 103, "Special2"],
Cell[124619, 4239, 56, 0, 24, "SmallText"],
Cell[124678, 4241, 76, 0, 24, "SmallText"],
Cell[124757, 4243, 339, 10, 20, "Input"],
Cell[125099, 4255, 332, 9, 99, "SmallText"],
Cell[125434, 4266, 1835, 58, 126, "Input"],
Cell[127272, 4326, 196, 4, 74, "SmallText"],
Cell[127471, 4332, 1214, 37, 141, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[128734, 4375, 48, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[128807, 4379, 34, 0, 24, "Text"],
Cell[128844, 4381, 27, 0, 23, "Special1"],
Cell[128874, 4383, 50, 0, 24, "SmallText"],
Cell[128927, 4385, 90, 2, 20, "Input"],
Cell[129020, 4389, 33, 0, 24, "SmallText"],
Cell[129056, 4391, 907, 32, 51, "Input"],
Cell[129966, 4425, 777, 28, 20, "Input"],
Cell[130746, 4455, 145, 3, 49, "SmallText"],
Cell[130894, 4460, 847, 31, 20, "Input"],
Cell[131744, 4493, 1691, 55, 81, "Input"],
Cell[133438, 4550, 97, 3, 49, "SmallText"],
Cell[133538, 4555, 118, 3, 20, "Input"],
Cell[133659, 4560, 143, 3, 49, "SmallText"],
Cell[133805, 4565, 487, 10, 156, "SmallText"],
Cell[134295, 4577, 1045, 28, 81, "Input"],
Cell[135343, 4607, 57, 0, 24, "SmallText"],
Cell[135403, 4609, 864, 23, 81, "Input"],
Cell[136270, 4634, 102, 2, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[136421, 4642, 42, 0, 31, "Subsubsection"],
Cell[136466, 4644, 62, 0, 24, "Text"],
Cell[136531, 4646, 1689, 44, 96, "Input"],
Cell[CellGroupData[{
Cell[138245, 4694, 169, 3, 49, "Text"],
Cell[138417, 4699, 27, 0, 23, "Special1"],
Cell[138447, 4701, 40, 0, 24, "SmallText"],
Cell[138490, 4703, 310, 9, 50, "Input"],
Cell[138803, 4714, 71, 0, 24, "SmallText"],
Cell[138877, 4716, 774, 25, 81, "Input"],
Cell[139654, 4743, 70, 0, 24, "SmallText"],
Cell[139727, 4745, 773, 27, 36, "Input"],
Cell[140503, 4774, 380, 9, 74, "SmallText"],
Cell[140886, 4785, 2609, 78, 291, "Input"],
Cell[143498, 4865, 47, 0, 24, "SmallText"],
Cell[143548, 4867, 191, 5, 20, "Input"],
Cell[143742, 4874, 53, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[143844, 4880, 43, 0, 31, "Subsubsection"],
Cell[143890, 4882, 62, 0, 24, "Text"],
Cell[143955, 4884, 1755, 47, 96, "Input"],
Cell[CellGroupData[{
Cell[145735, 4935, 169, 3, 49, "Text"],
Cell[145907, 4940, 27, 0, 23, "Special1"],
Cell[145937, 4942, 40, 0, 24, "SmallText"],
Cell[145980, 4944, 310, 9, 50, "Input"],
Cell[146293, 4955, 71, 0, 24, "SmallText"],
Cell[146367, 4957, 774, 25, 81, "Input"],
Cell[147144, 4984, 70, 0, 24, "SmallText"],
Cell[147217, 4986, 773, 27, 36, "Input"],
Cell[147993, 5015, 473, 11, 124, "SmallText"],
Cell[148469, 5028, 2654, 80, 291, "Input"],
Cell[151126, 5110, 47, 0, 24, "SmallText"],
Cell[151176, 5112, 191, 5, 20, "Input"],
Cell[151370, 5119, 90, 2, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
