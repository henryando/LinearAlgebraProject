(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    346151,      10605]
NotebookOptionsPosition[    272247,       8920]
NotebookOutlinePosition[    325424,      10033]
CellTagsIndexPosition[    325225,      10024]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.05 3D Matrices\n",
 StyleBox[" BASICS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.1) SVD analysis in 3D: Writing a 3D matrix as the product of a hanger, a \
stretcher and an aligner \
\>", "Subsection",
 CellTags->"MGM.05.B1"],

Cell[CellGroupData[{

Cell["B.1.a.i) Hits with 3D matrices ", "Subsubsection"],

Cell["\<\
Here's the 3D unit sphere with specially marked points waiting to be hit with \
a 3D matrix:\
\>", "Text"],

Cell["\<\
This 3D sphere is plotted using spherical coordinates.
 For a review of them, see C&M lesson 3.09.\
\>", "Special5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "s", ",", "t", ",", "pointcolor"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "3.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Normalize", " ", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}]}], "}"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", 
      RowBox[{
       RowBox[{"Normalize", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}]}], "}"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Normalize", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}]}], "}"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sjump", "=", 
    FractionBox[
     RowBox[{"shigh", "-", "slow"}], "8"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "8"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "hitpointplotter", ",", "matrix3D"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"matrix3D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pointcolor", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"matrix3D", ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"s", ",", "t"}], "]"}], ",", 
               RowBox[{"y", "[", 
                RowBox[{"s", ",", "t"}], "]"}], ",", 
               RowBox[{"z", "[", 
                RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "slow", ",", 
          RowBox[{"shigh", "-", "sjump"}], ",", "sjump"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tlow", ",", 
          RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointsbefore", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Points before\>\""}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"surfacebefore", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Points and surface before\>\""}]}],
      "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"pointsbefore", ",", " ", "surfacebefore"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
Here's what happens when you hit everything with the 3D matrix A defined in \
the code below:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", " ", "=", " ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"2.4", "0.5", 
          RowBox[{"-", "1.7"}]},
         {"1.8", 
          RowBox[{"-", "1.6"}], "2.3"},
         {"1.5", "1.9", "0.9"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[0, 0, 1]], " ", ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointsafter", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"surfaceafter", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
   "pointsbefore", ",", " ", "surfacebefore", ",", " ", "pointsafter", ",", 
    " ", "surfaceafter"}], "}"}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Now look at this:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", 
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[0, 0, 1]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"alignerframe", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"alignerplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"alignerframe", "[", "k", "]"}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"alignerframe", "[", "k", "]"}]}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"beforepointplot", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"pointsbefore", ",", "alignerplot"}], "]"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"beforesurfplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"surfacebefore", ",", "alignerplot"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"beforepointplot", ",", " ", "beforesurfplot"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
Hit the plotted frame, the points and the unit sphere with A and plot the \
result:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hangerplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"A", ".", 
           RowBox[{"alignerframe", "[", "k", "]"}]}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"A", ".", 
            RowBox[{"alignerframe", "[", "k", "]"}]}]}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"afterpointplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"pointsafter", ",", "hangerplot"}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"aftersurfplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"surfaceafter", ",", "hangerplot"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"afterpointplot", ",", " ", "aftersurfplot"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Now see them all together:", "Text"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
   "beforepointplot", ",", " ", "beforesurfplot", ",", "afterpointplot", ",", 
    " ", "aftersurfplot"}], "}"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Describe what you see and try to explain why you see it.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
What worked so well in 2D also works pretty darn well in 3D.
The strong evidence is that a hit with A picks up points and surfaces on the \
following perpendicular frame: \
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"pointsbefore", ",", "alignerplot"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
And then A stretches and hangs points, curves and surfaces on this \
hangerframe: \
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"pointsafter", ",", "hangerplot"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "The upshot:\nJust as in 2D, you can do an SVD analysis of this 3D matrix A \
by writing\n      ",
 StyleBox["   A = hanger . ",
  FontColor->RGBColor[0, 0, 1],
  Background->None],
 StyleBox["stretcher ",
  FontColor->RGBColor[1, 0, 1],
  Background->None],
 StyleBox[". aligner",
  FontColor->RGBColor[0, 0, 1],
  Background->None],
 "\nas defined in the code below:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hanger", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["To get the stretcher matrix for A, you do this:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", 
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"xstretch", "0", "0"},
         {"0", "ystretch", "0"},
         {"0", "0", "zstretch"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["To get the aligner matrix for A you do this:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{
      RowBox[{"SingularValues", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}], ";"}], " ",
    ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Check it out:", "SmallText"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", "A", "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "k"}], "]"}], "]"}]}], ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "1", "]"}]}], " ", "==", " ", 
  RowBox[{
   StyleBox["xstretch",
    FontColor->RGBColor[1, 0, 1]], " ", 
   RowBox[{"hangerframe", "[", "1", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "2", "]"}]}], " ", "==", " ", 
  RowBox[{
   StyleBox["ystretch",
    FontColor->RGBColor[1, 0, 1]], " ", 
   RowBox[{"hangerframe", "[", "2", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "3", "]"}]}], " ", "==", " ", 
  RowBox[{
   StyleBox["zstretch",
    FontColor->RGBColor[1, 0, 1]], " ", 
   RowBox[{"hangerframe", "[", "3", "]"}]}]}]}], "Input"],

Cell["\<\
Everything checks.
Try the same thing with some random 3D matrices A:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"MatrixForm", "[", "A", "]"}],
  FontColor->RGBColor[0, 0, 1]]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hanger", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", 
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"xstretch", "0", "0"},
         {"0", "ystretch", "0"},
         {"0", "0", "zstretch"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{
      RowBox[{"SingularValues", "[", 
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}], ";"}], " ",
    ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", "A", "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "k"}], "]"}], "]"}]}], ";"}], "  "}], "\n", 
 RowBox[{"A", ".", 
  RowBox[{"alignerframe", "[", "1", "]"}], " "}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox["xstretch",
   FontColor->RGBColor[1, 0, 1]], " ", 
  RowBox[{"hangerframe", "[", "1", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "2", "]"}]}], " "}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox["ystretch",
   FontColor->RGBColor[1, 0, 1]], " ", 
  RowBox[{"hangerframe", "[", "2", "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "3", "]"}]}], " "}]], "Input"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   StyleBox["zstretch",
    FontColor->RGBColor[1, 0, 1]], " ", 
   RowBox[{"hangerframe", "[", "3", "]"}]}]}]], "Input"]
}, Closed]],

Cell["Rerun until you get tired.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.a.ii) Milking the  SVD instruction for 3D matrices", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Discuss how to use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s SVD instruction for 3D matrices"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Here's how to use it on a randomly generated 3D matrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["To get the hanger matrix for A, you do this:", "SmallText"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "1",
        "\[RightDoubleBracket]"}], "]"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["To get the stretcher matrix for A, you do this:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{
       RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2",
        "\[RightDoubleBracket]"}], "]"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["To get the aligner matrix for A you do this:", "SmallText"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Check it out:", "SmallText"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", "A", "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Yep.", "SmallText"],

Cell["\<\
If you want the individual vectors in the aligner frame, do this:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"alignerframe", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "If you want ",
 StyleBox["{xstretch,ystretch,zstretch}",
  FontColor->RGBColor[1, 0, 1]],
 ", here they are:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
If you want the individual vectors in the hanger frame, do this:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"hangerframe", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Check them out:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], ",", 
   RowBox[{
    StyleBox["xstretch",
     FontColor->RGBColor[1, 0, 1]], "  ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}], "}"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], ",", 
   RowBox[{
    StyleBox["ystretch",
     FontColor->RGBColor[1, 0, 1]], "  ", 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}], "}"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "3", "]"}]}], ",", 
   RowBox[{
    StyleBox["zstretch",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[
     RowBox[{
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 1]], " "}]], 
    RowBox[{"hangerframe", "[", "3", "]"}]}]}], "}"}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Everything checks.\nAnother way for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to serve you. "
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.1.a.iii) The SVD instruction for 3D matrices - how it works\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "How does ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s SVD instruction work for 3D matrices? "
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "It's the same as in 2D.\n",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " tries to find a 3D perpendicular frame \n        ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"alignerframe", "[", "1", "]"}], ",", 
    RowBox[{"aligerframe", "[", "2", "]"}], ",", 
    RowBox[{"alignerframe", "[", "3", "]"}]}], "}"}]]],
 "\nso that\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "1", "]"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], ")"}]}], "=", "0"}]]],
 ",\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "1", "]"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "3", "]"}]}], ")"}]}], "=", "0"}]]],
 ",\n          and\n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "3", "]"}]}], ")"}]}], "=", "0"}]]],
 "\nIt's an impossible job by hand, but it's easy for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ".\nLater in the course you will learn why this is guaranteed to work."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.1.a.iv) Descriptions of the actions of the hanger, the stretcher and the \
aligner for a 3D matrix\
\>", "Subsubsection"],

Cell[TextData[{
 "Here's a sample 3D matrix A together with the SVD calculations of the \
aligner the stretcher and the hanger for \n      A =  ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       RowBox[{"-", "1.49`"}], "0.55`", 
       RowBox[{"-", "0.59`"}]},
      {
       RowBox[{"-", "0.89`"}], 
       RowBox[{"-", "1.38`"}], 
       RowBox[{"-", "1.45`"}]},
      {"0.42`", 
       RowBox[{"-", "0.02`"}], 
       RowBox[{"-", "1.03`"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", "  ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"-", "1.49"}], "0.55", 
         RowBox[{"-", "0.59"}]},
        {
         RowBox[{"-", "0.89"}], 
         RowBox[{"-", "1.38"}], 
         RowBox[{"-", "1.45"}]},
        {"0.42", 
         RowBox[{"-", "0.02"}], 
         RowBox[{"-", "1.03"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"SingularValues", "[", "A", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["\[LeftDoubleBracket]",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["\[RightDoubleBracket]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"SingularValues", "[", "A", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["\[LeftDoubleBracket]",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["\[RightDoubleBracket]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["aligner",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox[
      RowBox[{"SingularValues", "[", "A", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\[LeftDoubleBracket]",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["3",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\[RightDoubleBracket]",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Check it out:", "SmallText"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"3", ",", "k"}], "\[RightDoubleBracket]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"alignerframe", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
   "\[RightDoubleBracket]"}]}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "k"}], "\[RightDoubleBracket]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"hangerframe", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Check them out:", "Text"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], ",", 
   RowBox[{"xstretch", "  ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}], "}"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], ",", 
   RowBox[{"ystretch", "  ", 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}], "}"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "3", "]"}]}], ",", 
   RowBox[{"zstretch", "  ", 
    RowBox[{"hangerframe", "[", "3", "]"}]}]}], "}"}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
This checks.
Illustrate the actions of aligner, stretcher and hanger.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Here you go:
Stage O: Before the hit:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "s", ",", "t", ",", "pointcolor"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", 
    RowBox[{"Max", "[", 
     RowBox[{"1.2", ",", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
        "2", "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Normalize", " ", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}]}], "}"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], " ", ",", 
      RowBox[{
       RowBox[{"Normalize", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}]}], "}"}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"Normalize", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
          RowBox[{"Abs", "[", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}], "]"}]}], "}"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sjump", "=", 
    FractionBox[
     RowBox[{"shigh", "-", "slow"}], "6"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "6"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "hitpointplotter", ",", "matrix3D"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"matrix3D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"pointcolor", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"matrix3D", ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x", "[", 
                RowBox[{"s", ",", "t"}], "]"}], ",", 
               RowBox[{"y", "[", 
                RowBox[{"s", ",", "t"}], "]"}], ",", 
               RowBox[{"z", "[", 
                RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "slow", ",", 
          RowBox[{"shigh", "-", "sjump"}], ",", "sjump"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "tlow", ",", 
          RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitframeplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"matrix3D", ".", 
           RowBox[{"alignerframe", "[", "k", "]"}]}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"matrix3D", ".", 
            RowBox[{"alignerframe", "[", "k", "]"}]}]}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"surfplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"frameplot", ",", " ", "surfplot"}], "}"}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Note the aligner frame.", "Special5",
 AnimationDisplayTime->1],

Cell["Stage1: Hit with aligner to align on the x, y and z-axes", "SmallText",
 AnimationDisplayTime->1],

Cell["\<\
This plots the surface with 
{1,0,0} pointing out the positive x-axis playing the role of alignerframe[1],
{0,1,0} pointing out the positive y-axis playing the role of alignerframe[2],
and {0,0,1} pointing out the positive 3-axis playing the role of \
alignerframe[3],.\
\>", "Special5",
 AnimationDisplayTime->1],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stage1hitter", "=", 
    StyleBox["aligner",
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage1frameplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", "stage1hitter", "]"}], ",", 
      RowBox[{"hitframeplotter", "[", "stage1hitter", "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Stage1: xyz aligned\>\""}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage1surfplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "stage1hitter", "]"}], ",", 
      RowBox[{"hitframeplotter", "[", "stage1hitter", "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"hitpointplotter", "[", "stage1hitter", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Stage1: xyz aligned\>\""}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"stage1frameplot", ",", " ", "stage1surfplot"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["See the alignment happen:", "Text"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
   "frameplot", ",", " ", "surfplot", ",", " ", "stage1frameplot", ",", " ", 
    "stage1surfplot"}], "}"}], "]"}]], "Input"],

Cell["Stage2: Stretch along the x, y and z -axes: ", "SmallText",
 AnimationDisplayTime->1],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stage2hitter", "=", 
    RowBox[{
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage2frameplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", "stage2hitter", "]"}], ",", 
      RowBox[{"hitframeplotter", "[", "stage2hitter", "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Stage2: xyz stretched\>\""}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage2surfplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "stage2hitter", "]"}], ",", 
      RowBox[{"hitframeplotter", "[", "stage2hitter", "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"hitpointplotter", "[", "stage2hitter", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Stage2: xyz stretched\>\""}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"stage2frameplot", ",", " ", "stage2surfplot"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["See the align-then-stretch happen:", "Text"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
   "frameplot", ",", " ", "surfplot", ",", " ", "stage1frameplot", ",", " ", 
    "stage1surfplot", ",", " ", "stage2frameplot", ",", " ", 
    "stage2surfplot"}], "}"}], "]"}]], "Input"],

Cell["Stage3: Hang on the hanger frame.", "SmallText",
 AnimationDisplayTime->1],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stage3hitter", "=", 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->GrayLevel[0]]}], 
  StyleBox[" ",
   FontColor->GrayLevel[0]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage3frameplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", "stage3hitter", "]"}], ",", 
      RowBox[{"hitframeplotter", "[", "stage3hitter", "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Stage3: Hung on hangerframe\>\""}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage3surfplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "stage3hitter", "]"}], ",", 
      RowBox[{"hitframeplotter", "[", "stage3hitter", "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"hitpointplotter", "[", "stage3hitter", "]"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Stage3: Hung on hangerframe\>\""}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"stage3frameplot", ",", " ", "stage3surfplot"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["See the align-then-stretch-then-hang happen:", "Text"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
   "frameplot", ",", " ", "surfplot", ",", " ", "stage1frameplot", ",", " ", 
    "stage1surfplot", ",", " ", "stage2frameplot", ",", " ", "stage2surfplot",
     ",", " ", "stage3frameplot", ",", " ", "stage3surfplot"}], "}"}], 
  "]"}]], "Input"],

Cell["Done.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2) Using SVD analysis in 3D to try to invert 3D matrices ", \
"Subsection",
 CellTags->"MGM.05.B2"],

Cell[CellGroupData[{

Cell["B.2.a.i) Success at inverting", "Subsubsection"],

Cell["Here's a sample 3D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", " ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.3", 
          RowBox[{"-", "3.5"}], "1.3"},
         {"0.5", "2.1", 
          RowBox[{"-", "0.9"}]},
         {
          RowBox[{"-", "0.4"}], "1.8", "4.6"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Here's ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", 
   StyleBox["A",
    FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Use SVD analysis to explain where this calculation comes from.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Do your SVD analysis in the form \n          ",
 StyleBox["A = hanger. ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[".aligner",
  FontColor->RGBColor[0, 0, 1]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"SingularValues", "[", "A", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["\[LeftDoubleBracket]",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["\[RightDoubleBracket]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "]"}]}],
    
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["aligner",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox[
      RowBox[{"SingularValues", "[", "A", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\[LeftDoubleBracket]",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["3",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\[RightDoubleBracket]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Check it out:", "SmallText"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Good.\nThis tells you that\n          ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", 
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], ".", "aligner"}]}]]],
 ".\nNow remembering that ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " undoes everything ",
 Cell[BoxData["A"]],
 " does, you build                 \n          ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 "= ",
 Cell[BoxData[
  SuperscriptBox["aligner", 
   RowBox[{"-", "1"}]]]],
 ".",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["stretcher", 
    RowBox[{"-", "1"}]],
   FontColor->RGBColor[1, 0, 1]]]],
 ".",
 Cell[BoxData[
  SuperscriptBox["hanger", 
   RowBox[{"-", "1"}]]]],
 ".\nTo do this, note that just as in 2D:\n   \[FilledVerySmallSquare]  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["aligner", 
    RowBox[{"-", "1"}]], " ", "=", " ", 
   SuperscriptBox["aligner", "t"]}]]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", "aligner", "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "aligner", "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 " \[FilledVerySmallSquare] ",
 StyleBox["  ",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["stretcher", 
    RowBox[{"-", "1"}]], " "}]],
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" = ",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {
       FractionBox["1", 
        StyleBox[
         RowBox[{
          StyleBox["x",
           FontColor->RGBColor[0, 0, 1]], "stretch"}]]], "0", "0"},
      {"0", 
       FractionBox["1", 
        StyleBox[
         RowBox[{
          StyleBox["y",
           FontColor->RGBColor[0, 0, 1]], "stretch"}]]], "0"},
      {"0", "0", 
       FractionBox["1", 
        StyleBox[
         RowBox[{
          StyleBox["z",
           FontColor->RGBColor[0, 0, 1]], "stretch"}]]]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]],
  FontColor->RGBColor[1, 0, 1]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["unstretcher",
     FontColor->RGBColor[1, 0, 1]], "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{
       StyleBox[
        FractionBox["1", "xstretch"],
        FontColor->RGBColor[1, 0, 1]], ",", 
       StyleBox[
        FractionBox["1", "ystretch"],
        FontColor->RGBColor[1, 0, 1]], ",", 
       StyleBox[
        FractionBox["1", "zstretch"],
        FontColor->RGBColor[1, 0, 1]]}], "}"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "unstretcher", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], "]"}], "]"}]], "Input"],

Cell[TextData[{
 "And\n   \[FilledVerySmallSquare]  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["hanger", 
    RowBox[{"-", "1"}]], " ", "=", " ", 
   SuperscriptBox["hanger", "t"]}]]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Inverse", "[", "hanger", "]"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"Transpose", "[", "hanger", "]"}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "The upshot: ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " is given by"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SVDinverse", "=", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      StyleBox["aligner",
       FontColor->RGBColor[0, 0, 1]], "]"}], ".", 
     StyleBox["unstretcher",
      FontColor->RGBColor[1, 0, 1]], ".", 
     RowBox[{"Transpose", "[", 
      StyleBox["hanger",
       FontColor->RGBColor[0, 0, 1]], "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "SVDinverse", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Compare with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s direct calculation:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", 
   StyleBox["A",
    FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell["Had it all the way.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.b.ii) Failure", "Subsubsection"],

Cell["Here's another sample 3D matrix A ", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", " ", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"2.4", 
         RowBox[{"-", "7.2"}], "0.3"},
        {"0.8", 
         RowBox[{"-", "2.4"}], "0.1"},
        {"1.0", 
         RowBox[{"-", "1.0"}], "1.2"}
       }], "\[NoBreak]", ")"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Here's ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s attempt at a calculation of ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", 
   StyleBox["A",
    FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Garbage.
Explain what happened.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Do an SVD analysis of the stretch factors of A:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "[", 
  RowBox[{"[", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]], "Input"],

Cell[TextData[{
 "Ouch!\nNo need to go further!  \nThe fact that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " reports only two stretch factors is ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s way of telling you that the third stretch factor is 0.\n This also \
signals that a hit by this matrix squashes everything onto the plane through \
{0,0,0} determined by hangerframe[1] and hangerframe[2]:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"hangerframe", "[", "1", "]"}], ",", 
    RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["1",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]}], "Input"],

Cell["Watch it happen in this action movie:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "[", 
     RowBox[{"[", 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"points", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "200"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "k_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", "0.3"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{
           "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "8"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planeplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "-", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "-", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "}"}], "]"}], "]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "b"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"pointplot", ",", "planeplot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit with A\>\""}]}], 
     "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"hitpointplot", ",", "planeplot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit with A\>\""}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "after"}], "}"}], "]"}]}], "Input"],

Cell["See the same thing from the view point of 6 hangerframe[1].", \
"SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"after", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell["See the same thing from the view point of 6 hangerframe[2].", \
"SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"after", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell[TextData[{
 "The plotted plane is the plane through {0,0,0} defined by hangerframe[1] \
and hangerframe[2]. \nThe hit with A squashes everything onto this plane and \
the hit with A deposits many different points onto the same point on the \
plane.\n\nThere is no way of going from a given point ",
 StyleBox["{a,b,c}",
  FontColor->RGBColor[0, 0, 1]],
 " on the plane to a single point ",
 StyleBox["{x,y,z}",
  FontColor->RGBColor[0, 0, 1]],
 " with\n        A.",
 StyleBox["{x,y,z}",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["{a,b,c}",
  FontColor->RGBColor[0, 0, 1]],
 ".\n \nThe upshot: There is no way to undo a hit with A.\nThat's why A is \
not invertible.\n"
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3) Rank of a 3D Matrix ", "Subsection",
 CellTags->"MGM.05.B3"],

Cell[CellGroupData[{

Cell["\<\
B.3.a.i) The rank of a matrix is the number of dimensions that matrix uses to \
hang its hits\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["How do you determine the rank of a given 3D matrix A?", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Do an SVD analysis of the SVD stretch factors  of A.\n\nIf A has",
 StyleBox[" three",
  FontColor->RGBColor[0, 0, 1]],
 " non-zero stretch factors, then the rank of A is ",
 StyleBox["3",
  FontColor->RGBColor[0, 0, 1]],
 ".  \nIn this case A uses ",
 StyleBox["all of 3D ",
  FontColor->RGBColor[0, 0, 1]],
 "to hang its hits.\n\nIf A has exactly ",
 StyleBox["two",
  FontColor->RGBColor[0, 0, 1]],
 " non-zero stretch factors, then the rank of A is ",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 ". \nIn this case, A hangs all of its hits on a",
 StyleBox[" two dimensional plane",
  FontColor->RGBColor[0, 0, 1]],
 " within 3D.\n\nIf A has exactly ",
 StyleBox["one",
  FontColor->RGBColor[0, 0, 1]],
 " non-zero stretch factor, then the rank of A is ",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 ".\nIn this case, A hangs all of its hits on a ",
 StyleBox["one dimensional line ",
  FontColor->RGBColor[0, 0, 1]],
 "within 3D.\n\n\nIf A has",
 StyleBox[" no ",
  FontColor->RGBColor[0, 0, 1]],
 "non-zero stretch factors, then the rank of A is ",
 StyleBox["0",
  FontColor->RGBColor[0, 0, 1]],
 ". \nIn this case, A hits all {x,y,z}'s onto {0,0,0}.\n The only 3D matrix A \
whose rank is 0 is\n             ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   TagBox[
    RowBox[{"(", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", "0", "0"}
      }], ")"}],
    MatrixForm[#]& ]}]]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3.a.ii) Determine the rank and plot", "Subsubsection"],

Cell["Here's a 3D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.0", 
         RowBox[{"-", "1.0"}], "0.5"},
        {"1.7", 
         RowBox[{"-", "0.5"}], 
         RowBox[{"-", "1.3"}]},
        {"0.4", 
         RowBox[{"-", "0.4"}], "0.2"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Determine the rank of A. 
If the rank of A is 1, then give the line on which A hangs all its hits.
If the rank of A is 2, then give the plane on which A hangs all its hits.
Illustrate with decisive plots. \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["SVD analyze the stretch factors of A:", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox["stretches",
   FontColor->RGBColor[1, 0, 1]], " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]], "Input"],

Cell[TextData[{
 "Exactly t",
 StyleBox["wo",
  FontColor->RGBColor[0, 0, 1]],
 " non-zero stretch factors. \nThis tells you that the rank of A is ",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 ".\nThis matrix A hangs all its hits on the plane through ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]]],
 " framed by\n              ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"hangerframe", "[", "1", "]"}], ",", " ", 
    RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}]]],
 ". \nThis plane consists of all points of the form:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "[", 
     RowBox[{"[", 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["s",
    FontColor->GrayLevel[0]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[
    RowBox[{"hangerframe", "[", "1", "]"}],
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox["+",
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], 
  RowBox[{
   StyleBox["t",
    FontColor->GrayLevel[0]], 
   StyleBox["  ",
    FontColor->RGBColor[0, 0, 1]], 
   RowBox[{
    StyleBox["hangerframe",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["[",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]], "]"}]}]}]}], "Input"],

Cell["See it happen:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"points", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "20"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "k_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", "0.3"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{
           "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
         "-", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "k", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "8"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planeplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "-", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "-", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "}"}], "]"}], "]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "b"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"pointplot", ",", "planeplot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", "actionarrows", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Action Arrows for Rank 2 matrix\>\""}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"hitpointplot", ",", "planeplot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input",
 AnimationDisplayTime->1],

Cell["See the same thing from the view point of 6 hangerframe[1].", \
"SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"action", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"after", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell["This matrix is not invertible.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3.a.iii) Determine the rank and then plot", "Subsubsection"],

Cell["Here's yet another 3D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.24", 
         RowBox[{"-", "1.18"}], "1.3"},
        {"1.86", 
         RowBox[{"-", "1.77"}], "1.95"},
        {"0.496", 
         RowBox[{"-", "0.472"}], "0.52"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], " ", ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Determine the rank of A. 
If the rank of A is 1, then give the line on which A hangs all its hits.
If the rank of A is 2, then give the plane on which A hangs all its hits.
Illustrate with decisive plots. \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["SVD analyze the stretch factors of A:", "SmallText"],

Cell[BoxData[
 RowBox[{"stretches", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]], "Input"],

Cell[TextData[{
 "Exactly ",
 StyleBox["one",
  FontColor->RGBColor[0, 0, 1]],
 " non-zero stretch factor. \nThis tells you that the rank of A is ",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 ".\nThis matrix A hangs all its hits on the line through {0,0,0} consisting \
of all the multiples of hangerframe[1]."
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"hangerframe", "[", "1", "]"}], "}"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "[", 
     RowBox[{"[", 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"t", " ", 
  RowBox[{"hangerframe", "[", "1", "]"}]}]}], "Input"],

Cell["See it happen:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"points", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "30"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "k_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", "0.3"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{
           "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
         "-", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "k", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "12"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lineplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "b"}], " ", 
           RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
          RowBox[{"b", " ", 
           RowBox[{"hangerframe", "[", "1", "]"}]}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "7"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"pointplot", ",", "lineplot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", "actionarrows", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Action Arrows for Rank 1 matrix\>\""}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"hitpointplot", ",", "lineplot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input",
 AnimationDisplayTime->1],

Cell["See the same thing from the view point of 6 hangerframe[1].", \
"SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"action", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"after", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell["This matrix is not invertible.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3.a.iv) Determine the rank", "Subsubsection"],

Cell["Here's another 3D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{"A", " ", "=", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"2.247", "3.581", 
       RowBox[{"-", "2.334"}]},
      {"0.863", 
       RowBox[{"-", "4.776"}], "3.453"},
      {"1.770", 
       RowBox[{"-", "3.142"}], "2.183"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Determine the rank of A. 
If the rank of A is 1, then give the line on which A hangs all its hits.
If the rank of A is 2, then give the plane on which A hangs all its hits. \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["SVD analyze the stretch factors of A:", "SmallText"],

Cell[BoxData[
 RowBox[{"stretches", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"],

Cell[TextData[{
 StyleBox["Three",
  FontColor->RGBColor[0, 0, 1]],
 " non-zero stretch factors. \nThis tells you that the rank of A is ",
 StyleBox["3",
  FontColor->RGBColor[0, 0, 1]],
 ".\nThis matrix A uses all of 3D to hang its hits. It is invertible.\nIn \
fact, saying that a 3D matrix A is invertible is the same as saying that the \
rank of A is 3. \n"
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.4) Linear Algebra: Using the idea of rank and 3D SVD analysis to try to \
solve systems of linear equations\
\>", "Subsection",
 CellTags->"MGM.05.B4"],

Cell[CellGroupData[{

Cell["B.4.a) Success when the coefficient matrix is invertible", \
"Subsubsection",
 Evaluatable->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Use what you know about 3D matrices to try come up with the x and the y and \
the z that solve the simultaneous linear equations:\n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"2.1", 
     StyleBox[
      RowBox[{" ", 
       StyleBox[" ",
        FontColor->GrayLevel[0]]}]], 
     StyleBox["x",
      FontColor->GrayLevel[0]]}], "-", 
    RowBox[{"1.7", "  ", 
     StyleBox["y",
      FontColor->GrayLevel[0]]}], "+", 
    RowBox[{"2.1", "  ", 
     StyleBox["z",
      FontColor->GrayLevel[0]]}]}], "=", "7.1"}]]],
 "\n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"1.8", "  ", 
     StyleBox["x",
      FontColor->GrayLevel[0]]}], "+", 
    RowBox[{"0.6", "  ", 
     StyleBox["y",
      FontColor->GrayLevel[0]]}], "-", 
    RowBox[{"3.2", "  ", 
     StyleBox["z",
      FontColor->GrayLevel[0]]}]}], "=", 
   RowBox[{"-", "1.5"}]}]]],
 "\n    ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2.1"}], " ", 
     StyleBox["x",
      FontColor->GrayLevel[0]]}], 
    StyleBox[
     RowBox[{
      StyleBox["  ",
       FontColor->GrayLevel[0]], "          "}]], "+", " ", 
    RowBox[{"0.7", " ", 
     StyleBox["z",
      FontColor->GrayLevel[0]]}]}], "=", "2.3"}]]],
 "."
}], "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["Go with this matrix:", "SmallText",
 Evaluatable->False],

Cell["Folks like to call this the \"coefficient matrix.\"", "Special5",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"2.1", 
          RowBox[{"-", "1.7"}], "2.1"},
         {"1.8", "0.6", 
          RowBox[{"-", "3.2"}]},
         {
          RowBox[{"-", "2.1"}], "0", "0.7"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Check the rank of A:", "SmallText"],

Cell[BoxData[
 RowBox[{"stretches", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]], "Input"],

Cell[TextData[{
 "Three non-zero stretch factors. The rank of A is 3 and this means A is \
invertible.\nThe linear system of equations is\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"2.1", 
     StyleBox[
      RowBox[{" ", 
       StyleBox[" ",
        FontColor->GrayLevel[0]]}]], 
     StyleBox["x",
      FontColor->GrayLevel[0]]}], "-", 
    RowBox[{"1.7", "  ", 
     StyleBox["y",
      FontColor->GrayLevel[0]]}], "+", 
    RowBox[{"2.1", "  ", 
     StyleBox["z",
      FontColor->GrayLevel[0]]}]}], "=", "7.1"}]]],
 "\n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"1.8", "  ", 
     StyleBox["x",
      FontColor->GrayLevel[0]]}], "+", 
    RowBox[{"0.6", "  ", 
     StyleBox["y",
      FontColor->GrayLevel[0]]}], "-", 
    RowBox[{"3.2", "  ", 
     StyleBox["z",
      FontColor->GrayLevel[0]]}]}], "=", 
   RowBox[{"-", "1.5"}]}]]],
 "\n    ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "2.1"}], " ", 
     StyleBox["x",
      FontColor->GrayLevel[0]]}], 
    StyleBox[
     RowBox[{
      StyleBox["  ",
       FontColor->GrayLevel[0]], "          "}]], "+", " ", 
    RowBox[{"0.7", " ", 
     StyleBox["z",
      FontColor->GrayLevel[0]]}]}], "=", "2.3"}]]],
 ".\nThis is the same as \n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "=", 
   RowBox[{"{", 
    RowBox[{"7.1", ",", 
     RowBox[{"-", "1.5"}], ",", "2.3"}], "}"}]}]]],
 ":"
}], "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{"A", ".", 
     RowBox[{
      StyleBox["{",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[
       RowBox[{"x", ",", "y", ",", "z"}],
       FontColor->RGBColor[0, 0, 1]], "}"}]}], "==", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{"7.1", ",", 
       RowBox[{"-", "1.5"}], ",", "2.3"}], "}"}],
     FontColor->RGBColor[0, 0, 1]]}], "]"}], "]"}]}], "Input"],

Cell[TextData[{
 "To come up with the x, the y and the z that solve this system,  start with\n\
           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[1, 0, 0]], ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "=", 
   RowBox[{"{", 
    RowBox[{"7.1", ",", 
     RowBox[{"-", "1.5"}], ",", "2.3"}], "}"}]}]]],
 ":\nand hit both sides with ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 "to get\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
   StyleBox[" ",
    FontColor->GrayLevel[0]], 
   RowBox[{
    RowBox[{
     StyleBox[
      SuperscriptBox["A", 
       RowBox[{"-", "1"}]],
      FontColor->GrayLevel[0]], ".", " ", 
     StyleBox["A",
      FontColor->RGBColor[1, 0, 0]], ".", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "=", " ", 
    RowBox[{
     StyleBox[
      SuperscriptBox["A", 
       RowBox[{"-", "1"}]],
      FontColor->GrayLevel[0]], 
     RowBox[{"{", 
      RowBox[{"7.1", ",", 
       RowBox[{"-", "1.5"}], ",", "2.3"}], "}"}]}]}]}]]],
 ":"
}], "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
  RowBox[{
   RowBox[{"Inverse", "[", "A", "]"}], ".", 
   RowBox[{"{", 
    RowBox[{"7.1", ",", 
     RowBox[{"-", "1.5"}], ",", "2.3"}], "}"}]}]}]], "Input"],

Cell["Check:", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "==", 
  RowBox[{"{", 
   RowBox[{"7.1", ",", 
    RowBox[{"-", "1.5"}], ",", "2.3"}], "}"}]}]], "Input"],

Cell["Check again:", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "==", 
   RowBox[{"{", 
    RowBox[{"7.1", ",", 
     RowBox[{"-", "1.5"}], ",", "2.3"}], "}"}]}], "]"}]}], "Input"],

Cell["Got it.", "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.4.b.i) What to try when the coefficient matrix is not invertible\
\>", "Subsubsection",
 Evaluatable->False],

Cell["Here's a new 3D matrix", "Text",
 Evaluatable->False],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.288", 
         RowBox[{"-", "0.166"}], 
         RowBox[{"-", "0.148"}]},
        {
         RowBox[{"-", "0.162"}], "2.008", 
         RowBox[{"-", "0.592"}]},
        {
         RowBox[{"-", "0.563"}], 
         RowBox[{"-", "0.921"}], "0.370"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Check the rank of A:", "Text"],

Cell[BoxData[
 RowBox[{"stretches", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]], "Input"]
}, Closed]],

Cell["\<\
Exactly two non-zero stretch factors so the rank of A is two.
This signals that A is not invertible:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Inverse", "[", "A", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Garbage.\nIn spite of this for a given ",
 Cell[BoxData["u"]],
 ", ",
 Cell[BoxData["v"]],
 " and ",
 Cell[BoxData["w"]],
 ", the corresponding linear system,\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"1.288", " ", "x"}], "-", 
    RowBox[{"0.166", " ", "y"}], "-", 
    RowBox[{"0.148", " ", "z"}]}], "=", "u"}]]],
 "\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.162"}], " ", "x"}], "+", 
    RowBox[{"2.008", " ", "y"}], "-", 
    RowBox[{"0.592", " ", "z"}]}], "=", "v"}]]],
 "\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "0.563"}], " ", "x"}], "-", 
    RowBox[{"0.921", " ", "y"}], "+", 
    RowBox[{"0.370", " ", "z"}]}], "=", "w"}]]],
 ",\nmight have many or might have no solutions for x, y and z, depending on \
where the point ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"u", ",", "v", ",", "w"}], "}"}]]],
 " is located.\nHow do you make this determination?"
}], "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
The fact that the rank of A is 2 tells you that you that A hangs all its hits \
on a 2D plane in 3D. \
\>", "SmallText"],

Cell["In other words the rank of A is 2.", "Special5"],

Cell["This plane is framed by:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", " ", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"hangerframe", "[", "1", "]"}], ",", 
    RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["1",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]}], "Input"],

Cell[TextData[{
 "In other words, this plane consists of all points of the form\n\n",
 StyleBox["s",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" hangerframe[1] + ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["t",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" hangerframe[2]",
  FontColor->RGBColor[0, 0, 1]]
}], "Special5"],

Cell["What it happen in this action movie:", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"points", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "60"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "k_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", "0.3"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{
           "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
         "-", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "k", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "8"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planeplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "-", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "1", "]"}]}], "-", 
         RowBox[{"b", " ", 
          RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "}"}], "]"}], "]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "b"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"pointplot", ",", "planeplot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", "actionarrows", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action Arrows\>\""}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"hitpointplot", ",", "planeplot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input"],

Cell["See the same thing from the view point of 6 hangerframe[1].", \
"SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"action", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"after", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell["See the same thing from the view point of 6 hangerframe[2].", \
"SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"action", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"after", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 AnimationDisplayTime->1],

Cell[TextData[{
 "The plotted plane is the plane through {0,0,0} defined by\n        ",
 Cell[BoxData[
  RowBox[{"hangerframe", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"hangerframe", "[", "2", "]"}]]],
 ". \nA hit with A squashes everything onto this plane.\nThe upshot:\nIf you \
are going to have any chance of solving\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "=", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v", ",", "w"}], "}"}]}]]],
 "\nfor ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 ", then ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"u", ",", "v", ",", "w"}], "}"}]]],
 " MUST be on the plane through {0,0,0} defined by\n        ",
 Cell[BoxData[
  RowBox[{"hangerframe", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"hangerframe", "[", "2", "]"}]]],
 "."
}], "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4.b.ii) A solution if \n{u,v,w} = ",
 StyleBox["({u,v,w} .hangerframe[1] )",
  FontColor->RGBColor[0, 0, 1]],
 "hangerframe[1] +  \n                    ",
 StyleBox["({u,v,w} .hangerframe[2] )",
  FontColor->RGBColor[0, 0, 1]],
 "hangerframe[2]. \nOtherwise no solution"
}], "Subsubsection",
 Evaluatable->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Stay with the same matrix A as in part i) above.\nYou now know that if you \
are going to have any chance of solving\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "=", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v", ",", "w"}], "}"}]}]]],
 "\nfor ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 ", then ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"u", ",", "v", ",", "w"}], "}"}]]],
 " MUST be on the plane through {0,0,0} defined by\n        ",
 Cell[BoxData[
  RowBox[{"hangerframe", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"hangerframe", "[", "2", "]"}]]],
 ".\nHow do you make this determination?"
}], "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "Try to resolve {u,v,w} into components in the directions of hangerframe[1] \
and hangerframe[2] by calculating\nsoltest = ",
 StyleBox["({u,v,w} .hangerframe[1] )",
  FontColor->RGBColor[0, 0, 1]],
 "hangerframe[1] +  \n                    ",
 StyleBox["({u,v,w} .hangerframe[2] )",
  FontColor->RGBColor[0, 0, 1]],
 "hangerframe[2] .\n                    \nIf ",
 StyleBox["soltest ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["=",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" {u,v,w}",
  FontColor->RGBColor[1, 0, 0]],
 " then {u,v,w} is on the plane through {0,0,0} defined by hangerframe[1] and \
hangerframe[2] and a solution {x,y,z} is guaranteed.\n\nIf ",
 StyleBox["soltest ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\[NotEqual]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" {u,v,w}",
  FontColor->RGBColor[1, 0, 0]],
 " then {u,v,w} is ",
 StyleBox["not",
  FontColor->RGBColor[0, 0, 1]],
 " on the plane through {0,0,0} defined by hangerframe[1] and hangerframe[2] \
there is no possible solution {x,y,z}.\n\nAn example:   "
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"{", 
    RowBox[{"u", ",", "v", ",", "w"}], "}"}],
   FontColor->RGBColor[0, 0, 1]], "=", 
  RowBox[{"{", 
   RowBox[{"1.00", ",", 
    RowBox[{"-", "1.35"}], ",", "0.20"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"soltest", "=", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{"hangerframe", "[", "1", "]"}]}], "+", 
   RowBox[{
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}]}]], "Input"],

Cell[TextData[{
 "Close but no cigar",
 "; ",
 "  ",
 StyleBox["soltest ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\[NotEqual]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" {u,v,w} ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["and this signals that there is no possible solution {x,y,z} of \
A.{x,y,z} = {u,v,w}.\n\nAnother example:",
  FontColor->GrayLevel[0]]
}], "SmallText"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", "w"}], "}"}],
    FontColor->RGBColor[0, 0, 1]], "=", 
   RowBox[{"{", 
    RowBox[{"1.0134", ",", "4.3508", ",", 
     RowBox[{"-", "2.6821"}]}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"soltest", "=", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{"hangerframe", "[", "1", "]"}]}], "+", 
   RowBox[{
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}]}]], "Input"],

Cell[TextData[{
 "Bingo. This time ",
 StyleBox["soltest ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["=",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" {u,v,w}",
  FontColor->RGBColor[1, 0, 0]],
 " and this signals that there is a solution{x,y,z} of A.{x,y,z} = {u,v,w}."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.b.iii) Using SVD to come up with a solution", "Subsubsection",
 Evaluatable->False],

Cell["\<\
Stay with the same matrix A as in part i) above.
When you look at:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{"u", ",", "v", ",", "w"}], "}"}],
    FontColor->RGBColor[0, 0, 1]], "=", 
   RowBox[{"{", 
    RowBox[{"1.0134", ",", "4.3508", ",", 
     RowBox[{"-", "2.6821"}]}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"soltest", "=", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{"hangerframe", "[", "1", "]"}]}], "+", 
   RowBox[{
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], " ", ")"}],
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
You see there is a guaranteed solution {x,y,z} of A.{x,y,z} = {u,v,w}.
Use SVD analysis to come up with a solution.\
\>", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["Calculate the aligner frame and the stretch factors for A:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"alignerframe", "[", "1", "]"}], ",", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["3",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]], "Input"],

Cell["One solution is:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       StyleBox[
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
         RowBox[{"hangerframe", "[", "1", "]"}]}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[")",
        FontColor->GrayLevel[0]]}], 
      StyleBox[" ",
       FontColor->GrayLevel[0]]}], 
     StyleBox[
      RowBox[{"x", 
       StyleBox["stretch",
        FontColor->RGBColor[1, 0, 1]]}]]], 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "+", "           ", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       StyleBox[
        RowBox[{
         RowBox[{"{", 
          RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
         RowBox[{"hangerframe", "[", "2", "]"}]}],
        FontColor->RGBColor[0, 0, 1]], " ", ")"}], " "}], 
     StyleBox[
      RowBox[{"y", 
       StyleBox["stretch",
        FontColor->RGBColor[1, 0, 1]]}]]], " ", 
    RowBox[{"alignerframe", "[", "2", "]"}]}]}]}]], "Input"],

Cell["Check this out:", "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"u", ",", "v", ",", "w"}], "}"}]], "Input"],

Cell["Bagged it.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4.b.iv) Explanation of the solution formula\n",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}],
    FontColor->GrayLevel[0]], 
   StyleBox["=",
    FontColor->GrayLevel[0]], 
   StyleBox["  ",
    FontColor->GrayLevel[0]], 
   StyleBox[
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         StyleBox[
          RowBox[{
           RowBox[{"{", 
            RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
           RowBox[{"hangerframe", "[", "1", "]"}]}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[")",
          FontColor->GrayLevel[0]]}], 
        StyleBox[" ",
         FontColor->GrayLevel[0]]}], 
       StyleBox[
        RowBox[{"x", 
         StyleBox["stretch",
          FontColor->RGBColor[1, 0, 1]]}]]], 
      StyleBox[
       RowBox[{"alignerframe", "[", "1", "]"}],
       FontColor->GrayLevel[0]]}], "+", "   ", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         StyleBox[
          RowBox[{
           RowBox[{"{", 
            RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
           RowBox[{"hangerframe", "[", "2", "]"}]}],
          FontColor->RGBColor[0, 0, 1]], " ", ")"}], " "}], 
       StyleBox[
        RowBox[{"y", 
         StyleBox["stretch",
          FontColor->RGBColor[1, 0, 1]]}]]], " ", 
      StyleBox[
       RowBox[{"alignerframe", "[", "2", "]"}],
       FontColor->GrayLevel[0]]}]}],
    FontSize->12]}]]]
}], "Subsubsection",
 Evaluatable->False],

Cell["Why did that solution formula", "Text",
 Evaluatable->False],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}],
    FontColor->GrayLevel[0]], 
   StyleBox["=",
    FontColor->GrayLevel[0]], 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
          RowBox[{"hangerframe", "[", "1", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[" ",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[")",
         FontColor->GrayLevel[0]]}], 
       StyleBox[" ",
        FontColor->GrayLevel[0]]}], 
      StyleBox[
       RowBox[{"x", 
        StyleBox["stretch",
         FontColor->RGBColor[1, 0, 1]]}]]], 
     StyleBox[
      RowBox[{"alignerframe", "[", "1", "]"}],
      FontColor->GrayLevel[0]]}], "+", "   ", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
          RowBox[{"hangerframe", "[", "2", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], " ", ")"}], " "}], 
      StyleBox[
       RowBox[{"y", 
        StyleBox["stretch",
         FontColor->RGBColor[1, 0, 1]]}]]], " ", 
     StyleBox[
      RowBox[{"alignerframe", "[", "2", "]"}],
      FontColor->GrayLevel[0]]}]}]}]]]
}], "Text",
 Evaluatable->False],

Cell["\<\
work? 
And why will it work for any {u,v,w} with\
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "       {u,v,w} = ",
 StyleBox["({u,v,w} .hangerframe[1] )",
  FontColor->RGBColor[0, 0, 1]],
 "hangerframe[1]\n                         ",
 StyleBox["      ({u,v,w} .hangerframe[2] )",
  FontColor->RGBColor[0, 0, 1]],
 "hangerframe[2]?"
}], "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
Start with
{x,y,z} =\
\>", "SmallText"],

Cell[TextData[{
 "        ",
 Cell[BoxData[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
          RowBox[{"hangerframe", "[", "1", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[" ",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[")",
         FontColor->GrayLevel[0]]}], 
       StyleBox[" ",
        FontColor->GrayLevel[0]]}], 
      StyleBox[
       RowBox[{"x", 
        StyleBox["stretch",
         FontColor->RGBColor[1, 0, 1]]}]]], 
     StyleBox[
      RowBox[{"alignerframe", "[", "1", "]"}],
      FontColor->RGBColor[1, 0, 0]]}], "+", "   ", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
          RowBox[{"hangerframe", "[", "2", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], " ", ")"}], " "}], 
      StyleBox[
       RowBox[{"y", 
        StyleBox["stretch",
         FontColor->RGBColor[1, 0, 1]]}]]], " ", 
     StyleBox[
      RowBox[{"alignerframe", "[", "2", "]"}],
      FontColor->RGBColor[1, 0, 0]]}]}]}]]],
 "."
}], "SmallText",
 Evaluatable->False],

Cell["\<\
Hit both sides with A to get
A.{x,y,z} =\
\>", "SmallText"],

Cell[TextData[{
 "        ",
 Cell[BoxData[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
          RowBox[{"hangerframe", "[", "1", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[" ",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[")",
         FontColor->GrayLevel[0]]}], 
       StyleBox[" ",
        FontColor->GrayLevel[0]]}], 
      StyleBox[
       RowBox[{"x", 
        StyleBox["stretch",
         FontColor->RGBColor[1, 0, 1]]}]]], 
     RowBox[{
      StyleBox["A",
       FontColor->GrayLevel[0]], 
      StyleBox[".",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"alignerframe", "[", "1", "]"}],
       FontColor->RGBColor[1, 0, 0]]}]}], "+", "   ", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
          RowBox[{"hangerframe", "[", "2", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], " ", ")"}], " "}], 
      StyleBox[
       RowBox[{"y", 
        StyleBox["stretch",
         FontColor->RGBColor[1, 0, 1]]}]]], " ", 
     RowBox[{
      StyleBox["A",
       FontColor->GrayLevel[0]], ".", 
      StyleBox[
       RowBox[{"alignerframe", "[", "2", "]"}],
       FontColor->RGBColor[1, 0, 0]]}]}]}]}]]],
 "."
}], "SmallText",
 Evaluatable->False],

Cell["\<\
This is the same as
A.{x,y,z} =\
\>", "SmallText"],

Cell[TextData[{
 "          ",
 Cell[BoxData[
  RowBox[{"\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
          RowBox[{"hangerframe", "[", "1", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[" ",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[")",
         FontColor->GrayLevel[0]]}], 
       StyleBox[" ",
        FontColor->GrayLevel[0]]}], 
      StyleBox[
       RowBox[{"x", 
        StyleBox["stretch",
         FontColor->RGBColor[1, 0, 1]]}]]], 
     StyleBox[
      RowBox[{"x", 
       StyleBox["stretch",
        FontColor->RGBColor[1, 0, 1]]}]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"hangerframe", "[", "1", "]"}],
      FontColor->RGBColor[1, 0, 0]]}], "+", "           ", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{
          RowBox[{"{", 
           RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
          RowBox[{"hangerframe", "[", "2", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], " ", ")"}], " "}], 
      StyleBox[
       RowBox[{"y", 
        StyleBox["stretch",
         FontColor->RGBColor[1, 0, 1]]}]]], " ", 
     StyleBox[
      RowBox[{"y", 
       StyleBox["stretch",
        FontColor->RGBColor[1, 0, 1]]}]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"hangerframe", "[", "2", "]"}],
      FontColor->RGBColor[1, 0, 0]]}]}]}]]]
}], "SmallText",
 Evaluatable->False],

Cell[TextData[{
 StyleBox["Reasons:\n",
  FontVariations->{"CompatibilityType"->0}],
 "A.",
 StyleBox["alignerframe[1]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["x",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretch",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" hangerframe[1]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\n",
  FontVariations->{"CompatibilityType"->0}],
 "A.",
 StyleBox["alignerframe[2]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["y",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretch",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" hangerframe[2]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[1, 0, 0]]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
This is the same as
A.{x,y,z} =\
\>", "SmallText"],

Cell[TextData[{
 "          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "1", "]"}]}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[")",
      FontColor->GrayLevel[0]]}], 
    StyleBox[
     RowBox[{
      StyleBox[" ",
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]]}]], 
    StyleBox[
     RowBox[{"hangerframe", "[", "1", "]"}],
     FontColor->RGBColor[1, 0, 0]]}], "+", "           ", 
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "2", "]"}]}],
      FontColor->RGBColor[0, 0, 1]], " ", ")"}], 
    StyleBox[
     RowBox[{"  ", 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]]}]], 
    StyleBox[
     RowBox[{"hangerframe", "[", "2", "]"}],
     FontColor->RGBColor[1, 0, 0]]}]}]]]
}], "SmallText",
 Evaluatable->False],

Cell[TextData[{
 StyleBox["Reason:\n",
  FontVariations->{"CompatibilityType"->0}],
 "Cancellation"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "And if ",
 StyleBox["{u,v,w}",
  FontColor->RGBColor[0, 0, 1]],
 " ="
}], "SmallText"],

Cell[TextData[{
 "  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "1", "]"}]}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[")",
      FontColor->GrayLevel[0]]}], 
    StyleBox[
     RowBox[{
      StyleBox[" ",
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]]}]], 
    StyleBox[
     RowBox[{"hangerframe", "[", "1", "]"}],
     FontColor->RGBColor[1, 0, 0]]}], "+", "           ", 
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "2", "]"}]}],
      FontColor->RGBColor[0, 0, 1]], " ", ")"}], 
    StyleBox[
     RowBox[{"  ", 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]]}]], 
    StyleBox[
     RowBox[{"hangerframe", "[", "2", "]"}],
     FontColor->RGBColor[1, 0, 0]]}]}]]]
}], "SmallText",
 Evaluatable->False],

Cell[TextData[{
 "This is the same as\nA.{x,y,z} = ",
 StyleBox["{u,v,w}",
  FontColor->RGBColor[0, 0, 1]],
 ".\nThat's why the formula will work any time you have"
}], "SmallText"],

Cell[TextData[{
 " ",
 StyleBox["{u,v,w}",
  FontColor->RGBColor[0, 0, 1]],
 " ="
}], "SmallText"],

Cell[TextData[{
 "  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "1", "]"}]}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[")",
      FontColor->GrayLevel[0]]}], 
    StyleBox[
     RowBox[{
      StyleBox[" ",
       FontColor->GrayLevel[0]], 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]]}]], 
    StyleBox[
     RowBox[{"hangerframe", "[", "1", "]"}],
     FontColor->RGBColor[1, 0, 0]]}], "+", "           ", 
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"u", ",", "v", ",", "w"}], "}"}], " ", ".", 
       RowBox[{"hangerframe", "[", "2", "]"}]}],
      FontColor->RGBColor[0, 0, 1]], " ", ")"}], 
    StyleBox[
     RowBox[{"  ", 
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]]}]], 
    StyleBox[
     RowBox[{"hangerframe", "[", "2", "]"}],
     FontColor->RGBColor[1, 0, 0]]}]}]]]
}], "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.b.v) Even more success ", "Subsubsection",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["\<\
Stay with the same 3D matrix A as in part iii) above. And stay with the same \
{x,y,z} and {u,v.w} as in part iii) so that 
           A.{x,y,z} = {u,v,w}
Are there solutions other than the {x,y,z} you found in part iii)?
If so, indicate with a plot where they are.\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1"],

Cell["\<\
Yes. 
There are infinitely many. 
To see where they come from, remember that zstretch = 0. This tells you that 
A.(t alignerframe[3]) = {0,0,0},
The SVD instruction will not give you alignerframe[3], but you can get it \
with: \
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alignerframe", "[", "3", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"NullSpace", "[", "A", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "t", "]"}], ";"}], " "}], "\n", 
 RowBox[{"Chop", "[", 
  RowBox[{"A", ".", 
   RowBox[{"(", 
    RowBox[{"t", " ", 
     RowBox[{"alignerframe", "[", "3", "]"}]}], ")"}]}], "]"}]}], "Input"],

Cell["\<\
When you go with the Xsol you got in part iii) and add to it any multiple of \
alignerframe[3], you get another solution: \
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "t", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Xsol", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{"Chop", "[", 
   RowBox[{"Expand", "[", 
    RowBox[{"A", ".", 
     RowBox[{"(", 
      RowBox[{"Xsol", "+", 
       RowBox[{"t", " ", 
        RowBox[{"alignerframe", "[", "3", "]"}]}]}], ")"}]}], "]"}], "]"}], "==", 
  RowBox[{"{", 
   RowBox[{"u", ",", "v", ",", "w"}], "}"}]}]}], "Input"],

Cell["The upshot:", "SmallText"],

Cell["\<\
All the solutions of the linear system
           A.{x,y,z} = {u,v,w} 
are located on the line through Xsol with direction vector alignerframe[3].
Here's a look at part of it:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"basepoint", "=", "Xsol"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"directionvector", "=", 
    RowBox[{"alignerframe", "[", "3", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"basepointplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
       RowBox[{"Point", "[", "basepoint", "]"}]}], "}"}], "]"}]}], ";"}], " ",
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"solutionlineplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"basepoint", "-", 
           RowBox[{"a", " ", "directionvector"}]}], ",", 
          RowBox[{"basepoint", "+", 
           RowBox[{"a", " ", "directionvector"}]}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"solutions", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"basepointplot", ",", "solutionlineplot", ",", 
    RowBox[{"Axes3D", "[", "1.5", "]"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
Think of it: 
All points on the plotted line are solutions of A.{x,y,z} = {u,v,w}.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["B.5) Determinants of 3D matrices.\nPositive versus negative \
orientation of the columns of a 3D matrix.\nIf the columns of A are",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 StyleBox["positively",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["oriented, then",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+",
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["xstretch ystretch zstretch",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["If the columns of A are",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 StyleBox["negatively",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["oriented, then",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[LongDash]",
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["xstretch ystretch zstretch",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\nSo you can use |Det[A]| = xstretch ystretch zstretch as the \
volume conversion factor. \nIf you interchange the vertical columns of a 3D \
matrix, you change the sign but not the absolute value of the determinant.\n\
The short, sweet formula ",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["Det[A] =  col[1].(col[2] \[Times] col[3])",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 FontColor->RGBColor[1, 0, 1],
 CellTags->"MGM.05.B5"],

Cell[CellGroupData[{

Cell[TextData[{
 "  B.5.a.i) If  ",
 StyleBox["col[1].(col[2]\[Times]col[3]) ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[">",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" 0 ",
  FontColor->RGBColor[0, 0, 1]],
 ", then the columns of A are positively oriented.\n                  If  ",
 StyleBox["col[1].(col[2]\[Times]col[3]) ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["< ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" 0 ",
  FontColor->RGBColor[0, 0, 1]],
 ", then the columns of A are negatively oriented"
}], "Subsubsection"],

Cell["Talk about orientation of the columns of a 3D matrix.", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Here are the columns of the 3D Identity matrix ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "0", "0"},
      {"0", "1", "0"},
      {"0", "0", "1"}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"colplotter", ",", "matrix"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"colplotter", "[", 
     StyleBox[
      RowBox[{
       StyleBox["matrix",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], " ", ":=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
        RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Orange"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
        RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
        RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[1]\>\"", ",", 
          RowBox[{"0.4", " ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], 
       "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[2]\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[3]\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], 
       "]"}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
        "}"}]}], ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Identitycols", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"colplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], "]"}]}]}], "Input"],

Cell[TextData[{
 "These are the x, y, z axes unit vectors. \nFolks all over the globe have \
agreed that their orientation is positive because \n                \
col[1].(col[2]\[Cross] col[3]) =  {1,0,0}",
 StyleBox[".",
  FontSize->36],
 "({0,1,0}\[Cross]{0,0,1}) = {1,0,0}.{1,0,0} = 1 > 0:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]], ",", "0", ",", "0"}], "}"}], ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", 
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}], " ", 
    StyleBox["\[Cross]",
     FontSize->18], 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}]], "Input"],

Cell["Here's a plot of the columns of the following matrix A:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", " ", "=", " ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"-", "1.11"}], 
          RowBox[{"-", "0.61"}], 
          RowBox[{"-", "0.70"}]},
         {"0.89", "0.46", 
          RowBox[{"-", "0.30"}]},
         {
          RowBox[{"-", "0.88"}], "0.36", "0.86"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[0, 0, 1]], " ", ";"}], " "}], "\n", 
 RowBox[{"Acols", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"colplotter", "[", 
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]}], "Input"],

Cell[TextData[{
 StyleBox["Here\n",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["col[1]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox[" = A.{1,0,0}, ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["col[2]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0.590005, 0.269993, 0.0800031]],
 StyleBox[" = A.{0,1,0} and ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["col[3]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox[" = A.{0,0,1}",
  FontVariations->{"CompatibilityType"->0}]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Check their orientation:\n      col[1].(col[2]\[Times] col[3]) = (",
 StyleBox["A.{1,0,0}",
  FontColor->RGBColor[0, 0, 1]],
 ").((",
 StyleBox["A.{0,1,0}",
  FontColor->RGBColor[0, 0, 1]],
 ")\[Times] (",
 StyleBox["A.{0,0,1}",
  FontColor->RGBColor[0, 0, 1]],
 ")):"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "0", ",", "0"}], "}"}]}], ")"}], 
  ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
    StyleBox["\[Cross]",
     FontSize->18], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]], "Input"],

Cell["\<\
Negative. 
The columns of A are negatively oriented.
See what this means by looking at the columns and .(col[2]\[Times]col[3])  \
from the viewpoint of col[3]:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"colplotter", "[", 
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
      StyleBox["\[Cross]",
       FontSize->18], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ",", 
     RowBox[{"Tail", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "->", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<col[2] x col[3]\>\"", ",", 
      RowBox[{"0.6", "  ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ")"}], " ", 
         "\[Cross]", 
         RowBox[{"(", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ")"}]}], ")"}]}]}], 
     "]"}], "]"}], ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"5", "  ", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], ".", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         StyleBox["1",
          FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}]}], ",", 
   RowBox[{"Axes", "->", "False"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Negatively Oriented Columns\>\""}]}], 
  "]"}]], "Input"],

Cell[TextData[{
 "You can see that   ",
 StyleBox["col[1]",
  FontColor->RGBColor[0, 0, 0.502007]],
 ".(",
 StyleBox["col[2]\[Times] col[3]",
  FontColor->RGBColor[0, 0.392187, 0]],
 ") < 0. \nThe columns of A are negatively oriented."
}], "SmallText"],

Cell["\<\
See another:
Here's a plot of the columns of the following matrix A:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", " ", "=", " ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.4", 
          RowBox[{"-", "1.3"}], "0"},
         {"0", 
          RowBox[{"-", "1.3"}], 
          RowBox[{"-", "1.2"}]},
         {"1.0", "1.4", "0.9"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[0, 0, 1]], " ", ";"}], " "}], "\n", 
 RowBox[{"Acols", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"colplotter", "[", 
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]}], "Input"],

Cell[TextData[{
 StyleBox["Here\n",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["col[1]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox[" = A.{1,0,0}, ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["col[2]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0.590005, 0.269993, 0.0800031]],
 StyleBox[" = A.{0,1,0} and ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["col[3]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox[" = A.{0,0,1}",
  FontVariations->{"CompatibilityType"->0}]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Check their orientation:\n      col[1].(col[2]\[Times]col[3]) = (",
 StyleBox["A.{1,0,0}",
  FontColor->RGBColor[0, 0, 1]],
 ").((",
 StyleBox["A.{0,1,0}",
  FontColor->RGBColor[0, 0, 1]],
 ")\[Times] (",
 StyleBox["A.{0,0,1}",
  FontColor->RGBColor[0, 0, 1]],
 ")):"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "0", ",", "0"}], "}"}]}], ")"}], 
  ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
    StyleBox["\[Cross]",
     FontSize->18], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]], "Input"],

Cell[TextData[{
 "Positive.\nSee what this means by looking at the columns and ",
 StyleBox["col[2]\[Times]col[3]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "  from the viewpoint of col[3]:"
}], "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"colplotter", "[", 
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
      StyleBox["\[Cross]",
       FontSize->18], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ",", 
     RowBox[{"Tail", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "->", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<col[2] x col[3]\>\"", ",", 
      RowBox[{"0.6", "  ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           StyleBox["A",
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             StyleBox["1",
              FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
         
         StyleBox["\[Cross]",
          FontSize->18], 
         RowBox[{"(", 
          RowBox[{
           StyleBox["A",
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             StyleBox["1",
              FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]}], 
     "]"}], "]"}], ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"5", "  ", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], ".", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         StyleBox["1",
          FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}]}], ",", 
   RowBox[{"Axes", "->", "False"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Positively Oriented Columns\>\""}]}], 
  "]"}]], "Input"],

Cell[TextData[{
 "You can see that   ",
 StyleBox["col[1]",
  FontColor->RGBColor[0, 0, 0.502007]],
 ".(",
 StyleBox["col[2]\[Times] col[3]",
  FontColor->RGBColor[0, 0.392187, 0]],
 ") > 0. \nThe columns of A are positively oriented.\nThat's all there is to \
orientation in 3D."
}], "SmallText"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.5.b.i) Definition of determinant first part:\n",
 StyleBox["If any given 3D matrix A has positively oriented columns,  \n",
  FontWeight->"Bold"],
 StyleBox["Det[A]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is defined to be ",
  FontWeight->"Bold"],
 StyleBox["the volume measurement of the  parallelogram box defined by the \
columns of A.\n",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "So if the columns of A are ",
 StyleBox["positively",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "oriented, then",
 StyleBox[" Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 "=",
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+",
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["xstretch ystretch zstretch",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[TextData[{
 "Here's a 3D matrix A together with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of the determinant of A:         "
}], "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"A", "=", 
      TagBox[
       RowBox[{"(", "\[NoBreak]", GridBox[{
          {"1.67", 
           RowBox[{"-", "1.38"}], 
           RowBox[{"-", "0.09"}]},
          {
           RowBox[{"-", "0.47"}], 
           RowBox[{"-", "0.83"}], "0.16"},
          {
           RowBox[{"-", "0.44"}], 
           RowBox[{"-", "1.69"}], 
           RowBox[{"-", "1.78"}]}
         }], "\[NoBreak]", ")"}],
       MatrixForm[#]& ]}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
   RowBox[{"Det", "[", "A", "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "What does this calculation of Det[",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1.67", 
       RowBox[{"-", "1.38"}], 
       RowBox[{"-", "0.09"}]},
      {
       RowBox[{"-", "0.47"}], 
       RowBox[{"-", "0.83"}], "0.16"},
      {
       RowBox[{"-", "0.44"}], 
       RowBox[{"-", "1.69"}], 
       RowBox[{"-", "1.78"}]}
     }], "\[NoBreak]", ")"}],
   MatrixForm[#]& ]]],
 "] measure?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Go with the unit cube in 3D:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "hitboxplotter", ",", "r", ",", "s", ",", "t", ",", "pointcolor", ",", 
     "matrix"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "4"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"thickness", "=", "0.01"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"color", " ", "=", "LightGray"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitboxplotter", "[", "matrix_", "]"}], ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"ViewPoint", "->", 
       RowBox[{"12", " ", "CMView"}]}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"colplotter", ",", "matrix"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"colplotter", "[", 
     StyleBox[
      RowBox[{
       StyleBox["matrix",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], " ", ":=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
        RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Orange"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
        RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
        RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[1]\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], 
       "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[2]\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[3]\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], 
       "]"}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"hitboxplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
   RowBox[{"colplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "Here's what you get when you hit everything with ",
 Cell[BoxData[
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]]]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"A", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"1.67", 
          RowBox[{"-", "1.38"}], 
          RowBox[{"-", "0.09"}]},
         {
          RowBox[{"-", "0.47"}], 
          RowBox[{"-", "0.83"}], "0.16"},
         {
          RowBox[{"-", "0.44"}], 
          RowBox[{"-", "1.69"}], 
          RowBox[{"-", "1.78"}]}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"hitboxplotter", "[", "A", "]"}], ",", 
   RowBox[{"colplotter", "[", "A", "]"}]}], "]"}]}], "Input"],

Cell["\<\
That's the parallelogram box defined by the columns of A.
\
\>", "SmallText"],

Cell[TextData[{
 "Check the orientation of the columns of A:\n      \
col[1].(col[2]\[Times]col[3]) = (",
 StyleBox["A.{1,0,0}",
  FontColor->RGBColor[0, 0, 1]],
 ").((",
 StyleBox["A.{0,1,0}",
  FontColor->RGBColor[0, 0, 1]],
 ")\[Times] (",
 StyleBox["A.{0,0,1}",
  FontColor->RGBColor[0, 0, 1]],
 ")):"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "0", ",", "0"}], "}"}]}], ")"}], 
  ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
    StyleBox["\[Cross]",
     FontSize->18], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]], "Input"],

Cell[TextData[{
 "The columns of A have positive orientation.\n\n",
 StyleBox["If any given 3D matrix A has positively oriented columns,\n ",
  FontWeight->"Bold"],
 StyleBox["Det[A] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["is defined to be",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[" the volume measurement of the  parallelogram box defined by the \
columns of A.\n         ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "\nBecause the volume of the unit cube measures out to 1 and you hit A on \
the unit cube to get the parallelogram box, Det[A] is given by:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     RowBox[{
      StyleBox["SingularValues",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"detA", " ", "=", " ", 
  RowBox[{"xstretch", " ", "ystretch", " ", "zstretch"}]}]}], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[
 RowBox[{"Det", "[", "A", "]"}]], "Input"],

Cell["On the money.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.5.b.ii) Definition of determinant second part:\n",
 StyleBox["If any given 3D matrix A has negatively oriented columns,  \n",
  FontWeight->"Bold"],
 StyleBox["-",
  FontSize->18,
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["Det[A]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is defined to be ",
  FontWeight->"Bold"],
 StyleBox["the volume measurement of the  parallelogram box defined by the \
columns of A.\n",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "So if the columns of A are ",
 StyleBox["negatively",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "oriented, then",
 StyleBox[" Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 "=",
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["-",
  FontSize->18,
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["xstretch ystretch zstretch",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[TextData[{
 "Here's a 3D matrix A together with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of the determinant of A:         "
}], "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"A", " ", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"-", "1.78"}], "1.69", "1.95"},
         {
          RowBox[{"-", "1.30"}], 
          RowBox[{"-", "1.04"}], 
          RowBox[{"-", "0.50"}]},
         {"0.93", 
          RowBox[{"-", "0.20"}], 
          RowBox[{"-", "1.74"}]}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "What does this calculation of Det[",
 Cell[BoxData[
  TagBox[
   StyleBox[
    RowBox[{" ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"-", "1.42"}], "1.56", "1.67"},
         {"1.02", 
          RowBox[{"-", "1.64"}], 
          RowBox[{"-", "0.30"}]},
         {
          RowBox[{"-", "1.71"}], "0.25", "0.19"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[0, 0, 1]],
   MatrixForm[#]& ]]],
 "] measure?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Go with the unit cube in 3D:", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"hitboxplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
   RowBox[{"colplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}]}], "]"}]], "Input"],

Cell[TextData[{
 "Here's what you get when you hit everything with ",
 Cell[BoxData[
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]]]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"A", " ", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          RowBox[{"-", "1.78"}], "1.69", "1.95"},
         {
          RowBox[{"-", "1.30"}], 
          RowBox[{"-", "1.04"}], 
          RowBox[{"-", "0.50"}]},
         {"0.93", 
          RowBox[{"-", "0.20"}], 
          RowBox[{"-", "1.74"}]}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"hitboxplotter", "[", "A", "]"}], ",", 
   RowBox[{"colplotter", "[", "A", "]"}]}], "]"}]}], "Input"],

Cell["\<\
That's the parallelogram box defined by the columns of A.
\
\>", "SmallText"],

Cell[TextData[{
 "Check the orientation of the columns of A:\n      \
col[1].(col[2]\[Times]col[3]) = (",
 StyleBox["A.{1,0,0}",
  FontColor->RGBColor[0, 0, 1]],
 ").((",
 StyleBox["A.{0,1,0}",
  FontColor->RGBColor[0, 0, 1]],
 ")\[Times] (",
 StyleBox["A.{0,0,1}",
  FontColor->RGBColor[0, 0, 1]],
 ")):"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "0", ",", "0"}], "}"}]}], ")"}], 
  ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
    StyleBox["\[Cross]",
     FontSize->18], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]], "Input"],

Cell[TextData[{
 "The columns of A have negative orientation.\n\n",
 StyleBox["If any given 3D matrix A has negatively oriented columns,\n",
  FontWeight->"Bold"],
 StyleBox["- Det[A] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["is defined to be",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[" the volume measurement of the  parallelogram box defined by the \
columns of A.\n         ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "\nBecause the volume of the unit cube measures out to 1 and you hit A on \
the unit cube to get the parallelogram box, \nDet[A] is given by:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     RowBox[{
      StyleBox["SingularValues",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"detA", " ", "=", 
  StyleBox[" ",
   FontSize->18], 
  RowBox[{
   RowBox[{
    StyleBox["-",
     FontSize->18,
     FontColor->RGBColor[1, 0, 0]], "xstretch"}], " ", "ystretch", " ", 
   "zstretch"}]}]}], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[
 RowBox[{"Det", "[", "A", "]"}]], "Input"],

Cell["On the money.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.5.b.iii)  Using the 3D determinant to measure volumes", \
"Subsubsection"],

Cell["\<\
Here's a random 2D matrix A together with the ellipsoid you get when you hit \
the unit sphere with A:\
\>", "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "a", "]"}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}]}],
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "3"}], "]"}]},
        {
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "3"}], "]"}]},
        {
         RowBox[{"a", "[", 
          RowBox[{"3", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"3", ",", "2"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"3", ",", "3"}], "]"}]}
       }], ")"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"ellipsoidplot", " ", "=", " ", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"A", ".", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], ",", 
       RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}], " "}]}], "Input"],

Cell[TextData[{
 "Rerun a couple of times until you get a nice inviting ellipse",
 StyleBox[".",
  FontSlant->"Italic"]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["The area enclosed by this ellipse measures out to:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["unitspherevolume",
     FontColor->RGBColor[0, 0, 1]], "=", 
    FractionBox[
     RowBox[{"4", " ", "\[Pi]"}], "3"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox[
      RowBox[{"SingularValues", "[", "A", "]"}],
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["\[LeftDoubleBracket]",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\[RightDoubleBracket]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{"xstretch", " ", "ystretch", " ", "zstretch", "  ", 
  StyleBox["unitspherevolume",
   FontColor->RGBColor[0, 0, 1]]}]}], "Input"],

Cell[CellGroupData[{

Cell["Use the determinant of A to duplicate this calculation.", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Just go with ",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "Det[A]",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 Cell[BoxData[
  FractionBox[
   RowBox[{"4", " ", "\[Pi]"}], "3"]]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["Abs",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[0, 0, 1]], 
   RowBox[{"Det", "[", "A", "]"}], 
   StyleBox["]",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "3"],
   FontColor->RGBColor[0, 0, 1]]}]], "Input"],

Cell[TextData[{
 "The reasons:\nIf the columns of A are positively oriented,then Det[A] =  + \
xstretch ystretch zstretch.\nIf the columns of A are negatively oriented,then \
Det[A] =  - xstretch ystretch zstretch.\nEither way:   ",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "Det[A]",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "  = xstretch ystretch zstretch."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.5.b.iv)  If you interchange the vertical columns of a 3D matrix, you change \
the sign but not the absolute value of the determinant\
\>", "Subsubsection"],

Cell["Here's a random 3D matrix A:", "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "a", "]"}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}]}],
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "2"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "3"}], "]"}]},
        {
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "3"}], "]"}]},
        {
         RowBox[{"a", "[", 
          RowBox[{"3", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"3", ",", "2"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"3", ",", "3"}], "]"}]}
       }], ")"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["\<\
Here's the matrix you get when you interchange the first two columns of A:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"interchangedA", " ", "=", " ", 
    RowBox[{"A", ".", 
     TagBox[
      RowBox[{"(", GridBox[{
         {"0", "1", "0"},
         {"1", "0", "0"},
         {"0", "0", "1"}
        }], ")"}],
      MatrixForm[#]& ]}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "interchangedA", "]"}]}], "Input"],

Cell["Calculate the determinants of each:", "Text"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Det", "[", "A", "]"}], ",", 
   RowBox[{"Det", "[", "interchangedA", "]"}]}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "The result:\n          ",
 StyleBox["  Det[interchangedA] = - Det[A].",
  FontWeight->"Bold"],
 "\nExplain why it had to turn out this way\n"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Go with the unit cube in 3D:", "SmallText"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "hitboxplotter", ",", "r", ",", "s", ",", "t", ",", "pointcolor", ",", 
      "matrix"}], "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"ranger", "=", "4"}], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{"thickness", "=", "0.01"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{"color", " ", "=", "LightGray"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"hitboxplotter", "[", "matrix_", "]"}], ":=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
         "}"}], "]"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "+", 
              RowBox[{"matrix", ".", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], 
           "]"}]}], "}"}], "]"}], ",", 
       RowBox[{"Axes", "->", "True"}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
       ",", 
       RowBox[{"Boxed", "->", "False"}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"ViewPoint", "->", 
        RowBox[{"12", " ", "CMView"}]}]}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"colplotter", ",", "matrix"}], "]"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"colplotter", "[", 
      StyleBox[
       RowBox[{
        StyleBox["matrix",
         FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], " ", ":=", " ", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Vector", "[", 
        RowBox[{
         RowBox[{
          StyleBox["matrix",
           FontColor->RGBColor[0, 0, 1]], ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"Tail", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
         RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
         RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
       RowBox[{"Vector", "[", 
        RowBox[{
         RowBox[{
          StyleBox["matrix",
           FontColor->RGBColor[0, 0, 1]], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
         RowBox[{"Tail", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"VectorColor", "\[Rule]", "Orange"}], ",", 
         RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
         RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Vector", "[", 
        RowBox[{
         RowBox[{
          StyleBox["matrix",
           FontColor->RGBColor[0, 0, 1]], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
         RowBox[{"Tail", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
         RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
         RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<col[1]\>\"", ",", 
           RowBox[{"0.6", " ", 
            RowBox[{
             StyleBox["matrix",
              FontColor->RGBColor[0, 0, 1]], ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], 
        "]"}], ",", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<col[2]\>\"", ",", 
           RowBox[{"0.5", "  ", 
            RowBox[{
             StyleBox["matrix",
              FontColor->RGBColor[0, 0, 1]], ".", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics3D", "[", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<col[3]\>\"", ",", 
           RowBox[{"0.5", "  ", 
            RowBox[{
             StyleBox["matrix",
              FontColor->RGBColor[0, 0, 1]], ".", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], 
        "]"}], ",", 
       RowBox[{"Axes", "->", "True"}], ",", 
       RowBox[{"AxesLabel", "->", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
       ",", 
       RowBox[{"Boxed", "->", "False"}], ",", 
       RowBox[{"PlotRange", "->", "All"}], ",", 
       RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}]}], ";"}], " ", "\n", 
   "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"hitboxplotter", "[", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
     RowBox[{"colplotter", "[", 
      RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}]}], "]"}]}]}]], "Input"],

Cell[TextData[{
 "Here's the ",
 "parallelogram box",
 " you get when you hit everything with ",
 Cell[BoxData[
  StyleBox[
   RowBox[{" ", "A", "\[NegativeThinSpace]"}],
   FontColor->RGBColor[0, 0, 1]]]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Ahit", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitboxplotter", "[", "A", "]"}], ",", 
    RowBox[{"colplotter", "[", "A", "]"}]}], "]"}]}]], "Input",
 AnimationDisplayTime->2],

Cell[TextData[{
 "Here's the ",
 "parallelogram box",
 " you get when you hit everything with ",
 Cell[BoxData[
  StyleBox[
   RowBox[{" ", "interchangedA", "\[NegativeThinSpace]"}],
   FontColor->RGBColor[0, 0, 1]]]],
 ":"
}], "SmallText",
 AnimationDisplayTime->2],

Cell[BoxData[
 RowBox[{"interchangedAhit", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitboxplotter", "[", "interchangedA", "]"}], ",", 
    RowBox[{"colplotter", "[", "interchangedA", "]"}]}], "]"}]}]], "Input",
 AnimationDisplayTime->2],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"Ahit", ",", " ", "interchangedAhit"}], "}"}], "]"}]], "Input"],

Cell["\<\
That's the parallelogram box defined by the columns of interchangedA. 
Notice that both parallelograms are the same physical parallelograms.\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"Ahit", ",", "interchangedAhit"}], "}"}], "]"}]], "Input"],

Cell[TextData[StyleBox["Reason: They are both defined by the same vectors.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "So \n              enclosed volume = ",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "Det[A]| = ",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "Det[interchangedA]",
 StyleBox["|.",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "But the orientation of the columns of ",
 StyleBox["interchangedA",
  FontColor->RGBColor[0, 0, 1]],
 " is opposite to the orientation of the columns of ",
 StyleBox["A:",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"]
}, Closed]],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"colplotter", "[", 
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
      StyleBox["\[Cross]",
       FontSize->18], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ",", 
     RowBox[{"Tail", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "->", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<col[2] x col[3]\>\"", ",", 
      RowBox[{"0.6", "  ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           StyleBox["A",
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             StyleBox["1",
              FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
         
         StyleBox["\[Cross]",
          FontSize->18], 
         RowBox[{"(", 
          RowBox[{
           StyleBox["A",
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             StyleBox["1",
              FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]}], 
     "]"}], "]"}], ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"5", "  ", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], ".", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         StyleBox["1",
          FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}]}], ",", 
   RowBox[{"Axes", "->", "False"}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<A cols and col[2] x col[3]\>\""}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "0", ",", "0"}], "}"}]}], ")"}], 
  ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
    StyleBox["\[Cross]",
     FontSize->18], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"colplotter", "[", 
    StyleBox[
     RowBox[{"interchanged", 
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]]}]], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        StyleBox["interchangedA",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
      StyleBox["\[Cross]",
       FontSize->18], 
      RowBox[{"(", 
       RowBox[{
        StyleBox["interchangedA",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ",", 
     RowBox[{"Tail", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "->", "Green"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<col[2] x col[3]\>\"", ",", 
      RowBox[{"0.6", "  ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           StyleBox["interchangedA",
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             StyleBox["1",
              FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
         
         StyleBox["\[Cross]",
          FontSize->18], 
         RowBox[{"(", 
          RowBox[{
           StyleBox["interchangedA",
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             StyleBox["1",
              FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]}], 
     "]"}], "]"}], ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"5", "  ", 
     RowBox[{"(", 
      RowBox[{
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], ".", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         StyleBox["1",
          FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}]}], ",", 
   RowBox[{"Axes", "->", "False"}], ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<interchangedA cols and col[2] x col[3]\>\""}]}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    StyleBox[
     RowBox[{"interchanged", 
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]]}]], ".", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "0", ",", "0"}], "}"}]}], ")"}], 
  ".", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox[
       RowBox[{"interchanged", 
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]]}]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
    StyleBox["\[Cross]",
     FontSize->18], 
    RowBox[{"(", 
     RowBox[{
      StyleBox[
       RowBox[{"interchanged", 
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]]}]], ".", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]], "Input"],

Cell[TextData[{
 "\nSo Det[",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 "] and Det[",
 StyleBox["interchangedA",
  FontColor->RGBColor[0, 0, 1]],
 "] have opposite signs but the same absolute value."
}], "SmallText"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.5.c) If A is a 3D matrix, then",
 StyleBox[" \n         Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 "=  ",
 StyleBox["col[1].(col[2]\[Times]col[3])= ",
  FontColor->RGBColor[0, 0, 1]],
 " (",
 StyleBox["A.{1,0,0}",
  FontColor->RGBColor[0, 0, 1]],
 ").((",
 StyleBox["A.{0,1,0}",
  FontColor->RGBColor[0, 0, 1]],
 ")\[Times] (",
 StyleBox["A.{0,0,1}",
  FontColor->RGBColor[0, 0, 1]],
 "))"
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this  formula known world wide:\nIf A is a 3D matrix, then \n       \
   Det[A] =  ",
 StyleBox["col[1].(col[2]\[Times]col[3]) = ",
  FontColor->RGBColor[0, 0, 1]],
 "(",
 StyleBox["A.{1,0,0}",
  FontColor->RGBColor[0, 0, 1]],
 ").((",
 StyleBox["A.{0,1,0}",
  FontColor->RGBColor[0, 0, 1]],
 ")\[Times] (",
 StyleBox["A.{0,0,1}",
  FontColor->RGBColor[0, 0, 1]],
 "))."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Go with the unit cube in 3D:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "hitboxplotter", ",", "r", ",", "s", ",", "t", ",", "pointcolor", ",", 
     "matrix"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "4"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"thickness", "=", "0.01"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"color", " ", "=", "LightGray"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitboxplotter", "[", "matrix_", "]"}], ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "thickness", "]"}], ",", "color", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}], ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "+", 
             RowBox[{"matrix", ".", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "}"}], "]"}]}],
         "}"}], "]"}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"ViewPoint", "->", 
       RowBox[{"12", " ", "CMView"}]}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"colplotter", ",", "matrix"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"colplotter", "[", 
     StyleBox[
      RowBox[{
       StyleBox["matrix",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], " ", ":=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
        RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Orange"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
        RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.3"}], ",", 
        RowBox[{"ShaftWidth", "->", "0.02"}]}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[1]\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], 
       "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[2]\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[3]\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], 
       "]"}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"PlotRange", "->", "All"}], ",", 
      RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"hitboxplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
   RowBox[{"colplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "The volume of this cube is 1. \nWhen you hit this with a matrix A, then the \
resulting box has volume Det[A] if  hits with the columns of A are positively \
oriented, but the resulting box has volume -Det[A] if A are positively \
oriented.\n",
 StyleBox["Case1: The columns of A are positively oriented",
  FontWeight->"Bold"],
 "\nHit unit cube with the matrix A defined in the code below:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0.6", "1.1", "0.3"},
        {"0.8", "0.9", "2.5"},
        {"1.7", 
         RowBox[{"-", "1.5"}], 
         RowBox[{"-", "1.0"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"hitcube", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"colplotter", "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
    RowBox[{"hitboxplotter", "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}]}], "]"}]}]}], "Input"],

Cell["\<\
Shade in the base defined by col[2] = A.{0,1,0} and col[3] = A.{0,0,1} :\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"shadedbase", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"hitcube", ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SurfaceColor", "[", 
        RowBox[{"Darker", "[", "Yellow", "]"}], "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{"A", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "+", 
           RowBox[{"A", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ",", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], " ", "}"}], "]"}]}],
       "}"}], "]"}], ",", "hitcube", ",", 
    RowBox[{"Axes", "->", "False"}]}], "]"}]}]], "Input"],

Cell["\<\
Now look at the same thing from a view point perpendicular to the shaded base \
and together with a plot of (col[2]\[Times]col[3]) :\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"shadedbase", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           StyleBox["1",
            FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
       StyleBox["\[Cross]",
        FontSize->18], 
       RowBox[{"(", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           StyleBox["1",
            FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<(col[2]\[Times]col[3])\>\"", ",", 
       RowBox[{"0.6", "  ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            StyleBox["A",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              StyleBox["1",
               FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
          StyleBox["\[Cross]",
           FontSize->18], 
          RowBox[{"(", 
           RowBox[{
            StyleBox["A",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              StyleBox["1",
               FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]}], 
      "]"}], "]"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"5", "  ", 
      RowBox[{"(", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}]}], ",", 
    RowBox[{"Axes", "->", "False"}]}], "]"}], " "}]], "Input"],

Cell[TextData[{
 "As you can see, col[1] .(col[2]\[Times]col[3]) ",
 StyleBox[">",
  FontColor->RGBColor[0, 0, 1]],
 " 0, so the columns of A are positively oriented and so\n        Det[A] = \
volume of the box.\n To see why \n       Det[A] =  col[1] \
.(col[2]\[Times]col[3]),\n all you have to do is to see why\n   col[1] \
.(col[2]\[Times]col[3]) = volume of the box.\n   \nTo this end, look at\n \
col[1] .(col[2]\[Times]col[3])\n           = ||col[1]|| ",
 StyleBox["||.(col[2]\[Times]col[3])||",
  FontColor->RGBColor[0, 0, 1]],
 " Cos[",
 StyleBox["angle between col[1] and col[2]\[Times]col[3]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "]\n           = ||col[1]||  Cos[",
 StyleBox["angle between col[1] and col[2]\[Times]col[3]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "]",
 StyleBox[" ||.(col[2]\[Times]col[3])||",
  FontColor->RGBColor[0, 0, 1]],
 "\n           = (height of box)",
 StyleBox[" ||(col[2]\[Times]col[3]||",
  FontColor->RGBColor[0, 0, 1]],
 " \n            = (height of box) ",
 StyleBox["||col[2]|| ||col[3])||",
  FontColor->RGBColor[0, 0, 1]],
 " |Sin[angle from co1[2] to col[3]]|\n            = (height of box) (area of \
base) \n            = volume of box.\n This explains why\n               \
Det[A] = col[1] .(col[2]\[Times]col[3])\n in the case that the columns of A \
are positively oriented."
}], "SmallText"],

Cell[TextData[{
 "\n",
 StyleBox["Case2: The columns of A are negatively oriented",
  FontWeight->"Bold"],
 "\nHit unit cube with the matrix A defined in the code below:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"0.6", "0.3", "1.1"},
        {"0.8", "2.5", "0.9"},
        {"1.7", 
         RowBox[{"-", "1.0"}], 
         RowBox[{"-", "1.5"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"hitcube", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitboxplotter", "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
    RowBox[{"colplotter", "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}]}], "]"}]}]}], "Input"],

Cell["\<\
Shade in the base defined by col[2] = A.{0,1,0} and col[3] = A.{0,0,1} :\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"shadedbase", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"hitcube", ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SurfaceColor", "[", 
        RowBox[{"Darker", "[", "Yellow", "]"}], "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           RowBox[{"A", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "+", 
           RowBox[{"A", ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], ",", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], " ", "}"}], "]"}]}],
       "}"}], "]"}], ",", "hitcube", ",", 
    RowBox[{"Axes", "->", "False"}]}], "]"}], " "}]], "Input"],

Cell["\<\
Now look at the same thing from a view point perpendicular to the shaded base \
and together with a plot of (col[2]\[Times]col[3]) :\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"shadedbase", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           StyleBox["1",
            FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
       StyleBox["\[Cross]",
        FontSize->18], 
       RowBox[{"(", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", 
           StyleBox["1",
            FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<(col[2]\[Times]col[3])\>\"", ",", 
       RowBox[{"0.6", "  ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            StyleBox["A",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              StyleBox["1",
               FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
          StyleBox["\[Cross]",
           FontSize->18], 
          RowBox[{"(", 
           RowBox[{
            StyleBox["A",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              StyleBox["1",
               FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]}], 
      "]"}], "]"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"5", "  ", 
      RowBox[{"(", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}]}], ",", 
    RowBox[{"Axes", "->", "False"}]}], "]"}], " "}]], "Input"],

Cell[TextData[{
 "As you can see, col[1] .(col[2]\[Times]col[3]) ",
 StyleBox["<",
  FontColor->RGBColor[0, 0, 1]],
 "  0, the columns of A are negatively oriented and\n        Det[A] = ",
 StyleBox["\[Dash]",
  FontColor->RGBColor[0, 0, 1]],
 " volume of the box.\n To see why \n       Det[A] =  col[1] \
.(col[2]\[Times]col[3]),\n all you have to do is to see why\n      \[Dash] \
col[1] .(col[2]\[Times]col[3]) =  volume of the box.\n   \nTo this end, \
notice that\n ",
 StyleBox["\[Dash] ",
  FontColor->RGBColor[1, 0, 0]],
 "col[1] .",
 StyleBox["(col[2]\[Times]col[3])",
  FontColor->RGBColor[1, 0, 0]],
 " =   col[1] .",
 StyleBox["(\[Dash](col[2] \[Times] col[3]))",
  FontColor->RGBColor[1, 0, 0]],
 "\n and take a look at the box from a view point perpendicular to the shaded \
base and together with a plot of ",
 StyleBox["\[Dash](col[2] \[Times] col[3])",
  FontColor->RGBColor[1, 0, 0]],
 " :"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"shadedbase", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           StyleBox["A",
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", 
             StyleBox["1",
              FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
         
         StyleBox["\[Cross]",
          FontSize->18], 
         RowBox[{"(", 
          RowBox[{
           StyleBox["A",
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             StyleBox["1",
              FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<-(col[2] x col[3])\>\"", ",", 
       RowBox[{
        RowBox[{"-", "0.6"}], "  ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            StyleBox["A",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              StyleBox["1",
               FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}]}], ")"}], " ", 
          StyleBox["\[Cross]",
           FontSize->18], 
          RowBox[{"(", 
           RowBox[{
            StyleBox["A",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              StyleBox["1",
               FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}], ")"}]}]}], 
      "]"}], "]"}], ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"5", "  ", 
      RowBox[{"(", 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          StyleBox["1",
           FontColor->RGBColor[0, 0, 1]]}], "}"}]}], ")"}]}]}], ",", 
    RowBox[{"Axes", "->", "False"}]}], "]"}], " "}]], "Input"],

Cell["And now it all unravels:", "SmallText"],

Cell[TextData[{
 "         ",
 StyleBox["\[Dash] ",
  FontColor->RGBColor[1, 0, 0]],
 "col[1] .",
 StyleBox["(col[2]\[Times]col[3])",
  FontColor->RGBColor[1, 0, 0]],
 " =   col[1] .",
 StyleBox["(\[Dash](col[2] \[Times] col[3]))",
  FontColor->RGBColor[1, 0, 0]],
 "\n           = ||col[1]|| ",
 StyleBox["||.-(col[2]\[Times]col[3])||",
  FontColor->RGBColor[0, 0, 1]],
 " Cos[angle between col[1] and -(col[2]\[Times]col[3])]\n           = \
||col[1]||  Cos[angle between col[1] and -col[2]\[Times]col[3]]",
 StyleBox[" ||-(col[2]\[Times]col[3])||",
  FontColor->RGBColor[0, 0, 1]],
 "\n           = (height of box)",
 StyleBox[" ||-(col[2]\[Times]col[3])||\n          =  ",
  FontColor->RGBColor[0, 0, 1]],
 "(height of box)",
 StyleBox[" ||(col[2]\[Times]col[3])||",
  FontColor->RGBColor[0, 0, 1]],
 "  \n            = (height of box) ",
 StyleBox["||col[2]|| ||col[3])||",
  FontColor->RGBColor[0, 0, 1]],
 " |Sin[angle from co1[2] to col[3]]|\n            = (height of box) (area of \
base) \n            = volume of box.\n This explains why\n               \
Det[A] = col[1] .(col[2]\[Times]col[3])\n the columns of A are negatively \
oriented."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.05.B1"->{
  Cell[29451, 802, 156, 4, 61, "Subsection",
   CellTags->"MGM.05.B1"]},
 "MGM.05.B2"->{
  Cell[84358, 2631, 107, 2, 36, "Subsection",
   CellTags->"MGM.05.B2"]},
 "MGM.05.B3"->{
  Cell[103548, 3318, 71, 1, 36, "Subsection",
   CellTags->"MGM.05.B3"]},
 "MGM.05.B4"->{
  Cell[128411, 4132, 163, 4, 61, "Subsection",
   CellTags->"MGM.05.B4"]},
 "MGM.05.B5"->{
  Cell[174631, 5819, 1909, 59, 261, "Subsection",
   CellTags->"MGM.05.B5"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.05.B1", 324764, 10006},
 {"MGM.05.B2", 324853, 10009},
 {"MGM.05.B3", 324943, 10012},
 {"MGM.05.B4", 325033, 10015},
 {"MGM.05.B5", 325124, 10018}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 113, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6350, 137, 193, 7, 28, "Special2"],
Cell[6546, 146, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7863, 188, 38, 0, 31, "Subsubsection"],
Cell[7904, 190, 1344, 31, 156, "Input"],
Cell[9251, 223, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9424, 229, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26795, 712, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27042, 723, 39, 0, 31, "Subsubsection"],
Cell[27084, 725, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29451, 802, 156, 4, 61, "Subsection",
 CellTags->"MGM.05.B1"],
Cell[CellGroupData[{
Cell[29632, 810, 56, 0, 31, "Subsubsection"],
Cell[29691, 812, 116, 3, 49, "Text"],
Cell[29810, 817, 126, 3, 31, "Special5"],
Cell[29939, 822, 7636, 225, 635, "Input"],
Cell[37578, 1049, 117, 3, 49, "Text"],
Cell[37698, 1054, 1474, 45, 178, "Input"],
Cell[39175, 1101, 33, 0, 24, "Text"],
Cell[39211, 1103, 686, 22, 51, "Input"],
Cell[39900, 1127, 1518, 44, 126, "Input"],
Cell[41421, 1173, 107, 3, 24, "Text"],
Cell[41531, 1178, 1591, 48, 126, "Input"],
Cell[43125, 1228, 42, 0, 24, "Text"],
Cell[43170, 1230, 202, 5, 36, "Input"],
Cell[CellGroupData[{
Cell[43397, 1239, 72, 0, 24, "Text"],
Cell[43472, 1241, 27, 0, 23, "Special1"],
Cell[43502, 1243, 200, 4, 74, "SmallText"],
Cell[43705, 1249, 126, 3, 20, "Input"],
Cell[43834, 1254, 111, 3, 24, "SmallText"],
Cell[43948, 1259, 124, 3, 20, "Input"],
Cell[44075, 1264, 403, 13, 99, "SmallText"],
Cell[44481, 1279, 437, 13, 36, "Input"],
Cell[44921, 1294, 68, 0, 24, "SmallText"],
Cell[44992, 1296, 806, 26, 91, "Input"],
Cell[45801, 1324, 65, 0, 24, "SmallText"],
Cell[45869, 1326, 426, 13, 36, "Input"],
Cell[46298, 1341, 34, 0, 24, "SmallText"],
Cell[46335, 1343, 429, 14, 36, "Input"],
Cell[46767, 1359, 1054, 33, 81, "Input"],
Cell[47824, 1394, 98, 3, 49, "SmallText"],
Cell[47925, 1399, 1994, 63, 73, "Input"],
Cell[49922, 1464, 437, 13, 36, "Input"],
Cell[50362, 1479, 806, 26, 91, "Input"],
Cell[51171, 1507, 426, 13, 36, "Input"],
Cell[51600, 1522, 429, 14, 36, "Input"],
Cell[CellGroupData[{
Cell[52054, 1540, 459, 14, 51, "Input"],
Cell[52516, 1556, 140, 4, 20, "Input"],
Cell[52659, 1562, 107, 3, 20, "Input"],
Cell[52769, 1567, 140, 4, 20, "Input"],
Cell[52912, 1573, 107, 3, 20, "Input"],
Cell[53022, 1578, 161, 5, 20, "Input"]
}, Closed]],
Cell[53198, 1586, 47, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[53294, 1592, 79, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[53398, 1596, 138, 5, 24, "Text"],
Cell[53539, 1603, 27, 0, 23, "Special1"],
Cell[53569, 1605, 76, 0, 24, "SmallText"],
Cell[53648, 1607, 1932, 61, 73, "Input"],
Cell[55583, 1670, 65, 0, 24, "SmallText"],
Cell[55651, 1672, 381, 11, 36, "Input"],
Cell[56035, 1685, 68, 0, 24, "SmallText"],
Cell[56106, 1687, 394, 11, 36, "Input"],
Cell[56503, 1700, 65, 0, 24, "SmallText"],
Cell[56571, 1702, 341, 10, 36, "Input"],
Cell[56915, 1714, 34, 0, 24, "SmallText"],
Cell[56952, 1716, 429, 14, 36, "Input"],
Cell[57384, 1732, 25, 0, 24, "SmallText"],
Cell[57412, 1734, 94, 2, 24, "SmallText"],
Cell[57509, 1738, 632, 20, 51, "Input"],
Cell[58144, 1760, 144, 5, 24, "SmallText"],
Cell[58291, 1767, 309, 8, 20, "Input"],
Cell[58603, 1777, 93, 2, 24, "SmallText"],
Cell[58699, 1781, 629, 20, 51, "Input"],
Cell[59331, 1803, 36, 0, 24, "SmallText"],
Cell[59370, 1805, 134, 4, 20, "Input"],
Cell[59507, 1811, 380, 13, 20, "Input"],
Cell[59890, 1826, 284, 9, 20, "Input"],
Cell[60177, 1837, 284, 9, 20, "Input"],
Cell[60464, 1848, 373, 13, 20, "Input"],
Cell[60840, 1863, 141, 5, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[61030, 1874, 94, 2, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[61149, 1880, 135, 5, 24, "Text"],
Cell[61287, 1887, 27, 0, 23, "Special1"],
Cell[61317, 1889, 1392, 45, 249, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[62758, 1940, 133, 3, 31, "Subsubsection"],
Cell[62894, 1945, 546, 19, 117, "Text"],
Cell[63443, 1966, 547, 19, 73, "Input"],
Cell[63993, 1987, 890, 30, 36, "Input"],
Cell[64886, 2019, 901, 30, 36, "Input"],
Cell[65790, 2051, 594, 19, 36, "Input"],
Cell[66387, 2072, 34, 0, 24, "SmallText"],
Cell[66424, 2074, 475, 16, 36, "Input"],
Cell[66902, 2092, 574, 17, 51, "Input"],
Cell[67479, 2111, 265, 7, 20, "Input"],
Cell[67747, 2120, 571, 17, 51, "Input"],
Cell[68321, 2139, 31, 0, 24, "Text"],
Cell[68355, 2141, 234, 7, 20, "Input"],
Cell[68592, 2150, 234, 7, 20, "Input"],
Cell[68829, 2159, 234, 7, 20, "Input"],
Cell[CellGroupData[{
Cell[69088, 2170, 93, 3, 49, "Text"],
Cell[69184, 2175, 27, 0, 23, "Special1"],
Cell[69214, 2177, 66, 3, 49, "SmallText"],
Cell[69283, 2182, 9137, 267, 740, "Input"],
Cell[78423, 2451, 69, 1, 20, "Special5"],
Cell[78495, 2454, 103, 1, 24, "SmallText"],
Cell[78601, 2457, 323, 7, 55, "Special5"],
Cell[78927, 2466, 1233, 32, 171, "Input"],
Cell[80163, 2500, 41, 0, 24, "Text"],
Cell[80207, 2502, 197, 5, 20, "Input"],
Cell[80407, 2509, 91, 1, 24, "SmallText"],
Cell[80501, 2512, 1376, 37, 171, "Input"],
Cell[81880, 2551, 50, 0, 24, "Text"],
Cell[81933, 2553, 259, 6, 36, "Input"],
Cell[82195, 2561, 80, 1, 24, "SmallText"],
Cell[82278, 2564, 1605, 47, 186, "Input"],
Cell[83886, 2613, 60, 0, 24, "Text"],
Cell[83949, 2615, 319, 7, 36, "Input"],
Cell[84271, 2624, 26, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[84358, 2631, 107, 2, 36, "Subsection",
 CellTags->"MGM.05.B2"],
Cell[CellGroupData[{
Cell[84490, 2637, 54, 0, 31, "Subsubsection"],
Cell[84547, 2639, 44, 0, 24, "Text"],
Cell[84594, 2641, 496, 17, 73, "Input"],
Cell[85093, 2660, 180, 9, 27, "Text"],
Cell[85276, 2671, 170, 5, 20, "Input"],
Cell[CellGroupData[{
Cell[85471, 2680, 86, 2, 24, "Text"],
Cell[85560, 2684, 27, 0, 23, "Special1"],
Cell[85590, 2686, 257, 9, 49, "SmallText"],
Cell[85850, 2697, 796, 26, 36, "Input"],
Cell[86649, 2725, 680, 21, 51, "Input"],
Cell[87332, 2748, 688, 23, 36, "Input"],
Cell[88023, 2773, 34, 0, 24, "SmallText"],
Cell[88060, 2775, 475, 16, 36, "Input"],
Cell[88538, 2793, 968, 38, 183, "SmallText"],
Cell[89509, 2833, 128, 3, 20, "Input"],
Cell[89640, 2838, 130, 3, 20, "Input"],
Cell[89773, 2843, 923, 36, 95, "SmallText"],
Cell[90699, 2881, 606, 19, 60, "Input"],
Cell[91308, 2902, 153, 4, 20, "Input"],
Cell[91464, 2908, 210, 8, 52, "SmallText"],
Cell[91677, 2918, 90, 2, 20, "Input"],
Cell[91770, 2922, 92, 2, 20, "Input"],
Cell[91865, 2926, 129, 6, 27, "SmallText"],
Cell[91997, 2934, 478, 14, 51, "Input"],
Cell[92478, 2950, 125, 5, 24, "SmallText"],
Cell[92606, 2957, 170, 5, 20, "Input"],
Cell[92779, 2964, 40, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[92868, 2970, 42, 0, 31, "Subsubsection"],
Cell[92913, 2972, 50, 0, 24, "Text"],
Cell[92966, 2974, 451, 15, 73, "Input"],
Cell[93420, 2991, 193, 9, 27, "Text"],
Cell[93616, 3002, 170, 5, 20, "Input"],
Cell[CellGroupData[{
Cell[93811, 3011, 55, 3, 49, "Text"],
Cell[93869, 3016, 27, 0, 23, "Special1"],
Cell[93899, 3018, 68, 0, 24, "SmallText"],
Cell[93970, 3020, 166, 5, 20, "Input"],
Cell[94139, 3027, 435, 10, 149, "SmallText"],
Cell[94577, 3039, 416, 13, 36, "Input"],
Cell[94996, 3054, 58, 0, 24, "SmallText"],
Cell[95057, 3056, 6608, 197, 597, "Input"],
Cell[101668, 3255, 82, 1, 24, "SmallText"],
Cell[101753, 3258, 472, 14, 36, "Input"],
Cell[102228, 3274, 82, 1, 24, "SmallText"],
Cell[102313, 3277, 472, 14, 36, "Input"],
Cell[102788, 3293, 699, 18, 299, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[103548, 3318, 71, 1, 36, "Subsection",
 CellTags->"MGM.05.B3"],
Cell[CellGroupData[{
Cell[103644, 3323, 126, 3, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[103795, 3330, 69, 0, 24, "Text"],
Cell[103867, 3332, 27, 0, 23, "Special1"],
Cell[103897, 3334, 1455, 46, 442, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[105401, 3386, 62, 0, 31, "Subsubsection"],
Cell[105466, 3388, 37, 0, 24, "Text"],
Cell[105506, 3390, 442, 15, 73, "Input"],
Cell[CellGroupData[{
Cell[105973, 3409, 229, 5, 99, "Text"],
Cell[106205, 3416, 27, 0, 23, "Special1"],
Cell[106235, 3418, 58, 0, 24, "SmallText"],
Cell[106296, 3420, 257, 8, 20, "Input"],
Cell[106556, 3430, 592, 18, 124, "SmallText"],
Cell[107151, 3450, 1207, 44, 66, "Input"],
Cell[108361, 3496, 35, 0, 24, "SmallText"],
Cell[108399, 3498, 7700, 229, 642, "Input"],
Cell[116102, 3729, 103, 2, 24, "SmallText",
 Evaluatable->False],
Cell[116208, 3733, 676, 19, 51, "Input"],
Cell[116887, 3754, 51, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[116987, 3760, 68, 0, 31, "Subsubsection"],
Cell[117058, 3762, 47, 0, 24, "Text"],
Cell[117108, 3764, 432, 14, 73, "Input"],
Cell[CellGroupData[{
Cell[117565, 3782, 229, 5, 99, "Text"],
Cell[117797, 3789, 27, 0, 23, "Special1"],
Cell[117827, 3791, 58, 0, 24, "SmallText"],
Cell[117888, 3793, 211, 6, 20, "Input"],
Cell[118102, 3801, 333, 9, 99, "SmallText"],
Cell[118438, 3812, 512, 17, 66, "Input"],
Cell[118953, 3831, 35, 0, 24, "SmallText"],
Cell[118991, 3833, 7138, 214, 612, "Input"],
Cell[126132, 4049, 103, 2, 24, "SmallText",
 Evaluatable->False],
Cell[126238, 4053, 676, 19, 51, "Input"],
Cell[126917, 4074, 51, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[127017, 4080, 53, 0, 31, "Subsubsection"],
Cell[127073, 4082, 43, 0, 24, "Text"],
Cell[127119, 4084, 373, 12, 73, "Input"],
Cell[CellGroupData[{
Cell[127517, 4100, 197, 4, 74, "Text"],
Cell[127717, 4106, 27, 0, 23, "Special1"],
Cell[127747, 4108, 58, 0, 24, "SmallText"],
Cell[127808, 4110, 161, 4, 20, "Input"],
Cell[127972, 4116, 378, 9, 149, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[128411, 4132, 163, 4, 61, "Subsection",
 CellTags->"MGM.05.B4"],
Cell[CellGroupData[{
Cell[128599, 4140, 104, 2, 31, "Subsubsection",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[128728, 4146, 1280, 50, 124, "Text",
 Evaluatable->False],
Cell[130011, 4198, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[130062, 4201, 62, 1, 24, "SmallText",
 Evaluatable->False],
Cell[130127, 4204, 92, 1, 20, "Special5",
 Evaluatable->False],
Cell[130222, 4207, 464, 16, 73, "Input"],
Cell[130689, 4225, 41, 0, 24, "SmallText"],
Cell[130733, 4227, 211, 6, 20, "Input"],
Cell[130947, 4235, 1530, 59, 174, "SmallText",
 Evaluatable->False],
Cell[132480, 4296, 578, 19, 51, "Input"],
Cell[133061, 4317, 1180, 44, 105, "SmallText",
 Evaluatable->False],
Cell[134244, 4363, 250, 8, 20, "Input"],
Cell[134497, 4373, 48, 1, 24, "SmallText",
 Evaluatable->False],
Cell[134548, 4376, 215, 7, 20, "Input"],
Cell[134766, 4385, 54, 1, 24, "SmallText",
 Evaluatable->False],
Cell[134823, 4388, 369, 12, 36, "Input"],
Cell[135195, 4402, 49, 1, 24, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[135293, 4409, 120, 3, 31, "Subsubsection",
 Evaluatable->False],
Cell[135416, 4414, 59, 1, 24, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[135500, 4419, 500, 17, 73, "Input"],
Cell[136003, 4438, 36, 0, 24, "Text"],
Cell[136042, 4440, 211, 6, 20, "Input"]
}, Closed]],
Cell[136268, 4449, 124, 3, 49, "Text"],
Cell[136395, 4454, 60, 1, 20, "Input"],
Cell[CellGroupData[{
Cell[136480, 4459, 1016, 37, 199, "Text",
 Evaluatable->False],
Cell[137499, 4498, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[137550, 4501, 130, 3, 49, "SmallText"],
Cell[137683, 4506, 54, 0, 20, "Special5"],
Cell[137740, 4508, 45, 0, 24, "SmallText"],
Cell[137788, 4510, 426, 13, 36, "Input"],
Cell[138217, 4525, 337, 10, 43, "Special5"],
Cell[138557, 4537, 78, 1, 24, "SmallText",
 Evaluatable->False],
Cell[138638, 4540, 7545, 225, 642, "Input"],
Cell[146186, 4767, 103, 2, 24, "SmallText",
 Evaluatable->False],
Cell[146292, 4771, 676, 19, 51, "Input"],
Cell[146971, 4792, 103, 2, 24, "SmallText",
 Evaluatable->False],
Cell[147077, 4796, 702, 20, 51, "Input"],
Cell[147782, 4818, 949, 32, 199, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[148780, 4856, 332, 9, 96, "Subsubsection",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[149137, 4869, 781, 26, 149, "Text",
 Evaluatable->False],
Cell[149921, 4897, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[149972, 4900, 1075, 28, 299, "SmallText"],
Cell[151050, 4930, 240, 8, 20, "Input"],
Cell[151293, 4940, 642, 20, 36, "Input"],
Cell[151938, 4962, 384, 13, 99, "SmallText"],
Cell[152325, 4977, 271, 9, 20, "Input"],
Cell[152599, 4988, 642, 20, 36, "Input"],
Cell[153244, 5010, 289, 9, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[153582, 5025, 93, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[153678, 5028, 111, 4, 49, "Text",
 Evaluatable->False],
Cell[153792, 5034, 271, 9, 20, "Input"],
Cell[154066, 5045, 642, 20, 36, "Input"],
Cell[CellGroupData[{
Cell[154733, 5069, 139, 3, 49, "Text"],
Cell[154875, 5074, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[154926, 5077, 79, 0, 24, "SmallText"],
Cell[155008, 5079, 427, 12, 36, "Input"],
Cell[155438, 5093, 264, 8, 20, "Input"],
Cell[155705, 5103, 37, 0, 24, "SmallText"],
Cell[155745, 5105, 1212, 40, 95, "Input"],
Cell[156960, 5147, 36, 0, 24, "SmallText"],
Cell[156999, 5149, 106, 3, 20, "Input"],
Cell[157108, 5154, 82, 2, 20, "Input"],
Cell[157193, 5158, 31, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[157273, 5164, 1629, 56, 79, "Subsubsection",
 Evaluatable->False],
Cell[158905, 5222, 66, 1, 24, "Text",
 Evaluatable->False],
Cell[158974, 5225, 1453, 52, 54, "Text",
 Evaluatable->False],
Cell[160430, 5279, 72, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[160527, 5286, 266, 8, 49, "Text"],
Cell[160796, 5296, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[160847, 5299, 49, 3, 49, "SmallText"],
Cell[160899, 5304, 1346, 47, 57, "SmallText",
 Evaluatable->False],
Cell[162248, 5353, 69, 3, 49, "SmallText"],
Cell[162320, 5358, 1556, 55, 57, "SmallText",
 Evaluatable->False],
Cell[163879, 5415, 60, 3, 49, "SmallText"],
Cell[163942, 5420, 1672, 58, 87, "SmallText",
 Evaluatable->False],
Cell[165617, 5480, 1061, 35, 35, "Special2"],
Cell[166681, 5517, 60, 3, 49, "SmallText"],
Cell[166744, 5522, 1133, 41, 45, "SmallText",
 Evaluatable->False],
Cell[167880, 5565, 162, 6, 23, "Special2"],
Cell[168045, 5573, 104, 5, 24, "SmallText"],
Cell[168152, 5580, 1125, 41, 45, "SmallText",
 Evaluatable->False],
Cell[169280, 5623, 181, 5, 74, "SmallText"],
Cell[169464, 5630, 98, 5, 24, "SmallText"],
Cell[169565, 5637, 1125, 41, 45, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[170739, 5684, 73, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[170837, 5689, 310, 7, 124, "Text",
 Evaluatable->False],
Cell[171150, 5698, 27, 0, 23, "Special1"],
Cell[171180, 5700, 256, 7, 124, "SmallText"],
Cell[171439, 5709, 187, 5, 20, "Input"],
Cell[171629, 5716, 27, 0, 24, "SmallText"],
Cell[171659, 5718, 252, 8, 36, "Input"],
Cell[171914, 5728, 151, 3, 49, "SmallText"],
Cell[172068, 5733, 594, 19, 66, "Input"],
Cell[172665, 5754, 32, 0, 24, "SmallText"],
Cell[172700, 5756, 204, 5, 99, "SmallText"],
Cell[172907, 5763, 1549, 44, 171, "Input"],
Cell[174459, 5809, 111, 3, 49, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[174631, 5819, 1909, 59, 261, "Subsection",
 CellTags->"MGM.05.B5"],
Cell[CellGroupData[{
Cell[176565, 5882, 535, 16, 52, "Subsubsection"],
Cell[177103, 5900, 69, 0, 24, "Text"],
Cell[177175, 5902, 27, 0, 23, "Special1"],
Cell[177205, 5904, 275, 11, 67, "SmallText"],
Cell[177483, 5917, 3693, 101, 216, "Input"],
Cell[181179, 6020, 310, 7, 104, "SmallText"],
Cell[181492, 6029, 479, 17, 20, "Input"],
Cell[181974, 6048, 76, 0, 24, "SmallText"],
Cell[182053, 6050, 656, 22, 73, "Input"],
Cell[182712, 6074, 703, 20, 23, "Special2"],
Cell[183418, 6096, 303, 11, 49, "SmallText"],
Cell[183724, 6109, 813, 30, 20, "Input"],
Cell[184540, 6141, 183, 5, 99, "Text"],
Cell[184726, 6148, 1907, 60, 81, "Input"],
Cell[186636, 6210, 252, 8, 49, "SmallText"],
Cell[186891, 6220, 97, 3, 49, "SmallText"],
Cell[186991, 6225, 591, 20, 73, "Input"],
Cell[187585, 6247, 703, 20, 23, "Special2"],
Cell[188291, 6269, 302, 11, 49, "SmallText"],
Cell[188596, 6282, 813, 30, 20, "Input"],
Cell[189412, 6314, 202, 5, 74, "Text"],
Cell[189617, 6321, 2215, 70, 81, "Input"],
Cell[191835, 6393, 297, 9, 74, "SmallText"]
}, Closed]],
Cell[CellGroupData[{
Cell[192169, 6407, 924, 31, 118, "Subsubsection"],
Cell[193096, 6440, 168, 5, 49, "Text"],
Cell[193267, 6447, 672, 23, 73, "Input"],
Cell[CellGroupData[{
Cell[193964, 6474, 454, 18, 67, "Text"],
Cell[194421, 6494, 27, 0, 23, "Special1"],
Cell[194451, 6496, 49, 0, 24, "SmallText"],
Cell[194503, 6498, 11476, 308, 606, "Input"],
Cell[205982, 6808, 158, 6, 24, "SmallText"],
Cell[206143, 6816, 690, 23, 73, "Input"],
Cell[206836, 6841, 87, 3, 49, "SmallText"],
Cell[206926, 6846, 322, 12, 49, "SmallText"],
Cell[207251, 6860, 813, 30, 20, "Input"],
Cell[208067, 6892, 639, 16, 199, "SmallText"],
Cell[208709, 6910, 1175, 40, 36, "Input"],
Cell[209887, 6952, 27, 0, 24, "SmallText"],
Cell[209917, 6954, 56, 1, 20, "Input"],
Cell[209976, 6957, 34, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[210059, 6963, 1027, 36, 130, "Subsubsection"],
Cell[211089, 7001, 168, 5, 49, "Text"],
Cell[211260, 7008, 566, 19, 73, "Input"],
Cell[CellGroupData[{
Cell[211851, 7031, 517, 20, 67, "Text"],
Cell[212371, 7053, 27, 0, 23, "Special1"],
Cell[212401, 7055, 49, 0, 24, "SmallText"],
Cell[212453, 7057, 245, 6, 20, "Input"],
Cell[212701, 7065, 158, 6, 24, "SmallText"],
Cell[212862, 7073, 722, 24, 88, "Input"],
Cell[213587, 7099, 87, 3, 49, "SmallText"],
Cell[213677, 7104, 322, 12, 49, "SmallText"],
Cell[214002, 7118, 813, 30, 20, "Input"],
Cell[214818, 7150, 642, 16, 224, "SmallText"],
Cell[215463, 7168, 1297, 47, 36, "Input"],
Cell[216763, 7217, 27, 0, 24, "SmallText"],
Cell[216793, 7219, 56, 1, 20, "Input"],
Cell[216852, 7222, 34, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[216935, 7228, 82, 1, 31, "Subsubsection"],
Cell[217020, 7231, 126, 3, 49, "Text"],
Cell[217149, 7236, 2388, 76, 157, "Input"],
Cell[219540, 7314, 182, 6, 12, "Special2"],
Cell[219725, 7322, 66, 0, 24, "Text"],
Cell[219794, 7324, 1012, 33, 73, "Input"],
Cell[CellGroupData[{
Cell[220831, 7361, 71, 0, 24, "Text"],
Cell[220905, 7363, 27, 0, 23, "Special1"],
Cell[220935, 7365, 238, 12, 33, "SmallText"],
Cell[221176, 7379, 346, 13, 40, "Input"],
Cell[221525, 7394, 391, 10, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[221965, 7410, 167, 3, 52, "Subsubsection"],
Cell[222135, 7415, 44, 0, 24, "Text"],
Cell[222182, 7417, 1609, 53, 127, "Input"],
Cell[223794, 7472, 98, 2, 24, "Text"],
Cell[223895, 7476, 369, 12, 73, "Input"],
Cell[224267, 7490, 51, 0, 24, "Text"],
Cell[224321, 7492, 146, 4, 20, "Input"],
Cell[CellGroupData[{
Cell[224492, 7500, 171, 5, 99, "Text"],
Cell[224666, 7507, 27, 0, 23, "Special1"],
Cell[224696, 7509, 49, 0, 24, "SmallText"],
Cell[224748, 7511, 11738, 303, 621, "Input"],
Cell[236489, 7816, 228, 9, 24, "SmallText"],
Cell[236720, 7827, 219, 6, 20, "Input"],
Cell[236942, 7835, 266, 10, 24, "SmallText"],
Cell[237211, 7847, 255, 6, 36, "Input"],
Cell[237469, 7855, 134, 3, 20, "Input"],
Cell[237606, 7860, 169, 3, 49, "SmallText"],
Cell[237778, 7865, 129, 3, 20, "Input"],
Cell[237910, 7870, 180, 3, 12, "Special2"],
Cell[238093, 7875, 256, 10, 49, "SmallText"],
Cell[238352, 7887, 238, 7, 49, "SmallText"]
}, Closed]],
Cell[238605, 7897, 2214, 70, 81, "Input"],
Cell[240822, 7969, 813, 30, 20, "Input"],
Cell[241638, 8001, 2329, 73, 111, "Input"],
Cell[243970, 8076, 974, 36, 36, "Input"],
Cell[244947, 8114, 223, 8, 49, "SmallText"]
}, Closed]],
Cell[CellGroupData[{
Cell[245207, 8127, 431, 17, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[245663, 8148, 408, 15, 74, "Text"],
Cell[246074, 8165, 27, 0, 23, "Special1"],
Cell[246104, 8167, 49, 0, 24, "SmallText"],
Cell[246156, 8169, 11476, 308, 606, "Input"],
Cell[257635, 8479, 427, 8, 149, "SmallText"],
Cell[258065, 8489, 656, 21, 73, "Input"],
Cell[258724, 8512, 101, 2, 24, "SmallText"],
Cell[258828, 8516, 1032, 28, 51, "Input"],
Cell[259863, 8546, 161, 3, 49, "SmallText"],
Cell[260027, 8551, 2132, 65, 66, "Input"],
Cell[262162, 8618, 1351, 30, 474, "SmallText"],
Cell[263516, 8650, 187, 5, 74, "SmallText"],
Cell[263706, 8657, 656, 21, 73, "Input"],
Cell[264365, 8680, 101, 2, 24, "SmallText"],
Cell[264469, 8684, 1037, 28, 51, "Input"],
Cell[265509, 8714, 161, 3, 49, "SmallText"],
Cell[265673, 8719, 2132, 65, 66, "Input"],
Cell[267808, 8786, 925, 24, 299, "SmallText"],
Cell[268736, 8812, 2250, 69, 81, "Input"],
Cell[270989, 8883, 45, 0, 24, "SmallText"],
Cell[271037, 8885, 1170, 30, 274, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
