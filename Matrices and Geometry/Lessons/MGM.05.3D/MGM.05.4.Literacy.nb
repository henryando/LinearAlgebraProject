(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    358825,       7197]
NotebookOptionsPosition[    301252,       5957]
NotebookOutlinePosition[    353818,       7048]
CellTagsIndexPosition[    353775,       7045]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.05 3D Matrices\n",
 StyleBox[" LITERACY",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[TextData[StyleBox["What you should be able to handle when you are away \
from the machine. ",
 FontSize->12]], "Subsection"],

Cell["L.1)", "Subsubsection"],

Cell["Here's a random 3D matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "6"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", 
      "\n", "             ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", 
            RowBox[{"-", "2"}]}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}], "}"}], ",", "\n", 
      "\t          ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], "]"}], ",", " ", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3.5"}], ",", "3.5"}], "}"}]}], "]"}]}], "}"}]}], 
     "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.9362212376037509`", "1.3708224201095591`", 
      RowBox[{"-", "0.7071178064745559`"}]},
     {"0.14472250110425033`", 
      RowBox[{"-", "2.729269980506619`"}], "0.9615965254933847`"},
     {
      RowBox[{"-", "1.4948892852136917`"}], 
      RowBox[{"-", "1.71655538981655`"}], "1.1962072870714806`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5032506002783833`*^9}]
}, Open  ]],

Cell["\<\
Here's the ellipsoid you get when you hit this matrix on the 3D unit sphere \
centered at {0,0,0}:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ";"}], "\n", " ", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", " ", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"Axes", "->", "True"}], ",", " ", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     ",", 
     RowBox[{"ViewPoint", "->", "CMView"}], ",", 
     RowBox[{"Boxed", "->", "False"}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
qJ83kg==
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAn8FtP3x+eZeWbmkeyEECWVCClkX0pFUrRQoYVIKuEnQihFZUtkJ3tI
9l2LrexbZC1+FCn7Lkv+n3ef4/97vbrN+d7nzp07d+49y+eccxsOOPHQYWmS
JCPKJMl03U7/ba+yZiVJ/tH1/GqSPKD6G4ok2aeWJBfo779VP1bX+1RfN0+S
9iqT1D5T3QSVx1R/hf7eS+UR0Z9RpzZ76u8J6mMTPes90SvVzzj9dr/aHKi6
d/WMHVQ/UW0+Eb1Yv/2lNufpeq/ajFf9zvr9Y/39luqP0nWY6nfQvdup1PQi
F6rNZ7p3mX7rp7rv9dxTdM++or8WfbLow0UvFD1YdDfRb4seKLqh6Ea0E91V
11zlDtFv6FlHqL8hetaboo8UPVT0El3nqs0A1R2ia6Fyp9pP1fVGla3VZjf9
3UbjmSF6DY2vrsquqrtBv1+hsobuPU3XTVX+y7uppKL31/Vz9T9TY9tb9Op6
r4PVzxPqZ23VX6HyoujvdW2tNgeoTVPd96DaPCD6Fj2nsejzRTdT/UzRD4ve
QPXrqRwo+kvd+53KfqIHq82GKi/RRs/aR+3vSjwftxaek6raTlR5XPXXqm4v
tTtbfw9Um3VUZqvN/rqur/Ks6J/0bmfp95vU/jq131vtz9HfH2i8t+jvJqq/
tOJveofoD/Xbpyo76u8d1cdHavOu6NdU5ou+RG1WqM/RanOn6Enqb7bqH9Pv
f6h+TNVjPlH3bqv6iao/Vdct1G4H/XaK6AaitxM9SqWl/r5M7RtoPjZVOUrt
f9S1n67LVX+W+rlNbeqLHqTrRrp3K913ouhNRG8t+k29S5U1rTYD9fdG+u10
0a8w5ypdNK499Xsdlff0+/H6fWPRTUSfodKCcSb+Xieo/c26ttHv66qcp743
199HshbUZo76Olj3HC56J10X6feGoseqjxZq34X1qDbddO2r+l66loXbP6/6
Q/X3UaKfY72KPlL0z/r9IZU2oj/Vs8ayDnU9W3XN1Ofuavcflab6e7TaPKt7
u+rvI0Qfp7oN1aax/t5S922l8q3G+rv+PlZj6yF6pNpsyb7lfUU3Fr2L6FfV
9g2+h9ocoevt+vtl9Xmm6K3Upo3anCx6M9EtRH+m/u7V3zupzX903Vz126v+
Ida8yvaqH6KxddFvHdXnWawvtdm16v1+jcp5eq+pmeeupdqfpDabqs22+nuG
fr9HZQvVD2C9q7wpur+uX6m8Ifo3tVtb4+hW8bfeUPWDVH+Z7nuTMan+NF0b
qc8d9Xum6xkqt4h+Sfe9xj5JzHOuUjlD4zlW7eupzZZqc4zob1Tmw2eYH9po
vC/r3ptUv7bqv1C7o3XfPuxT0VdXPbb1db1K5XXRSW4+tBTeyLeGn6mM1nPW
V7mNuVT9gex9tdlaz1lb5XG1maH6A1S/r+qvVt1FKn/oeb/pnnkaQzvVryV6
W5Ub1f4ptd1Y9OqiG6ttHZX7RZ9e87wdLvrPqt+rt+gX9Ps8lUvVzxi1eZ79
q9/PFf04PEr0tfyu8o+eO1l1u+i3k1XfRHV1+d7qZw9d79NvK9TPrNhrE0Qv
y7xe2deF7s9Vtlb7d1jHGuc2ot8SPVZ0M9FNCu+1C9X+bF3XU7lav52m65o1
r+W1SvMa+Mx7ojuI7qD6PwvzzPNU/5GeM0/XTeDtoucG3UF0e/aT6L/U/gC1
Hyv6Q9U9p+vGyB0977DcPHOR6heqNBR9oK4v6noO367ivXKSxvm6+jlX/WzG
e+l9+8HbVP9iZvl9TGJ+3VT3H6frB6ll+vu6/q7n5Iyfvabrzew9eLL6O1B/
dxZ9h+hxKl+o/Ye6dqqZ71yhtruJPlX0Wbrerr/vEf2u2rTX3+1F74YcVpmh
576va0fVd1T96qXlE7JpHdVdqXKIxvKVyuOl9/UU9be76keo/ZWi9xB9mujt
CvPPa9XmRtH7ip6k+ktVOujvZ1RfJ/6G/jkzf79Z9I+izxQ9VXTJNy3MGzfT
dTX9PUr0W4V50bmiV1PbS1SeFv2qrkl8i/HoJmp/vOpeU9lB426k+proi1Xm
0L+uF6nMFn2l3ulgleN1/3Vqd5DKq6p/SXUHqK9r9PeLov9SPyNFtxddr/S6
2VP3VNXmLNZHEXyAfae+L1d5AV2CNQ6/F70Umal+9lX7NUVPVpmn+i7wM5Ul
qu+s637q68qKS1uVmWpzmq5rqPRApuu+HmrzluiLdW2l9x0Cb2cMup6fWGbx
PfgWk3TdWW1OVN026AsawxWqf1rPmqNydcji61Wm652+z3w/976t6/sqzfXs
S+Hr6mdYyOUdC3+7TTLLRXSY7dVHS5XV9Pe7qh+gdqeqzXuijxY9QvT7rH3R
p4UsuEvtd9Z1HmPOvdfqF+bVI9XmIl131HNP0O8XiN5e9CC+v+jWooeKLnTf
/nrmqIr5SrPQGT7ILAOQ9ejIexTWkxeovj+8RvS5Fe/Rk0X/o+vfwRPax5o6
UfW9S8u130X/qrqfK+aln6oMTa0H1td1eGp+u5j7RL+NLKBv0Z+iD+Tmy7T5
DD6h+s4V63r0c73os9ETc8tZ1sSwaLNIZZDodhXv54PVZjO1WRj1V+n6CTpi
tGmgMVdL9zladeeqNFD7d+DX8LvE18uDnsWaE30G31rXS1T2UP1DelY3PWt3
vrWuT2nuuotuWfPefKXqvnnGr6wr3X+16DN1fULlMtEjdO2Lvqk5LCqWYZOY
t8TvPkTlFfY79o3KtRXvyRNUOomeo3JV6uc+ozFcllkHQDaPVNkc/VD1L7DO
RC/Xc/oVlrMH1MxLZ6ITq+1jKtPRT/ScU0vL6OnIQta+6p9I3W566LoD1O/d
ok9B5yqs59+NDqE2X6v+LtEjRG8segO1nagxbCT6Ql0n6u+z0B/UZpSuP6n+
dtao6NVEr5P6e/G+t6qcIvqIimXYxfFduH9U9H8vckZ0M9GHajzTNJ4fYgxn
x3PuUTkz9RhmRPvj4vlnRz+X6+9HRd8ueqboKaK7iX4q6HVZUxr78ci8ivX/
tTLbAHenpq+CTyL7VBYltrOYI+YHvfK40C276nob92Jf6DvcozHfX7VNtWbm
MfTRfU+qPlH7cZl1//WZK7X/QPWLqu7nUJUJet4jqe/n3hvV5tHC67SO6lZX
GZ9Y/1pP9BT12Sr3vmJPsU7rZV6rv4jeILNduVB9TNE49mBfqq+tQue/vLQd
yPNu0bPeUf2Cqudg7ZiHBchL0feIbqG2k0vzTGToEaIrorfQ89fWvf3VZpj+
vkDPbpFY1o4TvUvieemC3hbfeqzq/0isq9HmBF13VZ/NMutH90Ub1gOy+0j2
DzJLzzm69N6+AntO9JDcOtIxpeXJIyoXxXMfjfV2kq490Qt0/2+JdfExKtsl
1vluyKzDX6I+F6vNcnR73XMhvI8+VP++6hci90Q/IvpB7C09+/7M+33VmGJt
o3MeHbIMnoeNwTc6PngW/Ao9cmLq9bON2r8T9tT5qedwZeLr+TGfvfTcmsoL
alu/NGaCzAXLeCL29V263sn9iWVmn9xy83W1mZbahkW//kX1h4hulHqPfSX6
hMI4Arr7GNHb6FntquarzP3fiW1h+hnPPsuscx0Mz9HfJXoGc666W3LzwydC
n+dZe+v6ZW7d/hX9djv7VvRtqWn05LdUZoi+WNc32POiW+p6n673qlyZeI0e
oX6miJ4f7W9IjMt8m1nu76+xP613yPX7hIrnhTl5WfQdqfVwdAL2POucOaNN
C3h4Zp2xq+ofy6xrd0mM3dAfuuuo0hjCl4n1pHoV670vq/1h2J+8o+jDRR/H
/IvuI/oE0eN033YaX2/s0Mx2MnbcPOSP6H6im9ZsF/8lumHNeM6W2GJhJ+4h
+hnkvuZhHT17hcpvFfO3LTLr3OuL/iY1rnNoxd/h55j/6Wqzl/7eJ77L0tw2
6Y9q90PF+/pElX9Ut6fKm/EtLhZ9N5iC7tmbtZSZt2GX7QzvF53SNnO/POs8
vce2Ndt7o0U3F70vslX01mA9oofpnRYwL7p328xrAvtojn57BduzYn78QvBk
dIOZqXXIM3TvmSrP6+/PVT9P154V1x9VWO/dHB5SWBYzH8+mnpNt9N7rVt0G
3YU+sK8/VJmVGtfCXv845gf95xnVd6lYp34u9b0fxXiuinufEv1UYvztAXSn
xLzjyNxr9W3V358ai4PnI7P2DNn1SMgv3nF2aqyM+46Ke1nzD6XGPD+IZyEL
wD+mF8ZA4NsPq/6yimVMf2RVYjyLevj57Mz21mGJcb/ZMZ/ok7uHDtxcba5F
5lZ8vS61HsuarQX+gGz9XfSpuh6i71moPKffNwBvUP2AxNgcdukmse9vi72P
3BhUWnZQd2vUP69218N7E9up0NiwlwQvgA9g796Y2j6l/dTUNtHTenbP3PsI
m6x96MbwD+7dqWL99unUOuQ78S2uT6xnzgm9BXuke9h38I2beFZiXBO7AFnM
9eagwc/4u6naztXzl2TGBF6IcWI7f5wa42Sc1czvxnsN0b2jS7//r+p/Uun9
90thLAK5uo1+ax6ykj03PPbd36r7KzWefLv63E3PHlox7xhSMQ7MumXNHqzy
U2FcBVkE/rZ36XasG+5DbiKTkd88a0TIiP7wE/02QNe6un6LLiJ6DV1Hxh5k
P7C3lgTPWZrajgfj/Tb2J3vz99QYAfobety9QTcWPahiuf9DYVse3W/L1Lrs
MSq/ptZv0G2uQf/KfQ86ILog7dFjwVHrJNaZwYPAgm6q+Pqx6gezV8BQRN+q
b72yusrcTtbHJs6NvU/V7/vp3uv024ZVrwlkej1dr6kao7sXbEqlp8byaWb8
4DzVf1kxdqrbk88yYwljRW+WWdYgl7qBi2aW0ejO6NDgwNhWfSrGrH5KLZN5
n6wwPzw0sV3GXH4k+jv2Vmqddi09cKTKCjAI9qrKJ2ozUL8fE7yinq7d4VWq
30lz3KY0Bn2qyjTV9+Ue1XWtWSb9XvE+R75sVLV+wzz8pevfKv+Fr6r9oTXL
v0LlQpVZiW04bDx4I/rUw7F2W6WWNehm6GiPBZ0FdnFt8CR4EzxwWer9Cb21
5vuY3P2CufJe4K6fFsYZ8Hd0qLjuJb5F6rUIP/9K1+Wp7a8v1PbHqnk5PBxs
Ah54rH5fM/g5ujA6MbZCUtpvAh/qC49ReVDteqXGBtBbPlafldI+BXgz8oA5
Xx7zwpyAf1wdz0JuLIz5WSO3fk/79hXjNM+xJjPbVMzJeurjSnCgxHbwFmEL
P5NZp+il+nXB21Q3WWUn0a0zy5ejMssX6ONSvzPP/Tr1vLBnsR03CfuxKePJ
3dfnqeXNvvGO+MjwsWHfw08Zw+D4RowTP9LH8Z599dxdMvfJFVwEe2oR37pm
30BdXaeo/Cx6Y5Xr0T2Rg2rTuWafATgyePIHqv9U9d1q1rH47vjdmNel6GUq
zyemf6qa76W6jld5VPUbI9NiD1wEDoi+n9jPdbXKN8h89d+lZn/GJ4Hrjmad
Z8Ygx4j+IjAl7Kmf1H5gzT7I8zL7DdZT/b6MpbSt/TP8rGY/1lLRfWrGkr4Q
3btm7Ga9wno++uRV4LIqbTPr/PilkOHDsC1Uv6naXJHZv9FI9OXhX2iY2BbE
1oDPo1dgG/PdR2f2OayrNr9m9qneIvqX8LfejB6IPVWzf/R70QNq9oMemVr/
QPfAr4h+g27Thu+qcl1iPg3e8B196t5BNeOSR+LHzKyHoP+g++Br+1Zt+tXs
V5uS2T+zpdpcnNmPgW9rH9ZLZlxomuoG5/aR4WtYHrzxH+YuN/88P7OPC9N7
TGYfkf4lYzP70HL4Ibw09zxcktmfhiyDZy9JzLeHFvaxMYZzM/tJUHkXaMzt
atahZ6jUU5sfVb9VyEpk0L2qPyc3NrJRZlsOOT4hsz+wnuof0HVCbj/ClZn9
To357pl9R1shB/Wso2v2eb8jum3N+nd77M7MNvV9+ruifn4RPUJj/lB0c75B
xbIVW3uU6herflfR12X2rdHmV3SBmnHk30QPrhmDZsLQn9Cd8DuDTQ4Jfaax
yqbsqdS6F/pMnhs7xh46X8/aROVMtV+G7l0zNvpa4JbojbdktgNaJcYjt6gY
kwTDBPfFp7B5Zp0Nfvus6jbNbdfgfwcLxw++adgL2I9lal0N++7rzP7ey9Wm
F7ZYZpvxq8x+48mJ/f3bwwNE10ltc2JvLszs82H8eWGdtqfor7Epasb0h4L3
sp7g7YH5g81eA5ZbeF98o/Z9a/ZDY4NfpLJtxZjKgthHTVmrmX0Bd+j9nlfp
qr//0b0n694bdO9f6IM1+9gOCZkFzs8iPQX7kO+v639UpkJX7aN4UE0OCx4I
Vr9S/ZxUs+5yqZ7zNN9Mz/pb9cNr9uetHnrOM2pft2rd51nRv6vNCTXj/jeF
fYdNtH7IL+QyeDg4Otj4l2p/RM34OJg5eDa4NDg5mD2Y+Tjd06RiHBtfElg4
ePXNme3CHRPLT+Q2OuQKdNWafQzfYTfU7Hf/Q/TQmv0TYO/IfeT/n+jONccr
HJU6/gGbqE9muQhPHJBaTqIzDNFcTQaHqhobAXNE78WXBeaIjopuCT66PHRh
dOLVVc4ujQuACbySmi8tQ/dTXfea7f87VU7Iff9i1feoObYDPjO9dF8XoR9W
rWOfGWOAt9TXfSfmxp7RObAr4b/dM+MXYBf7YN+D7SCHVaqxL4ar71pmGwgs
EZsFWxtbDCyGNr1T4y/oMMQ7vBb7aNfUWCpYd90s4lxEb6Xn9FZ5VXSP1BgB
uBA6ONgufA89kvlAx763NLYLrrtF1X5p9EZsenRy7PrP9fthNcfWoJ/jH4QX
L6tYn/4CnlY4Noa+0XXxkeODXqK6njXHx2xS9Z54Fx2gYgx6sejx8IrqKjUu
GSW6YdU+8fpV77MF6Oesb5X34S1V76f3RA/Xc3qUlmvfF463YW1MUj/T1WbN
aHNHYXwPG+Xn1O/bPfV8Mj9fVaznszZ+0H2/Vq2Lov/0Kayvrov9UTWWjl4/
tWLMecPUujt6Gvo/mAV4Bd8Avy68qEHwZ+xN/ESvV+2TmpYZz4P/vy26b+y1
KfF90e1fUn1P1Q9U/XupfSfU/1HYP4jv4+HMsR4HoMem9otQ/x0+lNL+lANS
2+fY5vg38HPAt1cUjs/BF7Ol2h+e28c8S30eVDWPBeMdUNov+E1uHI8xH6e6
21SuwSZQ+8Ghj30o+tiqfZTzwciqjsvqHGsb/zi+18Px91d9P3hS/8R+aXzW
+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
         "]], 
        Polygon3DBox[CompressedData["
1:eJw1mwn4FlMbxmfeOTPzZkspyoekFElkjXZJpURpQYuQEilUWiStSGkvFVGW
ZIlC1o9SIvu+79n3lPSR5bt/7nFd/3O9557nzPxnO8+5n/t5pubZgzsPKkVR
9HwSRUG/a7Mo6pNH0ZA4ijK1jurPU6si+0LhV2SfKZwKj9T4N4RvLkfRnWkU
HSz7vcJNZK+ngx4l+3LhBcJ7aPw24XeEr9X4HTX+cI3/QL+nyT5B4xvI/rPw
eNkf0sk0Ez5B+HK1Stp/hsansrVTWyncRvay9j1WbX/t30/223X864Sryv6z
7Ks4X40v6Rh/Cp+u3yvVDpL9cuEF+h0nvL9+DxQ+Vv3L1P7S8S7U8fZSv6va
dcJVuH6d11XC9TX+AOE3OJa2TdNvZe3/nP7fBv3/kbJVVDtO20er7aTxU4Rn
y95I5zNB2+poWyWNPZd7rOOfrf2nqj9fbXfZBmj8ptTPY7rsTWS/T/vXFd4i
23bhs9SfpON10bgZGnOe8AC1BeqfJftrOreWsnUWrqd9KqjfQq2T8FTZ79Dx
jsl977YIHybbMLUvZG/J+ct+kuxnCy+XfVfhfWXvrna9ttUXHiz7XepfJ/tb
wicKdxO+XvgojRul9hvnpuNdybXofEdq2yZt20G/rTheMb6CbA3Lfk48nz00
/ny1xbJP0P778b6o3SR8kexN9f+WavyD2naf8Lu63uMZI/thGv+++gtln8Vz
kv1ujb9eeLbwr8J3Ce+v42/S2K3cL56X7HfrOHsLl2Rfrf4atT7C3/K/Zb+J
8xZ+mfdF+DbZdxf+XHiR8EL9HitcT8duo9Ze5zNG+BYdbz/hH/T/vhPeXf0T
1I6T/TJt20H92mo/qf+77A9q/I063vW8k8J3FvPrN/V/UTtC24erfa3922mf
2uqfobZU+ArZd1G/ntqnsrVW+1H9xTreEv22k30vHWu42mqNf174V22fIPsj
up7OwlVka63WXPZR2n+6+gvVqun9HCS8WOdzjfAvsu+q8V3Uv1pts/C3wm1l
n6rjfa/jrRV+X/gw2SvK3lj7N9D/u0jtPeHqwrup30FtqHBv4auK443Grv1T
9U9RGyZ8puxl3hW1DTqfvtxP7XsSz0T2zdwfjW2ktq9wNa5P53Gi7AOE22v/
R3kfZK+u/SPhN4VvEN5HuIHw9xrbUvhQjW+kIUu0f3vOWfh94X1lO1ltoPAN
Gn+b9mske4Ni/BzZFqnV0PZp+FT1O6ldyvwUfl1jTxUeJVxD4xvwv9R2EG4o
e2/mv9r9wotk31nXeqnabjqPF4Ub6vdC2V+VvS7Xq/O/Ff+obbcI19fvuWrr
Zb+R+azxg4RfF27NfNH42zT+Pm07Uvb/Ch+g/79V/ZLaTtp+JnNL448Fy1aH
56t+rLar+geq/ar+jlyP9m8ovCO+QfhQ7Xux2kfC+wm31/8fLPyWcBf9/zrq
n6P2qPDdwgeo31ftceHHhLfjr3V+T2i/04Vv1vEv1/Fflr2O8D3CZ/COCB8p
/KzG19TYW9RY1z4UvkH7z2O78H80/hDhD/Q8LhPeh/dR+GPWAeGBuf3P89p/
X/y/7IcKfyj7aNlz4dNle0G4P3OQeST8iPApwltZGzT+UeFOwq1lW6V+B/bV
8Wpo/8Nl/0TbxmvbFI1/MHitPUzbktRzryw8TK2D+o9re1eePT6BdVb7r9G2
01j/dLwGwi8KnydcU/hI4Y3CE4X/Zj7gH4U7Cv/J/Cr7nE4qzr8t/k64pXCk
/Tuy/gqfXFwP17dc+Djh34RP5H0Rbhv5fNoL35/Yn+yr/Y8Q/lR4gvB+wkcJ
fyY8CX8ufK6O967wcOGzc6/n/w2+vj76fUO2S2TbW7hbat+7a+w1rZv6z/47
17Vtfx3vaO3/pbZdo22HCzcX/lX4ZuGxGv8/9ZeyFuFfZWuq9jN8hvnD+6Qx
vwgvZv0Tbib7VuElvC/qv6pz2Fn9AzXu5txrOGt3XbX3ZLtUuJb6/9GYuuoP
1bhv4CvCN2r8Tfj0xGOu0/EW5+Yb8I4lhR3u8Q8H0f6NNeY79WcxH4SPFf5W
eCbrCf4ffyo8W/hq3nPeMfWb6fqayN5CdsjcSviE/sdG9ZvKdoT2qVw2//gK
PiL7X6z/XGMwn/la45urv1j2w2RvLPuVwn8LrxC+Fm4g3Fxjj9K2g2UfJbxJ
/QU8T3x58Nr7kJ7X69q+QXgf4XFqbTS+JfxP256E3wlPV38H1ljhNcKtZV+q
/Y4R3qLjtRG+S7iF8GbhE+Cbws2F7028FrfV7/HCDyRe2zro90TWd/XvxscK
Xym8VP3b4T88P53P47r3S8redoq2Pan/P074VuGOwj/AG4r3m/f9I/ykznW2
8H6R/eYDrLmJ/eesxL7mONZH3kn17wnmVqxhM4WnJ+YWzfUbB3OXnurfr20P
M//VegnfKnx/cfzTheeynqg/Fw5XHGN2gVsm5jPL4X463xna1lTbXtJvdeGr
1K8q+0PF8XsnficW4B/Vr4+v0u8D2n+Mxs/X9uOFbxO+U+0Y9Z+LzPO5n10S
8/1Jsi1lzcL/xeYpi3hmifnKrbqfd8HRhfcUvqGwn1D8T9Za+OM1sdfcKxJz
6Sb6HcE90P25Wr+80p/DR/D3ZfuAc5nfudf/Z4L9xYuynyb8dGK+lqnfqWwf
2q3wP73K9t/4y2qFP8J/DhCuKtxD9ueE+0EJhE8Wfrjw7/j/U4VXF/4XfnhK
2f4ff7+7cM+y4ynWh+cL/sh6AJ/KhDuzngl3h58JdxdeL3xm4c9ZX/DvrHeV
dC9+Z+3TtS1RGyH8czB3+Vbv05fwUO1/o8YfqvFdtf9xwtU05lX4mPBC9fdQ
e0X4At7/YG72PfO/WCs3qt9Tx7wULil8nPpfws+1fxcdb62O35P1Q7Y/1M6Q
vQd8QPausq+TvZfsX/HewI+FG7Jmyd5N+Cnh3pG50OzccwVOVFH2W/B/xGPa
dqv6/YkfE2+bpf7BauWSYyj4b1Ph+iXHmMRDzRij/srY3InxxDpwqEPwDcId
1W+emqs8rn1CbM5CLLWjWhI7piKWzHNzc2LK5nDbzFwOTne48Af4YLhPyfFx
onZByZwS7nNIbu4GB3pVY6fwDqlfO/a51FebGPucXg+Olw4Vfic4VoVvXhI7
Zm2l/mNwKuKZkmOFqrljRWIG+BpjsD0Av1N/W2pfyD7EG421ra7638eON37X
tuOF18eOr7YLdxB+Vrid8B+80yWfM7HLQbljL2IY+F174TPUr1Ayn+8g3Ef9
t2LHUy24B8I/Cj/B/+J5Cz8Um/vvmTu2JAaAD2/SmJrqL4vtL0Zr2wvCP0SO
h1Zo22vCK2Sfo/uzLDPfhffCBceovVIyJ7xQ/ZmyX6V9lwmPE56cFbFXyfy1
J/6Gdyc2F78gc2wBJ8efvCR8jvA7wl2FLxLeB18jvItwL7Wp6q/S/l/oHMbq
nB7QsztEYy7G/xKzqb+y5PhvvNqHkNHifOCYcMsPSo6/emn8WvU/YX4Te+SO
JdYQExIbcD+0+7qS44O3NX5jyXOC2KNG7tiNGIRY58jcsQUxD7Hd3rm1m9XF
8UaqnSr8VMnnxv3hXDjHuvCZ3HwcXn4Qa0Xm+IE44j/EXmqPCL8d28b5cSzG
vKgx1XQ/JmmuVokcP/7Gmi/bWo2fW/aawVrxi+7Zh7LNFa6cWGOYQSyhbSXW
xsTx5lbhSP2/S9Z2iJfOja3xdFf/ocxjx5ccb0VquwjvnHh+4UPwHegwT6v/
jFpf4XPUVqo/IvNazJpKrPBa7vWbdfySwl9xrFUlx5NoGGgXe5Ucj/6k/X9W
f2kRr05W21JyDIw+9bPs29RfHnstvDAzV2RNnK//d4e2tZHtB53rvLLj0cka
34m1NveazlrOmthZ/XvUmqk/UmNuhxvmvpYnUq/VrMf4btZstDf0tfNja3C9
1Z+W+15OKzmWB7NWE9OjP23R+W2X7feStagpubkFmtTpBcZ2ZeFfJ+SO74jz
nmJua/+zWH/V9tD59c/8LkxIrD08mpufwdPQYngG3Hu4TLfcHOT44nmemZuT
wcU431vgxtrWVXi5xq9Wf41at8TbBjFerTtrBf4xN8eD252sdp/696u1SvyM
n1D/OtbkxBzxMZ4nMVPic0TbZAw2uM+D6l+RmSvBYdBm2EYf7vOI+t+ljkVP
1LaXhatr/AXCo4Tv0PhXcvf7oxkJ95N9N9nHJZ4752XmaswhuNuAzNoSHG59
cX/vhGsLv5g75sW9DE8cy6/LzRfhpj2Yq5nPhRh5mewv5R67n/7/w8X5tkvM
odn3BjhU4mOgdT2U2wbPDsJ7ql2b+B0mNiJGgtPuBd9JfU1cS+WCf1xcNr+H
758qfJFwhYLvdy34yY6FPtRZeLDsZeHVwh2FBwmnxNjCZxBfCe8qvCGyL0MP
2Rbs037g3Q3mP6/JfrrwENkrCj8j3EN4mHAl4kjhJZn1O3gm/PJv/VZJPZf3
1v06TfZLZN9F25+WfRVcCj0mtmb0cGb/34QYSfYviveSd/FitZNkv1D2wL1m
TUodCxOL8M41KOIn4lfisbeCYzO02UPQn2Qfqf13L/jbbmXz8+tSv8O3ZdYr
75L9J9kf0++evIexNRz4y+Wyx9o2EJ+fWV9Hl0CPmKztV6fWjtAUq5Qd/9xc
zIFDNb638NeJ49lzON+y+ST88jvhEcJVhV+OrAWiv1yeWBNE5+V+ouXhM9Eq
D08dS6BZojU3TK31oDm/r30vEf6k5PwA/SFqn5a8Da3w4NTaL5rhUPXf0D41
E49hbWGNgcfiAyemRWybOF5Hi743WOtFkyaX0U/4vcQ5jUmpNXLuP/ug9ZMv
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
llnP4RsiaquoscVfk3uktoV6yH0j527/D1aJe0U=
         "]], 
        Polygon3DBox[CompressedData["
1:eJwt1nm0jVUUAPBPl4fyUIZWycocTawS0SItKkshlHkulEQIiWUeypyhZHgy
RQMpGRap1agoTaYic2UoQvGUod/uvj/2vWf/zj7nu990zi3duVfTnpclSfKC
yCMOZiTJZXmTZGauJMnInSRHRXM2T8zWLiA+UXe7fJYYIj+WSpJprJZ8rhjL
zrCFrKK5MsU1Jl/P/zbvYHkPdRXl3flXfsB89qoYJh8qyhnfVn5lviRpIm8q
xqkbyoaIw+ZeZnwP3shcV6j7Q35cfKHvITXfiRvk48zVz9jL1dyqdrz+7XyH
KMg6so36u5orm7U27gdRU3uRsc/ry6euiLq+xnbkG8XbapaLk2yysVNEQTV5
1X6q/zPRM66rPFtfc+0H2fsiPyuZke7fJN8sMlge1oU1j+ssOskL8XPa/4g9
+nLLvzVfAe3X2RuijboC/K+4xmKnvjJschwjztV59GcV5FNFH7abDWY3yV8S
A9gBNprdKJ8h+rP9bBSrJJ8u+rF9bCQrK58iesUx2QBWSj5R9GDb2DOstHyS
eIptj/vB6rh2hf3m6s6lhqjsOheVn9C+S/9C34vEZtHF2DJx3bUN///aPS+e
YN+l0texiLErzVk5nk8+U23VeG7FUPnv6qbrmy/vLq6O554t1ldHXsz4dfGc
irX6mrIL8S7oLya2sOx4VsQ6eUpdP89zfXlWXAeWS6xUd1TfcHaPfIFjVGU/
Rj2rkjt93Dj+TvYMq8zGsuLsDBvJGrDlrC47wAazGuxlVoEdYkPYXWw2u4kd
ZyNYPbaE1WSt4512bq+ykvEssLWshXMb4ZrPVfceXy9fF++hOZam0vdgh3Zf
tbfqH82Ksc7ylPkWsFJiL9ui7nFeXj5KnWZSzceJOEY8u2wpu4MdZ8PZObaE
fWVsV16WDWO+ks/ln4m18Z6xeqyEfIzoFu+4MT3Y1767sXJsRCq9hv3rYxRr
zN5jDeJ9Z33YLWwkKxr3I94Dv2WVa9BJ/8/xrPsexO/UfkldeXX72HOsOpvB
yrEjbBirw+az21kz+UXzvcKKi29YfjZatJZ/pK41e0Cere5Flik+ZXeyP9lI
+Xl1y1gDdo5NjXUq1pNYP9g/bJq8kPicNWT/sunywvGOsCbsPHtZXlR8zfb6
zQN5Nfl0xyjLaspPqRvNLrK3WW12mr0Qz7hYzVrGDXXPs+Ql4r2WtmK52Dz5
dfFes12OMYDfJp9ovutYDflJ841iF9hy1oJdYnPZtWIrq8v+ZhPkecUGdjf7
i42T5xZr2L3sLJsU66j4kNVjZ9hEeT7xATvlt+xg98c4x23ETrLt7L44L9aQ
fcOeML4CG8N0JwXkhzTasW9T6WftANufkb43cY+OxHnHficez6l7St/18gni
yTivVHrPuFx+0Hxt47lgT7JM9gtrn7OGxdjYY35lnXLWzhhbnB1hj+WssbGO
F2W/sc4562msscXYYfZoznofa+xi9kjsq57xRs7zrXje2CeiVuwf6tawFWqe
ZTezOWyq2o/ZHLaInWXvsEz3u0P8H7DuFZafjfdfvke8FuujuoNhsUeI11n1
+K/ge6n5Dmkf4xNibVa7KvYKftHvG8Te1bdKPjQjvf7EOjSLL2Ffsg36x8tv
45Xlv/NB7JQ8K9ZT1pu9Y7526nbrq8L+YIO1T6ubpy4WqD2sWbxXrD3Kxfay
h+O9Yh2S9H68j7Vgm1LpvfkX825ltWLvZbWT9P7+I2sYz14qvdefZjtZfbaW
NWa/sm2sNnuT3c2+Z70cpxKbxAqybax33A82nBVhl2KNMrZp3EPWjl1ku9hD
7GPWhl2I82ZN4j9E/I+K9VR+VPRlh9lkttX8T8d/GNeqbfyueJfkx8RA7RPq
Zqq7Qt0B1ib2QNadvSv/XlRlWan0nvuWulZsjPkam29FrPG+f2KNYm51LdSt
Vtc+3l91zfSv1JcR7xZrqb1ZXVd1V+VL/1+J/ygjYk+MfVnNGpGlvVDdHfr+
A265cqM=
         "]]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
      Line3DBox[{894, 1479, 1058, 2216, 895, 1422, 1067, 914, 1430, 2204, 
       1076, 926, 2115, 1085, 938, 2118, 1094, 950, 2125, 1105, 963, 2133, 
       1116, 975, 1480, 1127, 2217, 987, 1445, 1137, 997, 1453, 2211, 1145, 
       1007, 2144, 1153, 1017, 2149, 1161, 1027, 2156, 1170, 1038, 2162, 1181,
        1050}], 
      Line3DBox[{896, 1059, 2070, 897, 1068, 2076, 915, 1077, 927, 2116, 1086,
        939, 2119, 1095, 951, 2126, 1106, 964, 2134, 1117, 976, 1128, 2095, 
       988, 1138, 2103, 998, 1146, 1008, 2145, 1154, 1018, 2150, 1162, 1028, 
       2157, 1171, 1039, 2163, 1182, 1051}], 
      Line3DBox[{898, 1060, 2071, 899, 1069, 2077, 916, 1078, 2083, 928, 1087,
        940, 2120, 1096, 952, 2127, 1107, 965, 2135, 1118, 977, 1129, 2096, 
       989, 1410, 1411, 2104, 999, 1238, 1239, 2109, 1009, 1247, 1248, 1019, 
       2151, 1466, 1467, 1029, 2158, 1172, 1040, 2164, 1183, 1052}], 
      Line3DBox[{900, 1061, 2072, 901, 1070, 2078, 917, 1079, 2084, 929, 1088,
        2089, 941, 1097, 953, 2128, 1108, 966, 2136, 1220, 1221, 978, 1226, 
       1227, 2097, 1369, 1414, 1415, 1232, 1412, 1233, 2105, 1413, 1289, 1344,
        1345, 1234, 1240, 1235, 1404, 1346, 1290, 1347, 1348, 1241, 1249, 
       1242, 1378, 1469, 1252, 1468, 1253, 1421, 2200, 1261, 1262, 1041, 2165,
        1184, 1053}], 
      Line3DBox[{902, 1062, 2073, 903, 1071, 2079, 918, 1080, 2085, 930, 1089,
        2090, 942, 1098, 2092, 954, 1215, 1216, 1366, 2195, 809, 1286, 581, 
       1287, 582, 1228, 512, 1863, 587, 459, 518, 517, 595, 464, 523, 1841, 
       521, 601, 468, 525, 524, 606, 471, 2185, 1254, 611, 1293, 612, 1263, 
       1256, 1398, 2197, 1268, 1269, 1054}], Line3DBox[CompressedData["
1:eJwNzbsvg3EYBeC3qSYS/ohWKQbUZRGqk+vIQCQuwYwWIWnahaQ1mG06lNna
2iw2m43dqktnz/DknPN78+XLHJ1tniYiYotGMuK5L6LSH/Ei7+28TNuP+rye
01v6UyqiqTflq912u7U7MuntTd7Z73LRXqBAmm0yfLhNynMmWGKIHbJ8uudl
iSmKDLPLCF/ul7LuPxeyzLe3Afng7Uff0/c55IBBVqiyzCo5jhnl1zcz8opp
1hjjhHH+3OfkNbPUWGeDnluXG/0fgqMlmw==
       "]], 
      Line3DBox[{8, 349, 1774, 23, 1497, 38, 1506, 53, 1515, 841, 68, 1527, 
       265, 83, 661, 274, 727, 98, 1553, 669, 283, 731, 113, 292, 1745, 128, 
       868, 1991, 143, 1583, 158, 1592, 173, 1602, 406, 188, 702, 330, 745, 
       203, 1629, 706, 338, 748, 218}], 
      Line3DBox[{354, 237, 1963, 826, 803, 2081, 922, 252, 2087, 934, 2117, 
       261, 946, 2122, 1101, 958, 2130, 1111, 970, 2139, 1122, 982, 1133, 
       2100, 993, 1142, 2107, 1003, 1150, 2110, 1013, 1158, 1023, 2154, 1166, 
       1033, 2160, 1176, 1045, 2168, 344, 416}], 
      Line3DBox[{908, 1193, 1194, 2074, 909, 1074, 2082, 923, 1083, 2088, 935,
        1092, 2091, 947, 2123, 1102, 959, 2131, 1112, 971, 2140, 1123, 983, 
       1134, 2101, 994, 1143, 2108, 1004, 1151, 2111, 1014, 1159, 2112, 1024, 
       1167, 1034, 2161, 1177, 1046, 2169, 1273, 1274, 1297}], 
      Line3DBox[{910, 1065, 2075, 911, 1425, 2202, 1426, 924, 1433, 2205, 
       1434, 936, 1440, 2208, 1441, 948, 1103, 2093, 960, 1113, 972, 2141, 
       1124, 984, 1135, 2102, 995, 1448, 1449, 1005, 1456, 2212, 1457, 1015, 
       1461, 2214, 1462, 1025, 1168, 2113, 1035, 1178, 1047, 2170, 1186, 
       1056}], Line3DBox[{912, 1195, 2172, 1196, 1358, 1428, 1429, 1427, 2203,
        1200, 1359, 1436, 1437, 1435, 2206, 1203, 1363, 1443, 1444, 2177, 
       1442, 1206, 1419, 1213, 2182, 1214, 961, 1114, 2094, 973, 1125, 985, 
       1230, 1231, 1371, 1451, 1452, 1450, 2210, 1237, 1372, 1459, 1460, 1458,
        2213, 1245, 1377, 1464, 1465, 1463, 1250, 1420, 1259, 2188, 1260, 
       1036, 1179, 2114, 1048, 1275, 1276, 1277}], 
      Line3DBox[{1049, 1180, 1267, 1037, 1169, 2155, 1026, 1160, 2186, 1251, 
       1016, 1152, 2184, 1246, 1006, 1144, 1455, 1454, 1478, 1477, 996, 1136, 
       2209, 1447, 1446, 1476, 1475, 986, 1126, 1225, 974, 1115, 2132, 962, 
       1104, 2124, 949, 1093, 2178, 1207, 937, 1084, 2176, 1204, 925, 1075, 
       1432, 2174, 1431, 1474, 1473, 913, 1066, 2201, 1424, 1423, 1472, 1471, 
       893, 1057, 1187, 1278}], Line3DBox[CompressedData["
1:eJwV0C1Ig2EYheFH/GFJwfmvc5gEZ1mwGFenoMMZHQwsolswicEwBKcwi8qq
IJoEDSbBYNFuN89FszCvL9yc+5zn/Ra2UK2Xan0RsY3sQMQtioMRKxjBMnaR
w6jbNZb4MFqpiK4+hIsE/Uf+9Uc0ZFX/5cd8h3f4IX/gb77/1vf0T3zxikzZ
s5jHh61sy/B3OSfLmMWrW9FW5zNJ59Py1G9vySk8eVOw1/gkXviN+yYvYQN3
3qzaT+zPsmk7Q9ue1w/4ldu+fNQn5DrGce7Nou3S/UgfQ09Py7Xk/8K9/g/l
/ifs
       "]], 
      Line3DBox[{710, 485, 1296, 1271, 2166, 1043, 1174, 1266, 1031, 1164, 
       2152, 1021, 1156, 2147, 1011, 1148, 2143, 1001, 1140, 991, 2098, 1131, 
       980, 1120, 1223, 2137, 968, 814, 1285, 573, 956, 571, 1284, 2192, 439, 
       653, 438, 499, 1831, 433, 645, 432, 1828, 495, 430, 639, 429, 1850, 
       549, 425, 630, 1873, 424, 1280, 490, 715}], 
      Line3DBox[{1192, 1387, 1191, 1386, 1064, 2194, 907, 1418, 1198, 1407, 
       1408, 2199, 1409, 921, 1334, 1402, 1199, 1281, 2173, 1335, 1337, 1336, 
       933, 1338, 1403, 1202, 2193, 1282, 1091, 945, 2121, 1212, 1100, 957, 
       2129, 1219, 1110, 969, 2138, 1121, 981, 1132, 2099, 992, 1141, 2106, 
       1002, 1149, 1012, 2148, 1157, 1022, 2153, 1165, 1032, 2159, 1175, 1044,
        2167, 1272, 1382, 1383, 1384, 1385}]}, {
      Line3DBox[{1482, 1696, 1930, 1057, 1481, 1997, 1998, 2216, 1637, 1483, 
       2070, 1638, 1484, 2071, 1639, 1485, 2072, 1640, 1486, 2073, 1641, 1487,
        2171, 1697, 1642, 1774, 1846, 1847, 1775, 1797, 1872, 2001, 2191, 
       1926, 1844, 1848, 1845, 1776, 1798, 1873, 1643, 1929, 1927, 1928, 1876,
        2194, 1644, 1916, 1700, 1963, 1645, 1488, 2052, 2074, 1646, 1489, 
       2075, 1647, 1490, 2172, 1701, 1877, 1648, 1702}], 
      Line3DBox[{1491, 1875, 1943, 1703, 1874, 1966, 1967, 2201, 1965, 1964, 
       1994, 1067, 1492, 2076, 1649, 1493, 2077, 1650, 1494, 2078, 1651, 1495,
        2079, 1652, 1496, 2080, 1653, 1497, 1698, 1917, 1918, 1919, 2196, 
       1704, 1825, 1826, 1699, 1851, 1799, 1850, 1800, 1777, 1849, 1705, 1778,
        2199, 1952, 1953, 1951, 1950, 2081, 1654, 1498, 2082, 1655, 1499, 
       2202, 1968, 1656, 1969, 2203, 1708, 1881, 1931, 1944, 1932, 1779}], 
      Line3DBox[{1500, 1880, 1945, 1709, 1878, 1972, 2174, 2067, 1971, 1970, 
       2002, 2204, 1501, 1077, 1502, 2083, 1657, 1503, 2084, 1658, 1504, 2085,
        1659, 1505, 2086, 1660, 1506, 1710, 1882, 2003, 2175, 1711, 1852, 
       1706, 1853, 1801, 1828, 1802, 1712, 1827, 1829, 1707, 1856, 2064, 2173,
        1855, 1780, 1715, 2087, 1661, 1507, 2088, 1662, 1508, 2205, 1973, 
       1663, 1974, 2206, 1718, 1886, 1934, 1946, 1935, 1781}], 
      Line3DBox[{1520, 1888, 1730, 1887, 1729, 2177, 2068, 1519, 1979, 1978, 
       2208, 1518, 1666, 2091, 1517, 1728, 2117, 1727, 1516, 1857, 2193, 1717,
        1933, 1716, 1806, 1885, 1803, 1831, 1714, 1854, 1713, 1830, 1804, 
       1884, 2065, 2198, 1947, 1722, 1883, 1721, 1977, 1515, 1976, 1975, 2207,
        1514, 1665, 2090, 1513, 1664, 2089, 1512, 1087, 1511, 2116, 2005, 
       1510, 2115, 2004, 1509, 2176, 1720, 1879, 1719, 1936, 1782}], 
      Line3DBox[{1532, 1992, 1738, 1959, 1737, 2182, 1531, 1668, 2093, 1530, 
       2123, 2010, 1529, 2122, 2009, 1528, 2053, 2121, 1890, 1736, 1891, 1892,
        1807, 2192, 1726, 1860, 1725, 1833, 1808, 1889, 2181, 1805, 1832, 
       1724, 1859, 1723, 1858, 1527, 1734, 1733, 2179, 1526, 1667, 2092, 1525,
        1097, 1524, 2120, 2008, 1523, 2119, 2007, 1522, 2118, 2006, 1521, 
       2178, 1732, 1731, 1783}], 
      Line3DBox[{1534, 2011, 2124, 1533, 2012, 2125, 1535, 2013, 2126, 1536, 
       2014, 2127, 1537, 2015, 2128, 1538, 1215, 1739, 1539, 2180, 1735, 1784,
        443, 661, 444, 569, 442, 1365, 663, 447, 771, 573, 1540, 1740, 2129, 
       2054, 1541, 2016, 2130, 1542, 2017, 2131, 1543, 1113, 1544, 2094, 1669,
        1545}], 
      Line3DBox[{106, 974, 107, 975, 108, 976, 109, 977, 110, 978, 111, 1287, 
       382, 668, 112, 1342, 584, 383, 670, 113, 385, 979, 114, 980, 115, 981, 
       116, 982, 117, 983, 118, 984, 119, 985, 120}], 
      Line3DBox[{1547, 2018, 2132, 1546, 2019, 2133, 1548, 2020, 2134, 1549, 
       2021, 2135, 1550, 2055, 2136, 1741, 1551, 1955, 2195, 1956, 1895, 1897,
        1896, 1552, 1312, 1861, 1812, 1785, 1810, 1893, 1809, 1553, 1813, 
       1862, 1814, 1786, 1811, 1894, 1310, 1554, 1742, 1920, 2137, 2056, 1555,
        2022, 2138, 1556, 2023, 2139, 1557, 2024, 2140, 1558, 2025, 2141, 
       1559, 1125, 1560}], 
      Line3DBox[{1562, 1744, 1937, 1126, 1561, 1999, 2000, 2217, 1670, 1563, 
       2095, 1671, 1564, 2096, 1672, 1565, 2057, 2097, 1900, 1921, 1673, 1922,
        1834, 1863, 1835, 1787, 1815, 1898, 1674, 1923, 1327, 1864, 1836, 
       1788, 1865, 1675, 1745, 1743, 1996, 1130, 1566, 2098, 1676, 1567, 2099,
        1677, 1568, 2100, 1678, 1569, 2101, 1679, 1570, 2102, 1680, 1571, 
       1231, 1901, 1681, 1789}], 
      Line3DBox[{1572, 674, 1899, 849, 2209, 1981, 1980, 1995, 1137, 1573, 
       2103, 1682, 1574, 2066, 2104, 1683, 1954, 808, 2105, 1790, 516, 735, 
       517, 596, 461, 1746, 2183, 737, 1924, 869, 1991, 1990, 2026, 2215, 
       1575, 1140, 1576, 2106, 1684, 1577, 2107, 1685, 1578, 2108, 1686, 1579,
        1449, 1687, 1982, 2210, 1748, 1904, 776, 777}], 
      Line3DBox[{1580, 1903, 1948, 1749, 1902, 1985, 1455, 1984, 1983, 2027, 
       2211, 1581, 1146, 1582, 2058, 2109, 1688, 1750, 1866, 1235, 1938, 1837,
        1840, 1838, 1751, 1839, 1841, 1747, 1867, 1816, 1817, 1791, 2189, 
       1752, 1905, 1689, 1583, 2028, 2142, 1584, 2029, 2143, 1585, 1149, 1586,
        2110, 1690, 1587, 2111, 1691, 1588, 2212, 1986, 1692, 1987, 2213, 
       1753, 1906, 1939, 1949, 1940, 1792}], 
      Line3DBox[{399, 310, 2184, 1589, 2030, 2144, 1590, 2031, 2145, 1591}], 
      Line3DBox[{403, 317, 1463, 861, 860, 2214, 1597, 1693, 2112, 1596, 1158,
        1595, 2148, 2034, 1594, 2147, 2033, 1593, 2146, 2032, 1592, 314, 1292,
        400, 605, 308, 525, 313, 306, 1249, 312, 311}], 
      Line3DBox[{1609, 1993, 1765, 1960, 1764, 2188, 1608, 1694, 2113, 1607, 
       1167, 1606, 2154, 2039, 1605, 2153, 2038, 1604, 2152, 2037, 1603, 2187,
        1762, 1761, 1602, 1869, 1757, 1941, 1756, 1843, 1319, 1910, 1818, 
       1842, 1755, 1868, 1754, 2185, 1819, 1909, 1908, 1760, 1907, 1252, 1989,
        1601, 1988, 2151, 2069, 1600, 2150, 2036, 1599, 2149, 2035, 1598, 
       2186, 1759, 1758, 1793}], 
      Line3DBox[{1611, 2040, 2155, 1610, 2041, 2156, 1612, 2042, 2157, 1613, 
       2043, 2158, 1614, 2059, 2200, 1961, 876, 1615, 612, 613, 474, 701, 
       1380, 477, 616, 476, 702, 478, 1794, 1763, 2190, 1616, 1766, 1266, 
       1617, 2044, 2159, 1618, 2045, 2160, 1619, 2046, 2161, 1620, 1178, 1621,
        2114, 1695, 1622}], 
      Line3DBox[{1636, 1773, 1275, 1635, 2170, 2051, 1634, 1772, 2169, 2063, 
       1633, 1771, 2168, 1770, 1632, 2062, 2167, 1769, 1631, 2061, 2166, 1913,
        1915, 1914, 1630, 1323, 1912, 1822, 1796, 1824, 1871, 1823, 1629, 
       1820, 1911, 1821, 1795, 1870, 1942, 1353, 1628, 1957, 1962, 1958, 1925,
        2197, 2060, 1627, 2165, 2050, 1626, 2164, 2049, 1625, 2163, 2048, 
       1624, 2162, 2047, 1623, 1267, 1767, 1768}]}}},
   VertexNormals->CompressedData["
1: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
ntTRvqZPx/lHufemT7Jx67ZUAcdPucB7erniFksE5WIDfdLD2G6YwPdemwk2
vlQ66XlAz9E60vP4OiqBh/Q8ZAtGfiK9hFITXLI+OzLRrgkZpJdQqbsy7D9v
FtZUHv6wWrwcN35MeHeyg44bWF2ipPfwXZL65fPlAzjMEXUuyaEFi6JDS6+I
VuD5iE2mpD/xm9PKC7+tBkFPpauW9CE2y2pxKqxvQjvmi1X/HDsx+uWVKdLP
IJsu5Ev6GU2VzuiSfoYLeeFJLSZ09L5QVU/6Fo8pr20JuNMBIcLHJ8dpdKQG
mnLYnymH3uM/u12ciMPZ8mnfiM8FN+icFRknuYi4/yzuMwsf75MrJj2GaeHn
RzQC03Gm8Odu0mNYUHaEuz1mBDn8v7QI+ZdigaZs3MtVg3jfwzTGIXQUz55k
xoeF9KOfCev68el8/Bt3djxTsATUXhalkx5GtT/Cd0gPwzLz7ydciCdVV50o
YhNPrkye/8UIsoYrew4Fkj6Hf39+K5M+x1jx55akz+Flyr8qD+JGEeX9Lgtu
PBN448WCG2/+sFx8jDjQBBToCw788vZlwIIDD2bIhHlQ+qClPu2K2qNmXHe7
XvCM9gisuhARoSQwCMe8JWSFbzSgxVuRaY4qNqzjfTDGu4EO17zaHzz7UIEP
89ZJmI6Qfqti3FgqQgeV06nIf7kCE/Yq2mdOsWC52p1fm+l0lAj0/GURUw7/
5DSx1oGFcb4KvqRXse676/cLbqm49dTwWcktfXhhskFytc8YtsYP6wuWdGLW
ZVak0qUqcNix6ln01BjGzLY31y5xBzO8Opyt1Y3tW6kHxcaywO7rHv/9k134
4SFvOOl56NWp3aLpzURaYke3wHALut/Oo5fO02DqdOcL0Zpe6ObS4SpNasKW
npfPmPkjsEdLSiKNOQAtmTab39nVo/uOi61Zi0YgcP0584XfVfPIzXbhd80O
3nVc+F2XkiQ8HofQ0TVu6peAEQUqOZ5TMsh54S2f5sWcJRX41eX3hnCTcoy7
7pVNehu07X03JvBPYPbHCw66Xa3woVDM5FCeMSiw6o//kW0Cvsp7sVs0k9B3
xL9dKXYCBm/q2pLnw3axVxyCRhTcJ361hTwfzksss5W/R8dL6zMyt12mwvz7
50cphSxs/nk6i6Y7gK8kzq7QXjYK5kXbtIt7ytBT5qtrgUg/8EorK0X4huFm
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
+DsILeL2p6/Q6MDQyj/pmtUNHPlL0qQKxuDz5X1jjVUZmNFwVehCTSeUSbjW
56wdgU0xklukPnThcMtc/ZEUNpQfCT6UyiyHZxpyS19q0OBQwAzXefL93awr
5MdzmuGakp+uv3o/cEhf4+gNa4U3trN7ifcg1YM5vsicgWwr959mbWMge1XC
YW1PG7w7WyGqblkPcsI3lwf9KsctdY9Dfnq1wYXee00rHozjK1e518tPBWGi
z+hq3fkO2OhQ83GrzThaRBrp7PwxAY9dCuZV+Btgq9FHgTL7V8jj2zByqqgW
6r8EFOp/j4S2vpH/cXXe0Vz+//9XEmWWRFoaRDJTVHhUtCipKIUQWSUUUSEi
FIoGaaBJZkZmesjeO3u+Xi+vZWYkVH7Pzvl+zu+c9589T+e6ns/Hut3v17le
F92la0Yx1ueLxpl5onc4rnGTvOC4dHUGyQuI3cIYkhdQGFoQEC9fiUL7lnxT
O9BL+J7emN35Hu9lfuQm8cfjHpIcGM9CjfIXD0mccUTH8AeJM66MsMonccYG
kTrP8679KHDCcojEGc/b3zAnccbSvsU5tz93YkbbMXul/CF0fcbY31OZDmBa
30riiSOvXmxPZZSg5D3F5qe6FHTPvzRnQPgZaqpeM5LdhCq0a54PdXrR7dOs
UtVJNuovusU9Nt+O2V+2fT51vR3vfjt+7lR1O45IvOLLWc7GFU9F65QTOuDW
sx3zU46DOJj/SzDKMx97zodG1vD1oVyu9k9RzyE0fGI80Nhaj6lHqjbSKlpx
2bJTDSQvuJExmrGiqwWDU24NH3Cswx9ZmVJVakO4S83P4pNkG5raL811EGnE
UJGdCwzOfoTktpddQi/60aWi9VRCIht8f5kKXSH6OTgtwuKfftYVOjrPQ/Rz
uKv4G5IvfAnhxfuE69EoNrcq2i0CGnfaaBBfjD8ntOW1M9JxhUJ3gatIK8af
9jv3aLYEphx8//6614KLajymST1A3sPmnfOHHoNdeNO5E3/akKM4rYXUA1Tb
J1EIH/HrmpKthI8w25TiRPiIY9tX1hE+4hONz11r6kvhDsMpkfARk61CYMSY
ijUyqqKbDpTDUGyT305k4oqm/F+HCmowo2r0mvLUK6x9vt6S1A9cKa+WIlzG
NLh3sXy4CSKaBoYJl1GcsuKgbkIzqPC8v3QyNxL+Sv1WIj4ddJTkool+gOT1
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
xg6J0Q88/P8AuXkeOA==
    "]],
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  Boxed->False,
  PlotRange->{{-2.47194443104222, 2.4719444873544134`}, {-2.8937076672848905`,
    2.8937076059784337`}, {-2.5679129062483073`, 2.5679129460759302`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{2.7, 1.6, 1.2}]], "Output",
 CellChangeTimes->{3.5032506004678783`*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
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
XmRBJWppdK11NW0STZtFV2g12n5yhKZ9Lein+H1pM/ppM7bAZmyBqOvGJhwo
m07BdtK1EXVtxKG8Eoysd5c/Aw8V3QtPLN4DT8/u4Iv1ZFQ5Se78Ty2Mdq6m
6P1V0ftXhyFh0kkdcNCHFwT1nqAbDZNQ78mo9xTUe2qE3rMcvem281HrSL2T
SwOah0T0sFvB1D25aq0ho84UVMWZVLBZ7MFaxJDDHpzLRZynkudzERfw6qAQ
s1GkwcWMMpfUgSj/Ganleqs8e3JFA4yQvqbRKekmkZ+lR11bMdow2psVgU9A
D0re2yLS92MMtqA1t6A1o/xrUP71zWdgE8q/FeXf0XQSdqP8Cfhqrm46act6
f/mT8GjRXfBUxjZ4ZlotX3x7QP/zPik0pv6e2eyjnSYzLqH4CcmSAiP+RN1Y
dcWfFiH+7Oji4+tJ4n1UU/ApPDaR/PEkP4tvAagwAMTBosoAAF6k+tnVjvro
4+zZWvFQwNVdyBVfpLIXs2eX8LRUqrpjkI/X0wGHckd3o30V6l3dKPrXN/na
c+k3i/6qPXSg0J0tysDHff1bRf/lqP+qlnOwFvXfgPpvbj4N21D/nah/Ar6W
vXjdtU0nzFx0f/nj8HjRHfBM+np46ndZfOk+kV9KN3g2b7RzeB2JPydL/mn+
RGwbtNY4STxRD1S4Ek+PkJiun4t+Pg/lZZmLWWarspZ4SplROQxp5VZlOgLK
6pKvZ6CyqjJae5VIjNehxpBVLQpnk7Y5PGLloq55Glzmtawzy4zuzrpqebPK
WOPk5WX0pdzMv1zdlbyIQW1RJqNubZOvcFOzry5XN8rY3mIVhi6j8sdY3QGM
Ja2ocOsQrEYV17WchY0tZ2ALKry9GRs3Xrcbr7sSL7u++bg9QeKh8kfgyYJb
4LnEPrns1sD4FfV862it+/PuvtrvcZ061cxhQyNlXigyT9IDqlNR4mko8XSU
eMbYMkNiidh5Uim4WmsL5zNHWOoKLmYKj3R26xnVNWJ7pLOnIlOPzuUqzlN1
87mKC7iKC1HVIgm8jGo5Hkqwgks1uJpZ1witG1Vrj6RGwWtQ4DpTys2+2FGF
RmW7MXpa7TkcA23YyVHQFSR2q4i9CYXd2oLdHK/b0TYEe/Hya/Dnm5qPGq0f
LX8Ins7aDc/PqhWtb3G1HnFWfDTH/rx7ogJ1bBq3Iye0VF9mmtBI5smZcp2V
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
0AEmKwDTCIB8hoBdYGahqQtEAFc2c4qlA8xF9SMooM0TNgH2fXowQsCYQFql
bfVU/heNKH+HAGn6vGIeSYFHAIRVfVK6kOudDb9Rar6YJrcS9vgI3T0S3SPV
8Tqq+eoWiRqztXkp1LVKqRvNmxy921Hjjnan3FVvW+6O3stQ75UYa7t9zXeg
1rsxrkS9r+0+Bzei5n/sOg13dRyBB1teN3b/6sJeePxyHulCu2ILLicZ6Dtu
f31Y7H72kF/xaPcJKPZ4rPgJaPcTUexJjthTUWyy++kFLLhHauuvoIInxT1S
HHNl9J5XynrjNF9Gi99EPbmNCj7ZUTu1Eqzlp1eJ5lLu8VZsR3Cq+VqpeWwM
3O/rxPOt75PmefXW90cX3iPd3Q7fDFZ4LPcWuk5V56g16n/Gr3RUu1mVd1Xv
QpW7O0R5Vr1TVDeVTqqvoErvBljXDUb4XSj4FRhXY1yPwt/cfQb2dZ2A/R2H
4NGWl6zws7LtNsKOsYTXYf7nB/05L6LSE1D48Sj8BKz0iSj8pGw90IHCT8sP
iB9i9c1RmNlY4nO0zOeK7HiD+fwmAFTe6q5mT9MeH97QShft6VTo89bdI8nD
WuX1UuU04pHRo8IFEiy6R3qHSWy8Aff3JjF4fsAyVr682fo7VLao6GFf9Fae
7VppH5Xq3fX9hjZRvwXVbmt31HeU55rv9NVfgoov7RKPX9nNNQ8bevxWv6db
PP7aHqz5Hqz5bqz5rg/hwfa34clmOdXutcUD8Jys47bHlv6r7rL9N0eCNZ/s
13wCGvx4lH0C1vxEIzuOeFPzWXqPdPdgRiG185lY7LP0DC9WvgQiC55Vp+sT
y9XiLxit4HXER/2rxeUz+Ej1Ij42bV2+ll2eZ/wsEj+bezyXfT2XvCXBIwj8
sg8TAdzj8WkYAkrU5tnyUfZynt8RAjoBEzWv0nAYYAQ8IgDzWt8W5KBJGWD9
O0R/W/2dQf0HVX+u/m6t/h5c4vXIY+7qwRGvB0c81P8GjJuRgdu7T8L+zsPw
SNvrds5/bW6Brf+tDgR8/dfcAe+Xh+TUhVk64CUOB6o+Aat+fKZUPV0/maTP
s/KHWH+UHgHgHj/LQWCOi4DKP79MyyuRu3uS+r1FgLt7GnX3dNGdxrxqjhAb
gIgfD4trg+Jn8pGPrDoxAI+U96LIrsu6wkaOkGcBCJPuWiOqPB0haeZzA6X4
ufY90t2zouO1VPd1qDHqjtc2tNkTWVpJ9A5fdCN4ryM6CU5FvwyFXo6xioq+
h4ve1nwvrul6ca5DvW/qPQe39pyBu7qPwQOdB+Gpluel5jP74YU/8PvFt4jc
X4pS8/wxN6GPi9B0Qu50OSE3Ws0nUM2r6JNQ9Cm0RYeqY7OeVqBuXyhhyn62
noermnvs9tI8qerZ703Vj7OSp1T6VZ9WNUL4jFjCLx5DeJrysfLzGsT486na
pe4bwZcdH7C4aUTdk/1zvVv7b7EEQHVrhP6iva+/B43t9lQWW/EodnenU/Eo
+oCKv1TFX4nCr+nRiu81rn8BXIEEXIME3IDq34Jxe88p2N/9ATzW8Yat+Ddo
W1QrftMYCJgd4fMp/Anq+ZOx6Kfkc+F7REDoYzDd0Z8ZKI5goFTqnn6eLwBo
4ccFC5/KPZW+GP09kp5Vxy+sOjd8VNtRn5o+CZ7Fbk+DXna9OL5FIGwRyOMV
XT5PejwDNFoTYBhCYRn8mjhoH7cJ5KOtoLRZ+oD2AihHBipaAo7QSg+LSBAR
UNvGfuAxEHE8BjSgEzRKeNBktuQFDhcMdgYFY7BbwCBnWIFArMZY24vOgLHF
gYOtAYOtofcs3N1zHB7qeheeaX3ewvHixExDQWhDbDj+QU97sf4w7Yz8f8Fw
VH8Y7/iDw4c1CAYkAo7Z5l0tFzEfDhuwoJwNgtlIEjZoIHTpQBIQD0ivtl1B
J4IYlNQFKAm7lITYKmgDmOaDBouJ6RWNYhVmRKA1n9Mhmk2HoK8XRzIBVa3s
E1GZ8AgH9gh8MIQBmjs4QoaKzk6Hii4hol+JWKJELO9Ru0Aa1mNs6gPY2udv
Cl7Th3bRh3aBcXvfGbi/+zA80fkGvNj0ML+AN1Mq5bbrx8DBfMAFn+I2a8j3
CsOCekWCniUxMYKFqQXKg5pFJA9kFHMUhHm0IJzPB+cMC4nCgkcwMAtoytQt
Uqu4W3AoEWwaTILHrSIuEgWfhDBBYFoFqR3QPcyjQRyvBouarClE6l/a7PQJ
1d8y0Or3CXwklV/aRLtLQJxLALSYjf3PBgDoVQAGFIClPQIA2wKKvw5jIwKw
BWN7n7zeq/qG4TqE4CYE4La+s3Bv71F4pOtteK7tOWsLByZmW1tYG5uDf/Q5
+PRIT0gbycCEHAh6gjIwrTDgCfg8ZvE+8OwS4cBMzPPKeFD0iAKsamXAeAIk
V/q+UGW7RrVZJixEE8jgU1gzeJlgTOHPooHOqaGpoZFbRcj3A4+QcPwg3uVB
+gT3BCQCzZl5aBUerCe0sR/QniCfIYNAcINo4APvBEU8NHUEoIBWu937cehC
ErqVir5uoWJQqVimVKzq1WbRp9bQb1336v5huKF/CG7pPwd39p+GB3sOwVOd
r8FLzQ/xS3krtUJ+1ZoxiDAbRj97xwrH71xwzUEbRYLTKCYhFJPzA2B4RAX+
CuaimL2BNgr5pBq6m2kUzEW53ygSyRPEHSrBJwI1Z2uolkZhm0WNuEOYSMDf
ZljQ/QPuD0gDZNVz0PF+7g88UTRIj4iCR/5IPMI8Q4yDEt0JjqBD4Ii3cFT6
cNDhQobCOgZD0cC9giYIAqOJewV1jLCBA9o6zclWH5OegUD0KxhLFIzlCMTK
XukZ6/rUMvrRMvr9kymuRTpuQjr2IR37ez+Ex7vfghfanzOO8fwf/EFiVWw+
/sndV/r1Bz4fo5jGRMc0mI8C5UNMA58h4oGtVgFh0+BJE+GYW+ZPEgqIR3Tg
C2LjqGTT4KDlRkqVtY5qsQ6P6BDDuAAyan3DMKaxuA58UMLMB9uGJUjfFV3A
oyRPlk3cPUK+YdAuU5AIj3AIMw4fhYogClDdZr2CUahrB+sVjdQomuhLM31p
YfWRAWjH6LQHBz4GvcrBQI9wsFQ5WIGxGvVf2ycmsRk52Iaxc8CfIcglbh0Y
grv7T8HDPQfhma5X4JXmB8QlEgv5VqNAIB+Q+zERPuGobxBJIw2CuwauNCaK
QeBTQAQwJ4HOUQSuQ8AsFwBaapSBoZgMYkEFGwSHQmB8wpWfJkoyiRppHE7z
qBWn8Eh7cwIQ9wlaSeayB/DIqB5wkZZIsUpcwuOBEVlq/hIoR2FdoavagkLX
tgeFbuhgsf2GwI2A9I7jum/HWu/AwKYgL/4z0hNQ5kGSG2VepnKvRJnXYKxH
mTf1a+kPAOwekCd83cAw3IJy3zFwDu7vPwpPdr8JL3Y8ywv4FWPJrGdP//w9
XlSeb61Pil7rI6Sm+8wuBVvrphHQ5aq1p93AVZlmRWwEqdXSDGxDqJF6D5PG
nmgs2mmV655CJqmdRV8CunskuUeam3IvaJJyLzTlbj70lMu8hU3fh2CchcCC
IBCI918UYKB+VAY+Ld6vDHTSYNAtr6APxe9XCJYoBMsVAqr7dSj+RozNKP62
Abfux8FNCMK+wSG4d+AUPNp3EJ7reglea7mfZV8eG4R/cVePvz3im/5o9T4a
CArBjGIBgSGg1eMc3lZiDsotBx5BgE+eS75SPN/6fpWt+mpr+rxC4JJHe8+Q
0NOHFtVJ1evmFdJALFge1PmzG3guCDEZtI6k+aBRDMEQQnDQCNnEQaeMNdkJ
slkwCSsZtFpAIGiTuU2QsN7Qzr7gERR4tYuExaJTu0C8JaJdiejq9rsBETGg
RJA1LEcSVmCsok6ANGwga0AatmLsGERrGDT3jYc/Dg7DXYNn4cGBo/BU75vw
cuczkp+lYyEhlyX85E1IGG/edvmFEZtNrjdoG4BJiMTkAsWicGQboNtTG4j0
hhFcxEVy4QWhwKpjh6iRTmC7gY6IOhEIGmwT+qIUi1D4z+civymCC5w8aLVZ
hJ5RrKF9hDwkZE4rIi8hAynnabGCsEFg8M4uLoqM2AiPi0hM6CPCSyfzwoHI
QGuXD0yHAEM2EjL9ZABBGVRgljnArOlXG0FYtmBsR2B2YVwxKE/8ZgTmdrSR
+wZPwmP9B+GF7pfhjaY7+XUsic3M/9KzSpmZX8hnfNtN6lFsZAQzhcpMkTLj
8mKYKWNm8KXO411J01O4r3BPqbQ9hdsJ8gIp1dJSbFupUTuRpaBjJ+fBjEe4
hIkUjyAJEyF0uJKGCh8Q4WNcdD7IPQQQQsNf0fAXy8fFlo/qCD7qOpgR4yke
AYL14OJhEOlANDoFD+hxDksyHn0+HisRi9X96ikD2mUQi50Ye5eAsZTblgzD
PUvOwMODR+GZvrfgtY7HJUeDsfH4uovH7z/UqVLxcPajGA1cdk5QNCbm+V3G
xcNFY2YJBOwkgIcH8yv0Y6JgQaWYiTWUKmso/FY7Bw32ErqPTB3UY2SyjA6F
aTBZDWIk2TxnBvDwiAzPxaKwOSoWYcICp89WQrM84uh0Be9AEBmXQlV7kIra
jiAVDYhBY6fvHIRFSxQsugQL6HXQWKJYLFcsVmGsQRzWD0ir2TKorQYt4SqD
xoVw55IheGDJCXhi4BC81H0A3m68hZ/2gT/w56X2jwWIfoD+f/0JEiYe13l0
SJ/UpSP8IwCJAjI5wj8YEF12zCoN+AfMLQ9AEj8SEj6UncwnLI3wEAXENh82
jQApZhpZrAtOdxoJEyPSaxCURuk1udxiArDQx0DRjNoMhheeQTR7iAtFyLPM
8EhCW1gRh7N5OhFgaLeind766wJTHwWY5q4gMO0GGISlW4ChiVXk+RRbyXKU
eIXysho5WYexETnZPKidBnm5EkeP65bK09uH3/cvOQ2PDh6B5/tehzc7HuJX
1iekfDEKKf/KX+WzJxIuP6Sdht4fNsSTCf+sVjI+C58dYoI9dNRGE3QS2sXi
c10cUHg4mceHNqKwUuWwIm4SZkgUEDo4zpuaCgp3G9tx6lxawi4t6itxrq9Y
bsKEC69qiJkm6Tz5Tbqy8QgXj3jBX1vcAi4uvLgpbXWACRMvYV3+BHyFOksd
71k5hISk23wkKiEdDiFkK33YZfrtka+PSLfp126DeKzF2IBobMLYhnjsxNiL
WFyz1NwnDu5eOgQPLTkGzwy8A692P2sWfvd/P9Vi0R2bmP8dcYBMmg8SkzzM
zYd/Vl8Zr74ywfGVSQUOMkWCDN12BuIy0/cVj3jx2FU+bnAhWGC+nvwegQvB
AsnVYit0PS9zUqnhjE0LHVLHBc5isZQIYIKNSFwm3nUZM9nidXlNrtsgO83W
bULCT1wkP56Fh97hRkNtGwcNLrwNSmZT2e6eUn0B1HRIhwp0qQBOXxmBU1ts
nHi+pecUcJ0B6VLrBsV1tiJKOzB2I05XLwO4YZnc5w78fv/Sk/Dkkvfhpb5X
eD00Jj/yTsCEn74t3+md5guQodRhGl70ZX6SD67GZKjQZ4geg2xnRkmgN/kM
eew28QGAKBLZZ5L4oKoBiC7X3hTyCfIIHm5JYcKGJ1o6/2okNjLSZjXIXCu8
jIvGC9ES9k2GYSlgUAoZFBpnihSWYgIlQEuYIGFGPMLDI6cxQ2WNi0Yno0GH
VTrpjIWmrmAvau0WNLgfGTQQh16DRp/jNorGygF1m0Fxmy2IxXaMXYjGlYjD
9cv8NfP+ZWfgsaXYkAbkj7W8V7lZruuKzci/8Vf59JyEX7+vXems7UoJ+mEy
tF4mPsYLHx4BgoNTABHFY5riMZN2T2bxW2xml8n0MofH2yiULFBSfEpkM8TY
TAodax0NEO4/znSbxQZi0JChlsnI4b4jLWg0KMZFQiEu0joGF3i/6nafegcN
j9kIy6QiZNC+WhctliLJ6BpJBgz2gTkqutwBYw1CsZ4mlSXahhCMvQjGtRg3
LZdncvfyYXh46XF4Zon80aj3mm7g7/u/lxrqdNjgx+c/JmfeLDv+mHYdJCJ5
yK6G+bKsABHsGBMFB9pQL6TXNSXCMZyu4zNR7hrHBRYHBwnuOmLKydU6qMRD
CraZVA2aZtN4kjVo4A0W1nHf4VhEUa9zSkxOeKT1dJ7NbWLfoAhF4yTMnMRH
YyQUAQnSTINtRbv0FwtLmGGp7nBajkes4BV2qGVMCJbPiZE4qHREoNLXZ1GB
Jf3yrJYPCCurBpUVZGQTxlbkZAfGnmXSY25cDmZqeXCZ/F2plwdehXfa7+Fk
tce2kP/jtpn/fkfbzBlImI9tJkXajPmYncgWM9Hxj8mOf0wvUWBKGRiPaKH3
cQgvPNjODU4qtPVWaWwjUd96m0S0nA8ydDCfphWhhY7H8Eyr1DAzHn3lFPGY
EgrLoKKW4vnkxLnk2DmFEGoeaTKFLbFNhj7rDKeUsjY7qZhBxQEppO0IIXKm
FeM/2pLMtNJFd7YtiXfdkCX0cSKJW5JDUr9PkpBxCaxQkFZjrEOINmJsQYi2
Y+xeph0JTeeWFfIU9i+XrZIDS/4Eb3U/Cu/X7RTK22Lj9H/dqfc3h7UjIU6J
54IdSY/yG/+ZoDhNLPCRouunIk4xkQq7SIXEguICXWlBFZgjFeRCSBQ3JduY
amT2xUdSoAI+VCctKhpKeFmmfjaGNaEw8fS3Qqm49a9AKewPvvZkkHGCUpeE
nW7o7SLE0sXiSw5JPS5J/eJJSw1NF1uS1iJFGzA2I0XbMHYt0xaGJN28Qtd3
8fD80vfg9f7n4VCrbM7cjd2rNTZH/x44j2jGaUiYi00saWQTMxCNj4RIAaIm
5kCEyZjJQ80sbWKzeaiZw28RN6akK242JLeRscE7rlRjV061YIwovU6MaCFz
IwMOOY8wsxiZUW7EiJiZsD/XGGScNRJt8frAyAq7kN9OFMGLx80rTMQwK2W8
OCoXULSBVTAolXw2GS25qzqkg1XTkhuhoT+whZjUdfou1BBExiNmsMJtK+vR
VhaBzICPDCzTw8YrlZk1S7SVKTM7l2krQ2ZuRPe5dSWY1fbTyw7DK0tehXc7
7xFEmseAxmzS/OLdaL3MjsMJWWCOdMVEp1jQifAemMXIqAGZflahBiTc6E5N
FbjNTAYgWkHVsPX4DY095zwhinMhou9eTI5yDUd6CIkwym/W9XYkREUjISqN
AVHlWBCFLUT19lyjT1rPae5m34lKELcwIqhfCBr0CXKNhwBapwBtRXB2YOxG
eK7CuB4B+qMBKA6eWH4UXlr6Frzd8wh8ULORL26KzdA3+OsXhJPfyelICbPP
+MvuDIchnIcS9H2N4xGgCQjQBARoogJEM9GU6A2MICKExHouMAwZ+/F3b3hJ
lWiXVLaD1TgGRPt+tRHtK2zbV5hH53hefkegI32LnKhRhqHsRt0ZPg+KPO5f
46AAwSnUcGDyiCa8S0krGJjwLmUMUrnjRmEdqDsCY1BNJ7gMQT1y02DOVfII
IZxHLUQ9Ety9HIj6XIgGxIaWG5AuYYioe21EiLYgQNsxdiFAV2BcixDdvBLg
9pXygh5deQqeX/YuvDnwLBxuvpovuxNbWGNskr7pt7DPjWhhId39oxY2Fka2
hSlCM0pjYHRRECNnA9A4UWK1Pw4oRpFOFGaGwrwHqD4U4lnIszCNZkS0b+zD
ZCeiGDzlNY/OkzGmolbhSdxpnHEmfyQSmMSUwtaUqvhwtj8RKVV4GXKFrU6p
4vZGv6qpO+BOHlEVutRyxS0ugqslPlewQo9mr1awNiBYmxGqbRg7Eaq9GNcg
WDeu9A/RP7PiMLy+9BU42HaLKNMQm6hv8dfPQsIv39PehlDN18V9sLdFhWpi
QdCX3OamUOFzmFVmN33KOWjThz+Nbp5+vIIu2NiUlCo2Jlnj+850XjCFI8Zp
35ZikpTTFElSnEuSdLeCFm1xkkMkiCLkY+SxJYVdhmgvmbtapQ+QdSaP8EH2
jC3V+bZEAJm9WLe7tTrG1OEAZDrc4IAAROa0fJABMm/sWIvsrMfYRPwsF372
UIdDfm5QU7pzlXx/cuUxeGXZm/BO193wYdUK4ahuDI5MO6W/quc2OOtMLki5
YHbUI/ubMSaZrWfw6VYz1ZjYnMrFnAxDyo/DULxsEvkMEUIhZghvn1LLrsQz
0v+QNcW5QMnYnUcE2VGJLamAj3iOCZS0uHjjSP4Kja0owJLHXhSGui63vxmU
ZM7++AiGuME5DA2MZAhWmoPjF8E6ZWgrsrMDYzfycwXGdcrQHatNRwjDi8vf
gbf7HoMjDdvlslph6AtRGPpOcIGGDM09M7K7OUMSMgQJ+pduJ6gRTXKMKAjR
RZEQiRlVSHuj+86r1EWapaj6z6DII4DC/oANGfWyxTjmpK3Tkq6O9G+BybFQ
8qA87mT59PnkBcwKt7JWs0dYRHuKzmDU5gxGHltQeCQy9MkRNF53Sgez6Ixz
0REfQtNpMp8A8VVo6Ql6ULvDj21khh/kZpnPD6xaIi+SjGgjArQF4dmOsQvh
2YtxjQJ0+2qAe1fL/19Y+T78ackL8H7L1QJQTWyAvusD9BFImHna36ZeGH08
IoDG5/uHZycWgT9h09EKoudTdjqaWWanI8uPZUfHIzaiqsB4JAjVmBr8K/CR
1b7hxOyDRDiQ2X5sMnvW5vYX6qtUdIzdhANrtLbAQp/mnwp+S1Cl37oMOSHH
cuItN/U+N7TD2G3bj6GmTanh7uVQ0z8g3SsKNSHzGBuQms3LpX0RNXt0X/FG
bFu3ITF3KzXPrvoQ3lj+GhzquBWOlffyvatjg/Mf+l6BhMvfG7E6458XwYgp
iCYgn52L2XgmB40HppdCJDwekWNW+fYvY8zjP4oxX8dqXaHxwl7Z4bGankqK
WFCtDEOetq+0Omlf6UxPTIaElwgLMruNjXbFT+0ql0eg3GZrQWRA6EItMgfF
gfGeGNNPuzP9eOw74ZHs6Kq+FnGp406F8NCuom87dn7mX4cIYfuKBIhbV78z
/ihAy5f4trN6KZhzuzYpPzuJH3Wc65GfPyI7d62xi/zXVrwFB/segKN16+iS
qjHoMSec0d8c93eno88+tDukA7RLz5Q/gx51Hd0jEnqqxqYn+fzo8Qgceger
HlrXfWqP0ImYq8NBcNRyiJtcblt5zWZ7GtGhCHnaxQpa/S6mn1BazKd8URcr
abOdTPxoBE/SxuLdFmZgosUYg8Re1C0wGaCazYleXxFH6vVh6nRgsn3MgWmF
DxP3MMrBxuU6CCFNu5Wm65CmW5CmO9YA3L9GGHh51Xvw7pIn4UjTTv71FbF5
+l6AJ7PKTx7yrcjlKcfhqcDO1HY9VjKCJ9qv5jc5mzFotjlVXZdkfheTcZph
8ogjvNaQJL6VQusxIYmaV3qdHOMg9/HREfcJR8LTqPB4vEUUD9nITY4TshTL
bZbZOWytJwIdNqE4tbYo2IQCM1BHcGxmCxpJzgWxyKHxxzYjgw7j06fNzEFn
cFCaWSQ6a+wJYR+XEUib2F7E5xpE5yZEZx+is3+tXH5g9WF4e9kLcKTjBjhW
2k6Xlcem5/sBemgI0q3qAD3GicxhDtkfMjsIU31y8JkiN/hMZ6gLsRP51NgB
em7lyAFoQbXAE46AJ6U2woYUHnpLjL4HivjJqJddavpohQbZaTSRaf6QISMU
Csvw08Qhy/lwEB18DF5ytUrQryjkiaeIv9KxseI290yvKLOQQlQxAiJpZnGm
kZlZyCOE8Be7AAUh+lzAfwxAvWYaUoCWKUArlypAOAWt1VPAeBoyACE8V2Pc
gADdhgDds9Z2s7dWvgYf9N0NJ2qW0SVlsfn5AX/9DCT88t0xZ6HxTjMbr5+o
PNE5cu9wJBhdDDPKzgsjj+0nzlDEY3QUkJINSLpfnYr0pPESPo1pSlea9MiH
5yN1QTSkyJRUfOlqTRDBEm0LtdheJjtCBa1mK71QJmo7FhFYbdLMSuyfoxjn
DkguUGPw1K08XSY89QR4glY9jbDNMSTuZw5Ptp85PK3yeTIHr7YqTnsQpasw
rkecbkWc7kY/enittKHXV78N7w8+DMcbN/K9SmMD9UP+qh/1RjtDejYZ/5zh
dzM+4zBnJFCTZFFm1nXMU6l0M+5oBqhyAYruMruCF/bU0vjI2Tz1JMeXdEQa
B4k1MiIFxiQypRQ+Z8ihikMMwk5KsFB8KmTQapBG53F/EypofcbRJEjJ2iwe
cprtoGQGbRqYWmTMjmFYXiy4dKuIn145L9kctMzyLSQ9b5xMTF0yetdGEjbO
EtYUJMx0Phewrn7teg5gS5fo9B0EDNYvN8Z3AezAbkeEXYl0XYd03YJxJxL2
4Lphux4/uOwpON621wwcxWNAJnf7vDMzRXQ955zF8blByzLLtyl6Cn0As7Ig
ZsLAbD41ZI56lutbnm18tJvt8JVk3+Npep++DJ3AhSyPoApbnmTqxmVbo/iT
ehT3Pc9CpXvYxFQOj9y5zeZoCBlWHg/e+fSunIJWczDZsSsGyiOgPKIpbGGi
Q2u+TYVkKRcPVZ2yeWSnb56daIKKNyxx8AzF7Q5RwmwYmFp6HaA+Du19OkI5
MNkOqDCtUJhWK0zrllvH2o4s7XZYuhk5ugPj/nUAT66TT4x5d8UBONZ9ExzO
qeN7FcWG6f/5MF0Wc4QyJ0iPz4ne/wIwlY6AySOS9CQ5siu2LJ8jmMfTdxCm
sAsTHRepNY9Au0lmR4l5qpU+GLY8mSVdBna5RX6ECSuayhv9qdyHKkwsMUph
60sC0LhoABE+YcLH7ATgsMorN3eqchyJJiiewKvVjSIpqjMU9bgUxQtFvZYi
anr6+F8KNj4HoyVLtPGNxAg26HmxxNEu5OgK5Oha5OgmZOh2ZGg/xuPr5ZPq
/rT6dTjafyecoI9eCoUKY2P0Ix+jT8pJIwucrrfI6XrOGBXSvexJLkbmQ8su
EIrKHEvSjjeLu51aUhCjCIpkhJIzRpJr7TyuGplx3LS49HppcQtNizsPhJoU
IY99KQ6ym60vUfCaDp9Abou1JjNTkUW1jtwbCI7o0uwsZXGWMt0jMNtcDBmC
VaWhu040ltfSlzrudA5eHNzxyJiQLfylShe02VPxP2rp6hnQrjfoj1XLl+qY
vky6HtIV1rsRWHsRrGsUrNsQqnvXAzy6XozlzbXvwJHB++BU7QD9XOCAxQ/x
Y77g0uhz1KLYc5TtcBTFlijucHTdNN4SmM5bAjMUJx6m6Myj2bwlYImq0o0m
HydPdraTZSwPfKZRKn8Mtjs82Y0m6m9iSg3S5GgeR34WO+HyFCaeQmFZ4WmL
8/xGxyzl8tZAHn/EBc/nrRIOSzFR0tUekVTKWwZlxFG5+Ty0cZEgQbW4lYNS
/EiU2JUQJnQlx6mIJW549OLsBKUs9Q86TU9ZWqUsrVWX2qTz+U4F6moE6kYF
6m4E6uH1w2aAOrz0ETjVtM6IkhfbrH7sm9WnIGF6jAEqYtsgcoCKwEtnHULr
IovVzApGy8zoAbZk1RcP86tl1WdXftzuLGhxLmhiWam0gyC+dV5sNUWw5RFW
4VhEhR1bMoN4WAdxbXnc7HxuaPx2TrumqGL/qSZeqM/J6q6223Y5j+DBRCk6
BA6HQae1z6KjVvRFRqd7QBudg86ypdroFB36/Th8B9DZo+jcgOjciujcheg8
uGEYnt4gje7Q8ifhVMdOOJiez78tV+D5fBR4/tOH5xKZvufpx7o6n64Ruftt
Ol0UePD1TS01f5ed253rS+UOQAKPZ/tcmNd2FxlqAiu7yG4XJmrM5lO9jEm0
A4VtLUODx+9FjX6Pa4rocXQCQLN4koanM1MLxETHUxsqahMbKmYDigKRTEsV
ndzIQlpOhiCP4BHviYP6HvWeXoZHbCdO2Omz7HgEj2ljZkDqG9QW5nCzcpm0
MOYGmdm4wt7NxeaPiM2diM0DiM2TG6QVvbfqBTjZcy0cy+OP6MqJTc1/BaiZ
JdtMkfNR5B43200kNSUuNeMsNfSdOppSI91snOs4HLwzUC3oeESN54xI7nRt
odFjJmn13MpCbDqhsAxKDRy0A67seMwOrt+aAr7D9HhET5iwCYVlPlLb8egr
bwaQA7XabhbyYqzfitrc9Rt9+l+77Wf+hNShYMW5YJEzmelc+5qZxMcA7AJo
6QsAxn2tHcHqsB/q9xnpbQ5kS5dqb1PAqK+tE8hgix5CIcquQsKux7gFKbsD
KbtvA07hG4fNUz3edzOcKJXFXHZsyn7qjk1TTsh+ZpTtJ/ecANea6JyACNBg
Ck7hU0vNhl6cD5nYkkeIoUZzq0ZAFoqkLM5sOBnKTOsOzE31YlFhQosbG/GF
fWyRROjPZiwnyNhFLmN2agow1qYbTuJUjFdJuy7yaE9T8CK6OJQvj50rDFVd
7mQYdK8LIuGS1ocktXCrQ7ZwJmlTspQu6NT3s7l0DUaha43StWEl02W2ERmu
dQLX7QjXfoTr0Y3D8MLGU3y3owO3w2l8inTrrNh0/cx9c+R0HcqThoN0uWec
OI1vgtCFrxDZomN2QbpgmrEwfnPATP4w2ojGR4iFuPvR1CSIuZNTiEmjDzz3
dzb93c04SNH9cYXNC5ImJmZACzluFhdJmjTD+MhmaAZ14sxOU8xaHnfAqL2R
+mAM0DxrYZ5PVzzTVe0TBjXdAfcKu4DRJkIvbyIIYL59sWUhXrSJ4ABG0Ytw
9S9xAFO4ViFcLmCbca7aruegEGHXIV03I123I133YDyChD2/STakPly6H862
rKL/Z8YG7L9dwNzJKuLzbfWcylEAixfAFC4FzG7HGvtiwCqjAOYRW7zu420o
Hc6ShCffwOpkuzwSKtMi0xv8FhndyBY1ms3OCMRC/wOMhQktjy0M+eoQCyvj
nakAYx4hRicbBCEjxELMmEeIhS6Ehl7HxVzA+hkw4euLlq8ufRfTqHwhW2sx
1o/C1z5k6+6NuPTbOATPKV9HVjwKZzu3isKLYhP2c/6qn5Y784z9I8h2dl/s
T2GmOdLCj+iaUCQNcmLx2JNYZIP0iK0ItMSu5Pnphrnuc4ZdvMyhXwNWpFtl
8LAew624A/3FJMUFOmMhzVu2NUKxepXnOxZTVcpEBaxL9xQqEagqDYKrutus
msW9eniPitxrJFgeUYVPqK0/0Bk96DRvSPmIQIVALdHTVVYgWATV6pFQhcxe
B0F1kwPVQwjVs5vOmLnrdPdu+DCLP4g5lBEbq1/oOwsYJT6GPBx9SehihaY1
PhKrEn/uMvvojFW5f96ma1ojyaI/9kUtsUaWhMoWbShQI0zmw3yud6Xaw3zW
uOJd4zIrRDIwWhoazjzCDG9qQMuSAYwoC4V1f+FvjlaZQYs+2JVmr06Z681s
X9ml5hU2fGl3pFd4kew/9EjEwCwUlbMB4Sz0BejWt6gQagMuaojZygjUNiFq
29C/dq3RM6UINcTsNoy7ELUHNw3BM+hfr26STzc61YcLyYJS+v/C2Kj9kr/q
HxbiXVEYiZr75hV0Lwc1jzgLfSww4Qfmr/LAPrtPGrfGufypajzmV8v8ZWcw
hS3RHrAxwHnEmqcrSboJrSTT7EpyLNrYz5zdiOCUH5My2VyPt5SZjdHCNm2J
0VDziLKwelenbYmGqnEuVRz0yNa74iKh8ogqvFdLv+2JwtRAVKYoBpSnZWhd
y0djSk+Xuna9MrVRmHoAmXpq02l4ZbN8Et+pJbfCCfrTyaFQ+hhMyfruMv4r
lHaijwJUQhAo2w6td+nAZdrhDNkHNY46EqhxUYFiT5IGqc3Rb5A+UsYUdXeC
WUpvkB7Jw5bMWEhSk8xYixmfGEh5unDMbvEXjuHzhKtA4eKdLo+4ikAqTEjR
Lpd2wkredagiuLgR1thuWMdboy5MjehOTX3qUoYm/hhpZCl0CdFEMHEQTj36
5gOD09JInFYKThsJpzWMU8icnXsj4nQronTnJoD7Nw3Dk5tPw8ubT/DjnFx+
D5yq4VPM02LjdDl/vcSuEw3cgTE+0x/j+TolanxRgCp8VsgU9vYAVeWWKvYo
umwEVh4RJS0xLuBOifRp5ITSxTLM10kztA1R3Mk6FW+WGqR8W4r/axjKtwz5
bbCgjRnybC+MYEj6XjyUdUrfM1HBm6XGo3yWQh/lfmdyb3pefa9SNZIoj5Ea
Z+xJgEKYugQoc47AILIUjad1ytNW5Gkn2tMV6+S3uzzdt3kYnth8Bl7aojyt
fhjONi2h/6fG5ulXLk8zTo/Kk3Eo4ikhJk8XME9022m64e7wZPae51TBSJLo
Pma4siR95HxJIpBCMQd4bnUeIfUxnU5jbFR5REs0UsJKSqe4DTYwHoacwTvk
uk2tOT38wvNj4wuWjY7BABvQp0YTDY41Bg7sW1sUjr0OHH9EOO5AOPZvBngc
4XhxywnTLIbaVhoSQsmxAfk1f/2UXdVFBSTrvAAhPDyiQ/8ejuWjQvmolJlo
JCH00Tn61jkCZEGNLPCEkAtGI8Ss8NLJYIKNK85tXIKHZCZir2AU37kgCjH0
wV3tMvzoAAQlPFuPxMd4S7d4C/3xPRp+EJdaCXMKQhR68AGRHzqzYID7FXcr
j+DByxx8dG/54gA6qww6q3x0dgg6Bto/bhJy7kVyHttyBg6grby1RT50Yqhr
Pd8sKTY2v+Gv+vnWs8762CyMwCYniI3tU8URqzbXU6JzY88MQnR4y3wu71sS
PuMi8RGPqRWCPIKH554wYSP7AXzrdB6XDTvkLo2+r0SOP7LUMzajh1YyZd1m
dgjwBtk0VOe0yKE9j2zIrtqCH1Ec5plnHB/di0KUD5Sn00852lCFRCgSrfhI
tHgSMqs3ly3mq1/dybA1aNj6kmWrW+eg/og5aMUofO1Ba7pqvdyeALt9swHs
LLyAgL25VT4JfahnK7yTzH/VLVEY+1wUxn4X2BmIYGxRDMYcWxqVMelbtF/O
Hx5ovGm2fmZONMbo8vnK1/kzlhZkbJzLmN3SZBwW04l054OWWbTltkbO1XGQ
T7NQm52L4rQbjgYZ/r5SnIbKNHg6YsQq+PQDHrgRrioJ0wR7pAnirMT7Anpa
OZHW0Oc42UjSAqApZL0ImQvaMgJtRRC0DQjaZgRtuwFtg9z+FgXtni0AjyJo
z289CW8Y0Pp3w8EM3hdYEBu037v7AtFA0y0oviwPIkGTfYGPCmelUTljH5tZ
CS5nZv2lmPEqji1mPrU/6YEEVhLvaibVSQ9M5l3NGJyZPtgo07a+TDKwRTxx
RxBm6PpzCAszYUpXoDfKq4mAzOPmOE52N0dC9hcxxpydD2Px0LlkBGNqipeO
ydhuZOzKKIw9svUcPMeMyd7TucGr4IOcMn7U+bEh+wN//YpANCcGZNkOZFGG
rIklYCmj200tgxFTVgRl7GSM1Vyes5QyNrIooMW5oMlWQQqt4oKshZyZy2Lm
zONN4DRKJE7/2ENWsw5css3J81Z2i26ly8TFxOUybXm0ohuJXNgiZ94Men6U
eQQYd0z6TAPkrLpHGqahzCPAQl/mYcyIEwuxtkHGTGZ55YsapvGxQT0uMxpj
25CxXeuZsZAZBPchY3cjYw8jY89uPQWvbzN/iSgMx4sq7EA/Vzi7RDg7deqd
VyxncVHYS3AuU/bsnsWIFWBe1EnNI/BwbgygVz4CPY/Yw37qkMcxV7Gbx/30
vMGzJtcQ0Uz1xVAvXdjo73kqeIycLkXPD7ewv79uaJOJjUmjmV8bqHlBxbLx
+TfCziPq1JWZuX7LHG2rD9CmlmVOeSNf614aYM6eSsPMrYzN3BXoa9dulMfZ
h7zdvRXgIWTuGWTutW3H4IMtr/N1pysq6bvi9gkB7NDBl57al7Mw5ZHbrtl1
e39bY7xy5xBH/09wx7c5/tFo/h5jVRlreUC3mYLERVBH4xu/p50Mb1YVG55Z
W8rcQ3Y3T6zOn91qBbxQWLZGbVdN5n12XmXWc4SEv3Euf7xPyouHRqfV+uzF
EXvmHV1+cw0sDGhNIPZm3u0ne1iBjhom3hTiwHoAH1wJM8sBHzKP+OLOSSeO
0lKgVxqngcy4yUjCvjo6YcvE1ZboycWjEbZTCbtGCbsNCbsLCXtw6xA8s+00
vLb9OHywVT5r/mytnJk1x0Us/valXS0P3rhnK/20Lys96ekH990gzsbZmuAQ
lzDXomXfzWxmtVxnViuMsigo1dY4lT93jMGqcMG6yAVLPK0aXC8jtsTP6M95
CluEFofCFY7Jle9rYsjia+niab6v0X6XjHA8xp0fZXQOV2uEv50Hb/THLxyX
46f1N+EOza1Bz2UfDT263gxtLnoD0dBD7NZirDforRP09jro3aroPbBtCJ7e
dgZe3X4CDm+TP2lxrqGFEz87gN7dM6dMePXAI/cweq21Ffu6m2ujNtWJrr8Z
CNNgxEcEB1YMhaMPc1PLIQqG8dEwDJmP9Ylib6GY/hb2x7l4SEX6HALNdojr
a9HYo9NuELdMJ0Km1fImWigs22itHHhFNMPLdwGUzRAobOcmS0cZ+eA1LyQ6
zAab9GQ+mO03Wo/XqvFCZLeziuDtDwOlRzzKgBfmAa++j9epIfNWUOZxQAa8
Vh3w6FmSFTKPS8fmcbXD4ybkcavD49Ub/SHvTuTx/m3D8NR25HHHSXh/27uS
k1kBEF/+53/8e2q19NOda5d0kw9GBXGSuxc3FohRjhUZEN0mGwEizKj0Vxaz
uMnO5nMJ56gXWk+s8ec7bbO8do0On2mpI+HT072IvQzmzrRXnC2jwCce2KKb
uNEM0NMBL6/NH/AYx3BM/uJc/qQF853K+AM8jRVaOwzC5xhiGGp6xRBr+bTC
OnZDJZDHPXoFzeyGyGDoI+dH4HImMGTeOLgyBoE7kMA9QiDcsEke8w4k8L7t
gASehVd2nIJD299jpGa6AIYf/tlPfvTai4/eyz95+3pb66PRN1loFcLmBegL
mQ8yiEGerCnGjQSvgsHziDp8jJHchS1zsj8XCp0XdGELXFqDvVs6DW9id012
jGuWJYTe46+EyyOudJor7tDFajwbmdNnGavR3CysRPWKm9FbX6m/9oGLknlV
xNGXmSN6aDPUBThChvp8jmCpvuXHcrRaOVob5Ogq5Oj6zUGOntxxDl7ZiRzt
OCQpmxFwsn1F2RkP//GqndxS8xenP7n/lmuiOtkU/jpOWRoKOBmuUc3s6qwW
8KUiTDiomZkuYGRqYspTSIAaJ0BV+R01coukJnKLZARU9BnG9Xac44NRdI9U
OgCVZlenNMmlN+pxhQi+PB3gsoyBtTBjMfsnys0bcW0wkjLTQgvaxcIKuXkG
eQu7q1RDyUjYKmPAdsFI2PplmRpyeKMX4i4i/lrediNvV0blbQhe3nkaDu44
LKmeLryF4m+rLMrdn/Cby+/dtWHlHclzZx5898AToYtluUD/35e3KI0WFrdV
FObERyFwqkvg/BgEfjywXnVXFROVPt4GHklgTACrowLIENaeD4AMH4H4twGQ
3e1vgZ1HxOlBLKldp12GePmAlyFwvC1SbZqlGdf6+MywIHDmsxxa1NtG5W25
8raCeQuZzyWxvK2Jwhv2yOsMb9uEtyd2Im+7zsB7Oz+QzE4zvJ048fZLL/zb
//f1P73xzMPHjr114P1DLz+NK1AG6+TJd14edVuOH8XMtfYPjcvRU3Nirm2b
MUibhKRNFtLw5U3jN/ZP14FNhzaPO2fYP7bFPXMunZgxz37a6AJeL/DStY7X
DHhZknBG64d6sLwpa56FzbwCZ+EKCwm1DEItyFuYOVPeQtHcjrdH4og2Xd7m
K3fcSQvapZ2aFUJRh0xoxR0Q8okL+8RFtzeeziJRix/hbc323WmfhdZB3fZd
Mjprg8IaLNd3qLmsbYxg7Qpk7drN/tpm/w5ibRhe2nUW3tv1IdMyVVEL0/f9
ezevuWfK+N+HLo2Fk/l7WhOPyPcgVSHdM6fO+RG70zYhCk9T0LWmVkT2zgtH
WJcCJcNYjSBFx+PVwmg/xO6J1ImBRTBFN9Mmykx5bGBxkCbmZYxMlgVxRJZZ
FpwnYOxmfyVWYcJKTyEr06mfHkUPlPLursJl7IzxolOnafDvk+YZrYH6kH35
z4NsZWzItiBk24OQwc1b5bYE2eME2e5z8O6uo4LEFKUs7r13Xnic/v/Ar37+
U2qUn44Cmkx38lb9hMlHo4FmFpz2FAR3Z5fD8FZmeVP/ugCmVwb8y2WNdner
+T2Twhv3St0BsUdKHODkyGkobImTx7B7cLwMTeXVQBp/epJLXUiOMOB1ATsL
E22hOFl/+rDx3ht9jEmrNTO/jSJ+bbaN0nohsA+Sb/qo5zdRZrCI+Svm+Y0X
oZ08w4XY5UJhF0cz00Vl0ZnkLhwBYz1C2NCvQJq3hHzs/FhcEWAxZOYjYnFd
BIu7cJDbG43FXcPwIrL4zu7jnJHJprfetXF5/51rBrv3tdSUP/qf/+8HQ0Pv
vxH6VBQeZdn6EWFuyrHReOR+KgwgjcjaeIfFieh9o/FILM6sisbjRdF4ZA6N
CSbKrhyNb38ZkAbKIJBytBUWIYqL+ejqn4/mOBdNDrpXXhuYFeyfiaVHRHpy
AEw7sN95DZAhJhLvbtyxlteudXzSfySU9HyaDZhfDkK5VKFcFh3KZRgr9G9V
rBkNyi1BKB/bBQilzP+nt78gYMtGG84CIxGUrTv9+19ToyCYGUDQnIVHjkgE
jo8ksJwJHA1Aurke7qqmpLkA8sq1Vo90iSeayc73RH1Hub+KCEfrvunm7KRR
iYsPEGe6r0fAhf2pjkHLbdOdEn0CZlmR3+6wxh3YLCM6pfv6XGGey53zs3mw
89GCakRKd9w84kqw+ucAVnQ/9DrCKriSiMbV8ihcrfoLuNopXB3YI1yd2v68
cDUxNlezXWubely5Go7FFR1kCJm36sYCa+oY1sZkVUPUVqtkhTzLVsDUDFHJ
fGauYUoPdBFSaY12l5fvu7BJ1qUOVYt4igtSFTHTkXXl8OluOW2WKgrvLwEr
TGDp0pS4quj2cxiDK7arMHHlEVJ0cCsSqkHzIB8NQNWpUPW4UK0MQGV2dANM
bYhgapvP1KO7Xaae4++vzUqdEJsqOdgq+zUJ086LKkjQz+odhSqzWPizqZqn
VPHoprsvalZ8+Ip+TqLlQTJ/8g77VYNtlZ4sQtMIqnReI6TrGd60VvifJqzd
J4yOItA+iO2QRdwheSHRyV0yxNSFGDso7eLhLcTGhpg4/HGwt8XmT2zt61DX
L7ZWrwQ2DoBLIc9xdLmhsCOSwhVRKYSV+v5xwnADYrjZxXBzEMN7FUP6/zt7
TyKGz/L/35ibOj42hnJaif4N+Wnythb6KLExMAzrkDke6TMERixXAwQ63ZII
ZAA9u1j1nC02bZU+dTSnxUSOzgtxuiRHEwR9LUywSY8cZ1mL4I1x0yMKRFtO
m64XAqy1B1nzCLPwn0OYR3Dx+sCcHFOlUBmwavp8sMTX5I0cPIdFp8ojrEKf
OT+oVkeBav1IqG7aZp+hYerdK07BSWXqrfmpCbGZmuc2zOkuU8OjNMwE87nR
f3uq6M9D1QWP9CTxsD8KWPEjwFrYZN/qIsvQZlmGhgmmkZsetNWRQ8O7nbYM
RPhTfrvd8RgFIY/oCQfBwduRIdFD6S4azvD/4rIjC0vHjewcH8OV2pbo0DUa
QKuiALQ2AqBNCtBWBgj27bDLjwN7h+G9K04iQM/wXV+anqpn40YlaP75EpQf
QRB9eqt+kO8Egqgs6k5aACK6rT2vIzpEOITwJlqdnd+FITIpnrKSmSbDUQov
HWMM8rKN1mQ8JbiNFoMoWahwqefaTQteKRqY9BBAQQe3vhBj5emcRdPV2DCF
+OEJpovHhMnuUjTzu+pclmyXi8bSyjFYWheDpe0Bll68YhgOXoks7Xia7/pU
Qqq+fSAqSwtclmacHMlSViyWPm5Z4kFrLJaqLEteTJDiIkEy285J9YEdfo8g
8hmK87EJu9iEwpYZ6m3BtZ/5HqdLwDaI11/mNDJ1IjKhADKmhZV0SQsrtUMS
ItQtQ1J5t268ekRRiN/1Ga2ZWYYCZiQMhQSir1qIWvXEx/alPkRdY0G0JgpE
GwWiK1yIdsrtHt8D8BJTdAIpekpc/XexEUr0DxJdBAmJw38RPxR/GT/0mRU0
odfKjoLuKliKdFI3m4/JtOIz9DjLPjkIaTgyxZTRbOdxZz+Bm9zIruaTxF1N
/7BYgCDduC/q5FYWYpbwfrQ75aA0Oklm8oiGEf9GGosudSmStjYIfxlFqy1F
ds05gqItliJ7pOjxvUjRlcNwSCjii38bG6KkmBAtUoByIApEYbeh2a3884Ao
FEnRhWNR5OlUFHJ2EGKixOu8ONeSdFXn6dqOLlusRI0Ok3S1OHdEojBrgfwO
aWwFTJe4VOdYLhXvsiXLOZ6WKvn4dlWv2/Rq+Bh3rZ4Eps3OI76QhFEIC5lT
/aMR1k+ErRpBGKzWjz5hwjZEJczU5hMI2MsI2PtXHYdTO7nZjQZYirv/afhK
d/jKDfAleH0qMC9N0o/RcfGaVunjRdeZzYRZ1Twv8ZHHOTXK2MUxGVOXMkOT
KaLkBjszuS2PTgizfMW7fPH/7e6BBUs/hiKrVcGKWMsJYvGRiOnoJJzp8KQD
lIzk6mPqZSV8/NGBjQ/8lPEcVc6fjqmg8VTF+wbaDccE7Z/sdB7NytrUzhi0
ZWODtsoFbb0D2ub/v7bzjs/qOvP8u/eVANtxiidxMonTk0mZ2cnO7O7s7O5s
mdnZ3fnsPxgb40ZHBZAAIYQokkCo994rolfb2GAwtmkG995iO7jEJYlbEpfY
iRNz9veUc+65b5GEk/njSPA23fv8vs/vec655VXQdM3gpBbEJ28CaTefM78C
aR/t4xb9/3mgsVi5nwSvjES8rMEm0bXB0YVAgS2E1KMrNpGFKV5xxxZ3UHGH
U6SDWlobpn88ueueFEtTU7FkvSpm7zar61DMUTE14mJaLdKNx+IWIK2AJfw9
B2kgsrZQbvkJO/OYQJSZCiI8R1711fODaEQgGhkHInr89j3GnNwn/34KEL1E
EN3yvvm9QKS3tohdmsKuFvtHsImn7LQ8USlcTZGhBdDpa6N+xcdopGFIAxTz
xNWQzpYulzVPt+7JK+nam3s+JSvqdsFTNj0yuaNjhdXhinrcW/dcEg7rc0uj
PVZg8uuSgJNXpgMuIwIb18dV1HQVNblK6ZEWmwxq6f1qY0fY5yTMAv9kqA2P
gxow271tHNQOGPPTWwAQUPvDfkHtX9KjtkRRm36VPVHinNxcJS1qU51v+WtR
ekjQdYkpWDPXbeTSKN0XtsPjDY/N22QmhM3G3S1JVfMIV9fjBBkUWOItsWuF
jNlFBKUrUBejp+nIsw5ZWM9MXFjXMuVWFdjOVrGduebL65smaWhRyjakpCzu
nxGhHf4UU9UVLlrVdDvMhLJPO8poMGX9E1A2ypTZkyt8yOgjbsUM8XYUxFO6
4Pm0QvbOLe+Zj/c/we/6v+khWxr291MnQdi08Qij8mhN7RrtuwgyD7C0fNGZ
X1QcK6J918JKWxyzqmyFzKG6SOY11a2c22G5WlIbSsT+hQ4+n10rhYEtr9cD
zqlW0u2yVaNbtlL3AofcdjWHaqYwsICoiuvKVRt1mtavvB7L1UbPsyYFEywL
VtWot79omjxMZlRvBWVpon/fhD6eaLrDo+nHNxvz8kFj3j34njm3/xEO6f9J
T1NeSNMlIU35STS544JpaSqVVn5WmXG3wFeKJiQp7kiShF9ANrWw0nkVL25m
68VDalMZ2rzX2O87U4p4LPX694BY+hNiFBBB2rKHzd24DE2JMERvgiMRQzb3
/MVPXrgShgICKPZNQahHWnRu01MxBH7aExka8RjaHGWIfu9DyTsAhg4rQ3fd
II8/A4ZeAUPvHXzHnNv3IG/k/07PUH7I0Gf+GIYgBiii7/Msk/7KpmmCJXHD
Prvca9gFo0wfIzalBbxqvpAvQqOVz0VgKEtHdlXYengNllS/3Br/2PJi22Mt
qU1s6ydBV2TtYWWj18wTUauaZFWLal+zuNNqngQWN1v7tGzRFZE0H2yVyhdl
bFo6xuw8MAhNKh6aFDdTtXwDlRSExeyp6Y6wwQkIGwtPhdiNerefCMMk8DCa
qjv3hYQ9i3r3yiFj3j/4S2P23kOP/XN6wJaFgH1eAFtyHoCtD01qZqkalQJ2
tb17QGYqvuj8BV5w4GJHs8F5ypYtegsqxajwdAq8THa1a5n9Ft7iZdHy8Qq4
u9Kb+dRxHZQaqOvuy+pleJR9csjiDjIEYI0unbplB26s1rfKYRwwUNIm3VWp
18MzZwnLpzELW+x7YmhdxueN3ay2x3O03tDRGvVmKql467G8jQpvw8Ibv34H
KmIq3k7fGPL2Gnj7zcG3jNlzirfxf6UHbvknBW6GB9yVqYGz1TEBtsmzNi0d
awyZbbjiDFnchwz/S0MYTxPxg2BaVp/SxfggM31FY8JqRGGTFkdd2SK+itjA
VlPb7joszzFTWpnt4RMpo7dp56UrW5dFVrZc2bSUdX9CyobSUmYbeYYMgO1H
ybwZkB1BybwTbdcZhew5lMyf33rOfHjwdWN23cHv+qf0kK0IIfvcnwIyhGdW
mVX2mg08XXQ99SeztanjoRazzpEDvHJ10Mfk8gkMi+mMmCV8ijIVzKXhQUNb
My1tmT5tMnVs0NOxPhFwcjBIVnPTO1qcy2aGA8ytfhFjf+kYs5z9qzGmPdlm
vf3YDrjYHkBGN0S5ebdAdgyQ3a2QnYWLvX74Y/PbQz83ZsetLME/poesIITs
i2Z6lvmjneyqMnEzDzJz7cawlbq+3PVmZs6mP7p65tgSOoUxU7x4sKvVKmRT
HGR5CprOICfPWWMazrhmJtBl0yoJrdgFcjDIczH60OQ1r3CNflOnc7OAELPt
Wbdrz3r4e/sUMIUsIMJiX07N2HCUMXrNMCqlZWynZQwmdotlDJ3Z3TfJ88+D
sTcO/9787tCrxmw7QI/9z/SIrQwR+5IgNsn23yJ2Rcn4iF2zkRGjimnj7hEW
E8QyInjNpxmk4ytd85/NK6k8oQy/CIYLZzBZsuJMVkZIVQOPuE4kCwDSSvdt
14V8p4nCJrfglQ4vKpl61dlaPtS4rlUmlXDk9W2CV4mHVpn4F51Y0yEOFhBW
OjOuUOti++qeHFlWzySsRgQr+lyyLsJqzMdqp2KFBuw2NGDHgdU9itULtxrz
1uGPzEeHXjZm61567H+kx2oV//ysUJRIVeGkqQoIK/RM40AlixNiMgoVIcVj
nj1kPRmi4upZrrt3lZFgWlzrWnxu6vO8s64yJmQpw2dJluULm2RtHs+tanaF
MIqTNl9E05rwwjGHU4bDiT61lM6JKONbAGwQo3KDmvvyTjYrV/cr0jL1DVMX
8mQa+qQc0lJFs95Ipw1MdSRwRY/bkjiSwNVecHVjAlf3HZDnXzpszC+P/Nb8
4dCLeNN2euy/p+dKvkT7K38sV+bKUnUsD6yrk8GigmjDPocXKRgt9ap54lWx
yaEFPrNDowqLYRJdgc4b6RUAi0YscIjp1qygCSPPGgt4gctjKzZJuDJ8uGT5
y+OrzW4CV0K2pzJqsDaQPYlRdapRyXUASUDR1ykQT1+fHE9gqUt5osf6wNIA
WBoCSyNgaUyXvXbuUJ5Q+g4qTyfQXt1/szz/U/D06yMfmo8PPc+kjwPT6rD2
feq8SJpBh6iBEpwpAtKGJJACIok6eG2spJTwj7nuQpxJcxSIRWW70x28ykcg
xVKRpCdqCT9c15ZrU76CDxuu4Jub8/Jpowx6bqU9fJgepbhf9looGNyv6wUR
NDtcB3TWqz2VkD2Vtpv0GGWmwggbWMM3z68FO8oRHgNFcAHmqD/kqN1ypAz1
wpf6PY5GwdEW5WiXcnQTcYQW6ija9JOodQ/cIs+/csSYd2/7wJy79TlW7b8J
R6mu518T4Sg35QGdkKO1KTj69EQcyVJ8uXEgzd7EpU5vEzCP6tt85gYIEUE8
lCFsLh/OyeZvYrQmRL+Jn5zasCiAISKIBy/H8/KC50l52oP7nvSJmNJTtgip
Vc26tMVABVr4ilv8wrfWXgyRwVDRp2ntY6hokR41rwx1boMOrn2dwhdKIvXp
m7rCbKnsPj/EWgaiiNG/qexNiNguQewQELsdZe8UEHtIEXvtNmPev+19PCmn
bf1DesTWhoh95XwRMzNKtPARY2XnxZjUvSBKGfsUNjAJMfq6oWpZYkhBGdOl
ThWoUVEjHjZUStcEbhXXkueQatKSd15MxYkp9Zx1oUeZEi5158VUhXLlmOpJ
wVSfx1R/MlP0u0tbqV7w1A+eBrVFZ6b0qOEuWNY+MHUApe9WlL47wNRdaKUe
PijP//y2c+Y3R98DdPdxKP9reqbWh0xNS8/TGm2hL19H8qbD6aooTgGvKmQk
0iRNVIZroLT4JUNVleRbcUdUDi9Q5XANzA0P5ohvsV9ZqgICStl1QGX6QMlo
1MneeTFFt5qms2haTIhVq2JlJ7putmeZCggnW/w6XfHrotCmoIgYMjWgx6Mo
LURD0o9biPosRABoGABthiltVYh2E0QwpQN7BaI70T+dQf/0yCF5/vWj58yH
R9/BhPAo78l/SQ9RSQSipecHUalAdGWZgnReEM2JXqwVhagqDUSeJQlEgbiR
6AV8CB4ueyFBMr/z23EhKSORpIBQCv5UJHHRgwmtDa+98YGagKdPT5Ynbsgb
ABIB1Txg7HIj8wSWukcmx9N+8ER3DjyMPuoYitzdKHKP3SrPv3n7OfPR0beM
2baHP/0/p+eplH7aL0OZgKPLPY6umIijeMgRl7XZAhG1UeF0TtupBXzFnweR
IJRV7ZooNiJdetJ1glgQtuBWMDEjWTPINEvrpcTlCUX6AlnhJHqAk36R1Uq6
eFQO/jWbuN9s81d0KiKu1yZE1rVZq5sYju9F4ehJAUdfMhz0+lYtVR0+HSCj
b7O0QIPebG2rnjK1B+XqBpSrW+A0R1CujoOOe0DH40rH27d/bD4++hqw4i9C
i/19ejrK+OcXxGSyz7m8SAOKmY4OiA4jW1JmpCcFgbuG7eZarwu6nuxmNq+B
W0qodtGEbR7q1PzwPLwFgMQDJk6w0HkvejOYbHt6nlgOH87zmm23AE/us9SO
evWfTOc/1oOW1Yc9e6pyxiZkT1lf2cQuZD2o2Vu0pJOPW0LrKaY1gDWtdka/
Vqdw3jSO6aKzj9EZlXZId+Q6pE4Bjc4+RmdU3iVDOyR3ZsFEuNFfbhIvItzk
bZdyXevW5ohpG1PaQNoYfGib0kYN942g7SBouw20nUBzdC+aoycPy/Pv3PEH
TPZewAc10v//U3rYNvjXBC76Ax984X8XJLfcChtZ03qaCV8+PmyOtfIUrGVG
WJsrrEl9s5IyZUAqi4taVlja3ME9x9mUyKTOelMaV8pzy030d6bKCQtgarkO
euty4SwWhI0TP17Q6JbKhLTC5oRqF4vLyQstPKQfp1Uo62LiaAHxps0T1zxu
ngi7jAhyYm6dztz4ez0ZNnhapV5pqrAFRFrs6xHW6GluogYca1z0uBMfCWHr
V9iGtghs1Ilv19ON96Lo3YSidwhF7yiaqJNoou5HE/XUEXn+/Ts/QkV8kqPp
k8ZqbYxc67U4zPBUd/P4V4Kr0oMrIBNTBRdVmwhXCS0Tr5EncKXvlNmcB5Ut
cZMlKsMnSiqhQF+YontqMZYieoOtieuSKYo585qQou+lo8jZVa3iU+9VR8Ko
ZTAZI6qOvZujGI0SRttDjLgXh1/dCr+6HdXxLlTHB1Adf3ybPP/bY7+Dod3P
O/F36Q1rk/eY8uROIfB4itk7KEzXyjgBT+bqjbpGIEAFIU0ZiTQFjFOGmQ+D
WqBjob3zaKb1LDdkC7NrxiuMS3y04tqQ20Kov4OEhlzrYWqLWinu5J2lzlUx
YIuaaopanEW54qhwRXrydd5Y3x5Wx4D4osUDoquTyyKPjTS6Js0YPcZW1a+M
DYSMtYGv9uEUjGlNJMY2b5MObIfe1Go/auLNytgdYOw0GHsIjD17VJ7/6Ni7
KJxy3st/TM9Yhc9YrgnvVRq7OGmpfBJ8IWRXc3Pu8RVjwOCJtMY5u0JGgmOR
XxFkMTYtO+OrjjKfFa5BTYYybb8sP276l+loy2/wVz9tz64HaoGaGw64Jguc
HDkuDE+lCkIfY+SKuCJKXaSXFLf608BpUeTaHXJEnCnpmDR13SmoU9qssyVS
1zyYTF33aNj3M3UgbnirULcNrrZTqbsBxfEWFMfDKI53ohM7g07sEXRiZ2+X
5z8+hlnhrn0s2H9IT10l/9TvLsj+OFytKgz7ysmSR8/Poio5MXgpSmUCeDJL
XFgt8HHVZPQsbHJCArPmJodyJp9t9V0fb5fWXR/W4PopXQhtdCUT/1vhVhkA
GYPGnX5AjOkTXrGkxn51i2W5WOePWi+JsTatmJmp4IpNiq64T5fu1reYrhol
i+nqV7rUz4iu1iGhq8Ona3OULu7ztytdemXqjUrXEdB1DK3XPWi9Htea+evj
HwK5V/GmIfr/v08PVxX/1FvJL/p94iqWvcvbebBlZm3Uqlnu4IozW9Mm4kqw
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
x8ylVcF5fB4SZ34dj5jwMEUcvd4xISZAqW/zX1PfciD9u2JA+a992zLu25bR
iSfjYWAPIHBnVtQhxr2a72dR3CnJz9rTMUJk/DrvxnElXLcJgmku7RmDPsUg
THsp3fJVndWTyfpt0awfQNYPAYMRynrY9nY0aXth2wfUto+fMOb+u415Bln/
y6dlp74iCFzIvzLu3j3a9+47rzxL/3vlxcfvy3BNuqf5hWH+r0+R/+WS/1ds
cm27lfzqKpW9mmVn1QNSXcWaC6FpzKPkn88nFpHuC+u8Ks75n1Vvj/15/ZuV
e7Ht3zzBM33BZbRMmPoZplAvCefUJ5Mv4sPAqzsl613m89UMa/nqKSs9qrZr
bUqijh+Q7nTTuETDH9RaUcPtOSs/4ikP1VugetvWBOW95B9F8m+h5EezdgO8
/qCes34GE7NHbPL/5A9JwsfPnfvVayfa6io+/viXr2IPk3P+zoj/j5Pz1vuv
0Kt6Z1ZKzqcQn7W3pVWFJ91psPsjSCx+vSS7S/gGT36dxOU2Rvu2JU2iP52V
SM17s6v3dt4eEAMBI5DpIyCDp+dRCpgEpSAgCIB2scjPYy2Nbpf9EJIgmGbW
94TvL03OfikCX3UYJGZ/7YhyAAYakf3NY1oEwECnMtALBvqR/YN7U2S/FoAT
aNruv8eYpx8y5u0fyyYqBBeJ4D89+8jdx8vXrhIvSAHBcf6pt7eZyAOEgZg9
jZVNoEo5qPY4gOmT8c/R4z2Wg3k+Bxen44CbADV/bgbo37x8wy6wmO/GpjwQ
Djzy+PBgnmsF8tUPmAgAwxM6QBCBog2FnStBobs1FmDgYlDUqTxMMcVdyTww
CutoFRckxD7DdmB5oJGiEjAIldoNVAOEmmGGAR9Ux92ANYRmgNC6VWHYERrC
AAxhCCCMAoQtN3mGoHeHPIPm79H70cE/YczvXpBu4MsCw6dE+Af+5Z//8fe/
f+tl/l+QAoaToSNME0dYl+AIIGE6SLicKgGhcKEzhPFAmO1uwj6vTutAXOp/
PSOAJxZx4+8hEOkJFQE6zZCPCnuWQCeccE0ItW/xtA9Idjo+nE54a1aqOleC
1aR+MZv/mlBxkZymclB7vQ4uBOIA8knfMBv7k4W3olcPq/AJDsCVAKK3QfQO
dYAeiN5nHQBVYAxVYDtawL1oAQ9oFThxF7p+TNueecSYd3/Cj3050gE+/cDx
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\
\>"]]
}, Open  ]],

Cell["The SVD hanger matrix for A is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hanger", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.5313464773457518`"}], "0.5719843891707896`", 
      "0.6249038162446914`"},
     {"0.5999893442766566`", "0.7748454146191979`", 
      RowBox[{"-", "0.1990662457526906`"}]},
     {"0.598066641576612`", 
      RowBox[{"-", "0.2691624825054968`"}], "0.7548959201404855`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503250600734779*^9}]
}, Open  ]],

Cell["The SVD stretcher matrix for A is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"stretcher", "=", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
     "\[RightDoubleBracket]"}], "]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.2027028780377895`", "0.`", "0.`"},
     {"0.`", "1.8400406763882087`", "0.`"},
     {"0.`", "0.`", "0.2938648847433286`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503250600784863*^9}]
}, Open  ]],

Cell["The SVD aligner matrix for A is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aligner", "=", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "3", 
    "\[RightDoubleBracket]"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", "0.4368654751575026`"}], 
      RowBox[{"-", "0.8072255368672854`"}], "0.3969074063868452`"},
     {"0.8814989908407445`", 
      RowBox[{"-", "0.4720770611708551`"}], "0.010137922027601526`"},
     {"0.1791872924125988`", "0.35430238631091915`", "0.9178026657687534`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503250600839588*^9}]
}, Open  ]],

Cell["\<\
Fill the blanks:
The length of the longest axis of this ellipsoid is ....................
The length of the shortest axis of this ellipsoid is....................
A unit vector that points in the direction of the longest axis of this \
ellipsoid is
{...................................., ...................................., \
....................................} 
A unit vector that points in the direction of the shortest axis of this \
ellipsoid is
{...................................., ...................................., \
....................................} 
The volume enclosed by this ellipsoid measures out to 
 (...............................) times (............................)  \
times (............................)  times \[Pi].\
\>", "Text",
 Evaluatable->False],

Cell["L.2)", "Subsubsection"],

Cell["\<\
Given a 3D matrix A how do you use the SVD stretch factors of A to determine \
whether A is invertible?\
\>", "Text"],

Cell["L.3)", "Subsubsection"],

Cell["Here's a 3D matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"4.6", ",", "1.1", ",", "0.4"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2.4", ",", "1.2", ",", 
       RowBox[{"-", "1.6"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", "0.2", ",", "0.2"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"4.6`", "1.1`", "0.4`"},
     {"2.4`", "1.2`", 
      RowBox[{"-", "1.6`"}]},
     {"1.`", "0.2`", "0.2`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5032506008743677`*^9}]
}, Open  ]],

Cell["The non-zero SVD stretch factors for A are:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
   "\[RightDoubleBracket]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5.521105812641541`", ",", "1.6992323577473945`"}], "}"}]], "Output",\

 CellChangeTimes->{3.503250600918651*^9}]
}, Open  ]],

Cell["\<\
i) The rank of this matrix is................
When you hit this matrix on the 3D unit sphere centered at {0,0,0} you get
           a) An ellipse on a plane.
           b) An ellipsoid whose volume measures out to a positive value.
           c) A 3D line segment
ii) My choice is.................
iii) Give a general description of the 3D vectors Y for which at least one \
solution X of A.X = Y is guaranteed.\
\>", "Text"],

Cell["L.4)", "Subsubsection"],

Cell["Here's another 3D matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.4", ",", "2.8", ",", 
       RowBox[{"-", "2.6"}]}], "}"}], ",", "\n", "\t\t       ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.7"}], ",", 
       RowBox[{"-", "1.4"}], ",", "1.3"}], "}"}], ",", "\n", "\t         ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "2.8"}], ",", 
       RowBox[{"-", "5.6"}], ",", "5.2"}], "}"}]}], " ", "}"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.4`", "2.8`", 
      RowBox[{"-", "2.6`"}]},
     {
      RowBox[{"-", "0.7`"}], 
      RowBox[{"-", "1.4`"}], "1.3`"},
     {
      RowBox[{"-", "2.8`"}], 
      RowBox[{"-", "5.6`"}], "5.2`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503250600970078*^9}]
}, Open  ]],

Cell["The non-zero SVD stretch factors for A are:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
   "\[RightDoubleBracket]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", "9.32416216075203`", "}"}]], "Output",
 CellChangeTimes->{3.503250601084754*^9}]
}, Open  ]],

Cell["\<\
i) The rank of this matrix is................
When you hit this matrix on the 3D unit sphere centered at {0,0,0} you get
           a) An ellipse on a plane.
           b) An ellipsoid whose volume measures out to a positive value.
           c) A 3D line segment
ii)  My choice is.................
iii) Give a general description of the 3D vectors Y for which at least one \
solution X of A.X = Y is guaranteed.\
\>", "Text"],

Cell["L.5)", "Subsubsection"],

Cell["Here's another 3D matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1.4", ",", "2.8", ",", 
       RowBox[{"-", "2.6"}]}], "}"}], ",", "\n", "\t\t       ", 
     RowBox[{"{", 
      RowBox[{"5.0", ",", 
       RowBox[{"-", "0.6"}], ",", "1.9"}], "}"}], ",", "\n", "\t         ", 
     RowBox[{"{", 
      RowBox[{"3.0", ",", 
       RowBox[{"-", "2.7"}], ",", "0.3"}], "}"}]}], " ", "}"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.4`", "2.8`", 
      RowBox[{"-", "2.6`"}]},
     {"5.`", 
      RowBox[{"-", "0.6`"}], "1.9`"},
     {"3.`", 
      RowBox[{"-", "2.7`"}], "0.3`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503250601122154*^9}]
}, Open  ]],

Cell["The non-zero SVD stretch factors for A are:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
   "\[RightDoubleBracket]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.415324045942585`", ",", "4.169213419284998`", ",", 
   "1.8361037143921735`"}], "}"}]], "Output",
 CellChangeTimes->{3.5032506011541033`*^9}]
}, Open  ]],

Cell["\<\
i) The rank of this matrix is................
ii) When you hit this matrix on the 3D unit sphere centered at {0,0,0} you \
get
           a) An ellipse on a plane.
           b) An ellipsoid whose volume measures out to a positive value.
           c) A 3D line segment
My choice is.................
iii)  Give a general description of the 3D vectors Y for which at least one \
solution X of A.X = Y is guaranteed.\
\>", "Text"],

Cell["L.6)", "Subsubsection"],

Cell["\<\
Lots of folks like to say that a given 3D matrix A is:
\[Rule]  invertible if Det[A] \[NotEqual] 0
\[Rule]  not invertible if Det[A] = 0.
Explain why they are right.\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"DiagonalMatrix", "[", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"a", "0", "0"},
     {"0", "b", "0"},
     {"0", "0", "c"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503250601192474*^9}]
}, Open  ]],

Cell["L.7)", "Subsubsection"],

Cell[TextData[{
 "Given a 3D matrix A you do an SVD analysis and get\n             ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {"a", "0", "0"},
      {"0", "b", "0"},
      {"0", "0", "c"}
     }], ")"}],
   MatrixForm[#]& ]]],
 ". ",
 Cell[BoxData["hanger"]],
 ".\nUsing this, you can compute ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"t", " "}]]]],
 "via the formula:\n\na)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"c", "0", "0"},
     {"0", "b", "0"},
     {"0", "0", "a"}
    }], ")"}]]],
 ". ",
 Cell[BoxData["hanger"]],
 "             b)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"a", "0", "0"},
     {"0", "b", "0"},
     {"0", "0", "c"}
    }], ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "\n\nc)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"c", "0", "0"},
     {"0", "b", "0"},
     {"0", "0", "a"}
    }], ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "         d)  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"a", "0", "0"},
     {"0", "b", "0"},
     {"0", "0", "c"}
    }], ")"}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 "\n\nMy choice is ..........."
}], "Text"],

Cell["L.8)", "Subsubsection"],

Cell[TextData[{
 "Given an invertible 2D matrix A you do an SVD analysis and get\n            \
 ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {"a", "0", "0"},
      {"0", "b", "0"},
      {"0", "0", "c"}
     }], ")"}],
   MatrixForm[#]& ]]],
 ". ",
 Cell[BoxData["hanger"]],
 ".\nUsing this, you can compute ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{
    RowBox[{"-", "1"}], " "}]]]],
 "via the formula:\n\na)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {
       FractionBox["1", "a"], "0", "0"},
      {"0", 
       FractionBox["1", "b"], "0"},
      {"0", "0", 
       FractionBox["1", "c"]}
     }], ")"}],
   MatrixForm[#]& ]]],
 ". ",
 Cell[BoxData["hanger"]],
 "       b)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{"\[NegativeThinSpace]", 
   TagBox[
    RowBox[{"(", GridBox[{
       {
        FractionBox["1", "a"], "0", "0"},
       {"0", 
        FractionBox["1", "b"], "0"},
       {"0", "0", 
        FractionBox["1", "c"]}
      }], ")"}],
    MatrixForm[#]& ]}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "\n \nc)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ".",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", GridBox[{
      {
       FractionBox["1", "c"], "0", "0"},
      {"0", 
       FractionBox["1", "b"], "0"},
      {"0", "0", 
       FractionBox["1", "a"]}
     }], ")"}], 
   TagBox["",
    MatrixForm[#]& ]}]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 "    d)  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ".",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {
       FractionBox["1", "a"], "0", "0"},
      {"0", 
       FractionBox["1", "b"], "0"},
      {"0", "0", 
       FractionBox["1", "c"]}
     }], ")"}],
   MatrixForm[#]& ]]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 "\n\nMy choice is ..........."
}], "Text"],

Cell["L.9)", "Subsubsection"],

Cell[TextData[{
 "Given a 2D matrix A you do an SVD analysis and get\n            ",
 Cell[BoxData["A"]],
 " =  ",
 Cell[BoxData["aligner"]],
 ".",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {"a", "0", "0"},
      {"0", "b", "0"},
      {"0", "0", "c"}
     }], ")"}],
   MatrixForm[#]& ]]],
 ". ",
 Cell[BoxData["hanger"]],
 ".\nwith a , b and c all positive. \nThis information tells you that given \
any 3D vector Y, there is exactly one 3D vector X with A.X = Y\n\
Agree........................................\n\
Disagree........................................"
}], "Text"],

Cell["L.10)", "Subsubsection"],

Cell[TextData[{
 "Given a 3D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"3.0", "0", "0"},
     {"0", "1.0", "0"},
     {"0", "0", "0.2"}
    }], ")"}]]],
 ".aligner.\nYou plot the hanger frame and learn it is a right hand \
perpendicular frame.\nYou plot the hanger frame and learn it is a right hand \
perpendicular frame.\nFill the blank:\nDet[A] = \
........................................."
}], "Text"],

Cell["L.11)", "Subsubsection"],

Cell[TextData[{
 "Given a 3D matrix A you do an SVD analysis and get\n            A = hanger.",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"5.0", "0", "0"},
     {"0", "3.0", "0"},
     {"0", "0", "1.0"}
    }], ")"}]]],
 ".aligner.\nYou plot the hanger frame and learn it is a left hand \
perpendicular frame.\nYou plot the hanger frame and learn it is a left hand \
perpendicular frame.\nFill the blank:\nDet[A] = \
........................................."
}], "Text"],

Cell["L.12)", "Subsubsection"],

Cell[TextData[{
 "Given a 3D matrix A you do an SVD analysis and get\n            A = hanger. \
",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {"2.0", "0", "0"},
     {"0", "1.0", "0"},
     {"0", "0", "0.9"}
    }], ")"}]]],
 ".aligner.\nYou plot the hanger frame and learn it is a left hand \
perpendicular frame.\nYou plot the hanger frame and learn it is a right hand \
perpendicular frame.\nFill the blank:\nDet[A] = \
........................................."
}], "Text"],

Cell["L.13)", "Subsubsection"],

Cell[TextData[{
 "Given a 3D matrix A, explain why\n\t\tDet[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] = Det[A]. "
}], "Text"],

Cell["L.14)", "Subsubsection"],

Cell["\<\
You are given a 3D matrix A and learn that  Det[A] < 0. This tells you that  \
a hit with A incorporates a flip.
Agree......................
Disagree..................\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["L.15)", "Subsubsection"],

Cell["\<\
You are given a 3D matrix A and learn that  Det[A] > 0. This tells you that  \
a hit with A incorporates either no flip or two flips.
Agree......................
Disagree..................\
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["L.16)", "Subsubsection"],

Cell[TextData[{
 "Given a 3D invertible matrix A, explain why\n\t\tDet[",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 "] = ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", " ", "[", "A", "]"}]]]],
 ". "
}], "Text"],

Cell["L.17)", "Subsubsection"],

Cell["\<\
You are given a 3D matrix A and after you do your SVD analysis of it, you \
learn that all three SVD stretch factors are positive.
You make the call: 
Can there be an {x,y,z} with 
      {x,y,z} \[NotEqual] {0,0,0}
and with 
        A.{x,y,z} = {0,0,0}? \
\>", "Text",
 Evaluatable->False,
 AspectRatioFixed->True],

Cell["L.18)", "Subsubsection"],

Cell["Here's a  3D matrix A:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s", " ", "=", " ", 
   RowBox[{"0.2", " ", "Pi"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"t", " ", "=", " ", 
   RowBox[{"0.3", " ", "Pi"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"u", " ", "=", " ", 
   RowBox[{
    RowBox[{"-", "0.1"}], " ", "Pi"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hanger", " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "u", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "u", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "t", "]"}]}], " ", 
          RowBox[{"Cos", "[", "u", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "u", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "s", "]"}]}], " ", 
         RowBox[{"Sin", "[", "u", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Cos", "[", "u", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "u", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "u", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "u", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "u", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"stretcher", " ", "=", " ", 
   RowBox[{"DiagonalMatrix", "[", 
    RowBox[{"{", 
     RowBox[{"3.0", ",", "1.2", ",", 
      RowBox[{"-", "0.4"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"A", " ", "=", " ", 
   RowBox[{"hanger", ".", "stretcher"}]}], ";"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1.8674237136620848`", 
      RowBox[{"-", "0.9135254915624211`"}], 
      RowBox[{"-", "0.07265425280053608`"}]},
     {"2.106762745781211`", "0.5290067270632257`", "0.223606797749979`"},
     {"1.0364745084375793`", "0.570633909777092`", 
      RowBox[{"-", "0.323606797749979`"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.503250601259902*^9}]
}, Open  ]],

Cell["\<\
Here is the 3D cube with corners at {-1,-1,-1}, \
{1,-1,-1},{1,1,-1},{-1,1,-1},{-1,1,1},{-1,-1,1},{-1,-1,-1}{-1,-1,-1}{-1,-1,-1}\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ranger", "=", "2.5"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"bottom", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Blue", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", 
           RowBox[{"-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"top", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"struts", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], "}"}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], "}"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}], ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
       "]"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"bottom", ",", "top", ",", "struts", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], Thickness[0.015], 
    Line3DBox[{{-1, -1, -1}, {1, -1, -1}, {1, 1, -1}, {-1, 
     1, -1}, {-1, -1, -1}}]}, 
   {RGBColor[1, 0, 0], Thickness[0.015], 
    Line3DBox[{{-1, -1, 1}, {1, -1, 1}, {1, 1, 1}, {-1, 1, 1}, {-1, -1, 1}}]}, 
   {RGBColor[1, 0.5, 0], Thickness[0.01], Line3DBox[{{1, 1, -1}, {1, 1, 1}}]}, 
   {RGBColor[1, 0.5, 0], Thickness[0.01], 
    Line3DBox[{{-1, 1, -1}, {-1, 1, 1}}]}, 
   {RGBColor[1, 0.5, 0], Thickness[0.01], 
    Line3DBox[{{-1, -1, -1}, {-1, -1, 1}}]}, 
   {RGBColor[1, 0.5, 0], Thickness[0.01], 
    Line3DBox[{{1, -1, -1}, {1, -1, 1}}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  Boxed->False,
  PlotLabel->FormBox["\"Before\"", TraditionalForm],
  PlotRange->{{-2.5, 2.5}, {-2.5, 2.5}, {-2.5, 2.5}},
  ViewPoint->{2.7, 1.6, 1.2}]], "Output",
 CellChangeTimes->{3.5032506013433533`*^9}]
}, Open  ]],

Cell["\<\
Here's the parallelogram-box you get when you hit this cube with A:\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"hitbottom", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Blue", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", 
            RowBox[{"-", "1"}]}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "}"}]}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"hittop", "=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Red", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}], ",", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}], "]"}]}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitstruts", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"A", ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], ",", 
            RowBox[{"A", ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1", ",", "1"}], "}"}]}]}], "}"}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"A", ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], ",", 
            RowBox[{"A", ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1", ",", "1"}], "}"}]}]}], "}"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"A", ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], ",", 
            RowBox[{"A", ".", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}], "]"}]}], 
        "}"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Orange", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"A", ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "1"}]}], "}"}]}], ",", 
            RowBox[{"A", ".", 
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], "}"}], "]"}]}], 
        "}"}], "]"}]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"hitbottom", ",", "hittop", ",", "hitstruts", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"ViewPoint", "\[Rule]", 
    RowBox[{"10", " ", "CMView"}]}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}]}], "]"}]}], "Input",
 CellOpen->False],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 0, 1], Thickness[0.015], 
    Line3DBox[{{-0.8812439692991276, -2.8593762705944155`, \
-1.2835016204646923`}, {2.853603458025042, 1.3541492209680062`, 
     0.7894473964104662}, {1.0265524749001997`, 2.412162675094457, 
     1.9307152159646503`}, {-2.70829495242397, -1.801362816467964, \
-0.1422338009105082}, {-0.8812439692991276, -2.8593762705944155`, \
-1.2835016204646923`}}]}, 
   {RGBColor[1, 0, 0], Thickness[0.015], 
    Line3DBox[{{-1.0265524749001997`, -2.412162675094457, \
-1.9307152159646503`}, {2.70829495242397, 1.801362816467964, 
     0.1422338009105082}, {0.8812439692991276, 2.8593762705944155`, 
     1.2835016204646923`}, {-2.853603458025042, -1.3541492209680062`, \
-0.7894473964104662}, {-1.0265524749001997`, -2.412162675094457, \
-1.9307152159646503`}}]}, 
   {RGBColor[1, 0.5, 0], Thickness[0.01], 
    Line3DBox[{{1.0265524749001997`, 2.412162675094457, 
     1.9307152159646503`}, {0.8812439692991276, 2.8593762705944155`, 
     1.2835016204646923`}}]}, 
   {RGBColor[1, 0.5, 0], Thickness[0.01], 
    Line3DBox[{{-2.70829495242397, -1.801362816467964, -0.1422338009105082}, \
{-2.853603458025042, -1.3541492209680062`, -0.7894473964104662}}]}, 
   {RGBColor[1, 0.5, 0], Thickness[0.01], 
    Line3DBox[{{-0.8812439692991276, -2.8593762705944155`, \
-1.2835016204646923`}, {-1.0265524749001997`, -2.412162675094457, \
-1.9307152159646503`}}]}, 
   {RGBColor[1, 0.5, 0], Thickness[0.01], 
    Line3DBox[{{2.853603458025042, 1.3541492209680062`, 0.7894473964104662}, {
     2.70829495242397, 1.801362816467964, 0.1422338009105082}}]}},
  Axes->True,
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm], 
    FormBox["\"z\"", TraditionalForm]},
  Boxed->False,
  PlotLabel->FormBox["\"After\"", TraditionalForm],
  PlotRange->All,
  ViewPoint->{27., 16., 12.}]], "Output",
 CellChangeTimes->{3.5032506014554853`*^9}]
}, Open  ]],

Cell["The determinant of A is:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "A", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", "1.4400000000000002`"}]], "Output",
 CellChangeTimes->{3.503250601503302*^9}]
}, Open  ]],

Cell["\<\
The area enclosed by the parallelogram-box is......................\
\>", "Text"]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 115, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6352, 137, 193, 7, 28, "Special2"],
Cell[6548, 146, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7865, 188, 38, 0, 43, "Subsubsection"],
Cell[7906, 190, 1344, 31, 156, "Input"],
Cell[9253, 223, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9426, 229, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26797, 712, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27044, 723, 39, 0, 35, "Subsubsection"],
Cell[27086, 725, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[29431, 800, 129, 2, 21, "Subsection"],
Cell[29563, 804, 29, 0, 23, "Subsubsection"],
Cell[29595, 806, 44, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[29664, 810, 1975, 60, 19, "Input",
 CellOpen->False],
Cell[31642, 872, 909, 23, 72, "Output"]
}, Open  ]],
Cell[32566, 898, 122, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[32713, 905, 1013, 29, 66, "Input"],
Cell[33729, 936, 230095, 3763, 353, 172966, 2825, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[263839, 4702, 47, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[263911, 4706, 282, 7, 36, "Input"],
Cell[264196, 4715, 893, 23, 72, "Output"]
}, Open  ]],
Cell[265104, 4741, 50, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[265179, 4745, 293, 7, 36, "Input"],
Cell[265475, 4754, 725, 19, 72, "Output"]
}, Open  ]],
Cell[266215, 4776, 48, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[266288, 4780, 244, 6, 36, "Input"],
Cell[266535, 4788, 890, 22, 72, "Output"]
}, Open  ]],
Cell[267440, 4813, 797, 16, 224, "Text",
 Evaluatable->False],
Cell[268240, 4831, 29, 0, 31, "Subsubsection"],
Cell[268272, 4833, 127, 3, 49, "Text"],
Cell[268402, 4838, 29, 0, 31, "Subsubsection"],
Cell[268434, 4840, 37, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[268496, 4844, 446, 14, 19, "Input",
 CellOpen->False],
Cell[268945, 4860, 709, 20, 72, "Output"]
}, Open  ]],
Cell[269669, 4883, 59, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[269753, 4887, 170, 4, 20, "Input"],
Cell[269926, 4893, 152, 4, 22, "Output"]
}, Open  ]],
Cell[270093, 4900, 435, 9, 199, "Text"],
Cell[270531, 4911, 29, 0, 31, "Subsubsection"],
Cell[270563, 4913, 43, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[270631, 4917, 572, 17, 19, "Input",
 CellOpen->False],
Cell[271206, 4936, 796, 24, 72, "Output"]
}, Open  ]],
Cell[272017, 4963, 59, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[272101, 4967, 170, 4, 20, "Input"],
Cell[272274, 4973, 108, 2, 22, "Output"]
}, Open  ]],
Cell[272397, 4978, 436, 9, 199, "Text"],
Cell[272836, 4989, 29, 0, 31, "Subsubsection"],
Cell[272868, 4991, 43, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[272936, 4995, 526, 15, 19, "Input",
 CellOpen->False],
Cell[273465, 5012, 750, 22, 72, "Output"]
}, Open  ]],
Cell[274230, 5037, 59, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[274314, 5041, 170, 4, 20, "Input"],
Cell[274487, 5047, 186, 5, 22, "Output"]
}, Open  ]],
Cell[274688, 5055, 438, 10, 199, "Text"],
Cell[275129, 5067, 29, 0, 31, "Subsubsection"],
Cell[275161, 5069, 235, 7, 99, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[275421, 5080, 163, 4, 20, "Input"],
Cell[275587, 5086, 659, 19, 72, "Output"]
}, Open  ]],
Cell[276261, 5108, 29, 0, 31, "Subsubsection"],
Cell[276293, 5110, 1677, 83, 355, "Text"],
Cell[277973, 5195, 29, 0, 31, "Subsubsection"],
Cell[278005, 5197, 2299, 111, 404, "Text"],
Cell[280307, 5310, 29, 0, 31, "Subsubsection"],
Cell[280339, 5312, 593, 20, 217, "Text"],
Cell[280935, 5334, 30, 0, 31, "Subsubsection"],
Cell[280968, 5336, 477, 12, 192, "Text"],
Cell[281448, 5350, 30, 0, 31, "Subsubsection"],
Cell[281481, 5352, 475, 12, 192, "Text"],
Cell[281959, 5366, 30, 0, 31, "Subsubsection"],
Cell[281992, 5368, 479, 13, 192, "Text"],
Cell[282474, 5383, 30, 0, 31, "Subsubsection"],
Cell[282507, 5385, 135, 5, 51, "Text"],
Cell[282645, 5392, 30, 0, 31, "Subsubsection"],
Cell[282678, 5394, 237, 7, 99, "Text",
 Evaluatable->False],
Cell[282918, 5403, 30, 0, 31, "Subsubsection"],
Cell[282951, 5405, 258, 7, 99, "Text",
 Evaluatable->False],
Cell[283212, 5414, 30, 0, 31, "Subsubsection"],
Cell[283245, 5416, 242, 10, 60, "Text"],
Cell[283490, 5428, 30, 0, 31, "Subsubsection"],
Cell[283523, 5430, 324, 10, 174, "Text",
 Evaluatable->False],
Cell[283850, 5442, 30, 0, 31, "Subsubsection"],
Cell[283883, 5444, 38, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[283946, 5448, 2688, 81, 19, "Input",
 CellOpen->False],
Cell[286637, 5531, 884, 22, 72, "Output"]
}, Open  ]],
Cell[287536, 5556, 152, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[287713, 5563, 4921, 147, 19, "Input",
 CellOpen->False],
Cell[292637, 5712, 986, 23, 389, "Output"]
}, Open  ]],
Cell[293638, 5738, 91, 2, 24, "Text"],
Cell[CellGroupData[{
Cell[293754, 5744, 5211, 153, 19, "Input",
 CellOpen->False],
Cell[298968, 5899, 1930, 39, 310, "Output"]
}, Open  ]],
Cell[300913, 5941, 40, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[300978, 5945, 56, 1, 20, "Input"],
Cell[301037, 5948, 105, 2, 22, "Output"]
}, Open  ]],
Cell[301157, 5953, 91, 2, 24, "Text"]
}
]
*)

(* End of internal cache information *)
