(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    284591,       9216]
NotebookOptionsPosition[    219865,       7794]
NotebookOutlinePosition[    272920,       8903]
CellTagsIndexPosition[    272756,       8895]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.03 Using Aligners, Stretchers and Hangers to Make 2D Matrices Do What \
You Want\n",
 StyleBox[" BASICS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1) The matrix maker ingredients: \nhangers, stretchers, aligners and how \
to use them to make custom 2D matrices via\n             ",
 StyleBox["A = hanger.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  StyleBox[
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"xstretch", "0"},
      {"0", "ystretch"}
     }], "\[NegativeThinSpace]", ")"}],
   FontColor->RGBColor[1, 0, 1]]]],
 StyleBox[".aligner",
  FontColor->RGBColor[0, 0, 1]],
 " \nIn this case,\n             ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["alignerframe[1] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["xstretch",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 StyleBox["hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 "\n and      ",
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["alignerframe[2] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["ystretch",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 StyleBox["hangerframe[2]",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 CellTags->"MGM.03.B1"],

Cell["\<\
This is the single most important problem in the whole course. 
Nearly everything in the rest of the course is based on the ideas in this \
problem.\
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1.a.i) Ordering up a matrix by specifying an aligner, an xystretcher, and \
a hanger and putting\n                   ",
 StyleBox[" yourmatrix = hanger.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[".aligner",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[TextData[{
 "When you order up a meal in a nice restaurant, you make three choices:\n1)  \
 an appetizer, \n2)   a main course and \n3)   a dessert \nand then you eat \
them in that order.\n\nWhen you order up a matrix, you also make three \
choices:\n1)  ",
 StyleBox[" a perpendicular frame (an alignerframe) to define your aligner,",
  FontWeight->"Bold"],
 " \n2) ",
 StyleBox[" two stretch factors to define your stretcher ",
  FontWeight->"Bold"],
 "\n3)   ",
 StyleBox["another perpendicular frame ( a hangerframe) to define your hanger",
  FontWeight->"Bold"],
 "\nand then you multiply them out in that order.\n       ",
 StyleBox["yourmatrix = hanger.xystretcher.aligner",
  FontWeight->"Bold"],
 "\nThese are the matrix maker ingredients.\n\nTry them out:\nGo with this \
sample right hand perpendicular frame for your aligner:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"0.4", " ", "\[Pi]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
    "           ", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", " ", "+", " ", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", " ", "+", " ", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell["\<\
alignerframe[1] is the first horizontal row of aligner.
alignerframe[2] is the second horizontal row of aligner.\
\>", "Special5"],

Cell["Go with these sample stretch factors for your stretcher:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"2.2", ",", "0.5"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NoBreak]", ")"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell["\<\
Go with this sample right hand perpendicular frame for your hanger:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"0.2", " ", "\[Pi]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
    "           ", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["\<\
hangerframe[1] is the first vertical column of hanger.
hangerframe[2] is the second vertical column of hanger.\
\>", "Special5"],

Cell["Now multiply them out in order:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["yourmatrix",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "yourmatrix", "]"}]}], "Input"],

Cell["\<\
Here's a curve shown with the perpendicular frame chosen for the aligner:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", ":=", 
    RowBox[{"1.3", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{"1.0", ",", "xstretch", ",", "ystretch"}], "}"}], "]"}]}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Cos", "[", "t", "]"}], "3"], " ", ",", " ", 
      RowBox[{
       RowBox[{"Sin", "[", "t", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"t", "/", "4"}], " ", "-", " ", 
         RowBox[{"0.5", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}]}], ")"}]}]}], "}"}]}], " ", ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "hitplotter", ",", "hitpointplotter", ",", "pointcolor", ",", 
     "actionarrows", ",", "matrix2D"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "16"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"matrix2D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitframeplotter", "[", "matrix2D_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"matrix2D", ".", 
        RowBox[{"alignerframe", "[", "k", "]"}]}], ",", 
       RowBox[{"Tail", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
       RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{"before", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
    RowBox[{"hitpointplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
    RowBox[{"hitframeplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
The plotted perpendicular frame is the frame chosen for the aligner.\
\>", "Special5",
 AnimationDisplayTime->1],

Cell["\<\
Here's what a hit with your matrix does to to this curve and to your aligner \
frame:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"after", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     StyleBox["yourmatrix",
      FontColor->RGBColor[0, 0, 1]], "]"}], ",", "\n", "         ", 
    RowBox[{"hitpointplotter", "[", 
     StyleBox["yourmatrix",
      FontColor->RGBColor[0, 0, 1]], "]"}], ",", "\n", "         ", 
    RowBox[{"hitframeplotter", "[", 
     StyleBox["yourmatrix",
      FontColor->RGBColor[0, 0, 1]], "]"}], ",", "\n", "         ", 
    RowBox[{"PlotLabel", "->", "\"\<After the hit with your matrix\>\""}]}], 
   "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Use the specifications of the aligner, the stretcher and the hanger to \
explain what a hit with this matrix does.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Before the hit, the aligner frame and the curve look this way:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", "before", "]"}]], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell[TextData[{
 "When you hit with \n    ",
 StyleBox["yourmatrix = hanger.xystetcher.aligner, ",
  FontWeight->"Bold"],
 "\nyou first hit with aligner.  See what this does:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"alignhit", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       StyleBox["aligner",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", "\n", "     ", 
      RowBox[{"hitpointplotter", "[", 
       StyleBox["aligner",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", "\n", "     ", 
      RowBox[{"hitframeplotter", "[", 
       StyleBox["aligner",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", "\n", "     ", 
      RowBox[{"PlotLabel", "->", "\"\<Hit with \!\(\*
StyleBox[\"aligner\",
Background->None]\)\>\""}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "alignhit"}], "}"}], "]"}]}], "Input",
 AnimationDisplayTime->1],

Cell["\<\
The hit with aligner  aligns alignerframe[1] with the positive x-axis and \
this aligns alignerframe[2] with the positive y-axis and aligns the curve the \
same way.. 
Next, you hit with stretcher;  see the result:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"stretchalignhit", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", " ", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", " ", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Hit with \!\(\*
StyleBox[\"stretcher\",
FontColor->RGBColor[1, 0, 1]]\).\!\(\*
StyleBox[\"aligner\",
FontColor->RGBColor[0, 0, 1]]\)\>\""}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "alignhit", ",", "stretchalignhit"}], "}"}], 
  "]"}]}], "Input"],

Cell["Looking at:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]], "Input",
 AnimationDisplayTime->1],

Cell["\<\
you can see that the x coordinates were stretched by a factor of 2.2 and the \
y coordiantes were stretched by a factor of 0.5.\
\>", "SmallText"],

Cell["\<\
And finally, you hang this curve on your chosen hangerframe by hitting with \
hanger.
See the result:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hangstretchalignhit", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{
        StyleBox["hanger",
         FontColor->RGBColor[0, 0, 1]], ".", 
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", " ", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{
        StyleBox["hanger",
         FontColor->RGBColor[0, 0, 1]], ".", 
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", " ", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{
        StyleBox["hanger",
         FontColor->RGBColor[0, 0, 1]], ".", 
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", " ", 
      RowBox[{"PlotLabel", " ", "->", " ", "\"\<Hit with \!\(\*
StyleBox[\"hanger\",
FontColor->RGBColor[0, 0, 1]]\).\!\(\*
StyleBox[\"stretcher\",
FontColor->RGBColor[1, 0, 1]]\).\!\(\*
StyleBox[\"aligner\",
FontColor->RGBColor[0, 0, 1]]\)\>\""}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
   "before", ",", " ", "alignhit", ",", "stretchalignhit", ",", " ", 
    "hangstretchalignhit"}], "}"}], "]"}]}], "Input"],

Cell["\<\
Now you see the final product hanging on the frame chosen for your hanger \
matrix.\
\>", "Special5"],

Cell["Compare:", "SmallText",
 AnimationDisplayTime->1],

Cell[BoxData[
 RowBox[{"Show", "[", "after", "]"}]], "Input",
 AnimationDisplayTime->1],

Cell[TextData[{
 "Do the same thing for random selections of ",
 StyleBox["hanger,",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 " and",
 StyleBox[" aligner",
  FontColor->RGBColor[0, 0, 1]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"(", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]"}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"xstretch", "0"},
         {"0", "ystretch"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{"\"\<This matrix is\>\"", " ", 
  RowBox[{"MatrixForm", "[", "A", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alignhit", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       StyleBox["aligner",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", "\n", "     ", 
      RowBox[{"hitpointplotter", "[", 
       StyleBox["aligner",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", "\n", "     ", 
      RowBox[{"hitframeplotter", "[", 
       StyleBox["aligner",
        FontColor->RGBColor[0, 0, 1]], "]"}], ",", "\n", "     ", 
      RowBox[{"PlotLabel", "->", "\"\<Hit with aligner\>\""}]}], "]"}]}], 
   ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stretchalignhit", " ", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", "\n", "     ", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", "\n", "     ", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", "\n", "     ", 
      RowBox[{"PlotLabel", "->", "\"\<Hit with stretcher\!\(\*
StyleBox[\".\",
FontColor->GrayLevel[0]]\)aligner\>\""}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangstretchalignhit", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{
        StyleBox["hanger",
         FontColor->RGBColor[0, 0, 1]], ".", 
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", "\n", "         ", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{
        StyleBox["hanger",
         FontColor->RGBColor[0, 0, 1]], ".", 
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", "\n", "         ", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{
        StyleBox["hanger",
         FontColor->RGBColor[0, 0, 1]], ".", 
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]], ".", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}], "]"}], ",", "\n", "         ", 
      RowBox[{
      "PlotLabel", "->", "\"\<Hit with hanger.stretcher.aligner\>\""}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
   "before", ",", " ", "alignhit", ",", "stretchalignhit", ",", " ", 
    "hangstretchalignhit"}], "}"}], "]"}]}], "Input",
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell["\<\
Rerun several times to really soak up all those good mathematical juices.\
\>", "Special5"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1.b.i)  If A  =",
 StyleBox[" hanger",
  FontColor->RGBColor[0, 0, 1]],
 ". ",
 StyleBox["stretcher ",
  FontColor->RGBColor[1, 0, 1]],
 ". ",
 StyleBox["aligner",
  FontColor->RGBColor[0, 0, 1]],
 ", \nthen      A . ",
 StyleBox["alignerframe[1] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["xstretch",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 StyleBox["hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 "\n and      A . ",
 StyleBox["alignerframe[2] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["ystretch",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 StyleBox["hangerframe[2]",
  FontColor->RGBColor[0, 0, 1]],
 "\n"
}], "Subsubsection"],

Cell["\<\
Here's a random matrix made with the matrix maker ingredients
aligner, stretcher, and hanger:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "ystretch"}], "}"}]}], "}"}], "]"}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]"}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"xstretch", "0"},
         {"0", "ystretch"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Look at this:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "1", "]"}]}], "==", 
  RowBox[{"xstretch", " ", 
   RowBox[{"hangerframe", "[", "1", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "2", "]"}]}], "==", 
  RowBox[{"ystretch", " ", 
   RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Rerun both cells in this part several times.", "Special5"],

Cell[CellGroupData[{

Cell["Explain what this means.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
This says that the total effect of a hit with a matrix A made with the matrix \
maker can be fairly concisely described by saying:

\[FilledVerySmallSquare] The hit with A picks up alignerframe[1], stretches \
it by a factor of xstretch, and then plunks the result down in the direction \
of hangerframe[1],
and
\[FilledVerySmallSquare] The hit with A picks up alignerframe[2], stretches \
it by a factor of ystretch, and then plunks the result down in the direction \
of hangerframe[2].\
\>", "SmallText"],

Cell["\<\

This tells you that A.alignerframe[1] guaranteed to be perpendicular to \
A.alignerframe[2]:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", ".", 
     RowBox[{"alignerframe", "[", 
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], "]"}]}], ")"}], ".", 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     RowBox[{"alignerframe", "[", 
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]], "]"}]}], ")"}]}], "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1.b.ii) Making a matrix with prescribed hits\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["1",
        FontColor->RGBColor[1, 0, 1]]}]], "[", "1", "]"}]}], "=", 
   RowBox[{"0.5", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]]}]], "[", "1", "]"}]}]}]]],
 "\nand\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["1",
        FontColor->RGBColor[1, 0, 1]]}]], "[", "2", "]"}]}], "=", 
   RowBox[{"1.6", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]]}]], "[", "2", "]"}]}]}]]]
}], "Subsubsection"],

Cell["Here are two perpendicular frames:", "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"perpframe1", ",", "perpframe2"}], "]"}], ";"}], " "}],
  FontColor->GrayLevel[0]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{
      RowBox[{"-", "0.1"}], " ", "Pi"}]}], ";"}], " "}],
  FontColor->GrayLevel[0]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe1", "[", "1", "]"}], ",", 
      RowBox[{"perpframe1", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
    "           ", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"-", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"s", " ", "+", " ", 
            RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"s", " ", "+", " ", 
            RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
   "\n"}],
  FontColor->GrayLevel[0]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", "=", " ", 
     RowBox[{"0.3", "  ", "Pi"}]}], ";"}], " "}],
  FontColor->GrayLevel[0]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe2", "[", "1", "]"}], ",", 
     RowBox[{"perpframe2", "[", "2", "]"}]}], "}"}], " ", "=", " ", "\n", 
   "           ", 
   RowBox[{"N", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", " ", "+", " ", 
          RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}],
  FontColor->GrayLevel[0]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"frame1plot", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"perpframe1", "[", "k", "]"}], ",", 
          RowBox[{"Tail", "->", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "->", "Purple"}], ",", 
          RowBox[{"HeadSize", "->", "0.2"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", " ", "\n", 
      "     ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<perpframe1[1]\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{"perpframe1", "[", "1", "]"}]}]}], "]"}], "}"}], "]"}], 
      ",", "\n", "     ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<perpframe1[2]\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{"perpframe1", "[", "2", "]"}]}]}], "]"}], "}"}], "]"}]}], 
     "}"}]}], ";"}],
  FontColor->GrayLevel[0]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"frame2plot", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Table", "[", "\n", "     ", 
        RowBox[{
         RowBox[{"Vector", "[", 
          RowBox[{
           RowBox[{"perpframe2", "[", "k", "]"}], ",", 
           RowBox[{"Tail", "->", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], ",", 
           RowBox[{"VectorColor", "->", 
            RowBox[{"Darker", "[", "Red", "]"}]}], ",", 
           RowBox[{"HeadSize", "->", "0.2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", " ", "\n", 
       "     ", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<perpframe\!\(\*
StyleBox[\"2\",
Background->None]\)[1]\>\"", ",", 
           RowBox[{"0.6", " ", 
            RowBox[{"perpframe2", "[", "1", "]"}]}]}], "]"}], "}"}], "]"}], 
       ",", "\n", "     ", 
       RowBox[{"Graphics", "[", 
        RowBox[{"{", 
         RowBox[{"Text", "[", 
          RowBox[{"\"\<perpframe2[2]\>\"", ",", 
           RowBox[{"0.6", " ", 
            RowBox[{"perpframe2", "[", "2", "]"}]}]}], "]"}], "}"}], "]"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]"}],
  FontColor->GrayLevel[0]], "\n", 
 StyleBox[
  RowBox[{"frameplots", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"frame1plot", ",", "frame2plot", ",", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], " "}],
  FontColor->GrayLevel[0]]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Make a matrix A so that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["1",
        FontColor->RGBColor[1, 0, 1]]}]], "[", "1", "]"}]}], "=", 
   RowBox[{"0.5", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]]}]], "[", "1", "]"}]}]}]]],
 "\nand\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["1",
        FontColor->RGBColor[1, 0, 1]]}]], "[", "2", "]"}]}], "=", 
   RowBox[{"1.6", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]]}]], "[", "2", "]"}]}]}]]],
 ".\nBack up your answer with a convincing calculation."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Remember that when you make a matrix with matrix maker ingredients:\n\
aligner,stretcher,hanger, then you are guaranteed that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "=", 
   RowBox[{"xstretch", " ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 "\nand \n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], "=", 
   RowBox[{"ystretch", " ", 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "The job here is to make a matrix A so that\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["1",
        FontColor->RGBColor[1, 0, 1]]}]], "[", "1", "]"}]}], "=", 
   RowBox[{
    StyleBox["0.5",
     FontColor->GrayLevel[0]], " ", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]]}]], "[", "1", "]"}]}]}]]],
 "\nand\n        ",
 "  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["1",
        FontColor->RGBColor[1, 0, 1]]}]], "[", "2", "]"}]}], "=", 
   RowBox[{
    StyleBox["1.6",
     FontColor->GrayLevel[0]], " ", 
    RowBox[{
     StyleBox[
      RowBox[{"perpframe", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]]}]], "[", "2", "]"}]}]}]]],
 "\nYou can arrange for this by going with:\n          ",
 Cell[BoxData[
  RowBox[{"alignerframe", "=", 
   StyleBox[
    RowBox[{"perpframe", 
     StyleBox["1",
      FontColor->RGBColor[1, 0, 1]]}]]}]]],
 "\n          ",
 Cell[BoxData[
  RowBox[{"xstretch", "=", 
   StyleBox["0.5",
    FontColor->GrayLevel[0]]}]]],
 "\n          ",
 Cell[BoxData[
  RowBox[{"ystretch", "=", 
   StyleBox["1.6",
    FontColor->GrayLevel[0]]}]]],
 "\nand\n          ",
 Cell[BoxData[
  RowBox[{"hangerframe", "=", 
   StyleBox[
    RowBox[{"perpframe", 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]]}]]}]]],
 ".\nGo for it:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["=",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{
          StyleBox["perpframe",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox["1",
           FontColor->RGBColor[1, 0, 1]]}]], 
        StyleBox["[",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["]",
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox[",",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{
         StyleBox[
          RowBox[{"perpframe", 
           StyleBox["1",
            FontColor->RGBColor[1, 0, 1]]}]], "[", "2", "]"}],
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox["}",
       FontColor->RGBColor[0, 0, 1]]}]}], 
    StyleBox[";",
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox["  ",
    FontColor->RGBColor[0, 0, 1]], "\n", 
   RowBox[{"MatrixForm", "[", "aligner", "]"}]}]}]], "Input"],

Cell["\<\
perpframe1[1] is the first horizontal row of aligner.
perpframe1[2] is the second horizontal row of aligner.\
\>", "Special5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "1.6"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", " ", "=", " ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"xstretch", "0"},
         {"0", "ystretch"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{
          StyleBox["perpframe",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox["2",
           FontColor->RGBColor[1, 0, 0]]}]], 
        StyleBox["[",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["]",
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox[",",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{
         StyleBox[
          RowBox[{"perpframe", 
           StyleBox["2",
            FontColor->RGBColor[1, 0, 0]]}]], "[", "2", "]"}],
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox["}",
       FontColor->RGBColor[0, 0, 1]]}], "]"}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["\<\
hangerframe[1] is the first vertical column of hanger.
hangerframe[2] is the second vertical column of hanger.\
\>", "Special5"],

Cell["\<\
Now multiply them out in order to get the matrix you are after:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", " ", 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], ".", " ", 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Check whether\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe1", "[", "1", "]"}]}], "=", 
   RowBox[{"0.5", " ", 
    RowBox[{"perpframe2", "[", "1", "]"}]}]}]]],
 "\nand\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe1", "[", "2", "]"}]}], "=", 
   RowBox[{"1.6", " ", 
    RowBox[{"perpframe2", "[", "2", "]"}]}]}]]],
 ":\n"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"perpframe1", "[", "1", "]"}]}], "==", 
  RowBox[{"0.5", " ", 
   RowBox[{"perpframe2", "[", "1", "]"}]}]}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe1", "[", "2", "]"}]}], "==", 
   RowBox[{"1.6", " ", 
    RowBox[{"perpframe2", "[", "2", "]"}]}]}]}]}], "Input"],

Cell["See it:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"frameplots", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"perpframe1", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Yellow"}], ",", 
      RowBox[{"HeadSize", "->", "0.2"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"perpframe1", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Yellow"}], ",", 
      RowBox[{"HeadSize", "->", "0.2"}]}], "]"}]}], "]"}], " "}]], "Input"],

Cell["Had it all the way.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.2) Using matrix maker ingredients to make positive definite matrices (frame \
stretchers) and reflection matrices (frame flippers)\
\>", "Subsection",
 CellTags->"MGM.03.B2"],

Cell[TextData[{
 "\n                                ",
 Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.2 0.5 0.2 [
[.1 .4875 -6 -9 ]
[.1 .4875 6 0 ]
[.3 .4875 -6 -9 ]
[.3 .4875 6 0 ]
[.7 .4875 -3 -9 ]
[.7 .4875 3 0 ]
[.9 .4875 -3 -9 ]
[.9 .4875 3 0 ]
[1.025 .5 0 -6 ]
[1.025 .5 10 6 ]
[.4875 .1 -12 -4.5 ]
[.4875 .1 0 4.5 ]
[.4875 .3 -12 -4.5 ]
[.4875 .3 0 4.5 ]
[.4875 .7 -6 -4.5 ]
[.4875 .7 0 4.5 ]
[.4875 .9 -6 -4.5 ]
[.4875 .9 0 4.5 ]
[.5 1.025 -5 0 ]
[.5 1.025 5 12 ]
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.1 .5 m
.1 .50625 L
s
[(-2)] .1 .4875 0 1 Mshowa
.3 .5 m
.3 .50625 L
s
[(-1)] .3 .4875 0 1 Mshowa
.7 .5 m
.7 .50625 L
s
[(1)] .7 .4875 0 1 Mshowa
.9 .5 m
.9 .50625 L
s
[(2)] .9 .4875 0 1 Mshowa
.125 Mabswid
.14 .5 m
.14 .50375 L
s
.18 .5 m
.18 .50375 L
s
.22 .5 m
.22 .50375 L
s
.26 .5 m
.26 .50375 L
s
.34 .5 m
.34 .50375 L
s
.38 .5 m
.38 .50375 L
s
.42 .5 m
.42 .50375 L
s
.46 .5 m
.46 .50375 L
s
.54 .5 m
.54 .50375 L
s
.58 .5 m
.58 .50375 L
s
.62 .5 m
.62 .50375 L
s
.66 .5 m
.66 .50375 L
s
.74 .5 m
.74 .50375 L
s
.78 .5 m
.78 .50375 L
s
.82 .5 m
.82 .50375 L
s
.86 .5 m
.86 .50375 L
s
.06 .5 m
.06 .50375 L
s
.02 .5 m
.02 .50375 L
s
.94 .5 m
.94 .50375 L
s
.98 .5 m
.98 .50375 L
s
.25 Mabswid
0 .5 m
1 .5 L
s
gsave
1.025 .5 -61 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 20 translate 1 -1 scale
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(x) show
69.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.5 .1 m
.50625 .1 L
s
[(-2)] .4875 .1 1 0 Mshowa
.5 .3 m
.50625 .3 L
s
[(-1)] .4875 .3 1 0 Mshowa
.5 .7 m
.50625 .7 L
s
[(1)] .4875 .7 1 0 Mshowa
.5 .9 m
.50625 .9 L
s
[(2)] .4875 .9 1 0 Mshowa
.125 Mabswid
.5 .14 m
.50375 .14 L
s
.5 .18 m
.50375 .18 L
s
.5 .22 m
.50375 .22 L
s
.5 .26 m
.50375 .26 L
s
.5 .34 m
.50375 .34 L
s
.5 .38 m
.50375 .38 L
s
.5 .42 m
.50375 .42 L
s
.5 .46 m
.50375 .46 L
s
.5 .54 m
.50375 .54 L
s
.5 .58 m
.50375 .58 L
s
.5 .62 m
.50375 .62 L
s
.5 .66 m
.50375 .66 L
s
.5 .74 m
.50375 .74 L
s
.5 .78 m
.50375 .78 L
s
.5 .82 m
.50375 .82 L
s
.5 .86 m
.50375 .86 L
s
.5 .06 m
.50375 .06 L
s
.5 .02 m
.50375 .02 L
s
.5 .94 m
.50375 .94 L
s
.5 .98 m
.50375 .98 L
s
.25 Mabswid
.5 0 m
.5 1 L
s
gsave
.5 1.025 -66 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 20 translate 1 -1 scale
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(y) show
69.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
0 0 .502 r
.01 w
.7 .5 m
.69999 .50155 L
.69998 .50296 L
.69995 .50459 L
.69991 .50613 L
.6998 .50887 L
.69965 .51184 L
.69943 .5151 L
.69914 .51856 L
.69846 .52475 L
.69756 .53112 L
.69654 .53705 L
.69354 .55043 L
.68954 .56383 L
.68507 .57582 L
.67227 .6016 L
.65823 .62233 L
.64008 .64275 L
.62043 .65968 L
.59725 .67476 L
.58518 .68095 L
.57168 .68671 L
.5597 .69088 L
.54627 .69457 L
.53986 .69599 L
.53294 .69727 L
.52692 .69818 L
.52035 .69896 L
.51649 .69932 L
.51291 .69958 L
.50949 .69977 L
.50776 .69985 L
.50585 .69991 L
.50413 .69996 L
.50256 .69998 L
.50083 .7 L
.49996 .7 L
.49901 .7 L
.4974 .69998 L
.49569 .69995 L
.49407 .69991 L
.49259 .69986 L
.48955 .69973 L
.48621 .69952 L
.47946 .69894 L
.47323 .6982 L
.46742 .69733 L
.45445 .69474 L
.44074 .69102 L
.42811 .68663 L
Mistroke
.41472 .68091 L
.39155 .66804 L
.37067 .65256 L
.35085 .63325 L
.33355 .61088 L
.3203 .5878 L
.31501 .57602 L
.31026 .56325 L
.30662 .55102 L
.30398 .5397 L
.30188 .52734 L
.30105 .52049 L
.30075 .51734 L
.30049 .51399 L
.30031 .51112 L
.30023 .5096 L
.30016 .50797 L
.3001 .50647 L
.30006 .50509 L
.30004 .50378 L
.30001 .5024 L
.3 .50089 L
.3 .49927 L
.30001 .49775 L
.30003 .49637 L
.30007 .49475 L
.30012 .49299 L
.30026 .4898 L
.30044 .48668 L
.3007 .48334 L
.30129 .47732 L
.30223 .47019 L
.30332 .46372 L
.3064 .4498 L
.31024 .43683 L
.32013 .41255 L
.33205 .3914 L
.34664 .37162 L
.36545 .35203 L
.38535 .33612 L
.4089 .32195 L
.43314 .31151 L
.4458 .30749 L
.45303 .30559 L
.45993 .30406 L
.46631 .30286 L
.47327 .30179 L
.47963 .30104 L
.48551 .30053 L
.4888 .30031 L
Mistroke
.49189 .30016 L
.49365 .3001 L
.49527 .30006 L
.49617 .30004 L
.49714 .30002 L
.49806 .30001 L
.49891 .3 L
.49981 .3 L
.50077 .3 L
.50169 .30001 L
.50252 .30002 L
.50412 .30004 L
.5058 .30008 L
.5076 .30014 L
.50929 .30022 L
.51312 .30043 L
.51655 .30069 L
.51971 .30097 L
.52685 .30181 L
.53312 .30276 L
.53974 .30399 L
.55108 .30663 L
.56338 .31031 L
.58703 .31993 L
.61091 .33357 L
.6319 .34966 L
.65149 .36942 L
.66718 .39022 L
.67922 .41123 L
.68495 .42389 L
.68954 .43618 L
.69301 .44758 L
.69593 .45985 L
.69769 .46971 L
.69848 .47535 L
.69906 .48064 L
.69947 .48551 L
.69975 .48997 L
.69986 .49243 L
.6999 .49373 L
.69994 .49511 L
.69997 .49644 L
.69999 .49765 L
.7 .49886 L
.7 .5 L
Mfstroke
1 .5 0 r
.035 w
.7 .5 Mdot
.962 .691 0 r
.68478 .57654 Mdot
.854 .854 0 r
.64142 .64142 Mdot
.691 .962 0 r
.57654 .68478 Mdot
.5 1 0 r
.5 .7 Mdot
.309 .962 0 r
.42346 .68478 Mdot
.146 .854 0 r
.35858 .64142 Mdot
.038 .691 0 r
.31522 .57654 Mdot
0 .5 0 r
.3 .5 Mdot
.038 .309 0 r
.31522 .42346 Mdot
.146 .146 0 r
.35858 .35858 Mdot
.309 .038 0 r
.42346 .31522 Mdot
.5 0 0 r
.5 .3 Mdot
.691 .038 0 r
.57654 .31522 Mdot
.854 .146 0 r
.64142 .35858 Mdot
.962 .309 0 r
.68478 .42346 Mdot
1 .5 0 r
.005 w
.7 .5 m
.77931 .56689 L
s
.79222 .57778 m
.77982 .5588 L
.77931 .56689 L
.77142 .56876 L
.79222 .57778 L
F
.962 .691 0 r
.68478 .57654 m
.78365 .71988 L
s
.79974 .74322 m
.78805 .70701 L
.78365 .71988 L
.77005 .71942 L
.79974 .74322 L
F
.854 .854 0 r
.64142 .64142 m
.7448 .8394 L
s
.76163 .87163 m
.75242 .8237 L
.7448 .8394 L
.72756 .83668 L
.76163 .87163 L
F
.691 .962 0 r
.57654 .68478 m
.66869 .90725 L
s
.68369 .94346 m
.67837 .89111 L
.66869 .90725 L
.65043 .90268 L
.68369 .94346 L
F
.5 1 0 r
.5 .7 m
.56689 .91309 L
s
.57778 .94778 m
.57716 .89898 L
.56689 .91309 L
.5504 .90738 L
.57778 .94778 L
F
.309 .962 0 r
.42346 .68478 m
.45491 .85605 L
s
.46003 .88393 m
.46421 .84611 L
.45491 .85605 L
.4427 .85006 L
.46003 .88393 L
F
.146 .854 0 r
.35858 .64142 m
.3498 .7448 L
s
.34837 .76163 m
.3567 .74054 L
.3498 .7448 L
.34372 .73944 L
.34837 .76163 L
F
.038 .691 0 r
.31522 .57654 m
.26755 .59628 L
s
.25979 .5995 m
.27101 .59836 L
.26755 .59628 L
.26853 .59237 L
.25979 .5995 L
F
0 .5 0 r
.3 .5 m
.22069 .43311 L
s
.20778 .42222 m
.22018 .4412 L
.22069 .43311 L
.22858 .43124 L
.20778 .42222 L
F
.038 .309 0 r
.31522 .42346 m
.21635 .28012 L
s
.20026 .25678 m
.21195 .29299 L
.21635 .28012 L
.22995 .28058 L
.20026 .25678 L
F
.146 .146 0 r
.35858 .35858 m
.2552 .1606 L
s
.23837 .12837 m
.24758 .1763 L
.2552 .1606 L
.27244 .16332 L
.23837 .12837 L
F
.309 .038 0 r
.42346 .31522 m
.33131 .09275 L
s
.31631 .05654 m
.32163 .10889 L
.33131 .09275 L
.34957 .09732 L
.31631 .05654 L
F
.5 0 0 r
.5 .3 m
.43311 .08691 L
s
.42222 .05222 m
.42284 .10102 L
.43311 .08691 L
.4496 .09262 L
.42222 .05222 L
F
.691 .038 0 r
.57654 .31522 m
.54509 .14395 L
s
.53997 .11607 m
.53579 .15389 L
.54509 .14395 L
.5573 .14994 L
.53997 .11607 L
F
.854 .146 0 r
.64142 .35858 m
.6502 .2552 L
s
.65163 .23837 m
.6433 .25946 L
.6502 .2552 L
.65628 .26056 L
.65163 .23837 L
F
.962 .309 0 r
.68478 .42346 m
.73245 .40372 L
s
.74021 .4005 m
.72899 .40164 L
.73245 .40372 L
.73147 .40763 L
.74021 .4005 L
F
0 0 .502 r
.01 w
.79222 .57778 m
.79631 .60415 L
.7996 .6326 L
.80078 .64675 L
.80129 .65447 L
.80169 .66172 L
.80198 .66842 L
.8021 .67194 L
.8022 .67566 L
.80228 .67877 L
.80233 .68218 L
.80237 .68528 L
.80239 .68817 L
.80239 .68995 L
.80239 .69184 L
.80237 .69524 L
.80235 .69731 L
.80232 .69925 L
.80225 .70288 L
.80216 .70634 L
.80206 .70951 L
.80176 .71662 L
.80144 .72252 L
.80101 .72895 L
.79989 .74172 L
.7983 .7554 L
.79617 .7697 L
.79122 .79447 L
.7851 .81703 L
.77699 .83994 L
.76878 .85828 L
.75849 .87687 L
.73588 .90672 L
.72176 .92016 L
.70748 .93084 L
.69278 .93931 L
.68442 .94316 L
.67644 .94623 L
.66183 .9505 L
.65387 .95214 L
.64977 .95281 L
.64522 .95341 L
.64067 .95388 L
.63816 .95408 L
.6358 .95423 L
.63359 .95434 L
.63156 .95441 L
.62922 .95447 L
.62698 .95449 L
.62571 .95448 L
Mistroke
.62455 .95447 L
.62322 .95445 L
.62196 .95442 L
.61972 .95434 L
.61728 .95423 L
.61458 .95406 L
.61171 .95383 L
.60655 .95331 L
.59721 .95199 L
.5884 .95032 L
.5681 .94497 L
.54758 .93752 L
.52796 .92854 L
.49096 .90683 L
.45137 .87673 L
.41553 .8431 L
.34388 .75518 L
.28479 .65445 L
.25945 .59868 L
.23658 .53685 L
.21927 .47669 L
.21234 .44618 L
.20639 .4139 L
.20402 .39824 L
.20213 .3836 L
.2006 .36946 L
.19947 .35656 L
.19864 .34442 L
.19831 .33827 L
.19803 .33171 L
.19791 .32829 L
.19782 .32518 L
.19774 .32202 L
.19769 .31911 L
.19764 .31573 L
.19762 .31396 L
.19761 .31207 L
.19761 .30892 L
.19762 .30545 L
.19766 .30217 L
.19771 .29913 L
.19778 .2958 L
.19788 .29226 L
.19816 .28507 L
.1985 .27859 L
.19937 .26626 L
.20047 .25481 L
.20207 .24183 L
.20386 .23012 L
.20899 .20466 L
Mistroke
.21483 .18322 L
.22134 .16431 L
.23021 .14376 L
.23986 .12584 L
.25024 .11013 L
.26273 .09479 L
.28736 .07272 L
.30249 .06317 L
.31699 .05626 L
.32534 .05315 L
.3346 .05039 L
.34355 .04834 L
.34793 .04755 L
.35195 .04695 L
.35589 .04646 L
.36021 .04605 L
.36259 .04587 L
.36481 .04574 L
.36693 .04564 L
.3692 .04557 L
.37113 .04553 L
.37323 .04551 L
.37521 .04552 L
.37703 .04555 L
.37906 .04561 L
.38128 .0457 L
.38361 .04582 L
.38578 .04597 L
.39078 .0464 L
.39552 .04694 L
.40448 .0483 L
.41423 .05025 L
.4249 .05295 L
.44335 .05894 L
.46388 .06751 L
.50578 .09101 L
.54445 .11975 L
.58513 .15757 L
.66007 .25062 L
.69343 .30452 L
.72115 .35773 L
.74646 .41601 L
.76565 .47006 L
.78133 .52575 L
.79222 .57778 L
Mfstroke
1 .5 0 r
.035 w
.79222 .57778 Mdot
.962 .691 0 r
.79974 .74322 Mdot
.854 .854 0 r
.76163 .87163 Mdot
.691 .962 0 r
.68369 .94346 Mdot
.5 1 0 r
.57778 .94778 Mdot
.309 .962 0 r
.46003 .88393 Mdot
.146 .854 0 r
.34837 .76163 Mdot
.038 .691 0 r
.25979 .5995 Mdot
0 .5 0 r
.20778 .42222 Mdot
.038 .309 0 r
.20026 .25678 Mdot
.146 .146 0 r
.23837 .12837 Mdot
.309 .038 0 r
.31631 .05654 Mdot
.5 0 0 r
.42222 .05222 Mdot
.691 .038 0 r
.53997 .11607 Mdot
.854 .146 0 r
.65163 .23837 Mdot
.962 .309 0 r
.74021 .4005 Mdot
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
  GeneratedCell->False,
  CellAutoOverwrite->False,
  ImageSize->{125, 125},
  ImageMargins->{{72, 0}, {0, 33}},
  ImageRegion->{{0, 1}, {0, 1}},
  ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy9WttuFEcQbeayu7PcbcCEkGCMlxgMyE4MiUQSJYqBp8jfYKFI8BAlIryi
3U/y9+wH5DlPft30papvc7pn1jYeabzjru46p6uqu6t75vfDj+/++PPw4/u3
h+tvPhz+/e7923/WX//1QRaVF4QQn9S9LtTzQj7Sn+/F4r9/RSn0P/JJ3b/p
v+IUokIJ9jvrbqkfJZldSlfaMJUOGlGpmvKvLpZPdJdiKn+0Gtu2Suu7TxVU
damU75GBMap8hCru0LrVbfCUgiJUUXKbWZEmcs8jwiLdTKoamyepSskN2CvT
7OsI3vzHDRvb0LS0VYQi6bhwa+LyFVBaWcNr9bVR4RtI+OCWp1Xwa4fuiLCh
VwesGacAOn4x0rtANKQy5ZqwzKifhoYRyEulOGoY4wtjisnEOObcNI+obCrc
VaY0Rjb4KQa42AHAZYX1Z+kp5yHxs3m641ld6tZ3Vw8CgCg8NaTEQY5+6fUk
EhV5nyDc0HIcdEdNHHQz8aOPG47TrDnrAJUjoepGug17aMqUgbmsSXa4iqGL
LuiXZwWNe11HIRT6wWH9kKZRAhojQGMELJBgUAIYs06JNSCqAIO+PkgwqADM
izSDGjBANliCQQ1gnqcZDHoy4HrhwLNBGHIYAKC903OIB7+6BgBem6AU80kO
dAhA0+vLCUBvmoLmwMbUsjbuhor6tBsjj0/QSb5QcHE9Bc3A3/YB7eouz91d
oMYsMwa9ReNCFUlkvpHBeQgdhJNl6a/mp2ZSBkzShqhjGt5SEo4xNLy4K3NP
r8TdbduEpQmv6PmyojhDjBaU7pYmkZNP6eGe51MHfIgTdNTAuEXRae0JCiPj
rLI03CQXXqt8Ctx2p5sHMk7teLhRZtMnTYKqtJM0Xoh8Omh5fNYOnri6oheP
opYPqVvevod0eFHlp0eVT5ztlCKOVtWnaeIlIM4ROwndoyNqAPihlK6xLYrP
QzK2rqp/mUHFpUiLAkfr3JM0aAVAKdol5hXQ54tGKrGWhKoBVN0Tagj0baeh
BgCq6gmVMBBAzmVPLeSo3hXrxKsZLX7Z4zQo6i4a2g5KgLJ8nzPwPNH58Bys
1wHktVTwl+L4oBuoCoCkfAVgXAfNixhDO722KU2p9tSNeZIQK9ZFWlmjGl62
Lcz2gYZg6/wjqQ+ZQlNCLk8oJ+jackH79AFJp4JOU/rRQGManZgRBzSUhpa1
UyFp+Jq5OuKyAhiggLwM2q55fk0c74ysLFxy7dp5hhTHGR63+1LFS7Ci2yqL
aevgdU89GDfdjC9RaLtMqb2IDQJ+NExVk9WsNYVVhUbD2AKbYxK4g7edmroF
8yYAXc219cru+tZjS6irTnOoPQ5cfqMnB9Txu1FbdQ3oKSR1y3MzX3yqOxWP
qBdqLLbrrTm1IU3qqUvq2qGBJqDcGWtlZbOWjLPo6WdCXEZXK0OdxifSaOyd
lAfKiuuozPM9OqSsrPFQwK0YqevFgkYJivw7HZF/JwUflaEhv0q1I/8XihDK
mjfTkGjAoDkbDbbSc6tzxOzhCdC0oW4AKZtk4U1IBPBlTwv2XYIGHhSXTz4P
1BBAkZPQSxLK7pqjbPZxxMmS1BooawVKbVW5/CyjoFLVi1Nx0A2R96+llEWs
peYxaL4RY6AELJ23t6dQiZMDQq/0UCBctcZFGwQeowosDomeoMiWKJu8kiHs
wyO7Efy9lAq5G5xnd4Nz26tzgBoBKGQlglpPjzMJpQ8lUOLu8BqAh0Ihg2ff
Fcz9lVPWGNvwsU8ze44zbweNzwEtAMThfiYYQg7tAbig5BGt9kNLsj5nkqU4
OM68LWwlIPqI7NjGShdNdApANDdS8ZOkqe3Jx50L4b48SFLizZZPSYNLzM00
jQLQKCNruV2xSb1mxMlRlJwawGnYzekBVYnnVsXHntkf+zkD05MU2A1Hx23X
tG1TBTwkIFHYBBE8cXOEQufLHtEv2oD9SLiY8YzQgwH1PUhcmcUZMJhEoaHM
H8P7g6sLPhmhGv1BG1QBLgM66gk6hKAlMm8MpZ4U3DlCNctA4bnGgTYANJ6R
lwFFazH1dAuIBil4f6OzrDvRIk0cHgFRneLgzWlEo68VMgweA1HVn8G4JwOU
OJyIQXtrvEw4ZDaP20BUpmjocLCvYDsmVrTKoIWXiDwBoiJFJGGPvm7J0Hja
k0bqNCNFoyEH+zQkxjfm4Rlbd5bGwomQ7wU0MimHm89hp2kfvOOJFLC63VeX
ZU+okYUS4avKh+a/3QgljMx811Ck0yQu8bb8bhifcDc4JcCfAS5hQx9o1xQY
M/kahTstP63SWZdSZBI075P67ygA/fyQPdyXc0b9DlWIxwP9794fFwqF8gup
u7bS7bYTY0Xx97PqdikmvXY+OobT7nZgZZE63+QhWKSmeV2FvgZwn1r7WT9T
0e12vJoRWGWZw6XQBIGCpruvKvauuk22buzRT9XZfmCeEX1CP3vWPa9NwXOg
gL7DfgFE+52iWKG6XnWK9myfrYHNtZ/pDP2IC/8DpYwgyw==\
\>"],
  ImageRangeCache->{{{0, 124}, {124, 0}} -> {-2.54578, -2.50003, 0.0457594, 
  0.0457594}}]
}], "Text"],

Cell[CellGroupData[{

Cell[" B.2.a) Making positive definite matrices (frame stretchers)", \
"Subsubsection"],

Cell["\<\
Here's a perpendicular frame shown with the unit circle centered at {0,0}::\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t", ",", "perpframe", ",", "s"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    FractionBox[
     RowBox[{"3", " ", "\[Pi]"}], "8"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "hitplotter", ",", "hitpointplotter", ",", "pointcolor", ",", 
     "actionarrows", ",", "matrix2D"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "16"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"matrix2D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitframeplotter", "[", "matrix2D_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"matrix2D", ".", 
        RowBox[{"perpframe", "[", "k", "]"}]}], ",", 
       RowBox[{"Tail", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
       RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"actionarrows", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"matrix2D", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framelabels", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[1]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[2]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"before", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
    RowBox[{"hitpointplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
    RowBox[{"hitframeplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", "framelabels", 
    ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Your job is to make a positive definite matrix (frame stretcher)  A whose hits 
\[FilledVerySmallSquare] stretch every measurement in the direction of \
perpframe[1] by a factor of 2.4 
and 
\[FilledVerySmallSquare] stretch every measurement in the direction of \
perpframe[2] by a factor of 1.3. 
Show off your matrix with action movie.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "The job here is to make a frame stretcher matrix A whose hits \n\
\[FilledVerySmallSquare] stretch every measurement in the direction of \
perpframe[1] by a factor of 2.4 \nand \n\[FilledVerySmallSquare] stretch \
every measurement in the direction of perpframe[2] by a factor of 1.3. \nThis \
is the same as saying\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "1", "]"}]}], "=", 
   RowBox[{"2.4", "  ", 
    RowBox[{"perpframe", "[", "1", "]"}]}]}]]],
 "\nand\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "=", 
   RowBox[{"1.3", " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]]],
 ".\nRemember that when you make a matrix with matrix maker ingredients:\n\
aligner,stretcher,hanger, then you are guaranteed that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "=", 
   RowBox[{"xstretch", " ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 "\nand \n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], "=", 
   RowBox[{"ystretch", " ", 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}]]]
}], "SmallText"],

Cell["\<\
You can arrange for this by going with:
      alignerframe = the given perpendicular frame
      hangerframe = the same given perpendicular frame
      xstretch = 2.4,
and
      ystretch = 1.3.
The Matrix A you are after is:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], ",", 
       RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"2.4", ",", "1.3"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], ".", 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Here comes the action movie:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"before", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", " ", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", " ", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", "framelabels", 
      ",", 
      RowBox[{"PlotLabel", "->", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"actionarrows", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Framestretcher action plot\>\""}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "A", "]"}], ",", " ", 
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", " ", 
      RowBox[{"hitframeplotter", "[", "A", "]"}], ",", " ", 
      RowBox[{"PlotLabel", "->", "\"\<After the hit with A\>\""}]}], "]"}]}], 
   ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input",
 AnimationDisplayTime->1],

Cell[CellGroupData[{

Cell["\<\
The action of positive definite matrix (frame stretcher).
You may be interested as to why frame stretcher matrices have the name \
positive definite matrices.
If so, click on the right,\
\>", "SmallText"],

Cell["\<\
When you make a frame stretcher matrix A, you stretch every measurement in \
the direction of the given frames by a positive amount. 
This results in 
        {x,y}.(A.{x,y}) > 0 unless {x,y} is {0,0}.
That's why these frame stretching matrices are often called positive definite.

Check this out by plotting {x,y}.(A.{x,y})\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"12", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}], ",", 
   RowBox[{"Axes", "->", "True"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<\>\""}], "}"}]}]}], 
  "]"}]], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.b.i) Making  reflection matrices (frame flippers)", "Subsubsection"],

Cell["Here's a curve shown together with a perpendicular frame:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t", ",", "perpframe", ",", "s"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"0.3", "\[Pi]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framelabels", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[1]\>\"", ",", 
         RowBox[{"0.7", " ", 
          RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[2]\>\"", ",", 
         RowBox[{"0.7", " ", 
          RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "3.0"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", "1.2"}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{"0.6", "-", 
          RowBox[{"Sin", "[", "t", "]"}]}], ")"}]}], ",", 
       RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}]}], ";"}], " ", "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "hitplotter", ",", "hitpointplotter", ",", "pointcolor", ",", 
     "actionarrows", ",", "matrix2D"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "12"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"matrix2D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Green"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitframeplotter", "[", "matrix2D_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"matrix2D", ".", 
        RowBox[{"perpframe", "[", "k", "]"}]}], ",", 
       RowBox[{"Tail", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"actionarrows", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"matrix2D", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"hitplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
   RowBox[{"hitpointplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
   RowBox[{"hitframeplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", "framelabels", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Put a line through perpframe[1]:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"flipline", " ", "=", " ", "\n", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Pink", ",", 
       RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "3"}], " ", 
           RowBox[{"perpframe", "[", "1", "]"}]}], ",", 
          RowBox[{"3", " ", 
           RowBox[{"perpframe", "[", "1", "]"}]}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"before", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"hitpointplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", " ", "flipline", 
    ",", " ", 
    RowBox[{"hitframeplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", "framelabels", 
    ",", " ", 
    RowBox[{"PlotLabel", "->", "\"\<Before\>\""}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Your job to use the matrix maker ingredients to come up with a matrix A whose \
hits pick up the curve and flips it over the plotted line to get its mirror \
image with respect to the plotted line.
Plot to confirm.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "The job here is to make a matrix A whose hits \n\[Rule] preserve everything \
in the direction of perpframe[1] (along the line)\n\[Rule] multiply \
everything in the direction of perpframe[2] by -1.\nThis is the same as \
saying\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "1", "]"}]}], "=", " ", 
   RowBox[{"perpframe", "[", "1", "]"}]}]]],
 "\nand\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "=", " ", 
   RowBox[{
    StyleBox["-",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]]],
 ".\nWhen you make a matrix \n        ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   RowBox[{"hanger", 
    StyleBox[".",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], ".", "aligner"}]}]]],
 "\nwith matrix maker ingredients:\naligner,stretcher,hanger, then you are \
guaranteed that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "=", 
   RowBox[{
    StyleBox["xstretch",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 "\nand \n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], "=", 
   RowBox[{
    StyleBox["ystretch",
     FontColor->RGBColor[1, 0, 1]], " ", 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}]]],
 "\nYou can arrange everything you want by going with:\n     xstretch = \
ystretch = 1, \n     alignerframe = {perpframe[1], perpframe[2]}\n     \
hangerframe = {perpframe[1],",
 StyleBox["-perpframe[2]",
  FontColor->RGBColor[1, 0, 0]],
 "}."
}], "SmallText"],

Cell["Note the minus sign on perpframe[2].", "Special5"],

Cell["The matrix A you are after is:", "SmallText"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}],
     FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", "1.0"}], "}"}]}], ";"}], " ", "\n", 
   StyleBox[
    RowBox[{
     RowBox[{"stretcher", " ", "=", " ", 
      RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
         {"xstretch", "0"},
         {"0", "ystretch"}
        }], "\[NegativeThinSpace]", ")"}]}], ";"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 1]], "\n", "\n", 
   RowBox[{
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["=",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["Transpose",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["  ",
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
       StyleBox["{",
        FontColor->RGBColor[0, 0, 1]], 
       RowBox[{
        StyleBox[
         RowBox[{"perpframe", "[", "1", "]"}],
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[
         RowBox[{"-", 
          RowBox[{"perpframe", "[", "2", "]"}]}],
         FontColor->RGBColor[1, 0, 0]]}], 
       StyleBox["}",
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}]}], 
    StyleBox[";",
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\n", "\n", 
   RowBox[{
    RowBox[{"A", " ", "=", 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["hanger",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[".",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["stretcher",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[".",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["aligner",
       FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " ", "\n", 
   RowBox[{"MatrixForm", "[", "A", "]"}]}]}]], "Input"],

Cell["See A do its work:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"before", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", " ", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", " ", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", "framelabels", 
      ",", "flipline", ",", 
      RowBox[{"PlotLabel", "->", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"actionarrows", "[", "A", "]"}], ",", "flipline", ",", 
      RowBox[{"PlotLabel", "->", "\"\<Reflection action plot\>\""}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "A", "]"}], ",", " ", 
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", " ", 
      RowBox[{"hitframeplotter", "[", "A", "]"}], ",", "flipline", ",", " ", 
      RowBox[{
      "PlotLabel", "->", "\"\<After the hit with reflection matrix\>\""}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input",
 AnimationDisplayTime->1],

Cell["The action of a reflection matrix (frame flipper).", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.b.ii) Another way", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Is there another easy way to use the matrix maker ingredients to make the \
frameflipper matrix in part i)?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Yes, provided you are willing to use a negative stretch factor.\nRemember \
that the job was to make a framestretcher matrix A whose hits \n\[Rule] \
preserve everything in the direction of perpframe[1] (along the line)\n\
\[Rule] multiply everything in the direction of perpframe[2] by -1.\nThis is \
the same as saying\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "1", "]"}]}], "=", " ", 
   RowBox[{"perpframe", "[", "1", "]"}]}]]],
 "\nand\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "=", " ", 
   RowBox[{"-", 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]]],
 ".\nWhen you make a matrix with matrix maker ingredients:\naligner, \
stretcher, hanger, then you are guaranteed that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "=", 
   RowBox[{"xstretch", " ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 "\nand \n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], "=", 
   RowBox[{"ystretch", " ", 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}]]],
 "\nYou can arrange for what you want by going with:\n     xstretch = 1,\n    \
 ystretch = -1 \n     hangerframe = alignerframe = {perpframe[1], \
perpframe[2]}\nThe resulting alternative matrix A is:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}],
     FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", 
       RowBox[{"-", "1.0"}]}], "}"}]}], ";"}], " ", "\n", 
   StyleBox[
    RowBox[{
     RowBox[{"stretcher", " ", "=", " ", 
      RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
         {"xstretch", "0"},
         {"0", "ystretch"}
        }], "\[NegativeThinSpace]", ")"}]}], ";"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 1]], "\n", "\n", 
   StyleBox[
    RowBox[{
     RowBox[{"hanger", " ", "=", " ", 
      RowBox[{"Transpose", "[", "  ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"perpframe", "[", "1", "]"}], ",", 
         RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\n", "\n", 
   RowBox[{
    RowBox[{"altA", " ", "=", 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["hanger",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[".",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["stretcher",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[".",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["aligner",
       FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " ", "\n", 
   RowBox[{"MatrixForm", "[", "altA", "]"}], "\n"}]}]], "Input"],

Cell["And this is the same as the A from part i) above:", "SmallText"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}],
     FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1.0", ",", "1.0"}], "}"}]}], ";"}], " ", "\n", 
   StyleBox[
    RowBox[{
     RowBox[{"stretcher", " ", "=", " ", 
      RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
         {"xstretch", "0"},
         {"0", "ystretch"}
        }], "\[NegativeThinSpace]", ")"}]}], ";"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 1]], "\n", "\n", 
   RowBox[{
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["=",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["Transpose",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["  ",
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
       StyleBox["{",
        FontColor->RGBColor[0, 0, 1]], 
       RowBox[{
        StyleBox[
         RowBox[{"perpframe", "[", "1", "]"}],
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[
         RowBox[{"-", 
          RowBox[{"perpframe", "[", "2", "]"}]}],
         FontColor->RGBColor[1, 0, 0]]}], 
       StyleBox["}",
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}]}], 
    StyleBox[";",
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\n", "\n", 
   RowBox[{
    RowBox[{"A", " ", "=", 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["hanger",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[".",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["stretcher",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[".",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["aligner",
       FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " ", "\n", 
   RowBox[{"MatrixForm", "[", "A", "]"}], "\n"}]}]], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3) Making the inverse matrix and the transpose matrix.\nIf      \n        \
          ",
 StyleBox["A   =   hanger.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  StyleBox[
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"xstretch", "0"},
      {"0", "ystretch"}
     }], "\[NegativeThinSpace]", ")"}],
   FontColor->RGBColor[1, 0, 1]]]],
 StyleBox[".aligner",
  FontColor->RGBColor[0, 0, 1]],
 " , \nthen  \n                  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " ",
 StyleBox["=  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["aligner", 
   StyleBox["t",
    FontSize->16,
    FontColor->RGBColor[0, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 " .  ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox[
       FractionBox["1", "xstretch"],
       FontColor->RGBColor[1, 0, 1]], "0"},
     {"0", 
      StyleBox[
       FractionBox["1", "ystretch"],
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->RGBColor[1, 0, 1]],
 " .  ",
 Cell[BoxData[
  SuperscriptBox["hanger", 
   StyleBox["t",
    FontSize->16,
    FontColor->RGBColor[0, 0, 1]]]]],
 "  .\nand  \n                  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   StyleBox["t",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]]]]],
 " ",
 StyleBox["=  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["aligner", 
   StyleBox["t",
    FontSize->16,
    FontColor->RGBColor[0, 0, 1]]]]],
 " .  ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"xstretch", "0"},
     {"0", 
      StyleBox["ystretch",
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->RGBColor[1, 0, 1]],
 " .  ",
 Cell[BoxData[
  SuperscriptBox["hanger", 
   StyleBox["t",
    FontSize->16,
    FontColor->RGBColor[0, 0, 1]]]]],
 "  .\n\nThe hanger frame for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " and  for  ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", 
    StyleBox["t",
     FontSize->14,
     FontColor->RGBColor[0, 0, 1]]],
   FontColor->RGBColor[0, 0, 1]]]],
 " is the aligner frame for A.\nThe aligner frame for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " and  for  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   StyleBox["t",
    FontSize->14,
    FontColor->RGBColor[0, 0, 1]]]]],
 " is the hanger frame for A."
}], "Subsection",
 CellTags->"MGM.03.B3"],

Cell[CellGroupData[{

Cell["\<\
B.3.a.i) Using the hangerframe, aligner frame and the stretch factors to make \
the inverse matrix\
\>", "Subsubsection"],

Cell["\<\
Here's a matrix A made with matrix maker ingredients using 
        a random aligner frame,
        two random stretch factors 
  and 
        a random hanger frame:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\[IndentingNewLine]"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "3.0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "3.0"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"stretcher", "=", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}],
  FontColor->RGBColor[1, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Look at this calculation of ", "Text"],

Cell[TextData[{
 "                 ",
 Cell[BoxData[
  SuperscriptBox["aligner", 
   StyleBox["t",
    FontSize->16,
    FontColor->GrayLevel[0]]]]],
 " .  ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox[
       FractionBox["1", "xstretch"],
       FontColor->RGBColor[1, 0, 1]], "0"},
     {"0", 
      StyleBox[
       FractionBox["1", "ystretch"],
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 " .  ",
 Cell[BoxData[
  SuperscriptBox["hanger", 
   StyleBox["t",
    FontSize->16,
    FontColor->GrayLevel[0]]]]],
 "  :"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    StyleBox["aligner",
     FontColor->RGBColor[0, 0, 1]], "]"}], ".", 
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {
       StyleBox[
        FractionBox["1", "xstretch"],
        FontColor->RGBColor[1, 0, 1]], "0"},
      {"0", 
       StyleBox[
        FractionBox["1", "ystretch"],
        FontColor->RGBColor[1, 0, 1]]}
     }], "\[NegativeThinSpace]", ")"}], " ", ".", 
   RowBox[{"Transpose", "[", 
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], "]"}]}], "]"}]], "Input"],

Cell[TextData[{
 "Compare with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", "A", "]"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Got it!
Explain why this is guaranteed to work every time you run it.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
 When you think about what results from hits by aligners and hangers, you \
gotta agree that:
\[FilledVerySmallSquare]  a hit with hanger undoes whatever a hit with \
aligner does
\[FilledVerySmallSquare]  a hit with aligner undoes whatever a hit with \
hanger does.
So:
 For any perpendicular frame,\
\>", "SmallText"],

Cell[TextData[{
 "            ",
 Cell[BoxData[
  SuperscriptBox["aligner", 
   RowBox[{"-", "1"}]]]],
 "  ",
 Cell[BoxData[
  RowBox[{
   StyleBox["=",
    FontColor->GrayLevel[0]], "  ", "hanger"}]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]]
}], "SmallText"],

Cell[" and", "SmallText"],

Cell[TextData[{
 "             ",
 Cell[BoxData[
  SuperscriptBox["hanger", 
   RowBox[{"-", "1"}]]]],
 "  ",
 Cell[BoxData[
  RowBox[{
   StyleBox["=",
    FontColor->GrayLevel[0]], 
   RowBox[{"aligner", "  ", 
    StyleBox["=",
     FontColor->GrayLevel[0]], 
    StyleBox[" ",
     FontColor->GrayLevel[0]], 
    SuperscriptBox["hanger", "t"]}]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 StyleBox["The upshot: \nTo invert any aligner or any hanger, \nyou just take \
its ",
  FontSize->18,
  FontColor->RGBColor[0, 0.392187, 0]],
 "transpose",
 StyleBox[".",
  FontSize->18,
  FontColor->RGBColor[0, 0.392187, 0]]
}], "Accident"],

Cell[TextData[{
 "\nNow stop for a minute and think:\nIn real life:\n When you get up in the \
morning ,\n1) you put on your ",
 StyleBox["socks",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 ", \n2) you put on your ",
 StyleBox["shoes",
  FontWeight->"Bold",
  FontColor->RGBColor[0.370001, 0.149996, 0.0200046]],
 ",\n3) you tie your shoe",
 StyleBox[" ",
  FontColor->RGBColor[0.184298, 0.309789, 0.309789]],
 StyleBox["laces",
  FontWeight->"Bold",
  FontColor->RGBColor[0.184298, 0.309789, 0.309789]],
 " ---in that order.\n\nWhen you go to bed at night ,\n1) you untie your shoe \
",
 StyleBox["laces",
  FontWeight->"Bold",
  FontColor->RGBColor[0.184298, 0.309789, 0.309789]],
 ", \n2) you take off on your ",
 StyleBox["shoes",
  FontWeight->"Bold",
  FontColor->RGBColor[0.370001, 0.149996, 0.0200046]],
 ",\n3) you take off your ",
 StyleBox["socks",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 ", --- in that order.\nTo undo what you did in the morning, you reverse the \
order.\n\nIn the world of matrices:\nTo undo a hit with"
}], "SmallText"],

Cell[TextData[{
 "             ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", 
    StyleBox[
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}],
     FontColor->RGBColor[1, 0, 1]], ".", "aligner"}]}]]],
 ", "
}], "SmallText"],

Cell["you hit with", "SmallText"],

Cell[TextData[{
 "\n                    ",
 Cell[BoxData[
  SuperscriptBox["aligner", 
   RowBox[{"-", "1"}]]]],
 Cell[BoxData[
  StyleBox[
   SuperscriptBox[
    StyleBox[
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}],
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{"-", "1"}]],
   FontColor->RGBColor[1, 0, 1]]]],
 Cell[BoxData[
  RowBox[{".", 
   SuperscriptBox[
    RowBox[{"hanger", " "}], 
    RowBox[{"-", "1"}]]}]]],
 "\n        \n                 =   ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 Cell[BoxData[
  StyleBox[
   SuperscriptBox[
    StyleBox[
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}],
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{"-", "1"}]],
   FontColor->RGBColor[1, 0, 1]]]],
 Cell[BoxData[
  RowBox[{".", 
   SuperscriptBox[
    RowBox[{"hanger", " "}], "t"]}]]],
 " "
}], "SmallText"],

Cell[TextData[{
 "And to invert ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"xstretch", "0"},
      {"0", "ystretch"}
     }], "\[NegativeThinSpace]", ")"}],
   FontColor->RGBColor[1, 0, 1]]]],
 " you just undo the stretches by hitting with ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox[
       FractionBox["1", "xstretch"],
       FontColor->RGBColor[1, 0, 1]], "0"},
     {"0", 
      StyleBox[
       FractionBox["1", "ystretch"],
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->RGBColor[1, 0, 1]],
 ".\nThat's why"
}], "SmallText"],

Cell[TextData[{
 "            ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " ",
 StyleBox["=  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["aligner", 
   StyleBox["t",
    FontSize->16,
    FontColor->GrayLevel[0]]]]],
 " .  ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox[
       FractionBox["1", "xstretch"],
       FontColor->RGBColor[1, 0, 1]], "0"},
     {"0", 
      StyleBox[
       FractionBox["1", "ystretch"],
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->RGBColor[1, 0, 1]],
 " .  ",
 Cell[BoxData[
  SuperscriptBox["hanger", 
   StyleBox["t",
    FontSize->16,
    FontColor->GrayLevel[0]]]]],
 "  ."
}], "SmallText"],

Cell["Review:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<A = hanger\!\(\*
StyleBox[\".\",
FontColor->GrayLevel[0]]\)(\[NegativeThinSpace]\!\(\*GridBox[{
{xstretch, 0},
{0, ystretch}
}]\)\[NegativeThinSpace])\!\(\*
StyleBox[\".\",
FontColor->GrayLevel[0]]\)aligner\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "5"}]}]}], "]"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<\!\(\*SuperscriptBox[\(A\), \(-1\)]\)=\!\(\*
StyleBox[\" \",
FontColor->RGBColor[0, 0, 1]]\)\!\(\*SuperscriptBox[\"aligner\", 
StyleBox[\"t\",
FontSize->16,
FontColor->GrayLevel[0]]]\).\!\(\*
StyleBox[\"(\",
FontColor->GrayLevel[0]]\)\!\(\*
StyleBox[\"\[NegativeThinSpace]\",
FontColor->GrayLevel[0]]\)\!\(\*GridBox[{
{FractionBox[\"1\", \"xstretch\"], 0},
{0, FractionBox[\"1\", \"ystretch\"]}
}]\)\!\(\*
StyleBox[\"\[NegativeThinSpace]\",
FontColor->RGBColor[1, 0, 1]]\)) .\!\(\*SuperscriptBox[\"hanger\", 
StyleBox[\"t\",
FontSize->16,
FontColor->GrayLevel[0]]]\)\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "5"}]}]}], "]"}], " "}]}], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3.a.ii) ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " have inverse stretch factors. \nThe hanger frame for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " is the aligner frame for A.\nThe aligner frame for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " is the hanger frame for A"
}], "Subsubsection"],

Cell[TextData[{
 "Here's a matrix ",
 Cell[BoxData["A"]],
 " made with matrix maker ingredients using \n        a random aligner frame,\
\n        two random stretch factors and \n        a random hanger frame:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "3.0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "3.0"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"stretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    StyleBox[
     RowBox[{"hanger", ".", "stretcher", ".", "aligner"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Calculating   ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ", the inverse of ",
 Cell[BoxData["A"]],
 ", is so easy you can do it by hand if you are so inclined. \nYou just:\n\
\[Rule] Use the hanger frame of ",
 Cell[BoxData["A"]],
 " as the aligner frame of ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 "\n\[Rule] Use the aligner frame of ",
 Cell[BoxData["A"]],
 " as the hanger frame of ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 "\n\[Rule] And invert the stretch factors of A.\n"
}], "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"alignerforinverse", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hangerframe", "[", "1", "]"}], ",", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"unstretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{
        FractionBox["1", "xstretch"], ",", 
        FractionBox["1", "ystretch"]}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"hangerforinverse", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"alignerframe", "[", "1", "]"}], ",", 
        RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], 
   " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ainverse", "=", 
    RowBox[{
    "hangerforinverse", ".", "unstretcher", ".", "alignerforinverse"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "Ainverse", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Compare with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", "A", "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell["Got it. ", "Text"],

Cell["\<\
Rerun all cells above from the beginning of the problem 
to this stage several times.\
\>", "Special5"],

Cell[CellGroupData[{

Cell["\<\
Explain why this is guaranteed to work every time you run it.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You bet!\nWhen you make a matrix with the matrix maker, you go with an \
alignerframe\n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"alignerframe", "[", "1", "]"}], ",", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]]],
 ",\nstretch factors \n          ",
 Cell[BoxData["xstretch"]],
 " and ",
 Cell[BoxData["ystretch"]],
 " \nand a hangerframe\n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"hangerframe", "[", "1", "]"}], ",", 
    RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}]]],
 "\n and you put\n          ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", 
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], ".", "aligner"}]}]]],
 ".\n The matrix A has the properties:"
}], "SmallText"],

Cell[TextData[{
 "           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "=", 
   RowBox[{
    StyleBox["xstretch",
     FontColor->RGBColor[1, 0, 1]], " ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 "\nand\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], "=", 
   RowBox[{
    StyleBox["ystretch",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}]]],
 "."
}], "SmallText"],

Cell["\<\

Hit both sides of\
\>", "SmallText"],

Cell[TextData[{
 "\n          ",
 StyleBox["A.alignerframe[1]= ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["xstretch",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 StyleBox["\n ",
  FontColor->RGBColor[0, 0, 1]],
 "with  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " to get"
}], "SmallText"],

Cell[TextData[{
 "\n          ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]],
   FontColor->GrayLevel[0]]]],
 ".",
 "   ",
 StyleBox["A.alignerframe[1]=  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]],
   FontColor->GrayLevel[0]]]],
 StyleBox[".(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["xstretch",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" hangerframe[1]) =  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["xstretch",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]],
   FontColor->GrayLevel[0]]]],
 StyleBox[". hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "Reason: This comes from the linearity of matrix hits. \nIn particular: \n",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", 
    RowBox[{
     RowBox[{"-", "1"}], " "}]], ".", 
   RowBox[{"(", 
    RowBox[{
     StyleBox["xstretch",
      FontColor->RGBColor[1, 0, 1]], " ", 
     RowBox[{"hangerframe", "[", "1", "]"}]}], ")"}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   StyleBox["xstretch",
    FontColor->RGBColor[1, 0, 1]], "  ", 
   RowBox[{
    SuperscriptBox["A", 
     RowBox[{
      RowBox[{"-", "1"}], " "}]], ".", " ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]]
}], "Special5"],

Cell["This is the same as:", "SmallText"],

Cell[TextData[{
 "\n          ",
 StyleBox["alignerframe[1]=   ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["xstretch",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]],
   FontColor->GrayLevel[0]]]],
 StyleBox[". hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell["\<\
Reason: Hitting with the inverse of A undoes everything a hit with A does.\
\>", "Special5"],

Cell[TextData[{
 "\nAnd this is the same as\n           ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", 
    RowBox[{
     RowBox[{"-", "1"}], " "}]],
   FontColor->GrayLevel[0]]]],
 ".",
 Cell[BoxData[
  RowBox[{
   RowBox[{"hangerframe", "[", "1", "]"}], "="}]]],
 "  ",
 Cell[BoxData[
  StyleBox[
   FractionBox["1", "xstretch"],
   FontColor->RGBColor[1, 0, 1]]]],
 Cell[BoxData[
  RowBox[{"alignerframe", "[", "1", "]"}]]],
 ".\nBy the same steps of reasoning, you get\n            ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", 
    RowBox[{
     RowBox[{"-", "1"}], " "}]],
   FontColor->GrayLevel[0]]]],
 ".",
 Cell[BoxData[
  RowBox[{
   RowBox[{"hangerframe", "[", "2", "]"}], "="}]]],
 "  ",
 Cell[BoxData[
  StyleBox[
   FractionBox["1", "ystretch"],
   FontColor->RGBColor[1, 0, 1]]]],
 Cell[BoxData[
  RowBox[{"alignerframe", "[", "2", "]"}]]],
 "\nThese two equalities tell you that to make ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{
    RowBox[{"-", "1"}], " "}]]]],
 " with the matrix maker ingredients, you can go with these choices:\n        \
   Aligner frame for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{
    RowBox[{"-", "1"}], " "}]]]],
 " is the hanger frame of ",
 Cell[BoxData["A"]],
 ".\n           Hanger frame for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{
    RowBox[{"-", "1"}], " "}]]]],
 " is the aligner frame of ",
 Cell[BoxData["A"]],
 ".\n           Stretch factors for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{
    RowBox[{"-", "1"}], " "}]]]],
 " are inverses of the stretch factors of ",
 Cell[BoxData["A"]],
 ".\nThat's why everything works."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3.b)  If ",
 StyleBox["A = hanger.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[".aligner",
  FontColor->RGBColor[0, 0, 1]],
 ", then",
 Cell[BoxData[
  RowBox[{"  ", 
   SuperscriptBox["A", "t"]}]]],
 " = ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ".\n",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " have the same stretch factors. \nThe aligner frame for ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " is the hanger frame for A.\nThe hanger frame for ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " is the aligner frame for A"
}], "Subsubsection"],

Cell["\<\
Here's a matrix A made with matrix maker ingredients using 
        a random aligner frame,
        two random stretch factors 
  and 
        a random hanger frame:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\[IndentingNewLine]"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "3.0"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.1", ",", "3.0"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"stretcher", "=", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}],
  FontColor->RGBColor[1, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "According to one of the problems above,  you can make  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ", the inverse of ",
 Cell[BoxData["A"]],
 ", by\n-> Using the hanger frame of ",
 Cell[BoxData["A"]],
 " as the aligner frame of ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " ; \n-> Using the aligner frame of ",
 Cell[BoxData["A"]],
 " as the hanger frame of ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " ",
 "; ",
 "\n-> And inverting the stretch factors of A:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"alignerforinverse", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"unstretcher", "=", " ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {
          FractionBox["1", "xstretch"], "0"},
         {"0", 
          FractionBox["1", "ystretch"]}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}], ";"}], " "}],
  FontColor->RGBColor[1, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangerforinverse", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Ainverse", "=", 
    RowBox[{
     StyleBox["hangerforinverse",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["unstretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["alignerforinverse",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "Ainverse", "]"}]}], "Input"],

Cell["Compare:", "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", "A", "]"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Modify this to make ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You can make  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ", the transpose of ",
 Cell[BoxData["A"]],
 ", by\n\[Rule]  Using the hanger frame of ",
 Cell[BoxData["A"]],
 " as the aligner frame of ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " ; \n\[Rule]  Using the aligner frame of ",
 Cell[BoxData["A"]],
 " as the hanger frame of ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " ; \n\[Rule]  And going with the ",
 StyleBox["same stretch factors",
  FontWeight->"Bold"],
 " as you used for ",
 Cell[BoxData["A"]],
 ": "
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"alignerfortranspose", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", "=", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"xstretch", "0"},
         {"0", "ystretch"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangerfortranspose", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Atranspose", "=", 
    RowBox[{
     StyleBox["hangerfortranspose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["alignerfortranspose",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "Atranspose", "]"}]}], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "A", "]"}], "]"}]], "Input"],

Cell[TextData[{
 "The upshots:\n\[FilledVerySmallSquare] If ",
 StyleBox["A = hanger.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[".aligner",
  FontColor->RGBColor[0, 0, 1]],
 ", then",
 Cell[BoxData[
  RowBox[{"  ", 
   SuperscriptBox["A", "t"]}]]],
 " = ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ".\n\[FilledVerySmallSquare] A and ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " have the same stretch factors. \n\[FilledVerySmallSquare] The aligner \
frame for ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " is the hanger frame for A.\n\[FilledVerySmallSquare] The hanger frame for ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " is the aligner frame for A."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.4) Using a zero stretch factor to make matrices that cannot be inverted.
Why these matrices deposit all their hits on a line and why they hit \
infinitely many points into one single point.\
\>", "Subsection",
 CellTags->"MGM.03.B4"],

Cell[CellGroupData[{

Cell["\<\
B.4.a.i)  To make a noninvertible matrix, you go with a stretch factor = 0\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Use the matrix maker ingredients to make a 2D matrix that cannot be inverted. \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with any aligner frame and any hanger frame you like, but make  xstretch \
or ystretch = ",
 StyleBox["0",
  FontColor->RGBColor[1, 0, 0]],
 ". \nHere's one:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    FractionBox["\[Pi]", "3"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", 
      StyleBox["0",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"stretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    FractionBox["\[Pi]", "3"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    StyleBox[
     RowBox[{"hanger", ".", "stretcher", ".", "aligner"}],
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Try to invert ",
 Cell[BoxData["A"]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Inverse", "[", "A", "]"}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "This matrix ",
 Cell[BoxData["A"]],
 " is not invertible.\nTo get an idea why this A is not invertible, look at \
this action movie: "
}], "SmallText",
 CellChangeTimes->{3.503233272978127*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "x", ",", "y", ",", "t", ",", "hitplotter", ",", "hitpointplotter", ",", 
     "pointcolor", ",", "actionarrows", ",", "matrix2D"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", 
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "1.2"}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "48"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"matrix2D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"actionarrows", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"matrix2D", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangerframeplot", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"hangerframe", "[", "2", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Abefore", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit with A\>\""}]}], 
     "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Aaction", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"Abefore", ",", 
      RowBox[{"actionarrows", "[", "A", "]"}], ",", "hangerframeplot", ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot for A\>\""}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Aafter", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "A", "]"}], ",", 
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", "hangerframeplot", ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit with A\>\""}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"Abefore", ",", " ", "Aaction", ",", " ", "Aafter"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["\<\
That's hangerframe[1] pointing in the direction of the line,
and perpendicular to the line is hangerframe[2].\
\>", "Special5",
 AnimationDisplayTime->1],

Cell[TextData[{
 "Pay special attention to the fact that the hit with ",
 Cell[BoxData["A"]],
 " sends two different points on the circle onto the same point on the line. \
\nOnce these two hit points have been deposited on the same point on the \
line, it's impossible to tell which part of the circle they came from. That's \
why it's impossible to undo a hit by this matrix. \nAnd that's how you knew \
in advance that the 2D matrix A is not invertible."
}], "SmallText"],

Cell["\<\
Watch other random noninvertible matrices smash bunches of points onto lines: \
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"N", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["\[Pi]", "2"]}], ",", 
         FractionBox["\[Pi]", "2"]}], "}"}], "]"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
      StyleBox["0",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"stretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"N", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["\[Pi]", "2"]}], ",", 
         FractionBox["\[Pi]", "2"]}], "}"}], "]"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    StyleBox[
     RowBox[{"hanger", ".", "stretcher", ".", "aligner"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t", ",", "r", ",", "s"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "xstretch"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitpointplotter", ",", "pointcolor", ",", "matrix2D", ",", "r"}],
     "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "64"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rjump", "=", "0.1"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"x", "[", "t", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"y", "[", "t", "]"}]}]}], "}"}]}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", "0", ",", "1", ",", "rjump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "after"}], "}"}], "]"}]}], "Input",
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.4.b.ii) When you go with a zero stretch factor,  you get a noninvertible \
matrix  which deposits its hits on a line determined by a hanger frame vector\
\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Part of the job of math is to explain why things work out the way they do.\n\
Explain this:\nWhen you make a matrix A with ",
 StyleBox["ystretch",
  FontColor->RGBColor[1, 0, 1]],
 " = ",
 StyleBox["0",
  FontColor->RGBColor[1, 0, 1]],
 ", then all hits with A land on the line through {0,0} determined by \
hangerframe[1]."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Take any point and resolve it into perpendicular components in the directions \
of the alignerframe vectors to get\
\>", "SmallText"],

Cell[TextData[{
 "           ",
 StyleBox["point = ",
  FontWeight->"Bold"],
 StyleBox["(point.alignerframe[1])",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["alignerframe[1] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+ ",
  FontSize->17,
  FontWeight->"Bold"],
 StyleBox["(point.alignerframe[2])",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["alignerframe[2]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"],

Cell["This gives, thanks to linearity of matrix hits,", "SmallText"],

Cell[TextData[{
 "       ",
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["point = (",
  FontWeight->"Bold"],
 StyleBox["point.alignerframe[1]) ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["alignerframe[1] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+ ",
  FontSize->17,
  FontWeight->"Bold"],
 StyleBox["(point.alignerframe[2])",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["alignerframe[2]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"],

Cell["This is the same as", "SmallText"],

Cell[TextData[{
 "       ",
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["point =",
  FontWeight->"Bold"],
 StyleBox[" (point.alignerframe[1]) ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+ \n                                            ",
  FontSize->17,
  FontWeight->"Bold"],
 StyleBox[" ",
  FontSize->17,
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["(point.alignerframe[2])",
  FontVariations->{"CompatibilityType"->0}],
 " ",
 StyleBox["ystretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[2]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "Reason:\n",
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["alignerframe[1] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["xstretch",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 StyleBox["hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["alignerframe[2] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["ystretch",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 StyleBox["hangerframe[2]",
  FontColor->RGBColor[0, 0, 1]],
 "\n"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "And now because ",
 StyleBox["ystretch",
  FontColor->RGBColor[1, 0, 1]],
 " = ",
 StyleBox["0",
  FontColor->RGBColor[1, 0, 1]],
 ", the second term on the right drops out leaving you with "
}], "SmallText"],

Cell[TextData[{
 "               ",
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["point = ",
  FontWeight->"Bold"],
 StyleBox["(point.alignerframe[1])",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "This tells you that all hits with A are multiples of",
 StyleBox[" hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 ". \nThis puts all hits with A on the line through {0,0} determined by ",
 StyleBox["hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.4.b.iii) When you go with a zero stretch factor,  you get a noninvertible \
matrix  because it hits  infinitely many points into one point\
\>", "Subsubsection"],

Cell[TextData[{
 "Here is a matrix A which is random in most respects except that ",
 StyleBox["ystretch",
  FontColor->RGBColor[1, 0, 1]],
 " = ",
 StyleBox["0",
  FontColor->RGBColor[1, 0, 1]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"N", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["\[Pi]", "2"]}], ",", 
         RowBox[{"-", 
          FractionBox["\[Pi]", "6"]}]}], "}"}], "]"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}], ",", 
      StyleBox["0",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"stretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"N", "[", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["\[Pi]", "6"], ",", 
         FractionBox["\[Pi]", "4"]}], "}"}], "]"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    StyleBox[
     RowBox[{"hanger", ".", "stretcher", ".", "aligner"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Here are a bunch of points on the line running through a random point in \
the direction of ",
 StyleBox["alignerframe[2]",
  FontColor->RGBColor[0, 0, 1]],
 " shown with the line running in the direction of ",
 StyleBox["hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"point", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", " ", "=", " ", "0.2"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"alignerframe2line", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"Point", "[", 
          StyleBox[
           RowBox[{"point", " ", "+", " ", 
            RowBox[{"t", " ", 
             RowBox[{"alignerframe", "[", "2", "]"}]}]}],
           FontColor->RGBColor[0, 0, 1]], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}]}], 
     "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangerframe1line", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"t", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"before", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"hangerframe1line", ",", "alignerframe2line", ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Before the hit with A\>\""}]}], 
   "]"}]}]}], "Input"],

Cell[TextData[StyleBox["The points are on the line through the random point \
running in the direction of alignerframe[2]\nThe solid line is the line \
through {0,0} running in the direction of hangerframe[2]",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["A",
           FontColor->RGBColor[1, 0, 0]], ".", 
          StyleBox[
           RowBox[{"(", 
            RowBox[{"point", " ", "+", " ", 
             RowBox[{"t", " ", 
              RowBox[{"alignerframe", "[", "2", "]"}]}]}], ")"}],
           FontColor->RGBColor[0, 0, 1]]}], "-", 
         StyleBox[
          RowBox[{"(", 
           RowBox[{"point", " ", "+", " ", 
            RowBox[{"t", " ", 
             RowBox[{"alignerframe", "[", "2", "]"}]}]}], ")"}],
          FontColor->RGBColor[0, 0, 1]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         StyleBox[
          RowBox[{"(", 
           RowBox[{"point", " ", "+", " ", 
            RowBox[{"t", " ", 
             RowBox[{"alignerframe", "[", "2", "]"}]}]}], ")"}],
          FontColor->RGBColor[0, 0, 1]]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"action", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
   "hangerframe1line", ",", "alignerframe2line", ",", "actionarrows", ",", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Action arrows\>\""}]}], "]"}]}]}], "Input"],

Cell["Here's what you get after you hit all those points with A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitalignerframe2line", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           StyleBox["A",
            FontColor->RGBColor[1, 0, 0]], ".", 
           StyleBox[
            RowBox[{"(", 
             RowBox[{"point", " ", "+", " ", 
              RowBox[{"t", " ", 
               RowBox[{"alignerframe", "[", "2", "]"}]}]}], ")"}],
            FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"hangerframe1line", ",", "hitalignerframe2line", ",", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "->", "\"\<After\>\""}]}], "]"}]}], "Input"],

Cell["Do some more:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"N", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["\[Pi]", "2"]}], ",", 
         RowBox[{"-", 
          FractionBox["\[Pi]", "6"]}]}], "}"}], "]"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}], ",", 
      StyleBox["0",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"stretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"N", "[", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["\[Pi]", "6"], ",", 
         FractionBox["\[Pi]", "4"]}], "}"}], "]"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    StyleBox[
     RowBox[{"hanger", ".", "stretcher", ".", "aligner"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"point", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", " ", "=", " ", "0.2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"alignerframe2line", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"Point", "[", 
          StyleBox[
           RowBox[{"point", " ", "+", " ", 
            RowBox[{"t", " ", 
             RowBox[{"alignerframe", "[", "2", "]"}]}]}],
           FontColor->RGBColor[0, 0, 1]], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangerframe1line", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"t", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"hangerframe1line", ",", "alignerframe2line", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Before the hit with A\>\""}]}], "]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          StyleBox["A",
           FontColor->RGBColor[1, 0, 0]], ".", 
          StyleBox[
           RowBox[{"(", 
            RowBox[{"point", " ", "+", " ", 
             RowBox[{"t", " ", 
              RowBox[{"alignerframe", "[", "2", "]"}]}]}], ")"}],
           FontColor->RGBColor[0, 0, 1]]}], "-", 
         StyleBox[
          RowBox[{"(", 
           RowBox[{"point", " ", "+", " ", 
            RowBox[{"t", " ", 
             RowBox[{"alignerframe", "[", "2", "]"}]}]}], ")"}],
          FontColor->RGBColor[0, 0, 1]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         StyleBox[
          RowBox[{"(", 
           RowBox[{"point", " ", "+", " ", 
            RowBox[{"t", " ", 
             RowBox[{"alignerframe", "[", "2", "]"}]}]}], ")"}],
          FontColor->RGBColor[0, 0, 1]]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"action", " ", "=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
     "hangerframe1line", ",", "alignerframe2line", ",", "actionarrows", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<Action arrows\>\""}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitalignerframe2line", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           StyleBox["A",
            FontColor->RGBColor[1, 0, 0]], ".", 
           StyleBox[
            RowBox[{"(", 
             RowBox[{"point", " ", "+", " ", 
              RowBox[{"t", " ", 
               RowBox[{"alignerframe", "[", "2", "]"}]}]}], ")"}],
            FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"hangerframe1line", ",", "hitalignerframe2line", ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "->", "\"\<After\>\""}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListAnimate", "[", 
   RowBox[{"{", 
    RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<This noninvertible matrix is\>\"", " ", 
  RowBox[{"MatrixForm", "[", "A", "]"}]}]}], "Input",
 AnimationDisplayTime->1],

Cell["Rerun several times.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell[TextData[{
 "The hit with ",
 Cell[BoxData["A"]],
 " sent all those points into the",
 StyleBox[" same point",
  FontWeight->"Bold"],
 ".\n\[FilledVerySmallSquare]  Explain why it works out this way for any \
matrix made with ",
 Cell[BoxData[
  RowBox[{"ystretch", "=", "0"}]]],
 ".\n\[FilledVerySmallSquare]  And then explain why any matrix made with ",
 Cell[BoxData[
  RowBox[{"ystretch", "=", "0"}]]],
 " cannot be invertible."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "In the last part you saw that if ",
 Cell[BoxData[
  RowBox[{"ystretch", "=", "0"}]]],
 ", then"
}], "SmallText"],

Cell[TextData[{
 "               ",
 StyleBox["A . ",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["point =",
  FontWeight->"Bold"],
 StyleBox[" (point . alignerframe[1])",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["If you need to see the reason again, click on the \
right.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
Take any point and resolve it into perpendicular components in the directions \
of the alignerframe vectors to get\
\>", "SmallText"],

Cell[TextData[{
 "           ",
 StyleBox["point = ",
  FontWeight->"Bold"],
 StyleBox["(point.alignerframe[1])",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["alignerframe[1] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+ ",
  FontSize->17,
  FontWeight->"Bold"],
 StyleBox["(point.alignerframe[2])",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["alignerframe[2]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"],

Cell["This gives, thanks to linearity of matrix hits,", "SmallText"],

Cell[TextData[{
 "       ",
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["point = (",
  FontWeight->"Bold"],
 StyleBox["point.alignerframe[1]) ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["alignerframe[1] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+ ",
  FontSize->17,
  FontWeight->"Bold"],
 StyleBox["(point.alignerframe[2])",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["alignerframe[2]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"],

Cell["This is the same as", "SmallText"],

Cell[TextData[{
 "       ",
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["point =",
  FontWeight->"Bold"],
 StyleBox[" (point . alignerframe[1]) ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+ \n                                            ",
  FontSize->17,
  FontWeight->"Bold"],
 StyleBox[" ",
  FontSize->17,
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["(point . alignerframe[2])",
  FontVariations->{"CompatibilityType"->0}],
 " ",
 StyleBox["ystretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[2]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "Reason:\n",
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["alignerframe[1] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["xstretch",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 StyleBox["hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["alignerframe[2] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["ystretch",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 StyleBox["hangerframe[2]",
  FontColor->RGBColor[0, 0, 1]],
 "\n"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "And now because ",
 StyleBox["ystretch",
  FontColor->RGBColor[1, 0, 1]],
 " = ",
 StyleBox["0",
  FontColor->RGBColor[1, 0, 1]],
 ", the second term on the right drops out leaving you with "
}], "SmallText"],

Cell[TextData[{
 "               ",
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["point = ",
  FontWeight->"Bold"],
 StyleBox["(point.alignerframe[1])",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 "When you put",
 StyleBox[" \n             point =",
  FontWeight->"Bold"],
 StyleBox[" randompoint +",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" t alignerframe[2]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell["you get", "SmallText"],

Cell[TextData[{
 "               ",
 StyleBox["A.",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["(randompoint +",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" t alignerframe[2]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"]
}], "SmallText"],

Cell[TextData[{
 StyleBox["              = (",
  FontWeight->"Bold"],
 StyleBox["(randompoint +",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" t alignerframe[2]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[".",
  FontWeight->"Bold"],
 StyleBox["alignerframe[1]",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[") ",
  FontWeight->"Bold"],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 StyleBox["              = (",
  FontWeight->"Bold"],
 StyleBox["randompoint.alignerframe[1] +",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" t alignerframe[2].",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["alignerframe[1]",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[") ",
  FontWeight->"Bold"],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 StyleBox["              =  (",
  FontWeight->"Bold"],
 StyleBox["randompoint.alignerframe[1] +",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" t ",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["0",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[") ",
  FontWeight->"Bold"],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 StyleBox["Reason:\nalignerframe[1] and alignerframe[2] are perpendicular. \n\
So ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["alignerframe[2].",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["alignerframe[1] = ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["0",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".",
  FontVariations->{"CompatibilityType"->0}]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 StyleBox["              =  (",
  FontWeight->"Bold"],
 StyleBox["randompoint.alignerframe[1]",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[") ",
  FontWeight->"Bold"],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1].",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "The upshot:\nWhen you hit A at any point on the line defined  by \n         \
               ",
 StyleBox["randompoint +",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" t alignerframe[2]",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",\n you get the same point- namely",
  FontVariations->{"CompatibilityType"->0}]
}], "SmallText"],

Cell[TextData[{
 StyleBox["                ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["(",
  FontWeight->"Bold"],
 StyleBox["randompoint.alignerframe[1]",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[") ",
  FontWeight->"Bold"],
 StyleBox["xstretch",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["hangerframe[1].",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell["\<\
This tells you that hits with A send infinitely many points into the same \
point.\
\>", "SmallText"],

Cell["\<\
Once these infinitely many hit points have been deposited on the same point, \
it's impossible to tell where they came from.
That's why it's impossible to undo a hit by this matrix. And that's why any \
matrix made with ystretch = 0 cannot be invertible. \
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.03.B1"->{
  Cell[29517, 803, 1050, 38, 184, "Subsection",
   CellTags->"MGM.03.B1"]},
 "MGM.03.B2"->{
  Cell[76484, 2404, 186, 4, 61, "Subsection",
   CellTags->"MGM.03.B2"]},
 "MGM.03.B3"->{
  Cell[124997, 4366, 2496, 99, 360, "Subsection",
   CellTags->"MGM.03.B3"]},
 "MGM.03.B4"->{
  Cell[164360, 5875, 245, 5, 86, "Subsection",
   CellTags->"MGM.03.B4"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.03.B1", 272382, 8880},
 {"MGM.03.B2", 272474, 8883},
 {"MGM.03.B3", 272564, 8886},
 {"MGM.03.B4", 272658, 8889}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 179, 6, 108, "Title"],
Cell[CellGroupData[{
Cell[6416, 138, 193, 7, 28, "Special2"],
Cell[6612, 147, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7929, 189, 38, 0, 31, "Subsubsection"],
Cell[7970, 191, 1344, 31, 156, "Input"],
Cell[9317, 224, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9490, 230, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26861, 713, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27108, 724, 39, 0, 35, "Subsubsection"],
Cell[27150, 726, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29517, 803, 1050, 38, 184, "Subsection",
 CellTags->"MGM.03.B1"],
Cell[30570, 843, 172, 4, 49, "Text"],
Cell[CellGroupData[{
Cell[30767, 851, 338, 9, 74, "Subsubsection"],
Cell[31108, 862, 856, 18, 399, "Text"],
Cell[31967, 882, 1288, 41, 115, "Input"],
Cell[33258, 925, 140, 3, 31, "Special5"],
Cell[33401, 930, 72, 0, 24, "Text"],
Cell[33476, 932, 533, 17, 71, "Input"],
Cell[34012, 951, 91, 2, 24, "Text"],
Cell[34106, 955, 1306, 42, 115, "Input"],
Cell[35415, 999, 138, 3, 31, "Special5"],
Cell[35556, 1004, 47, 0, 24, "Text"],
Cell[35606, 1006, 828, 29, 36, "Input"],
Cell[36437, 1037, 97, 2, 24, "Text"],
Cell[36537, 1041, 4718, 146, 424, "Input"],
Cell[41258, 1189, 122, 3, 20, "Special5"],
Cell[41383, 1194, 109, 3, 24, "Text"],
Cell[41495, 1199, 580, 14, 66, "Input"],
Cell[CellGroupData[{
Cell[42100, 1217, 138, 3, 49, "Text"],
Cell[42241, 1222, 27, 0, 23, "Special1"],
Cell[42271, 1224, 91, 2, 24, "SmallText"],
Cell[42365, 1228, 113, 3, 20, "Input"],
Cell[42481, 1233, 192, 5, 74, "SmallText"],
Cell[42676, 1240, 829, 22, 96, "Input"],
Cell[43508, 1264, 243, 5, 74, "SmallText"],
Cell[43754, 1271, 1180, 33, 81, "Input"],
Cell[44937, 1306, 32, 0, 24, "SmallText"],
Cell[44972, 1308, 97, 2, 20, "Input"],
Cell[45072, 1312, 156, 3, 49, "SmallText"],
Cell[45231, 1317, 130, 4, 49, "SmallText"],
Cell[45364, 1323, 1502, 42, 96, "Input"],
Cell[46869, 1367, 111, 3, 20, "Special5"],
Cell[46983, 1372, 55, 1, 24, "SmallText"],
Cell[47041, 1375, 87, 2, 20, "Input"],
Cell[47131, 1379, 265, 11, 24, "SmallText"],
Cell[47399, 1392, 7821, 242, 679, "Input"]
}, Closed]]
}, Closed]],
Cell[55247, 1638, 101, 2, 20, "Special5"],
Cell[CellGroupData[{
Cell[55373, 1644, 671, 29, 96, "Subsubsection"],
Cell[56047, 1675, 117, 3, 49, "Text"],
Cell[56167, 1680, 226, 7, 20, "Input"],
Cell[56396, 1689, 4035, 141, 364, "Input"],
Cell[60434, 1832, 29, 0, 24, "Text"],
Cell[60466, 1834, 375, 11, 36, "Input"],
Cell[60844, 1847, 64, 0, 20, "Special5"],
Cell[CellGroupData[{
Cell[60933, 1851, 40, 0, 24, "Text"],
Cell[60976, 1853, 27, 0, 23, "Special1"],
Cell[61006, 1855, 516, 11, 199, "SmallText"],
Cell[61525, 1868, 122, 4, 74, "SmallText"],
Cell[61650, 1874, 370, 12, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[62069, 1892, 833, 31, 100, "Subsubsection"],
Cell[62905, 1925, 50, 0, 24, "Text"],
Cell[62958, 1927, 4818, 147, 321, "Input"],
Cell[CellGroupData[{
Cell[67801, 2078, 858, 32, 124, "Text"],
Cell[68662, 2112, 27, 0, 23, "Special1"],
Cell[68692, 2114, 552, 16, 124, "SmallText"],
Cell[69247, 2132, 1544, 61, 274, "SmallText"],
Cell[70794, 2195, 1292, 45, 36, "Input"],
Cell[72089, 2242, 136, 3, 31, "Special5"],
Cell[72228, 2247, 574, 19, 71, "Input"],
Cell[72805, 2268, 1399, 49, 36, "Input"],
Cell[74207, 2319, 138, 3, 31, "Special5"],
Cell[74348, 2324, 92, 2, 24, "SmallText"],
Cell[74443, 2328, 355, 11, 36, "Input"],
Cell[74801, 2341, 431, 16, 124, "SmallText"],
Cell[75235, 2359, 357, 11, 36, "Input"],
Cell[75595, 2372, 28, 0, 24, "SmallText"],
Cell[75626, 2374, 754, 21, 51, "Input"],
Cell[76383, 2397, 40, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[76484, 2404, 186, 4, 61, "Subsection",
 CellTags->"MGM.03.B2"],
Cell[76673, 2410, 14872, 888, 158, "Text"],
Cell[CellGroupData[{
Cell[91570, 3302, 87, 1, 31, "Subsubsection"],
Cell[91660, 3305, 99, 2, 24, "Text"],
Cell[91762, 3309, 6702, 208, 609, "Input"],
Cell[CellGroupData[{
Cell[98489, 3521, 361, 8, 124, "Text"],
Cell[98853, 3531, 27, 0, 23, "Special1"],
Cell[98883, 3533, 1246, 34, 324, "SmallText"],
Cell[100132, 3569, 253, 8, 174, "SmallText"],
Cell[100388, 3579, 1485, 48, 161, "Input"],
Cell[101876, 3629, 49, 0, 24, "SmallText"],
Cell[101928, 3631, 1375, 37, 141, "Input"],
Cell[CellGroupData[{
Cell[103328, 3672, 214, 5, 99, "SmallText"],
Cell[103545, 3679, 348, 8, 174, "Text"],
Cell[103896, 3689, 736, 24, 36, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[104693, 3720, 78, 0, 31, "Subsubsection"],
Cell[104774, 3722, 73, 0, 24, "Text"],
Cell[104850, 3724, 6828, 213, 571, "Input"],
Cell[111681, 3939, 48, 0, 24, "Text"],
Cell[111732, 3941, 1041, 28, 111, "Input"],
Cell[CellGroupData[{
Cell[112798, 3973, 238, 5, 99, "Text"],
Cell[113039, 3980, 27, 0, 23, "Special1"],
Cell[113069, 3982, 1779, 54, 449, "SmallText"],
Cell[114851, 4038, 56, 0, 20, "Special5"],
Cell[114910, 4040, 51, 0, 24, "SmallText"],
Cell[114964, 4042, 2439, 80, 176, "Input"],
Cell[117406, 4124, 39, 0, 24, "SmallText"],
Cell[117448, 4126, 1447, 38, 141, "Input"],
Cell[118898, 4166, 71, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[119018, 4172, 46, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[119089, 4176, 131, 3, 49, "Text"],
Cell[119223, 4181, 27, 0, 23, "Special1"],
Cell[119253, 4183, 1418, 36, 449, "SmallText"],
Cell[120674, 4221, 1741, 54, 191, "Input"],
Cell[122418, 4277, 70, 0, 24, "SmallText"],
Cell[122491, 4279, 2445, 80, 191, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[124997, 4366, 2496, 99, 360, "Subsection",
 CellTags->"MGM.03.B3"],
Cell[CellGroupData[{
Cell[127518, 4469, 131, 3, 52, "Subsubsection"],
Cell[127652, 4474, 189, 6, 124, "Text"],
Cell[127844, 4482, 4546, 155, 402, "Input"],
Cell[132393, 4639, 44, 0, 24, "Text"],
Cell[132440, 4641, 609, 26, 65, "Text"],
Cell[133052, 4669, 587, 18, 58, "Input"],
Cell[133642, 4689, 186, 9, 27, "Text"],
Cell[133831, 4700, 97, 2, 20, "Input"],
Cell[CellGroupData[{
Cell[133953, 4706, 93, 3, 49, "Text"],
Cell[134049, 4711, 27, 0, 23, "Special1"],
Cell[134079, 4713, 329, 9, 149, "SmallText"],
Cell[134411, 4724, 278, 13, 27, "SmallText"],
Cell[134692, 4739, 25, 0, 24, "SmallText"],
Cell[134720, 4741, 375, 17, 27, "SmallText"],
Cell[135098, 4760, 258, 9, 111, "Accident"],
Cell[135359, 4771, 1080, 31, 399, "SmallText"],
Cell[136442, 4804, 338, 12, 47, "SmallText"],
Cell[136783, 4818, 33, 0, 24, "SmallText"],
Cell[136819, 4820, 1031, 40, 147, "SmallText"],
Cell[137853, 4862, 664, 23, 138, "SmallText"],
Cell[138520, 4887, 761, 33, 65, "SmallText"],
Cell[139284, 4922, 28, 0, 24, "SmallText"],
Cell[139315, 4924, 1421, 44, 151, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[140785, 4974, 447, 17, 89, "Subsubsection"],
Cell[141235, 4993, 223, 5, 99, "Text"],
Cell[141461, 5000, 4353, 147, 397, "Input"],
Cell[145817, 5149, 585, 21, 183, "Text"],
Cell[146405, 5172, 1204, 40, 136, "Input"],
Cell[147612, 5214, 187, 9, 27, "Text"],
Cell[147802, 5225, 122, 3, 20, "Input"],
Cell[147927, 5230, 24, 0, 24, "Text"],
Cell[147954, 5232, 113, 3, 31, "Special5"],
Cell[CellGroupData[{
Cell[148092, 5239, 85, 2, 24, "Text"],
Cell[148180, 5243, 27, 0, 23, "Special1"],
Cell[148210, 5245, 789, 25, 249, "SmallText"],
Cell[149002, 5272, 586, 22, 74, "SmallText"],
Cell[149591, 5296, 47, 3, 49, "SmallText"],
Cell[149641, 5301, 231, 8, 49, "SmallText"],
Cell[149875, 5311, 168, 8, 52, "SmallText"],
Cell[150046, 5321, 787, 33, 77, "SmallText"],
Cell[150836, 5356, 613, 22, 51, "Special5"],
Cell[151452, 5380, 41, 0, 24, "SmallText"],
Cell[151496, 5382, 387, 15, 52, "SmallText"],
Cell[151886, 5399, 102, 2, 20, "Special5"],
Cell[151991, 5403, 1653, 65, 307, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[153693, 5474, 823, 34, 116, "Subsubsection"],
Cell[154519, 5510, 189, 6, 124, "Text"],
Cell[154711, 5518, 4546, 155, 402, "Input"],
Cell[159260, 5675, 564, 22, 108, "Text"],
Cell[159827, 5699, 1327, 44, 126, "Input"],
Cell[161157, 5745, 24, 0, 24, "Text"],
Cell[161184, 5747, 97, 2, 20, "Input"],
Cell[CellGroupData[{
Cell[161306, 5753, 102, 5, 26, "Text"],
Cell[161411, 5760, 27, 0, 23, "Special1"],
Cell[161441, 5762, 568, 22, 105, "SmallText"],
Cell[162012, 5786, 1274, 42, 101, "Input"],
Cell[163289, 5830, 29, 0, 24, "SmallText"],
Cell[163321, 5832, 99, 2, 20, "Input"],
Cell[163423, 5836, 876, 32, 132, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[164360, 5875, 245, 5, 86, "Subsection",
 CellTags->"MGM.03.B4"],
Cell[CellGroupData[{
Cell[164630, 5884, 107, 2, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[164762, 5890, 102, 2, 24, "Text"],
Cell[164867, 5894, 27, 0, 23, "Special1"],
Cell[164897, 5896, 196, 6, 74, "SmallText"],
Cell[165096, 5904, 3147, 107, 399, "Input"],
Cell[168246, 6013, 77, 4, 24, "SmallText"],
Cell[168326, 6019, 85, 2, 20, "Input"],
Cell[168414, 6023, 211, 6, 49, "SmallText"],
Cell[168628, 6031, 6270, 190, 538, "Input"],
Cell[174901, 6223, 163, 4, 31, "Special5"],
Cell[175067, 6229, 474, 8, 149, "SmallText"],
Cell[175544, 6239, 107, 2, 24, "SmallText"],
Cell[175654, 6243, 7766, 255, 689, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[183469, 6504, 189, 4, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[183683, 6512, 355, 10, 99, "Text"],
Cell[184041, 6524, 27, 0, 23, "Special1"],
Cell[184071, 6526, 143, 3, 49, "SmallText"],
Cell[184217, 6531, 562, 22, 50, "SmallText"],
Cell[184782, 6555, 68, 0, 24, "SmallText"],
Cell[184853, 6557, 734, 29, 50, "SmallText"],
Cell[185590, 6588, 40, 0, 24, "SmallText"],
Cell[185633, 6590, 904, 34, 52, "SmallText"],
Cell[186540, 6626, 600, 28, 35, "Special2"],
Cell[187143, 6656, 226, 8, 24, "SmallText"],
Cell[187372, 6666, 486, 19, 24, "SmallText"],
Cell[187861, 6687, 292, 8, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[188202, 6701, 173, 3, 52, "Subsubsection"],
Cell[188378, 6706, 212, 8, 24, "Text"],
Cell[188593, 6716, 3868, 133, 339, "Input"],
Cell[192464, 6851, 306, 9, 49, "Text"],
Cell[192773, 6862, 3117, 97, 171, "Input"],
Cell[195893, 6961, 314, 5, 23, "Special2"],
Cell[196210, 6968, 1764, 49, 111, "Input"],
Cell[197977, 7019, 74, 0, 24, "Text"],
Cell[198054, 7021, 1276, 35, 81, "Input"],
Cell[199333, 7058, 29, 0, 24, "Text"],
Cell[199365, 7060, 10378, 329, 729, "Input"],
Cell[209746, 7391, 87, 2, 12, "Special2"],
Cell[CellGroupData[{
Cell[209858, 7397, 449, 14, 74, "Text"],
Cell[210310, 7413, 27, 0, 23, "Special1"],
Cell[210340, 7415, 131, 5, 24, "SmallText"],
Cell[210474, 7422, 490, 19, 24, "SmallText"],
Cell[CellGroupData[{
Cell[210989, 7445, 188, 4, 12, "Special2"],
Cell[211180, 7451, 143, 3, 49, "SmallText"],
Cell[211326, 7456, 562, 22, 50, "SmallText"],
Cell[211891, 7480, 68, 0, 24, "SmallText"],
Cell[211962, 7482, 734, 29, 50, "SmallText"],
Cell[212699, 7513, 40, 0, 24, "SmallText"],
Cell[212742, 7515, 908, 34, 52, "SmallText"],
Cell[213653, 7551, 600, 28, 35, "Special2"],
Cell[214256, 7581, 226, 8, 49, "SmallText"],
Cell[214485, 7591, 486, 19, 24, "SmallText"]
}, Closed]],
Cell[214986, 7613, 290, 9, 49, "SmallText"],
Cell[215279, 7624, 28, 0, 24, "SmallText"],
Cell[215310, 7626, 402, 14, 24, "SmallText"],
Cell[215715, 7642, 676, 24, 49, "SmallText"],
Cell[216394, 7668, 594, 20, 49, "SmallText"],
Cell[216991, 7690, 597, 21, 24, "SmallText"],
Cell[217591, 7713, 543, 16, 35, "Special2"],
Cell[218137, 7731, 410, 15, 24, "SmallText"],
Cell[218550, 7748, 403, 10, 99, "SmallText"],
Cell[218956, 7760, 468, 17, 24, "SmallText"],
Cell[219427, 7779, 111, 3, 24, "SmallText"],
Cell[219541, 7784, 284, 5, 99, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
