(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    274645,       8526]
NotebookOptionsPosition[    203648,       6930]
NotebookOutlinePosition[    256894,       8045]
CellTagsIndexPosition[    256700,       8036]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.04 SVD Analysis of 2D Matrices\n",
 StyleBox[" BASICS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1)   SVD Matrix analysis:\nPutting any 2D matrix A in the form A = ",
 StyleBox["hanger. ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[". aligner",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 CellTags->"MGM.04.B1"],

Cell["\<\
SVD analysis tells you that every matrix can be duplicated with matrix maker \
ingredients: hanger, stretcher and aligner. If you want to find out how to do \
this for any 2D matrix, jump in right now.\
\>", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1.a.i) Taking a random matrix and duplicating it  with matrix maker \
ingredients:",
 StyleBox[" \naligner",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 " and ",
 StyleBox["hanger",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection",
 FontSize->16],

Cell["Here's  a random 2D matrix ", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[{
 "Duplicate this matrix by coming up by with an aligner frame, stretch \
factors and a hanger frame so that\n     A = ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["hanger",
  FontColor->RGBColor[0, 0, 1]],
 ". ",
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 ".",
 StyleBox["aligner.",
  FontColor->RGBColor[0, 0, 1]],
 " "
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Thanks go to Professor Todd Will of Davidson College for suggesting this..\
\>", "Special5"],

Cell["First go with a cleared perpendicular frame:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"perpframe", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}]}]}], "Input"],

Cell[TextData[{
 "Now go after an ",
 Cell[BoxData["s"]],
 " that makes \n            ",
 StyleBox["A.perpframe[1] ",
  FontColor->RGBColor[0, 0, 1]],
 "and ",
 StyleBox["A.perpframe[2]",
  FontColor->RGBColor[0, 0, 1]],
 " \ninto perpendicular vectors"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"schoices", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{"A", ".", 
         RowBox[{"perpframe", "[", "1", "]"}]}], ")"}],
       FontColor->RGBColor[0, 0, 1]], ".", 
      RowBox[{"(", 
       StyleBox[
        RowBox[{"A", ".", 
         RowBox[{"perpframe", "[", "2", "]"}]}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[")",
        FontColor->RGBColor[0, 0, 1]]}]}], " ", "==", " ", 
     StyleBox["0",
      FontColor->RGBColor[1, 0, 0]]}], ",", "s"}], "]"}]}]], "Input"],

Cell["Take any of these choices", "SmallText"],

Cell[BoxData[
 RowBox[{"s", " ", "=", " ", 
  RowBox[{"s", "/.", 
   RowBox[{"schoices", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}]}]], "Input"],

Cell["\<\
Plug this s into the cleared perpendicular frame to get your alignerframe and \
aligner::\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], ",", 
       RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{"aligner", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"alignerframe", "[", "1", "]"}], ",", 
        RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\n", 
   RowBox[{"MatrixForm", "[", "aligner", "]"}]}]}]], "Input"],

Cell[TextData[{
 "The stretch factors are:\n           ",
 Cell[BoxData[
  RowBox[{"xstretch", "=", 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     RowBox[{"alignerframe", "[", "1", "]"}]}], "||"}]}]]],
 "\nand\n            ",
 Cell[BoxData[
  RowBox[{"ystretch", "=", 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "||"}]}]]],
 "\nso your stretcher is:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "1", "]"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"ystretch", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell[TextData[{
 "Your hangerframe is:\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"hangerframe", "[", "1", "]"}], "=", 
   RowBox[{
    FractionBox["1", "xstretch"], 
    RowBox[{"A", ".", 
     RowBox[{"alignerframe", "[", "1", "]"}]}]}]}]]],
 "\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"hangerframe", "[", "2", "]"}], "=", 
   RowBox[{
    FractionBox["1", "ystretch"], 
    RowBox[{"A", ".", 
     RowBox[{"alignerframe", "[", "2", "]"}]}]}]}]]]
}], "SmallText"],

Cell["\<\
This makes it automatic that the hanger frame vectors are perpendicular unit \
vectors. 
And this makes it automatic that
A.alignerframe[1] = xstretch hangerframe[1] 

A.alignerframe[2] = ystretch hangerframe[2]\
\>", "Special5"],

Cell["So your hanger is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "xstretch"], 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "1", "]"}]}]}], ",", 
      RowBox[{
       FractionBox["1", "ystretch"], 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "2", "]"}]}]}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["Try them out by comparing A with:", "SmallText"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]], "]"}]}], "Input"],

Cell["\<\
Bingo!
Try it for more random 2D matrices A.\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"perpframe", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"schoices", " ", "=", " ", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"(", 
          RowBox[{"A", ".", 
           RowBox[{"perpframe", "[", "1", "]"}]}], ")"}],
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"(", 
         StyleBox[
          RowBox[{"A", ".", 
           RowBox[{"perpframe", "[", "2", "]"}]}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[")",
          FontColor->RGBColor[0, 0, 1]]}]}], " ", "==", " ", 
       StyleBox["0",
        FontColor->RGBColor[1, 0, 0]]}], ",", "s"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"s", "/.", 
     RowBox[{"schoices", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "1", "]"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"ystretch", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "xstretch"], 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "1", "]"}]}]}], ",", 
      RowBox[{
       FractionBox["1", "ystretch"], 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "2", "]"}]}]}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]], "]"}]}], "Input"],

Cell["Rerun until you feel good.", "Special5"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.a.ii) What is SVD analysis?", "Subsubsection",
 FontSize->16],

Cell[CellGroupData[{

Cell["What is SVD analysis of a 2D matrix A?", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You just did it. \nSVD analysis of a given matrix A is the act of \
duplicating A with matrix maker ingredients \n         ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", 
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], ".", "aligner"}]}]]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.a.iii) Why SVD analysis is always possible", "Subsubsection",
 FontSize->16],

Cell[CellGroupData[{

Cell["What guarantees that SVD analysis works?", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "The discussion above hinges on going with\n           ",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"perpframe", "[", "1", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "s", "]"}], ",", 
     RowBox[{"Sin", "[", "s", "]"}]}], "}"}]}], "\n", 
  RowBox[{
   RowBox[{"perpframe", "[", "2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"s", "+", 
       FractionBox["\[Pi]", "2"]}], "]"}], ",", 
     RowBox[{"Sin", "[", 
      RowBox[{"s", "+", 
       FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]}]],
 "\nand coming up with an s that makes \n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "1", "]"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "2", "]"}]}], ")"}]}], "=", "0"}]]],
 ".\nTo see why this is possible for any 2D matrix A, go with a cleared \
matrix A: "
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {"a", "b"},
       {"c", "d"}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Go with a cleared candidate for your aligner frame:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"perpframe", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}]}]}], "Input"],

Cell[TextData[{
 "The job is to explain why at least one solution s of\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "1", "]"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "2", "]"}]}], ")"}]}], "=", "0"}]]],
 " \nis guaranteed.\nTo do this, look at:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(", 
    RowBox[{"A", ".", 
     RowBox[{"perpframe", "[", "1", "]"}]}], ")"}],
   FontColor->RGBColor[0, 0, 1]], ".", 
  StyleBox[
   RowBox[{"(", 
    RowBox[{"A", ".", 
     RowBox[{"perpframe", "[", "2", "]"}]}], ")"}],
   FontColor->RGBColor[0, 0, 1]]}]], "Input"],

Cell["This is the same as:", "SmallText"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   StyleBox[
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "1", "]"}]}], ")"}],
    FontColor->RGBColor[0, 0, 1]], ".", 
   StyleBox[
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "2", "]"}]}], ")"}],
    FontColor->RGBColor[0, 0, 1]]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"perpframe", "[", "1", "]"}]}], ")"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"perpframe", "[", "2", "]"}]}], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], "]"}], "]"}]], "Input"],

Cell[TextData[{
 "This comes from applications of the identities\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "x"}], "]"}], "=", 
   RowBox[{"2", " ", 
    RowBox[{"Sin", "[", "x", "]"}], " ", 
    RowBox[{"Cos", "[", "x", "]"}]}]}]]],
 "\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", "x"}], "]"}], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "x", "]"}], "2"], "-", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "x", "]"}], "2"]}]}]]],
 "."
}], "Special5"],

Cell[TextData[{
 "This signals that saying that\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "1", "]"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "2", "]"}]}], ")"}]}], "=", "0"}]]],
 " \n is the same as saying that\n             ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", "b"}], "+", 
       RowBox[{"c", " ", "d"}]}], ")"}], " ", 
     StyleBox[
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "s"}], "]"}],
      FontColor->RGBColor[1, 0, 0]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["a", "2"]}], "+", 
       SuperscriptBox["b", "2"], "-", 
       SuperscriptBox["c", "2"], "+", 
       SuperscriptBox["d", "2"]}], ")"}], " ", 
     StyleBox[
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "s"}], "]"}],
      FontColor->RGBColor[1, 0, 0]]}]}], " ", "=", " ", "0."}]]],
 "\nSo saying that\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "1", "]"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "2", "]"}]}], ")"}]}], "=", "0"}]]],
 "\nis the same as saying that\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", " ", "b"}], "+", 
      RowBox[{"c", " ", "d"}]}], ")"}], " ", 
    StyleBox[
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "s"}], "]"}],
     FontColor->RGBColor[1, 0, 0]]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["a", "2"], "-", 
      SuperscriptBox["b", "2"], "+", 
      SuperscriptBox["c", "2"], "-", 
      SuperscriptBox["d", "2"]}], ")"}], " ", 
    RowBox[{
     StyleBox[
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "s"}], "]"}],
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], "."}]}]}]]],
 "\nAnd this the same as saying that\n           ",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", "b"}], " ", "+", " ", 
       RowBox[{"c", " ", "d"}]}], ")"}]}], 
    RowBox[{
     SuperscriptBox["a", "2"], "-", " ", 
     SuperscriptBox["b", "2"], "+", " ", 
     SuperscriptBox["c", "2"], "-", " ", 
     SuperscriptBox["d", "2"]}]], "=", 
   FractionBox[
    StyleBox[
     RowBox[{"Sin", "[", 
      RowBox[{"2", " ", "s"}], "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{
     StyleBox["  ",
      FontColor->RGBColor[1, 0, 0]], 
     RowBox[{
      StyleBox["Cos",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["[",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"2", " ", "s"}],
       FontColor->RGBColor[1, 0, 0]], "]"}], " "}]]}]]],
 "\nAnd this the same as saying that\n           ",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", " ", "b"}], " ", "+", " ", 
       RowBox[{"c", " ", "d"}]}], ")"}]}], 
    RowBox[{
     SuperscriptBox["a", "2"], "-", " ", 
     SuperscriptBox["b", "2"], "+", " ", 
     SuperscriptBox["c", "2"], "-", " ", 
     SuperscriptBox["d", "2"]}]], "=", 
   RowBox[{
    StyleBox[
     RowBox[{"Tan", "[", 
      RowBox[{"2", " ", "s"}], "]"}],
     FontColor->RGBColor[1, 0, 0]], " ", "."}]}]]],
 "\n And because ",
 Cell[BoxData[
  RowBox[{"Tan", "[", 
   RowBox[{"2", " ", "s"}], "]"}]],
  FontColor->RGBColor[1, 0, 0]],
 " takes on all values from -\[Infinity]  to  \[Infinity], \n your  s is \
guaranteed."
}], "SmallText"],

Cell["This formula is not worth memorizing.", "Special5"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.a.iv) More than one aligner frame", "Subsubsection",
 FontSize->16],

Cell[CellGroupData[{

Cell["\<\
The discussion above tells you that it is always possible to come up with a \
right hand perpendicular frame that serves as the aligner frame for a given \
matrix.
Can you get more than one aligner frame for a given matrix?
Is it an issue?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["The answer depends on how anal you want to be.", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"perpframe", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], ",", 
       RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"s", "+", " ", 
         RowBox[{"Pi", "/", "2"}]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"s", " ", "+", " ", 
         RowBox[{"Pi", "/", "2"}]}], "]"}]}], "}"}]}], "}"}]}]}]}], "Input"],

Cell[TextData[{
 "Now go after the ",
 Cell[BoxData["s"]],
 "'s that make\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "1", "]"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"perpframe", "[", "2", "]"}]}], ")"}]}], "=", "0"}]]],
 ": "
}], "SmallText"],

Cell[BoxData[
 RowBox[{"schoices", " ", "=", " ", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", ".", 
        RowBox[{"perpframe", "[", "1", "]"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        RowBox[{"perpframe", "[", "2", "]"}]}], ")"}]}], " ", "==", " ", 
     "0"}], ",", "s"}], "]"}], " "}]], "Input"],

Cell["This gives you four choices for s:", "SmallText"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["s", 
   RowBox[{
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]], " "}]], "=", " ", 
  RowBox[{"s", "/.", 
   RowBox[{"schoices", "[", 
    RowBox[{"[", 
     StyleBox["1",
      FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["s", 
   RowBox[{
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]], " "}]], "=", " ", 
  RowBox[{"s", "/.", 
   RowBox[{"schoices", "[", 
    RowBox[{"[", 
     StyleBox["2",
      FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["s", 
   RowBox[{
    StyleBox["3",
     FontColor->RGBColor[0, 0, 1]], " "}]], "=", " ", 
  RowBox[{"s", "/.", 
   RowBox[{"schoices", "[", 
    RowBox[{"[", 
     StyleBox["3",
      FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  SubscriptBox["s", 
   RowBox[{
    StyleBox["4",
     FontColor->RGBColor[0, 0, 1]], " "}]], "=", " ", 
  RowBox[{"s", "/.", 
   RowBox[{"schoices", "[", 
    RowBox[{"[", 
     StyleBox["4",
      FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]}]], "Input"],

Cell["\<\
See four perpendicular frames all of which will work as aligner frame for \
this matrix:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "/.", 
  RowBox[{"s", "->", 
   SubscriptBox["s", 
    RowBox[{"1", " "}]]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "/.", 
  RowBox[{"s", "->", 
   SubscriptBox["s", 
    RowBox[{"2", " "}]]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "/.", 
  RowBox[{"s", "->", 
   SubscriptBox["s", "3"]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "/.", 
  RowBox[{"s", "->", 
   SubscriptBox["s", "4"]}]}]], "Input"],

Cell["\<\
Four right hand aligner frames - but they are just slightly repackaged \
versions of the first one.
Any of these will work very satisfactorily. And if you want to go with left \
hand aligner frames you can go with these:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    StyleBox[
     RowBox[{"-", 
      RowBox[{"perpframe", "[", "2", "]"}]}],
     FontColor->RGBColor[1, 0, 0]]}], "}"}], "/.", 
  RowBox[{"s", "->", 
   SubscriptBox["s", 
    RowBox[{"1", " "}]]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    StyleBox[
     RowBox[{"-", 
      RowBox[{"perpframe", "[", "2", "]"}]}],
     FontColor->RGBColor[1, 0, 0]]}], "}"}], "/.", 
  RowBox[{"s", "->", 
   SubscriptBox["s", 
    RowBox[{"2", " "}]]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    StyleBox[
     RowBox[{"-", 
      RowBox[{"perpframe", "[", "2", "]"}]}],
     FontColor->RGBColor[1, 0, 0]]}], "}"}], "/.", 
  RowBox[{"s", "->", 
   SubscriptBox["s", "3"]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    StyleBox[
     RowBox[{"-", 
      RowBox[{"perpframe", "[", "2", "]"}]}],
     FontColor->RGBColor[1, 0, 0]]}], "}"}], "/.", 
  RowBox[{"s", "->", 
   SubscriptBox["s", "4"]}]}]], "Input"],

Cell["\<\
Now you've got eight aligner frames.
But one is enough. \
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2)   ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s SVD analysis instruction"
}], "Subsection",
 CellTags->"MGM.04.B2"],

Cell[TextData[{
 "B.2.a) Doing SVD analysis with a ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " instruction"
}], "Subsubsection",
 FontSize->16],

Cell["Here's random 2D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "According to B.1) above,you can use SVD analysis to duplicate \n            \
 ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   RowBox[{"hanger", ".", 
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], ".", "aligner"}]}]]],
 " \nthis way:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"perpframe", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"schoices", " ", "=", " ", 
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{"(", 
          RowBox[{"A", ".", 
           RowBox[{"perpframe", "[", "1", "]"}]}], ")"}],
         FontColor->RGBColor[0, 0, 1]], ".", 
        RowBox[{"(", 
         StyleBox[
          RowBox[{"A", ".", 
           RowBox[{"perpframe", "[", "2", "]"}]}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[")",
          FontColor->RGBColor[0, 0, 1]]}]}], " ", "==", " ", 
       StyleBox["0",
        FontColor->RGBColor[1, 0, 0]]}], ",", "s"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"s", "/.", 
     RowBox[{"schoices", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "1", "]"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"ystretch", " ", "=", " ", 
    RowBox[{"Norm", "[", 
     RowBox[{"A", ".", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "xstretch"], 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "1", "]"}]}]}], ",", 
      RowBox[{
       FractionBox["1", "ystretch"], 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "2", "]"}]}]}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "That's a lot of typing.\nTo eliminate the need for all this typing, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has an instruction that will help you do this SVD analysis quickly.\nHow \
do you use it?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["To get an aligner matrix for A you do this:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["aligner",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox[
      RowBox[{"SingularValues", "[", "A", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\[LeftDoubleBracket]",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["3",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\[RightDoubleBracket]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell["To get the corresponding hanger matrix for A you do this:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"SingularValues", "[", "A", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["\[LeftDoubleBracket]",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["\[RightDoubleBracket]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["To get the stretcher matrix for A, you do this:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"SingularValues", "[", "A", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["\[LeftDoubleBracket]",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["\[RightDoubleBracket]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell[TextData[{
 "It's as easy as 1-2-3.\n",
 StyleBox["1 <-----> hanger",
  FontColor->RGBColor[0, 0, 1]],
 "      ",
 StyleBox["2 <-----> stretches",
  FontColor->RGBColor[1, 0, 1]],
 "     ",
 StyleBox["3 <-----> aligner",
  FontColor->RGBColor[0, 0, 1]],
 "\n                         "
}], "Special5"],

Cell["Check it out:", "SmallText"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", "A", "]"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "Input"],

Cell["Yep.  It's as easy as 1-2-3.", "SmallText"],

Cell["\<\
If you want the individual vectors in the calculated aligner frame, do this:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[0, 0, 1]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"alignerframe", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell["If you want xstretch and ystretch here they are:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 1]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell["\<\
If you want the individual vectors in the calculated hanger frame, do this:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"hangerframe", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], "Input"],

Cell["Check everything out:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    StyleBox[
     RowBox[{"alignerframe", "[", "1", "]"}],
     FontColor->RGBColor[0, 0, 1]]}], ",", 
   RowBox[{
    StyleBox["xstretch",
     FontColor->RGBColor[1, 0, 1]], " ", 
    RowBox[{
     StyleBox["hangerframe",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      FontColor->RGBColor[0, 0, 1]], "]"}]}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", 
    StyleBox[
     RowBox[{"alignerframe", "[", "2", "]"}],
     FontColor->RGBColor[0, 0, 1]]}], ",", 
   RowBox[{
    StyleBox["ystretch",
     FontColor->RGBColor[1, 0, 1]], " ", 
    RowBox[{
     StyleBox["hangerframe",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2",
      FontColor->RGBColor[0, 0, 1]], "]"}]}]}], "}"}]], "Input"],

Cell[TextData[{
 "Everything checks.\nAnother way for the winning team of mathematics and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to serve you. "
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3)  Using SVD analysis and the fact that if \n             ",
 StyleBox["A =",
  FontColor->RGBColor[0, 0, 1]],
 "  ",
 StyleBox["hanger.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"xstretch", "0"},
     {"0", "ystretch"}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[".aligner, \n             \n",
  FontColor->RGBColor[0, 0, 1]],
 "then   ",
 Cell[BoxData[
  RowBox[{"    ", 
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]]}]]],
 " ",
 StyleBox["=",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      FractionBox["1", "xstretch"], "0"},
     {"0", 
      FractionBox["1", "ystretch"]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->RGBColor[1, 0, 1]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "   \nto invert 2D matrices.\nUsing SVD analysis to recognize and deal with \
non-invertible matrices "
}], "Subsection",
 CellTags->"MGM.04.B3"],

Cell[CellGroupData[{

Cell["\<\
B.3.a.i) Using SVD analysis to determine whether a matrix is invertible\
\>", "Subsubsection",
 FontSize->16],

Cell["Here's a random 2D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Use SVD analysis to determine whether this matrix is invertible.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Check the SVD stretch factors:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell["\<\
If by some fluke,one of the stretch factors turns out to 0, 
then rerun all code until neither is 0.\
\>", "Special5"],

Cell["\<\
Neither stretch factor is 0.
This tells you that is matrix is invertible.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3.a.ii) Using SVD analysis  and the fact that\n  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " = ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      FractionBox["1", "xstretch"], "0"},
     {"0", 
      FractionBox["1", "ystretch"]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->RGBColor[1, 0, 1]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 "\n  to construct the inverse"
}], "Subsubsection",
 FontSize->16],

Cell[TextData[{
 "Stay with the same matrix A as in part i)\nHere's ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", "A", "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Use SVD analysis and matrix maker ingredients to explain where this \
calculation comes from.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Do SVD analysis of A by writing A in the form \n         ",
 StyleBox[" A = hanger. ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[". aligner:",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{"Transpose", "[", 
     StyleBox[
      RowBox[{
       RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "1",
        "\[RightDoubleBracket]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->GrayLevel[0]], 
     StyleBox["[",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{
       RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2",
        "\[RightDoubleBracket]"}],
      FontColor->RGBColor[1, 0, 1]], "]"}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"aligner", "=", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "3", 
      "\[RightDoubleBracket]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell[TextData[{
 "Now remembering that  \n\[Rule]  the hanger for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " is the transpose of the aligner for A\n\[Rule]  the stretch factors for ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " are the inverses of the stretch factors for A \n\[Rule]  the aligner for \
",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " is the transpose of the hanger for A,\nyou build\n             ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 " = ",
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]]],
 ".",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      FractionBox["1", "xstretch"], "0"},
     {"0", 
      FractionBox["1", "ystretch"]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontColor->RGBColor[1, 0, 1]],
 ". ",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]]],
 ":\n"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"unstretcher", "=", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         StyleBox[
          FractionBox["1", "xstretch"],
          FontSize->16], "0"},
        {"0", 
         StyleBox[
          FractionBox["1", "ystretch"],
          FontSize->16]}
       }], "\[NegativeThinSpace]", ")"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SVDinverse", "=", 
    RowBox[{
     StyleBox[
      RowBox[{"Transpose", "[", "aligner", "]"}],
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox["unstretcher",
      FontColor->RGBColor[1, 0, 1]], ".", 
     StyleBox[
      RowBox[{"Transpose", "[", "hanger", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SVDinverse", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", "A", "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
Not much to it when you understand what to do with the matrix maker \
ingredients.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3.a.iii) The moral", "Subsubsection",
 FontSize->16],

Cell[CellGroupData[{

Cell["What's the moral?", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
You can use SVD analysis to build the inverse of any invertible matrix.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.3.b.i) Using SVD analysis to recognize noninvertible matrices\
\>", "Subsubsection",
 FontSize->16],

Cell["Here's another sample 2D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {"1.2", 
        RowBox[{"-", "3.6"}]},
       {"0.4", 
        RowBox[{"-", "1.2"}]}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Here's ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s attempt at a calculation of ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Inverse", "[", "A", "]"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Garbage.
Use SVD analysis to explain why that happened.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Look at the SVD stretch factors of A:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
  StyleBox["2",
   FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]], "Input"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " reports only ",
 StyleBox["one",
  FontColor->RGBColor[1, 0, 0]],
 " non-zero stretch factor.\nThis is ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s way of telling you that one of the stretch factors is ",
 StyleBox["0",
  FontColor->RGBColor[0, 0, 1]],
 ". \nAnd this tells you that A is not invertible."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.3.b.ii) Using SVD analysis to determine the line on which a noninvertible \
matrix hangs all its hits\
\>", "Subsubsection",
 FontSize->16],

Cell[CellGroupData[{

Cell["\<\
Stay with the same noninvertible matrix A as in part i).
Use SVD analysis to determine the line on which A hangs all its hits. Back up \
your answer with a convincing plot.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Look at:", "SmallText"],

Cell[BoxData[
 RowBox[{"alignerframe", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["3",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]], "Input"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " delivers only the alignerframe vector whose corresponding stretch factor \
is not 0.\nThe matrix A hangs all its hits on the line with direction unit \
vector"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"linedirection", " ", "=", 
  FractionBox[
   RowBox[{"A", ".", " ", 
    RowBox[{"alignerframe", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], 
   RowBox[{"Norm", "[", 
    RowBox[{"A", ".", " ", 
     RowBox[{"alignerframe", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]], " "}]], "Input"],

Cell["This is the same as hangerframe[1].", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["1",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input"],

Cell["Watch it happen in this action movie:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "hitpointplotter", ",", "pointcolor", ",", "actionarrows", ",", 
     "matrix2D", ",", "r", ",", "x", ",", "y", ",", "t"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", 
    RowBox[{"Max", "[", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
        "2", "\[RightDoubleBracket]"}], ",", "1.5"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{"0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "32"]}], ";"}], " ", "\n", "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"actionarrows", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"matrix2D", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.25"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"actionarrows", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "ranger", " ", "linedirection"}], ",", 
          RowBox[{"2", " ", "ranger", " ", "linedirection"}]}], "}"}], "]"}], 
       "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["\<\
That black line is the line through {0,0} whose direction is defined by:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"hangerframe", "[", "1", "]"}]], "Input"],

Cell["The noninvertible matrix A hangs all its hits in this line.", \
"SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4)  Linear Algebra: If the coefficient matrix A is invertible , ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "then given ",
 StyleBox["{u,v} ",
  FontColor->RGBColor[0, 0, 1]],
 " you can solve \n         ",
 StyleBox["  A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["{x,y} = {u,v} \n",
  FontColor->RGBColor[0, 0, 1]],
 "for ",
 StyleBox["{x,y}",
  FontColor->RGBColor[0, 0, 1]],
 " by putting\n          ",
 StyleBox[" {x,y} =  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".{u,v}",
  FontColor->RGBColor[0, 0, 1]],
 ".\nIf the coefficient matrix A is not invertible , saying you can solve \n  \
       ",
 StyleBox["  A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["{x,y} = {u,v} \n",
  FontColor->RGBColor[0, 0, 1]],
 "for {x,y}  is the same as saying ",
 StyleBox["{u.v}",
  FontColor->RGBColor[0, 0, 1]],
 " is on the line through {0,0} running in the direction of ",
 StyleBox["hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Subsection",
 CellTags->"MGM.04.B4"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4.a) When the coefficient matrix A is invertible , you can solve \n       \
  ",
 StyleBox["  A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["{x,y} = {u,v} \n",
  FontColor->RGBColor[0, 0, 1]],
 "for {x,y} by putting\n          ",
 StyleBox[" {x,y} =  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".{u,v}",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection",
 FontSize->16],

Cell[CellGroupData[{

Cell[TextData[{
 "Use what you know about matrices to try come up with the x and the y that \
solve the simultaneous linear equations:\n  ",
 StyleBox["    2.1 x - 1.7 y = 9.8\n      1.8 x + 0.6 y = - 1.5.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Go with this matrix:", "SmallText"],

Cell["Fancy folks like to call this the \"coefficient matrix.\"", "Special5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {"2.1", 
        RowBox[{"-", "1.7"}]},
       {"1.8", "0.6"}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "The linear system of equations is\n    ",
 StyleBox["   2.1 ",
  FontColor->RGBColor[0, 0, 1]],
 "x",
 StyleBox[" - 1.7 ",
  FontColor->RGBColor[0, 0, 1]],
 "y",
 StyleBox[" = ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["9.8",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["\n       1.8 ",
  FontColor->RGBColor[0, 0, 1]],
 "x",
 StyleBox[" + 0.6 ",
  FontColor->RGBColor[0, 0, 1]],
 "y",
 StyleBox[" = ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["- 1.5",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".",
  FontColor->RGBColor[0, 0, 1]],
 "\nThis is the same as \n        ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".{x,y} = ",
 StyleBox["{9.8 , -1.5}",
  FontColor->RGBColor[1, 0, 0]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["A",
    FontColor->RGBColor[0, 0, 1]], ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "==", 
  StyleBox[
   RowBox[{"{", 
    RowBox[{"9.8", ",", 
     RowBox[{"-", "1.5"}]}], "}"}],
   FontColor->RGBColor[1, 0, 0]]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
To come up with the x and the y that solve this system, just start with\
\>", "SmallText"],

Cell[TextData[{
 "             ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".{x,y} = ",
 StyleBox["{9.8 , -1.5}",
  FontColor->RGBColor[1, 0, 0]],
 ":"
}], "SmallText"],

Cell[TextData[{
 "and hit both sides with ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[1, 0, 0]],
 " to get"
}], "SmallText"],

Cell[TextData[{
 "            {x,y} = ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".{x,y} = ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]], "."}]],
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["{9.8.-1.5}",
  FontColor->RGBColor[1, 0, 0]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xsol", ",", "ysol"}], "}"}], "=", 
  StyleBox[
   RowBox[{
    RowBox[{"Inverse", "[", "A", "]"}], ".", 
    RowBox[{"{", 
     RowBox[{"9.8", ",", 
      RowBox[{"-", "1.5"}]}], "}"}]}],
   FontColor->RGBColor[1, 0, 0]]}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
This is the solution.
Check:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["A",
    FontColor->RGBColor[0, 0, 1]], ".", 
   RowBox[{"{", 
    RowBox[{"xsol", ",", "ysol"}], "}"}]}], "==", 
  RowBox[{"{", 
   RowBox[{"9.8", ",", 
    RowBox[{"-", "1.5"}]}], "}"}]}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
Got it.
This approach works anytime the coefficient matrix is invertible.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4.b.i) When the coefficient matrix A is not invertible , you can solve \n \
        ",
 StyleBox["  A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["{x,y} = {u,v} \n",
  FontColor->RGBColor[0, 0, 1]],
 "only if {u,v} is on the line through {0,0} in the direction of hangerframe \
[1]"
}], "Subsubsection",
 FontSize->16],

Cell["Here's a matrix which is not invertible:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {"0.6", 
        RowBox[{"-", "0.3"}]},
       {"0.8", 
        RowBox[{"-", "0.4"}]}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"Inverse", "[", "A", "]"}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell[TextData[{
 "That's garbage.\nIn spite of this, the corresponding linear system, for \
given u and v,\n        ",
 StyleBox["3.0 x - 1.5 y = u\n        1.0 x - 0.5 y = v",
  FontColor->RGBColor[0, 0, 1]],
 "\nmight have many or no solutions for x and y, depending on where the point \
{u,v} is located.\nHow do you make this determination?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Begin your SVD analysis of A:", "SmallText"],

Cell[BoxData[
 RowBox[{"stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell[TextData[{
 "Only one non-zero stretch factor. (As expected because A is not \
invertible.)\nLet ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " give you the hangerframe vector corresponding to this lone stretch \
factor:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"hangerframe", "[", "1", "]"}], " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "[", 
    RowBox[{"[", 
     StyleBox["1",
      FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input"],

Cell["\<\
Remember 1-2-3: 
Hanger-Stretcher-Aligner\
\>", "Special5"],

Cell["\<\
 Hitting a point {x,y} with A will result in a point hung on the line through \
{0,0} determined by hangerframe[1]. 
What it happen in this action movie:\
\>", "SmallText"],

Cell[BoxData["ranger"], "Input"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"a", " ", 
   RowBox[{"Max", "[", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"points", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", " ", 
    RowBox[{"a", " ", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"SingularValues", "[", "A", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "k_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", "0.3"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{
           "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
         "-", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "k", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lineplot", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Pink", ",", 
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "b"}], " ", 
           RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
          RowBox[{"b", " ", 
           RowBox[{"hangerframe", "[", "1", "]"}]}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"lineplot", ",", "pointplot", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", "actionarrows", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action arrows\>\""}]}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"lineplot", ",", "hitpointplot", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "The plotted line is the line through {0,0} defined by hangerframe[1].\nThe \
upshot:\nGiven {u,v}, if you are going to have any chance of solving\n        \
  A.{x,y} = {u,v}\nfor {x,y}, then {u,v} ",
 StyleBox["MUST",
  FontWeight->"Bold"],
 " be on the line through {0,0} defined by\n          hangerframe[1].\n       \
   \nThis is the same as saying that {u,v} is its own component in the \
direction of hangerframe[1].\n\nAnd this is the same as saying\n\n            \
 {u,v} = ({u,v}.hangerframe[1]) hangerframe[1]"
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4.b.ii) Failure because  ",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 " ",
 StyleBox["is not ",
  FontColor->RGBColor[0, 0, 1]],
 "on the line through {0,0} in the direction of hangerframe [1]"
}], "Subsubsection",
 FontSize->16],

Cell[CellGroupData[{

Cell["\<\
Stay with the same matrix A as in part i) above.
Go with 
            {u,v} = {1.00,1.45}
Does the linear system
           A.{x,y} = {u,v},
(which is the same as
             3.0 x - 1.5 y = u
             1.0 x - 0.5 y = v)
have a solution for x and y?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Remember that if you are going to have any chance of solving\n        ",
 StyleBox["  A",
  FontColor->RGBColor[0, 0, 1]],
 ".{x,y} = ",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 "\nfor {x,y}, then ",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 " MUST be on the line through {0,0} defined by\n          hangerframe[1].\n \
\nThis is the same as saying\n        ",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 " = (",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 ".hangerframe[1]) hangerframe[1].\n Check this out: "
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}],
   FontColor->RGBColor[1, 0, 0]], "=", 
  RowBox[{"{", 
   RowBox[{"1.00", ",", "1.45"}], "}"}]}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}],
     FontColor->RGBColor[1, 0, 0]], ".", 
    RowBox[{"hangerframe", "[", "1", "]"}]}], ")"}], " ", 
  RowBox[{"hangerframe", "[", "1", "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Close, but no cigar. \nThe linear system\n         A.{x,y} = ",
 StyleBox["{1.00,1.45}",
  FontColor->RGBColor[1, 0, 0]],
 "\nhas NO solutions for x and y."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4.b.iii) Success because  ",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 " ",
 StyleBox["is ",
  FontColor->RGBColor[0, 0, 1]],
 " on the line through {0,0} in the direction of hangerframe [1]"
}], "Subsubsection",
 FontSize->16],

Cell[CellGroupData[{

Cell[TextData[{
 "Stay with the same matrix A as in part i) above.\nGo with \n            \
{u,v} = {2.46, 3.28}\nDoes the linear system\n         ",
 StyleBox["  A.{x,y} = {u,v},",
  FontColor->RGBColor[0, 0, 1]],
 "\n(which is the same as\n             3.0 x - 1.5 y = u\n             1.0 x \
- 0.5 y = v)\nhave a solution for x and y?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Check:", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}],
   FontColor->RGBColor[1, 0, 0]], "=", 
  RowBox[{"{", 
   RowBox[{"2.46", ",", "3.28"}], "}"}]}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}],
     FontColor->RGBColor[1, 0, 0]], ".", 
    RowBox[{"hangerframe", "[", "1", "]"}]}], ")"}], " ", 
  RowBox[{"hangerframe", "[", "1", "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "These agree.\nThis tells you that the system\n         A.{x,y} = ",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 " = (",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 ".hangerframe[1]) hangerframe[1]  \nDOES have a solution {x,y}."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4.b.iv) Coming up with a solution {x,y} through the formula\n             \
      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], " ", "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        StyleBox[
         RowBox[{"u", ",", "v"}],
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["}",
         FontColor->RGBColor[1, 0, 0]]}], ".", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], " ", ")"}], 
     RowBox[{"alignerframe", "[", "1", "]"}]}], "xstretch"]}]],
  AspectRatioFixed->True]
}], "Subsubsection",
 FontSize->16],

Cell["\<\
Stay with the same matrix A as in part i) above.
At this point you know that if  
            {u,v} = {2.46, 3.28},
the linear system
           A.{x,y} = {u,v}
does have a solution {x,y}.
Here's how you can get one .\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hangerframe", "[", "1", "]"}], " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "[", 
    RowBox[{"[", 
     StyleBox["1",
      FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"alignerframe", "[", "1", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
    StyleBox["3",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"xstretch", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]], "Input",
 AspectRatioFixed->True],

Cell["You build a solution {x,y} this way:", "Text"],

Cell[BoxData[
 RowBox[{"Xsol", "=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"u", ",", "v"}],
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["}",
        FontColor->RGBColor[1, 0, 0]]}], ".", 
      RowBox[{"hangerframe", "[", "1", "]"}]}], " ", ")"}], 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "xstretch"]}]], "Input",
 AspectRatioFixed->True],

Cell["Try it out:", "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", "Xsol"}]], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"u", ",", "v"}], "}"}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Explain why that worked.", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You know\n         ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{"{", 
     RowBox[{"u", ",", "v"}], "}"}],
    FontColor->RGBColor[1, 0, 0]], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{"u", ",", "v"}],
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["}",
        FontColor->RGBColor[1, 0, 0]]}], ".", 
      RowBox[{"hangerframe", "[", "1", "]"}]}], " ", ")"}], 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 ". \n         \nAnd you know\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "=", 
   RowBox[{
    StyleBox["xstretch",
     FontColor->RGBColor[1, 0, 1]], " ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 ".\n         \nThis is the same as\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"alignerframe", "[", "1", "]"}], 
      StyleBox["xstretch",
       FontColor->RGBColor[1, 0, 1]]], ")"}]}], "=", 
   RowBox[{"hangerframe", "[", "1", "]"}]}]]],
 ".\n         \nAnd this is the same as\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", 
          StyleBox[
           RowBox[{"u", ",", "v"}],
           FontColor->RGBColor[1, 0, 0]], 
          StyleBox["}",
           FontColor->RGBColor[1, 0, 0]]}], ".", 
         RowBox[{"hangerframe", "[", "1", "]"}]}], ")"}], " ", 
       RowBox[{"alignerframe", "[", "1", "]"}]}], 
      StyleBox["xstretch",
       FontColor->RGBColor[1, 0, 1]]], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{"u", 
         StyleBox[",",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["v",
          FontColor->RGBColor[1, 0, 0]]}], "}"}],
       FontColor->RGBColor[1, 0, 0]], ".", 
      RowBox[{"hangerframe", "[", "1", "]"}]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 ". \n                                \nAnd this is the same as\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         StyleBox[
          RowBox[{"{", 
           RowBox[{"u", ",", "v"}], "}"}],
          FontColor->RGBColor[1, 0, 0]], ".", 
         RowBox[{"hangerframe", "[", "1", "]"}]}], ")"}], " ", 
       RowBox[{"alignerframe", "[", "1", "]"}]}], 
      StyleBox["xstretch",
       FontColor->RGBColor[1, 0, 1]]], ")"}]}], "=", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"u", ",", "v"}], "}"}],
    FontColor->RGBColor[1, 0, 0]]}]]],
 "\nbecause .\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", "v"}], "}"}], ".", 
      RowBox[{"hangerframe", "[", "1", "]"}]}], " ", ")"}], 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 ".\nThe upshot:\nWhen you hit A on\n           ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"u", ",", "v"}], "}"}], ".", 
      RowBox[{"hangerframe", "[", "1", "]"}]}], ")"}], " ", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "xstretch"]]],
 ",\nyou are guaranteed to get ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"u", ",", "v"}], "}"}]]],
 "."
}], "SmallText"],

Cell["That's where the formula:", "SmallText"],

Cell[BoxData[
 RowBox[{"Xsol", "=", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}], ".", 
     RowBox[{"hangerframe", "[", "1", "]"}]}], " ", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], 
   StyleBox["xstretch",
    FontColor->RGBColor[1, 0, 1]]]}]], "Input",
 AspectRatioFixed->True],

Cell["comes from.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.b.v) Success comes in spades", "Subsubsection",
 FontSize->16],

Cell[CellGroupData[{

Cell["\<\
Stay with the same matrix A as in part iii) above. And stay with the same \
{x,y} and {u,v} as in part iii) so that 
           A.{x,y} = {u,v}
Are there solutions other than the {x,y} you found in part iii)?
If so, indicate with a plot where they are.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["You bet there are!", "SmallText"],

Cell["There are infinitely many.", "Accident"],

Cell["\<\
To see where they come from, remember that ystretch = 0. This tells you that \
hits with A collapse everything perpendicular to alignerframe[1] to {0,0}.
Look at:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"alignerframe", "[", "1", "]"}]], "Input"],

Cell["A vector perpendicular to alignerframe[1] is:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"alignerframe", "[", "2", "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", 
    RowBox[{
     StyleBox["-",
      FontColor->RGBColor[1, 0, 0]], 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}]], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", 
  RowBox[{"alignerframe", "[", "2", "]"}]}]], "Input"],

Cell["\<\
Consequently when you go with the Xsol you got in the last part and add to it \
any multiple of alignerframe[2], you get another solution: \
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "t", "]"}], ";"}], " "}], "\n", 
 RowBox[{"Chop", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"A", ".", 
    RowBox[{"(", 
     RowBox[{"Xsol", "+", 
      RowBox[{"t", " ", 
       RowBox[{"alignerframe", "[", "2", "]"}]}]}], ")"}]}], "]"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"u", ",", "v"}], "}"}]], "Input"],

Cell["\<\
The upshot:
All the solutions of the linear system
           A.{x,y} = {u,v} 
are located on the line through {x,y} with direction vector alignerframe[2].
These are the points parameterized by:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"solutionline", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"solutionline", "[", "t_", "]"}], "=", 
  RowBox[{"Xsol", "+", 
   RowBox[{"t", " ", 
    RowBox[{"alignerframe", "[", "2", "]"}]}]}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Here's a look at part of this line:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"basepoint", "=", "Xsol"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"basepointplot", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
       RowBox[{"Point", "[", "basepoint", "]"}]}], "}"}], "]"}]}], ";"}], " ",
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"solutionlineplot", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Thickness", "[", "0.02", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"solutionline", "[", 
           RowBox[{"-", "1"}], "]"}], ",", 
          RowBox[{"solutionline", "[", "4", "]"}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Xsollabel", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<Xsol\>\"", ",", "basepoint"}], "]"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"solutionlineplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"basepointplot", ",", "Xsollabel", ",", "solutionlineplot", ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], 
  " "}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
See an action movie showing A hit all points on the line smack-dab onto {u,v}:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "hitpointplotter", ",", "pointcolor", ",", "actionarrows", ",", 
     "matrix2D", ",", "r", ",", "x", ",", "y", ",", "t"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"solutionline", "[", "t", "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "4"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "20"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"actionarrows", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"matrix2D", ".", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "-", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "t", "]"}]}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.25"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"solutionlineplot", ",", 
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3.5"}], "}"}]}], "}"}]}]}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"actionarrows", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action plot\>\""}]}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit with A\>\""}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"2", ",", "6"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3.5"}], "}"}]}], "}"}]}]}], "]"}]}], 
   ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["\<\
Think of it: 
All points {x,y} on the plotted line are solutions of 
        A.{x,y} = {u,v}.
The moral:
If A is not invertible and 
          A.{x,y} = {u,v} 
has any one solution then it has bundles of solutions. 
It's enough to make you want to freak out.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["B.5) Positive versus negative orientation of the columns of a 2D \
matrix.\nIf the columns of A are",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 StyleBox["positively",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["oriented, then",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+",
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["xstretch ystretch",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["If the columns of A are",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 StyleBox["negatively",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["oriented, then",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[LongDash]",
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["xstretch ystretch",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\nSo you can use |Det[A]| = xstretch ystretch as the area \
conversion factor. \nIf you interchange the vertical columns of a 2D matrix, \
you change the sign but not the absolute value of the determinant.\nThe \
short, sweet formula Det[",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 StyleBox["]  =",
  FontColor->RGBColor[0, 0.392187, 0]],
 "   ",
 StyleBox["a d",
  FontColor->RGBColor[1, 0, 0]],
 "  ",
 StyleBox["-",
  FontSize->18],
 " ",
 StyleBox["b c",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 FontColor->RGBColor[1, 0, 1],
 CellTags->"MGM.04.B5"],

Cell[CellGroupData[{

Cell["\<\
B.5.a ) Positive versus negative orientation of the columns of a 2D matrix\
\>", "Subsubsection"],

Cell["\<\
Here is a 2D matrix A together with a plot of the vertical columns of A:
           col[1] = A.{1,0} and col[2] = A.{0,1}\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"columnplotter", ",", "matrix"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"columnplotter", "[", 
     StyleBox[
      RowBox[{
       StyleBox["matrix",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], " ", ":=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.4"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.5"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[1]= A.{1,0}\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[2] = A.{0,1}\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", " ", "->", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", "A", "]"}], ">", "0"}], ",", 
         "\"\<Positive Orientation\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", "A", "]"}], " ", "<", "0"}], ",", 
           "\"\<Negative Orientation\>\"", ",", "\"\<No Orientation\>\""}], 
          "]"}]}], "]"}]}]}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {"1.0", 
        RowBox[{"-", "1.2"}]},
       {"1.0", "0.7"}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"columnplotter", "[", "A", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<A =\>\"", " ", 
  RowBox[{"MatrixForm", "[", "A", "]"}], " "}]}], "Input"],

Cell[TextData[{
 "Matrix folks say that the orientation of the columns of A is positive.\nNow \
look at the columns of A = ",
 Cell[BoxData[
  RowBox[{"\<\"\"\>", " ", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        RowBox[{"-", "1.2"}], "1.0"},
       {"0.7", "1.0"}
      }], "\[NoBreak]", ")"}],
    MatrixForm[#]& ]}]]],
 "\n"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"-", "1.2"}], "1.0"},
        {"0.7", "1.0"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"columnplotter", "[", "A", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<A =\>\"", " ", 
  RowBox[{"MatrixForm", "[", "A", "]"}], " "}]}], "Input"],

Cell["Look at the same thing for random matrices A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "a", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"a", "[", 
         RowBox[{"1", ",", "1"}], "]"}], 
        RowBox[{"a", "[", 
         RowBox[{"1", ",", "2"}], "]"}]},
       {
        RowBox[{"a", "[", 
         RowBox[{"2", ",", "1"}], "]"}], 
        RowBox[{"a", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"columnplotter", "[", "A", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<A = \>\"", " ", 
  RowBox[{"MatrixForm", "[", "A", "]"}], " "}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Rerun many times and then say what positive and negative orientation means.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Take a look at this one:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {"0.8", 
        RowBox[{"-", "1.1"}]},
       {"1.2", 
        RowBox[{"-", "0.8"}]}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"columnplotter", "[", "A", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<A = \>\"", " ", 
  RowBox[{"MatrixForm", "[", "A", "]"}], " "}]}], "Input"],

Cell[TextData[{
 "This is ",
 StyleBox["positive",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " orientation and the ",
 StyleBox["shorter angle",
  FontWeight->"Bold"],
 " from ",
 StyleBox["col[1]",
  FontColor->RGBColor[0, 0, 0.502007]],
 " to ",
 StyleBox["col[2]",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 " is ",
 StyleBox["counterclockwise",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"],

Cell["And take a look at this one:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", "1.3"}], "1.4"},
       {"0.6", "1.2"}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"columnplotter", "[", "A", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<A = \>\"", " ", 
  RowBox[{"MatrixForm", "[", "A", "]"}], " "}]}], "Input"],

Cell[TextData[{
 "This is ",
 StyleBox["negative",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 " orientation and the ",
 StyleBox["shorter angle",
  FontWeight->"Bold"],
 " from ",
 StyleBox["col[1]",
  FontColor->RGBColor[0, 0, 0.502007]],
 " to ",
 StyleBox["col[2]",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 " is ",
 StyleBox["clockwise",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "."
}], "SmallText"],

Cell[TextData[{
 "That's all there is to it. \n\nThe columns of a 2D matrix A are ",
 StyleBox["positively oriented ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "if the ",
 StyleBox["shorter angle",
  FontWeight->"Bold"],
 " from ",
 StyleBox["col[1]",
  FontColor->RGBColor[0, 0, 0.502007]],
 " to ",
 StyleBox["col[2]",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 " is ",
 StyleBox["counterclockwise",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 ". \nThe columns of a 2D matrix A are ",
 StyleBox["negatively oriented",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "if the ",
 StyleBox["shorter angle",
  FontWeight->"Bold"],
 " from ",
 StyleBox["col[1]",
  FontColor->RGBColor[0, 0, 0.502007]],
 " to ",
 StyleBox["col[2]",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 " is ",
 StyleBox["clockwise",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "."
}], "SmallText"],

Cell[TextData[{
 StyleBox["If ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["col[1]",
  FontColor->RGBColor[0, 0, 0.502007]],
 " and ",
 StyleBox["col[2] ",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["point in opposite or the same directions, folks say that they are \
not oriented at all.",
  FontColor->GrayLevel[0]]
}], "Special2"],

Cell["Try it again for random matrices A:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "a", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "[", 
    RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"(", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"Random", "[", 
       RowBox[{"Integer", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"a", "[", 
         RowBox[{"1", ",", "1"}], "]"}], 
        RowBox[{"a", "[", 
         RowBox[{"1", ",", "2"}], "]"}]},
       {
        RowBox[{"a", "[", 
         RowBox[{"2", ",", "1"}], "]"}], 
        RowBox[{"a", "[", 
         RowBox[{"2", ",", "2"}], "]"}]}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"columnplotter", "[", "A", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<A = \>\"", " ", 
  RowBox[{"MatrixForm", "[", "A", "]"}], " "}]}], "Input"],

Cell["Rerun until the idea crystallizes.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.5.b.i) Definition of determinant first part:\nIf the columns of A are ",
 StyleBox["positively",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "oriented, then",
 StyleBox[" Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 "=",
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["+",
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["xstretch ystretch",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[TextData[{
 "Here's a 2D matrix A together with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of the determinant of A:         "
}], "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"A", "=", 
      RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
         {
          RowBox[{" ", "2.2"}], "0.9"},
         {"0.5", "1.7"}
        }], "\[NegativeThinSpace]", ")"}]}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
   RowBox[{"Det", "[", "A", "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "What does this calculation of Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      RowBox[{" ", "2.2"}], "0.9"},
     {"0.5", "1.7"}
    }], "\[NegativeThinSpace]", ")"}]]],
 "] measure?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Go with the unit square with corners at {0,0},{1,0},{1,1} and {0,1}:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"unitsquare", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}],
       FontColor->RGBColor[0, 0, 0.502007]], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
      RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", "  ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}],
       FontColor->RGBColor[0.889998, 0.149996, 0.209995]], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
      RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], 
  " "}]], "Input"],

Cell[TextData[{
 "Here's what you get when you hit everything with ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"A", "=", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        RowBox[{" ", "2.2"}], "0.9"},
       {"0.5", "1.7"}
      }], "\[NegativeThinSpace]", ")"}]}],
   FontColor->RGBColor[0, 0, 1]]]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         RowBox[{" ", "2.2"}], "0.9"},
        {"0.5", "1.7"}
       }], "\[NegativeThinSpace]", ")"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "matrix"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix_", "]"}], " ", ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], "]"}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}],
          FontColor->RGBColor[0, 0, 0.502007]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", "  ", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}],
          FontColor->RGBColor[0.889998, 0.149996, 0.209995]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[1]= A.{1,0}\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[2] = A.{0,1}\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", " ", "->", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", "matrix", "]"}], ">", "0"}], ",", 
         "\"\<Positive Orientation\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", "matrix", "]"}], " ", "<", "0"}], ",", 
           "\"\<Negative Orientation\>\"", ",", "\"\<No Orientation\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"hitplotter", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "That's the parallelogram defined by the columns of A.\nAs you can see the \
columns of A have positive orientation.\n\n",
 StyleBox["If any given 2D matrix A has positively oriented columns,\n        \
 ",
  FontWeight->"Bold"],
 StyleBox["Det[A] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["is defined to be",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[" the area measurement of the  parallelogram defined by the columns \
of A.\n         ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "\nBecause the area of the square measures out to 1 and you hit A on the \
square to get the parallelogram, \nDet[A] is given by:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     RowBox[{
      StyleBox["SingularValues",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"detA", " ", "=", " ", 
  RowBox[{"xstretch", " ", "ystretch"}]}]}], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[
 RowBox[{"Det", "[", "A", "]"}]], "Input"],

Cell["On the money.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.5.b.ii )  Definition of determinant second part:\nIf the columns of A are \
",
 StyleBox["negatively",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "oriented, then ",
 StyleBox["Det[A]",
  FontColor->RGBColor[0, 0, 1]],
 " =",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[LongDash]",
  FontWeight->"Plain",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["xstretch ystretch",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell["\<\
Here's another 2D matrix A together with Mathematica's calculation of the \
determinant of A:         \
\>", "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"A", "=", 
      RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
         {
          RowBox[{" ", "0.9"}], "2.2"},
         {"1.7", "0.5"}
        }], "\[NegativeThinSpace]", ")"}]}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
   RowBox[{"Det", "[", "A", "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "What does this calculation of Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      RowBox[{" ", "0.9"}], "2.2"},
     {"1.7", "0.5"}
    }], "\[NegativeThinSpace]", ")"}]]],
 "] measure?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Go with the unit square with corners at {0,0},{1,0},{1,1} and {0,1}:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "matrix"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix_", "]"}], " ", ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], "]"}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}],
          FontColor->RGBColor[0, 0, 0.502007]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", "  ", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}],
          FontColor->RGBColor[0.889998, 0.149996, 0.209995]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[1]\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[2]\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", " ", "->", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", "matrix", "]"}], ">", "0"}], ",", 
         "\"\<Positive Orientation\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", "matrix", "]"}], " ", "<", "0"}], ",", 
           "\"\<Negative Orientation\>\"", ",", "\"\<No Orientation\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hitplotter", "[", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], " "}]}], "Input"],

Cell[TextData[{
 "Here's the parallelogram you get when you hit this square with ",
 Cell[BoxData[
  StyleBox[
   RowBox[{" ", 
    RowBox[{"A", "=", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         RowBox[{" ", "0.9"}], "2.2"},
        {"1.7", "0.5"}
       }], "\[NegativeThinSpace]", ")"}]}]}],
   FontColor->RGBColor[0, 0, 1]]]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"A", "=", 
      RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
         {
          RowBox[{" ", "0.9"}], "2.2"},
         {"1.7", "0.5"}
        }], "\[NegativeThinSpace]", ")"}]}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
   RowBox[{"hitplotter", "[", "A", "]"}], " "}]}]], "Input"],

Cell[TextData[{
 "That's the parallelogram defined by the columns of A.\nAs you can see, the \
columns of A have negative orientation.\n\n",
 StyleBox["If any given 2D matrix A has negatively oriented columns,\n        \
 -",
  FontWeight->"Bold"],
 StyleBox["Det[A] ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["is defined to be",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[" the area measurement of the  parallelogram defined by the columns \
of A.\n         ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "\nBecause the area of the square measures out to 1 and you hit A on the \
square to get the parallelogram, \nDet[A] is given by:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     RowBox[{
      StyleBox["SingularValues",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    StyleBox["minus",
     FontColor->RGBColor[1, 0, 0]], "detA"}]], " ", "=", 
  RowBox[{"xstretch", " ", "ystretch"}]}]}], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox["-",
   FontSize->14,
   FontColor->RGBColor[1, 0, 0]], 
  RowBox[{"Det", "[", "A", "]"}]}]], "Input"],

Cell["Try some more for random matrices A:", "SmallText"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "a", "]"}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}]}],
   FontColor->RGBColor[0, 0, 1]], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "2"}], "]"}]},
        {
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}
       }], ")"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "matrix"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix_", "]"}], " ", ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], "]"}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}],
          FontColor->RGBColor[0, 0, 0.502007]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", "  ", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}],
          FontColor->RGBColor[0.889998, 0.149996, 0.209995]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[1] = A.{1,0}\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[2] = A.{0,1}\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", " ", "->", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", "A", "]"}], ">", "0"}], ",", 
         "\"\<Pos Orientation, so Det[A] = area enclosed\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", "A", "]"}], " ", "<", "0"}], ",", 
           "\"\<Neg Orientation, so Det[A] = -area enclosed\>\"", ",", 
           "\"\<No Orientation\>\""}], "]"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"hitplotter", "[", "A", "]"}]}], "Input"],

Cell["Rerun until you feel good.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.5.b.iii)  Using the determinant to measure area", "Subsubsection"],

Cell["\<\
Here's a random 2D matrix A together with the ellipse you get when you hit \
the unit circle with A:\
\>", "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "a", "]"}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}]}],
   FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "2"}], "]"}]},
        {
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}
       }], ")"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ellipseplot", " ", "=", " ", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], ",", 
         RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Green", ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"columnplotter", ",", "matrix"}], "]"}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"columnplotter", "[", 
     StyleBox[
      RowBox[{
       StyleBox["matrix",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], " ", ":=", " ", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.4"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.5"}]}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[1]= A.{1,0}\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[2] = A.{0,1}\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", " ", "->", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", "A", "]"}], ">", "0"}], ",", 
         "\"\<Positive Orientation\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", "A", "]"}], " ", "<", "0"}], ",", 
           "\"\<Negative Orientation\>\"", ",", "\"\<No Orientation\>\""}], 
          "]"}]}], "]"}]}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"columnplotter", "[", "A", "]"}], ",", "ellipseplot"}], 
  "]"}], "\n", 
 RowBox[{"\"\<A =\>\"", " ", 
  RowBox[{"MatrixForm", "[", "A", "]"}], " "}]}], "Input"],

Cell[TextData[{
 "Rerun a couple of times until you get a nice inviting ellipse",
 StyleBox[".",
  FontSlant->"Italic"]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["The area enclosed by this ellipse measures out to:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox[
      RowBox[{"SingularValues", "[", "A", "]"}],
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["\[LeftDoubleBracket]",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\[RightDoubleBracket]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{"xstretch", " ", "ystretch", " ", 
  StyleBox["\[Pi]",
   FontColor->RGBColor[0, 0, 1]]}]}], "Input"],

Cell[CellGroupData[{

Cell["Use the determinant of A to duplicate this calculation.", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Just go with ",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "Det[A]",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["\[Pi]",
  FontColor->RGBColor[0, 0, 1]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   StyleBox["Abs",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[0, 0, 1]], 
   RowBox[{"Det", "[", "A", "]"}], 
   StyleBox["]",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox["\[Pi]",
   FontColor->RGBColor[0, 0, 1]]}]], "Input"],

Cell[TextData[{
 "The reasons:\nIf the columns of A are positively oriented,then Det[A] =  + \
xstretch ystretch.\nIf the columns of A are negatively oriented,then Det[A] = \
 - xstretch ystretch.\nEither way:   ",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "Det[A]",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "  = xstretch ystretch."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.5.b.iv)  If you interchange the vertical columns of a 2D matrix, you change \
the sign but not the absolute value of the determinant\
\>", "Subsubsection"],

Cell["Here's a random 2D matrix A:", "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "a", "]"}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"i_", ",", "j_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"(", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], 
       RowBox[{"Random", "[", 
        RowBox[{"Integer", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
     RowBox[{"Random", "[", 
      RowBox[{"Real", ",", 
       RowBox[{"{", 
        RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}]}],
   FontColor->RGBColor[0, 0, 1]], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"1", ",", "2"}], "]"}]},
        {
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "1"}], "]"}], 
         RowBox[{"a", "[", 
          RowBox[{"2", ",", "2"}], "]"}]}
       }], ")"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["\<\
Here's the matrix you get when you interchange the two columns of A:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"interchangedA", " ", "=", " ", 
    RowBox[{"A", ".", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"0", "1.0"},
         {"1.0", "0"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "interchangedA", "]"}]}], "Input"],

Cell["Calculate the determinants of each:", "Text"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Det", "[", "A", "]"}], ",", 
   RowBox[{"Det", "[", "interchangedA", "]"}]}], "}"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "The result:\n          ",
 StyleBox["  Det[interchangedA] = - Det[A].",
  FontWeight->"Bold"],
 "\nExplain why it had to turn out this way\n"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Go with the unit square with corners at {0,0},{1,0},{1,1} and {0,1}:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "matrix"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix_", "]"}], " ", ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"1", ",", "0"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], ",", 
          RowBox[{
           StyleBox["matrix",
            FontColor->RGBColor[0, 0, 1]], 
           StyleBox[".",
            FontColor->RGBColor[0, 0, 1]], 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], "]"}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}],
          FontColor->RGBColor[0, 0, 0.502007]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", "  ", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["matrix",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}],
          FontColor->RGBColor[0.889998, 0.149996, 0.209995]]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[1]\>\"", ",", 
          RowBox[{"0.6", " ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Text", "[", 
         RowBox[{"\"\<col[2]\>\"", ",", 
          RowBox[{"0.5", "  ", 
           RowBox[{
            StyleBox["matrix",
             FontColor->RGBColor[0, 0, 1]], ".", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", " ", "->", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", "matrix", "]"}], ">", "0"}], ",", 
         "\"\<Positive \\nOrientation\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", "matrix", "]"}], " ", "<", "0"}], ",", 
           "\"\<Negative \\nOrientation\>\"", ",", "\"\<No Orientation\>\""}],
           "]"}]}], "]"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hitplotter", "[", 
   RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], " "}]}], "Input"],

Cell[TextData[{
 "Here's the ",
 "parallelogram",
 " you get when you hit everything with ",
 Cell[BoxData[
  StyleBox[
   RowBox[{" ", "A", "\[NegativeThinSpace]"}],
   FontColor->RGBColor[0, 0, 1]]]],
 ":"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Ahit", " ", "=", 
  RowBox[{"hitplotter", "[", "A", "]"}], " "}]], "Input",
 AnimationDisplayTime->2],

Cell[TextData[{
 "Here's the ",
 "parallelogram",
 " you get when you hit everything with ",
 Cell[BoxData[
  StyleBox[
   RowBox[{" ", "interchangedA", "\[NegativeThinSpace]"}],
   FontColor->RGBColor[0, 0, 1]]]],
 ":"
}], "SmallText",
 AnimationDisplayTime->2],

Cell[BoxData[
 RowBox[{"interchangedAhit", " ", "=", 
  RowBox[{"hitplotter", "[", "interchangedA", "]"}], " "}]], "Input",
 AnimationDisplayTime->2],

Cell["See them together:", "SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"Ahit", ",", "interchangedAhit"}], "}"}], "]"}]], "Input"],

Cell["\<\
That's the parallelogram defined by the columns of interchangedA. 
Notice that both parallelograms are the same physical parallelograms.\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"Ahit", ",", "interchangedAhit"}], "}"}], "]"}]], "Input"],

Cell[TextData[StyleBox["Reason: They are both defined by the same vectors.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "So \n              enclosed area = ",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "Det[A]| = ",
 StyleBox["|",
  FontColor->RGBColor[0, 0, 1]],
 "Det[interchangedA]",
 StyleBox["|.",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "But the orientation of the columns of ",
 StyleBox["interchangedA",
  FontColor->RGBColor[0, 0, 1]],
 " is opposite to the orientation of the columns of ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".\nSo Det[",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 "] and Det[",
 StyleBox["interchangedA",
  FontColor->RGBColor[0, 0, 1]],
 "] have opposite signs."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 ") B.5.c) The short, sweet formula Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "]  =   ",
 StyleBox["a d",
  FontColor->RGBColor[1, 0, 0]],
 "  ",
 StyleBox["-",
  FontSize->18],
 " ",
 StyleBox["b c",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[TextData[{
 "Look at ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of the determinant of a cleared matrix A = ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ":"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        StyleBox["a",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["b",
         FontColor->RGBColor[0, 0, 1]]},
       {
        StyleBox["c",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["d",
         FontColor->RGBColor[1, 0, 0]]}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Det", "[", "A", "]"}], " "}]}], "Input"],

Cell[CellGroupData[{

Cell["Explain where this short, sweet formula comes from.", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 StyleBox["Case 1:  The columns of A are positively oriented",
  FontWeight->"Bold"],
 " (so Det[A] = xstretch ystretch)."
}], "SmallText"],

Cell["Hit the matrix on:", "SmallText"],

Cell[BoxData[
 RowBox[{"unitsquare", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{"1", ",", "0"}], "}"}],
       FontColor->RGBColor[0, 0, 0.502007]], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
      RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", "  ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}],
       FontColor->RGBColor[0.889998, 0.149996, 0.209995]], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
      RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], 
  " "}]], "Input"],

Cell["to get:", "SmallText"],

Cell["\<\
The graphics here go with the sample  case in the code below.\
\>", "Special2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "  ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"2.2", ",", "1.1", ",", "0.5", ",", "1.8"}], "}"}]}], ";"}], " ",
   "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         StyleBox["a",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["b",
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox["c",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["d",
          FontColor->RGBColor[1, 0, 0]]}
       }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{"hitplot", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], ",", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], ",", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ",", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[".",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}],
        FontColor->RGBColor[0, 0, 0.502007]]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
      RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", "  ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[".",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}],
        FontColor->RGBColor[0.889998, 0.149996, 0.209995]]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
      RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<col[1]= A.{1,0}\>\"", ",", 
        RowBox[{"0.6", " ", 
         RowBox[{
          StyleBox["A",
           FontColor->RGBColor[0, 0, 1]], ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<col[2] = A.{0,1}\>\"", ",", 
        RowBox[{"0.5", "  ", 
         RowBox[{
          StyleBox["A",
           FontColor->RGBColor[0, 0, 1]], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], 
  " "}]}], "Input"],

Cell[TextData[{
 "In this sample, the smaller angle running from col[1] to col[2] is \
counterclockwise signalling columns of A are in positive orientation. So ",
 StyleBox["Det[A] = xstretch ystretch",
  FontColor->RGBColor[0, 0, 1]],
 ".  \nAnd because the area of the square measures out to 1, the area of the \
parallelogram measures out to \n            ",
 StyleBox["  area = Det[A]",
  FontColor->RGBColor[0, 0, 1]],
 ".\n\nNow measure the area a different way.\nLook again at A = ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ":\nThe left column of A is"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "col", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col", "[", "1", "]"}], " ", "=", 
  RowBox[{"{", 
   RowBox[{
    StyleBox["a",
     FontColor->RGBColor[1, 0, 0]], ",", 
    StyleBox["c",
     FontColor->RGBColor[0, 0, 1]]}], "}"}]}]}], "Input"],

Cell["The right column of A is:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"col", "[", "2", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    StyleBox["b",
     FontColor->RGBColor[0, 0, 1]], ",", 
    StyleBox["d",
     FontColor->RGBColor[1, 0, 0]]}], "}"}]}]], "Input"],

Cell["Make a vector perpendicular to col[2]", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpcol", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"perpcol", "[", "2", "]"}],
   FontColor->RGBColor[0, 0.392187, 0]], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox["d",
     FontColor->RGBColor[1, 0, 0]], ",", 
    RowBox[{"-", 
     StyleBox["b",
      FontColor->RGBColor[0, 0, 1]]}]}], "}"}]}]}], "Input"],

Cell["Throw it into the plot:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"hitplot", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"perpcol", "[", "2", "]"}],
       FontColor->RGBColor[0, 0.392187, 0]], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Green"}]}], "]"}], ",", "\n", "\t", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpcol[2]\>\"", ",", 
       RowBox[{"0.5", "  ", 
        RowBox[{"perpcol", "[", "2", "]"}]}]}], "]"}], "]"}]}], "]"}], 
  " "}]], "Input"],

Cell[TextData[{
 "The area of the parallelogram measures out to\n           area =  ",
 StyleBox[" ||col[1]||",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||col[2]||",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Sin",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["[short angle from col[1] to col[2]] .",
  FontColor->RGBColor[0, 0, 1]],
 "\nSo \n        Det[A] = area =  ",
 StyleBox[" ||col[1]||",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||col[2]||",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Sin",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["[short angle from col[1] to col[2]] . ",
  FontColor->RGBColor[0, 0, 1]],
 "  .\n  This is the same as\n             Det[A] =    ",
 StyleBox["||col[1]||",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||col[2]||  ",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["Cos",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "[",
 StyleBox["short angle from col[1] to",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "]  .\n             \n And because \n             ||col[2]||  = ",
 Cell[BoxData[
  SqrtBox[
   RowBox[{
    SuperscriptBox["b", "2"], "+", 
    SuperscriptBox["d", "2"]}]]]],
 " = ",
 Cell[BoxData[
  StyleBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["d", "2"], "+", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "b"}], ")"}], "2"]}]],
   FontColor->RGBColor[0, 0.392187, 0]]]],
 " = ||",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "||,\n             \n          Det[A] =     ",
 StyleBox["||col[1]||",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 "||",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "||",
 StyleBox[" ",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["Cos",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "[",
 StyleBox["short angle from col[1] to",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "] .\n          \nAnd this is the same as the dot product\n         Det[A] = \
",
 StyleBox["col[1]",
  FontColor->RGBColor[0, 0, 0.502007]],
 "].",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "\n                     = ",
 StyleBox["{a,c}",
  FontColor->RGBColor[0, 0, 0.502007]],
 ".",
 StyleBox["{d,-b}",
  FontColor->RGBColor[0, 0.392187, 0]],
 " = a d - b c."
}], "SmallText"],

Cell[TextData[{
 "Reason: ",
 StyleBox["col[1] = {a,c}",
  FontColor->RGBColor[0, 0, 0.502007]],
 " and ",
 StyleBox["perpcol[2] = {d,-b}",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[".",
  FontColor->GrayLevel[0]]
}], "Special2"],

Cell[TextData[{
 "So in the case that the columns of A are positively oriented, the formula\n \
                 Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "] =",
 StyleBox[" a d",
  FontColor->RGBColor[1, 0, 0]],
 " - ",
 StyleBox["b c \n",
  FontColor->RGBColor[0, 0, 1]],
 "is explained. "
}], "SmallText"],

Cell[TextData[{
 StyleBox["Case 2:  The columns of A are negatively oriented",
  FontWeight->"Bold"],
 " (so Det[A] = -xstretch ystretch)."
}], "SmallText"],

Cell["\<\
Now see what happens when you hit a matrix whose columns are negatively \
oriented on the same unit square.\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "  ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "1.7", ",", "2.2", ",", "0.9"}], "}"}]}], ";"}], " ",
   "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"A", "=", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         StyleBox["a",
          FontColor->RGBColor[1, 0, 0]], 
         StyleBox["b",
          FontColor->RGBColor[0, 0, 1]]},
        {
         StyleBox["c",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["d",
          FontColor->RGBColor[1, 0, 0]]}
       }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{"hitplot", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], ",", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}]}], ",", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], ",", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}]}], "}"}], "]"}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[".",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}],
        FontColor->RGBColor[0, 0, 0.502007]]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Blue"}], ",", 
      RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", "  ", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       StyleBox["A",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[".",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}],
        FontColor->RGBColor[0.889998, 0.149996, 0.209995]]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}], ",", 
      RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<col[1]= A.{1,0}\>\"", ",", 
        RowBox[{"0.6", " ", 
         RowBox[{
          StyleBox["A",
           FontColor->RGBColor[0, 0, 1]], ".", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<col[2] = A.{0,1}\>\"", ",", 
        RowBox[{"0.5", "  ", 
         RowBox[{
          StyleBox["A",
           FontColor->RGBColor[0, 0, 1]], ".", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}]}]}], "]"}], "}"}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], 
  " "}]}], "Input"],

Cell[TextData[{
 "The smaller angle running from col[1] to col[2] is",
 StyleBox[" clockwise,",
  FontColor->RGBColor[0, 0, 1]],
 " signalling that the columns of A are negatively oriented. \nSo the area of \
the parallelogram measures out to\n               ",
 StyleBox["area = ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[LongDash]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["Det[A]",
  FontColor->RGBColor[0, 0, 1]],
 ".\n\nNow measure the area a different way.\nLook again at A = ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ":\nThe left column of A is"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "col", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col", "[", "1", "]"}], " ", "=", 
  RowBox[{"{", 
   RowBox[{
    StyleBox["a",
     FontColor->RGBColor[1, 0, 0]], ",", 
    StyleBox["c",
     FontColor->RGBColor[0, 0, 1]]}], "}"}]}]}], "Input"],

Cell["The right column of A is:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"col", "[", "2", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    StyleBox["b",
     FontColor->RGBColor[0, 0, 1]], ",", 
    StyleBox["d",
     FontColor->RGBColor[1, 0, 0]]}], "}"}]}]], "Input"],

Cell["Make a vector perpendicular to col[2]", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpcol", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"perpcol", "[", "2", "]"}],
   FontColor->RGBColor[0, 0.392187, 0]], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", 
     StyleBox["d",
      FontColor->RGBColor[1, 0, 0]]}], ",", 
    StyleBox["b",
     FontColor->RGBColor[0, 0, 1]]}], "}"}]}]}], "Input"],

Cell["Throw it into the plot:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"hitplot", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"perpcol", "[", "2", "]"}],
       FontColor->RGBColor[0, 0.392187, 0]], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Green"}]}], "]"}], ",", "\n", "\t", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpcol[2]\>\"", ",", 
       RowBox[{"0.5", "  ", 
        RowBox[{"perpcol", "[", "2", "]"}]}]}], "]"}], "]"}]}], "]"}], 
  " "}]], "Input"],

Cell[TextData[{
 "The area of the parallelogram measures out to\n           area =  ",
 StyleBox[" ||col[1]||",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||col[2]||",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Sin",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["[short angle from col[1] to col[2]] .",
  FontColor->RGBColor[0, 0, 1]],
 "\nSo \n        -Det[A] = area =  ",
 StyleBox[" ||col[1]||",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||col[2]||",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Sin",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["[short angle from col[1] to col[2]] . ",
  FontColor->RGBColor[0, 0, 1]],
 "  .\n  This is the same as\n        -Det[A] =    ",
 StyleBox["||col[1]||",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||col[2]||  ",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["Cos",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "[",
 StyleBox["short angle from col[1] to",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "]  .\n             \n And because \n               ||col[2]||  = ",
 Cell[BoxData[
  SqrtBox[
   RowBox[{
    SuperscriptBox["b", "2"], "+", 
    SuperscriptBox["d", "2"]}]]]],
 " = ",
 Cell[BoxData[
  StyleBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "d"}], ")"}], "2"], "+", " ", 
     SuperscriptBox["b", "2"]}]],
   FontColor->RGBColor[0, 0.392187, 0]]]],
 " = ||",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "||,\n             \n          -Det[A] =     ",
 StyleBox["||col[1]||",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox["  ",
  FontColor->RGBColor[0, 0, 1]],
 "||",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "||",
 StyleBox[" ",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["Cos",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 "[",
 StyleBox["short angle from col[1] to",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "] .\n          \nAnd this is the same as the dot product\n            - \
Det[A] = ",
 StyleBox["col[1]",
  FontColor->RGBColor[0, 0, 0.502007]],
 "].",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[0, 0.392187, 0]],
 "\n                     = ",
 StyleBox["{a,c}",
  FontColor->RGBColor[0, 0, 0.502007]],
 ".",
 StyleBox["{-d,b}",
  FontColor->RGBColor[0, 0.392187, 0]],
 " = -a d + b c."
}], "SmallText"],

Cell[TextData[{
 "Reason: ",
 StyleBox["col[1] = {a,c}",
  FontColor->RGBColor[0, 0, 0.502007]],
 " and ",
 StyleBox["perpcol[2] = {-d,b}",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[".",
  FontColor->GrayLevel[0]]
}], "Special2"],

Cell[TextData[{
 "\nMultiply through by - 1 to get\n                Det[A] = ",
 StyleBox["a d - b c",
  FontColor->RGBColor[0, 0, 0.502007]]
}], "SmallText"],

Cell[TextData[{
 "Reason: ",
 StyleBox["col[1] = {a,c}",
  FontColor->RGBColor[0, 0, 0.502007]],
 " and ",
 StyleBox["perpcol[2] = {-d,b}",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[".",
  FontColor->GrayLevel[0]]
}], "Special2"],

Cell[TextData[{
 "So in the case that the columns of A are negatively oriented, the formula\n \
                 Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "] =",
 StyleBox[" a d",
  FontColor->RGBColor[1, 0, 0]],
 " - ",
 StyleBox["b c \n",
  FontColor->RGBColor[0, 0, 1]],
 "is explained. "
}], "SmallText"],

Cell[TextData[{
 StyleBox["Case3:  The columns of A are neither positively or negatively \
oriented.\n",
  FontWeight->"Bold"],
 StyleBox["Go with",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".\n",
 StyleBox["In this case  the columns point in the same or opposite direction.\
\nIn this case the parallelogram collapses to a straight line. So the area of \
the parallelogram measures out to\n0 .\nBecause area= |Det[A]|, this tells \
you, Det[A] = 0.\nAlso in this case  col[1]  = u col[2]\nSo unless col[2] = \
{0,0}, you can be sure col[1]  = u col[2] a number u.\nThis gives {a,c} = {u \
b, u d} and \n             a d - b c = u b d -  u d b = 0.\nAnd if col[2] = \
{0,0}, then a d - b c = a 0 - b 0 = 0.\nThe upshot: In this case\n     Det[A] \
= a d - b c as well.\nNow you are at the point where you know why",
  FontVariations->{"CompatibilityType"->0}]
}], "SmallText"]
}, Closed]],

Cell[BoxData[
 RowBox[{"              ", 
  RowBox[{
   RowBox[{"Det", "[", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        StyleBox["a",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox["b",
         FontColor->RGBColor[0, 0, 1]]},
       {
        StyleBox["c",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["d",
         FontColor->RGBColor[1, 0, 0]]}
      }], "\[NegativeThinSpace]", ")"}], "]"}], "=", 
   RowBox[{
    StyleBox[
     RowBox[{"a", " ", "d"}],
     FontColor->RGBColor[1, 0, 0]], "  ", 
    StyleBox["-",
     FontSize->18], " ", 
    StyleBox[
     RowBox[{"b", " ", "c"}],
     FontColor->RGBColor[0, 0, 1]]}]}]}]], "Title"]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
InitializationCellEvaluation->True,
InitializationCellWarning->True,
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.04.B1"->{
  Cell[29467, 802, 297, 9, 61, "Subsection",
   CellTags->"MGM.04.B1"]},
 "MGM.04.B2"->{
  Cell[58274, 1865, 149, 6, 36, "Subsection",
   CellTags->"MGM.04.B2"]},
 "MGM.04.B3"->{
  Cell[71227, 2331, 1152, 43, 229, "Subsection",
   CellTags->"MGM.04.B3"]},
 "MGM.04.B4"->{
  Cell[88987, 2989, 1108, 38, 239, "Subsection",
   CellTags->"MGM.04.B4"]},
 "MGM.04.B5"->{
  Cell[123485, 4219, 2223, 77, 210, "Subsection",
   CellTags->"MGM.04.B5"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.04.B1", 256234, 8018},
 {"MGM.04.B2", 256323, 8021},
 {"MGM.04.B3", 256413, 8024},
 {"MGM.04.B4", 256506, 8027},
 {"MGM.04.B5", 256599, 8030}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 129, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6366, 137, 193, 7, 28, "Special2"],
Cell[6562, 146, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7879, 188, 38, 0, 31, "Subsubsection"],
Cell[7920, 190, 1344, 31, 156, "Input"],
Cell[9267, 223, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9440, 229, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26811, 712, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27058, 723, 39, 0, 35, "Subsubsection"],
Cell[27100, 725, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29467, 802, 297, 9, 61, "Subsection",
 CellTags->"MGM.04.B1"],
Cell[29767, 813, 225, 4, 74, "Text"],
Cell[CellGroupData[{
Cell[30017, 821, 322, 12, 82, "Subsubsection"],
Cell[30342, 835, 43, 0, 24, "Text"],
Cell[30388, 837, 937, 29, 55, "Input"],
Cell[CellGroupData[{
Cell[31350, 870, 384, 15, 74, "Text"],
Cell[31737, 887, 27, 0, 23, "Special1"],
Cell[31767, 889, 102, 2, 20, "Special5"],
Cell[31872, 893, 65, 0, 24, "SmallText"],
Cell[31940, 895, 736, 24, 68, "Input"],
Cell[32679, 921, 270, 10, 74, "SmallText"],
Cell[32952, 933, 601, 19, 20, "Input"],
Cell[33556, 954, 46, 0, 24, "SmallText"],
Cell[33605, 956, 144, 4, 20, "Input"],
Cell[33752, 962, 118, 3, 24, "SmallText"],
Cell[33873, 967, 787, 24, 51, "Input"],
Cell[34663, 993, 413, 14, 124, "SmallText"],
Cell[35079, 1009, 733, 24, 86, "Input"],
Cell[35815, 1035, 481, 17, 95, "SmallText"],
Cell[36299, 1054, 239, 7, 67, "Special5"],
Cell[36541, 1063, 39, 0, 24, "SmallText"],
Cell[36583, 1065, 1006, 32, 106, "Input"],
Cell[37592, 1099, 54, 0, 24, "SmallText"],
Cell[37649, 1101, 450, 15, 36, "Input"],
Cell[38102, 1118, 73, 3, 49, "SmallText"],
Cell[38178, 1123, 4359, 146, 370, "Input"],
Cell[42540, 1271, 46, 0, 20, "Special5"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[42635, 1277, 71, 1, 32, "Subsubsection"],
Cell[CellGroupData[{
Cell[42731, 1282, 54, 0, 24, "Text"],
Cell[42788, 1284, 27, 0, 23, "Special1"],
Cell[42818, 1286, 312, 9, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[43179, 1301, 86, 1, 32, "Subsubsection"],
Cell[CellGroupData[{
Cell[43290, 1306, 56, 0, 24, "Text"],
Cell[43349, 1308, 27, 0, 23, "Special1"],
Cell[43379, 1310, 980, 31, 151, "SmallText"],
Cell[44362, 1343, 394, 12, 71, "Input"],
Cell[44759, 1357, 72, 0, 24, "SmallText"],
Cell[44834, 1359, 736, 24, 68, "Input"],
Cell[45573, 1385, 395, 12, 99, "SmallText"],
Cell[45971, 1399, 317, 11, 20, "Input"],
Cell[46291, 1412, 41, 0, 24, "SmallText"],
Cell[46335, 1414, 360, 12, 20, "Input"],
Cell[46698, 1428, 406, 13, 20, "Input"],
Cell[47107, 1443, 536, 20, 55, "Special5"],
Cell[47646, 1465, 3731, 128, 385, "SmallText"],
Cell[51380, 1595, 57, 0, 20, "Special5"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[51486, 1601, 77, 1, 32, "Subsubsection"],
Cell[CellGroupData[{
Cell[51588, 1606, 263, 6, 99, "Text"],
Cell[51854, 1614, 27, 0, 23, "Special1"],
Cell[51884, 1616, 67, 0, 24, "SmallText"],
Cell[51954, 1618, 937, 29, 55, "Input"],
Cell[52894, 1649, 749, 24, 51, "Input"],
Cell[53646, 1675, 361, 14, 49, "SmallText"],
Cell[54010, 1691, 389, 12, 20, "Input"],
Cell[54402, 1705, 55, 0, 24, "SmallText"],
Cell[54460, 1707, 282, 10, 20, "Input"],
Cell[54745, 1719, 282, 10, 20, "Input"],
Cell[55030, 1731, 282, 10, 20, "Input"],
Cell[55315, 1743, 282, 10, 20, "Input"],
Cell[55600, 1755, 117, 3, 24, "SmallText"],
Cell[55720, 1760, 240, 8, 20, "Input"],
Cell[55963, 1770, 240, 8, 20, "Input"],
Cell[56206, 1780, 220, 7, 20, "Input"],
Cell[56429, 1789, 220, 7, 20, "Input"],
Cell[56652, 1798, 249, 5, 99, "SmallText"],
Cell[56904, 1805, 313, 11, 20, "Input"],
Cell[57220, 1818, 313, 11, 20, "Input"],
Cell[57536, 1831, 293, 10, 20, "Input"],
Cell[57832, 1843, 293, 10, 20, "Input"],
Cell[58128, 1855, 85, 3, 49, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[58274, 1865, 149, 6, 36, "Subsection",
 CellTags->"MGM.04.B2"],
Cell[58426, 1873, 154, 6, 32, "Subsubsection"],
Cell[58583, 1881, 42, 0, 24, "Text"],
Cell[58628, 1883, 912, 28, 55, "Input"],
Cell[59543, 1913, 274, 9, 74, "Text"],
Cell[59820, 1924, 4359, 146, 370, "Input"],
Cell[CellGroupData[{
Cell[64204, 2074, 243, 6, 99, "Text"],
Cell[64450, 2082, 27, 0, 23, "Special1"],
Cell[64480, 2084, 64, 0, 24, "SmallText"],
Cell[64547, 2086, 663, 22, 36, "Input"],
Cell[65213, 2110, 78, 0, 24, "SmallText"],
Cell[65294, 2112, 771, 25, 36, "Input"],
Cell[66068, 2139, 68, 0, 24, "SmallText"],
Cell[66139, 2141, 876, 29, 36, "Input"],
Cell[67018, 2172, 305, 11, 43, "Special5"],
Cell[67326, 2185, 34, 0, 24, "SmallText"],
Cell[67363, 2187, 404, 13, 36, "Input"],
Cell[67770, 2202, 49, 0, 24, "SmallText"],
Cell[67822, 2204, 105, 2, 24, "SmallText"],
Cell[67930, 2208, 607, 19, 51, "Input"],
Cell[68540, 2229, 69, 0, 24, "SmallText"],
Cell[68612, 2231, 267, 7, 20, "Input"],
Cell[68882, 2240, 104, 2, 24, "SmallText"],
Cell[68989, 2244, 604, 19, 51, "Input"],
Cell[69596, 2265, 42, 0, 24, "SmallText"],
Cell[69641, 2267, 63, 1, 20, "Input"],
Cell[69707, 2270, 355, 12, 20, "Input"],
Cell[70065, 2284, 465, 16, 20, "Input"],
Cell[70533, 2302, 465, 16, 20, "Input"],
Cell[71001, 2320, 177, 5, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[71227, 2331, 1152, 43, 229, "Subsection",
 CellTags->"MGM.04.B3"],
Cell[CellGroupData[{
Cell[72404, 2378, 119, 3, 32, "Subsubsection"],
Cell[72526, 2383, 44, 0, 24, "Text"],
Cell[72573, 2385, 922, 28, 55, "Input"],
Cell[CellGroupData[{
Cell[73520, 2417, 88, 2, 24, "Text"],
Cell[73611, 2421, 27, 0, 23, "Special1"],
Cell[73641, 2423, 51, 0, 24, "SmallText"],
Cell[73695, 2425, 267, 7, 20, "Input"],
Cell[73965, 2434, 128, 3, 31, "Special5"],
Cell[74096, 2439, 102, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[74247, 2448, 607, 24, 127, "Subsubsection"],
Cell[74857, 2474, 223, 9, 52, "Text"],
Cell[75083, 2485, 122, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[75230, 2492, 117, 3, 49, "Text"],
Cell[75350, 2497, 27, 0, 23, "Special1"],
Cell[75380, 2499, 266, 8, 49, "SmallText"],
Cell[75649, 2509, 601, 20, 36, "Input"],
Cell[76253, 2531, 659, 22, 36, "Input"],
Cell[76915, 2555, 318, 9, 36, "Input"],
Cell[77236, 2566, 980, 36, 224, "SmallText"],
Cell[78219, 2604, 888, 29, 103, "Input"],
Cell[79110, 2635, 29, 0, 24, "SmallText"],
Cell[79142, 2637, 122, 3, 20, "Input"],
Cell[79267, 2642, 111, 3, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[79427, 2651, 60, 1, 32, "Subsubsection"],
Cell[CellGroupData[{
Cell[79512, 2656, 33, 0, 24, "Text"],
Cell[79548, 2658, 27, 0, 23, "Special1"],
Cell[79578, 2660, 100, 2, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[79727, 2668, 111, 3, 32, "Subsubsection"],
Cell[79841, 2673, 50, 0, 24, "Text"],
Cell[79894, 2675, 341, 11, 55, "Input"],
Cell[80238, 2688, 193, 9, 27, "Text"],
Cell[80434, 2699, 122, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[80581, 2706, 79, 3, 49, "Text"],
Cell[80663, 2711, 27, 0, 23, "Special1"],
Cell[80693, 2713, 58, 0, 24, "SmallText"],
Cell[80754, 2715, 180, 4, 20, "Input"],
Cell[80937, 2721, 401, 13, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[81387, 2740, 151, 4, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[81563, 2748, 196, 4, 74, "Text"],
Cell[81762, 2754, 27, 0, 23, "Special1"],
Cell[81792, 2756, 29, 0, 24, "SmallText"],
Cell[81824, 2758, 214, 6, 20, "Input"],
Cell[82041, 2766, 244, 6, 74, "SmallText"],
Cell[82288, 2774, 319, 9, 42, "Input"],
Cell[82610, 2785, 56, 0, 24, "SmallText"],
Cell[82669, 2787, 221, 7, 20, "Input"],
Cell[82893, 2796, 58, 0, 24, "SmallText"],
Cell[82954, 2798, 5716, 174, 418, "Input"],
Cell[88673, 2974, 101, 2, 24, "SmallText"],
Cell[88777, 2978, 64, 1, 20, "Input"],
Cell[88844, 2981, 82, 1, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[88987, 2989, 1108, 38, 239, "Subsection",
 CellTags->"MGM.04.B4"],
Cell[CellGroupData[{
Cell[90120, 3031, 492, 17, 110, "Subsubsection"],
Cell[CellGroupData[{
Cell[90637, 3052, 251, 5, 99, "Text"],
Cell[90891, 3059, 27, 0, 23, "Special1"],
Cell[90921, 3061, 41, 0, 24, "SmallText"],
Cell[90965, 3063, 77, 0, 20, "Special5"],
Cell[91045, 3065, 317, 10, 55, "Input"],
Cell[91365, 3077, 735, 31, 124, "SmallText"],
Cell[92103, 3110, 421, 16, 36, "Input"],
Cell[92527, 3128, 100, 2, 24, "SmallText"],
Cell[92630, 3132, 176, 8, 24, "SmallText"],
Cell[92809, 3142, 168, 7, 27, "SmallText"],
Cell[92980, 3151, 393, 17, 27, "SmallText"],
Cell[93376, 3170, 310, 11, 20, "Input"],
Cell[93689, 3183, 57, 3, 49, "SmallText"],
Cell[93749, 3188, 272, 10, 20, "Input"],
Cell[94024, 3200, 102, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[94175, 3209, 340, 10, 82, "Subsubsection"],
Cell[94518, 3221, 56, 0, 24, "Text"],
Cell[94577, 3223, 341, 11, 55, "Input"],
Cell[94921, 3236, 85, 2, 20, "Input"],
Cell[CellGroupData[{
Cell[95031, 3242, 357, 7, 174, "Text"],
Cell[95391, 3251, 27, 0, 23, "Special1"],
Cell[95421, 3253, 50, 0, 24, "SmallText"],
Cell[95474, 3255, 214, 5, 20, "Input"],
Cell[95691, 3262, 251, 7, 74, "SmallText"],
Cell[95945, 3271, 293, 9, 20, "Input"],
Cell[96241, 3282, 69, 3, 31, "Special5"],
Cell[96313, 3287, 182, 4, 74, "SmallText"],
Cell[96498, 3293, 32, 0, 20, "Input"],
Cell[96533, 3295, 198, 6, 20, "Input"],
Cell[96734, 3303, 6399, 195, 552, "Input"],
Cell[103136, 3500, 557, 10, 324, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[103742, 3516, 260, 9, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[104027, 3529, 278, 10, 224, "Text"],
Cell[104308, 3541, 27, 0, 23, "Special1"],
Cell[104338, 3543, 586, 18, 199, "SmallText"],
Cell[104927, 3563, 222, 8, 20, "Input"],
Cell[105152, 3573, 302, 10, 20, "Input"],
Cell[105457, 3585, 191, 5, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[105697, 3596, 258, 9, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[105980, 3609, 350, 7, 224, "Text"],
Cell[106333, 3618, 27, 0, 23, "Special1"],
Cell[106363, 3620, 27, 0, 24, "SmallText"],
Cell[106393, 3622, 222, 8, 20, "Input"],
Cell[106618, 3632, 302, 10, 20, "Input"],
Cell[106923, 3644, 281, 8, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[107253, 3658, 629, 21, 69, "Subsubsection"],
Cell[107885, 3681, 241, 8, 174, "Text"],
Cell[108129, 3691, 409, 13, 36, "Input"],
Cell[108541, 3706, 437, 12, 36, "Input"],
Cell[108981, 3720, 313, 8, 20, "Input"],
Cell[109297, 3730, 52, 0, 24, "Text"],
Cell[109352, 3732, 431, 14, 40, "Input"],
Cell[109786, 3748, 32, 0, 24, "SmallText"],
Cell[109821, 3750, 77, 2, 20, "Input"],
Cell[109901, 3754, 97, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[110023, 3761, 40, 0, 24, "Text"],
Cell[110066, 3763, 27, 0, 23, "Special1"],
Cell[110096, 3765, 3476, 118, 543, "SmallText"],
Cell[113575, 3885, 46, 0, 24, "SmallText"],
Cell[113624, 3887, 337, 11, 40, "Input"],
Cell[113964, 3900, 32, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[114045, 3906, 72, 1, 32, "Subsubsection"],
Cell[CellGroupData[{
Cell[114142, 3911, 276, 6, 124, "Text"],
Cell[114421, 3919, 27, 0, 23, "Special1"],
Cell[114451, 3921, 39, 0, 24, "SmallText"],
Cell[114493, 3923, 46, 0, 56, "Accident"],
Cell[114542, 3925, 191, 4, 74, "SmallText"],
Cell[114736, 3931, 65, 1, 20, "Input"],
Cell[114804, 3934, 66, 0, 24, "SmallText"],
Cell[114873, 3936, 416, 13, 20, "Input"],
Cell[115292, 3951, 27, 0, 24, "SmallText"],
Cell[115322, 3953, 88, 2, 20, "Input"],
Cell[115413, 3957, 168, 3, 49, "SmallText"],
Cell[115584, 3962, 348, 12, 36, "Input"],
Cell[115935, 3976, 72, 2, 20, "Input"],
Cell[116010, 3980, 223, 6, 124, "SmallText"],
Cell[116236, 3988, 322, 10, 36, "Input"],
Cell[116561, 4000, 56, 0, 24, "SmallText"],
Cell[116620, 4002, 1442, 43, 156, "Input"],
Cell[118065, 4047, 107, 2, 24, "SmallText"],
Cell[118175, 4051, 4959, 150, 343, "Input"],
Cell[123137, 4203, 287, 9, 199, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[123485, 4219, 2223, 77, 210, "Subsection",
 CellTags->"MGM.04.B5"],
Cell[CellGroupData[{
Cell[125733, 4300, 107, 2, 31, "Subsubsection"],
Cell[125843, 4304, 145, 3, 49, "Text"],
Cell[125991, 4309, 3430, 97, 221, "Input"],
Cell[129424, 4408, 364, 13, 97, "Text"],
Cell[129791, 4423, 470, 14, 70, "Input"],
Cell[130264, 4439, 61, 0, 24, "Text"],
Cell[130328, 4441, 1248, 40, 122, "Input"],
Cell[CellGroupData[{
Cell[131601, 4485, 99, 2, 24, "Text"],
Cell[131703, 4489, 27, 0, 23, "Special1"],
Cell[131733, 4491, 45, 0, 24, "SmallText"],
Cell[131781, 4493, 422, 13, 70, "Input"],
Cell[132206, 4508, 451, 19, 49, "SmallText"],
Cell[132660, 4529, 49, 0, 24, "SmallText"],
Cell[132712, 4531, 398, 12, 70, "Input"],
Cell[133113, 4545, 444, 19, 24, "SmallText"],
Cell[133560, 4566, 1008, 39, 149, "SmallText"],
Cell[134571, 4607, 367, 11, 23, "Special2"],
Cell[134941, 4620, 56, 0, 24, "SmallText"],
Cell[135000, 4622, 1248, 40, 122, "Input"],
Cell[136251, 4664, 55, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[136355, 4670, 529, 19, 52, "Subsubsection"],
Cell[136887, 4691, 168, 5, 49, "Text"],
Cell[137058, 4698, 430, 14, 55, "Input"],
Cell[CellGroupData[{
Cell[137513, 4716, 248, 9, 47, "Text"],
Cell[137764, 4727, 27, 0, 23, "Special1"],
Cell[137794, 4729, 97, 2, 24, "SmallText"],
Cell[137894, 4733, 1531, 44, 66, "Input"],
Cell[139428, 4779, 339, 12, 47, "SmallText"],
Cell[139770, 4793, 4624, 132, 235, "Input"],
Cell[144397, 4927, 705, 18, 249, "SmallText"],
Cell[145105, 4947, 1141, 40, 36, "Input"],
Cell[146249, 4989, 27, 0, 24, "SmallText"],
Cell[146279, 4991, 56, 1, 20, "Input"],
Cell[146338, 4994, 34, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[146421, 5000, 496, 18, 52, "Subsubsection"],
Cell[146920, 5020, 126, 3, 49, "Text"],
Cell[147049, 5025, 430, 14, 55, "Input"],
Cell[CellGroupData[{
Cell[147504, 5043, 248, 9, 47, "Text"],
Cell[147755, 5054, 27, 0, 23, "Special1"],
Cell[147785, 5056, 97, 2, 24, "SmallText"],
Cell[147885, 5060, 4367, 124, 201, "Input"],
Cell[152255, 5186, 378, 13, 47, "SmallText"],
Cell[152636, 5201, 442, 14, 55, "Input"],
Cell[153081, 5217, 707, 18, 249, "SmallText"],
Cell[153791, 5237, 1222, 44, 36, "Input"],
Cell[155016, 5283, 27, 0, 24, "SmallText"],
Cell[155046, 5285, 137, 5, 20, "Input"],
Cell[155186, 5292, 57, 0, 24, "SmallText"],
Cell[155246, 5294, 5569, 164, 302, "Input"],
Cell[160818, 5460, 47, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[160914, 5466, 74, 0, 31, "Subsubsection"],
Cell[160991, 5468, 124, 3, 49, "Text"],
Cell[161118, 5473, 4968, 151, 317, "Input"],
Cell[166089, 5626, 182, 6, 12, "Special2"],
Cell[166274, 5634, 66, 0, 24, "Text"],
Cell[166343, 5636, 778, 26, 36, "Input"],
Cell[CellGroupData[{
Cell[167146, 5666, 71, 0, 24, "Text"],
Cell[167220, 5668, 27, 0, 23, "Special1"],
Cell[167250, 5670, 220, 11, 24, "SmallText"],
Cell[167473, 5683, 299, 11, 20, "Input"],
Cell[167775, 5696, 364, 10, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[168188, 5712, 167, 3, 52, "Subsubsection"],
Cell[168358, 5717, 44, 0, 24, "Text"],
Cell[168405, 5719, 1281, 43, 107, "Input"],
Cell[169689, 5764, 92, 2, 24, "Text"],
Cell[169784, 5768, 365, 11, 55, "Input"],
Cell[170152, 5781, 51, 0, 24, "Text"],
Cell[170206, 5783, 146, 4, 20, "Input"],
Cell[CellGroupData[{
Cell[170377, 5791, 171, 5, 99, "Text"],
Cell[170551, 5798, 27, 0, 23, "Special1"],
Cell[170581, 5800, 97, 2, 24, "SmallText"],
Cell[170681, 5804, 4373, 124, 201, "Input"],
Cell[175057, 5930, 224, 9, 24, "SmallText"],
Cell[175284, 5941, 125, 3, 20, "Input"],
Cell[175412, 5946, 262, 10, 24, "SmallText"],
Cell[175677, 5958, 149, 3, 20, "Input"],
Cell[175829, 5963, 39, 0, 24, "SmallText"],
Cell[175871, 5965, 129, 3, 20, "Input"],
Cell[176003, 5970, 165, 3, 49, "SmallText"],
Cell[176171, 5975, 129, 3, 20, "Input"],
Cell[176303, 5980, 180, 3, 12, "Special2"],
Cell[176486, 5985, 254, 10, 49, "SmallText"],
Cell[176743, 5997, 402, 14, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[177194, 6017, 481, 20, 55, "Subsubsection"],
Cell[177678, 6039, 403, 15, 47, "Text"],
Cell[178084, 6056, 667, 23, 71, "Input"],
Cell[CellGroupData[{
Cell[178776, 6083, 67, 0, 24, "Text"],
Cell[178846, 6085, 27, 0, 23, "Special1"],
Cell[178876, 6087, 155, 4, 24, "SmallText"],
Cell[179034, 6093, 39, 0, 24, "SmallText"],
Cell[179076, 6095, 1531, 44, 66, "Input"],
Cell[180610, 6141, 28, 0, 24, "SmallText"],
Cell[180641, 6143, 89, 2, 12, "Special2"],
Cell[180733, 6147, 4032, 125, 176, "Input"],
Cell[184768, 6274, 783, 20, 247, "SmallText"],
Cell[185554, 6296, 331, 11, 36, "Input"],
Cell[185888, 6309, 46, 0, 24, "SmallText"],
Cell[185937, 6311, 226, 8, 20, "Input"],
Cell[186166, 6321, 58, 0, 24, "SmallText"],
Cell[186227, 6323, 423, 15, 36, "Input"],
Cell[186653, 6340, 44, 0, 24, "SmallText"],
Cell[186700, 6342, 617, 18, 36, "Input"],
Cell[187320, 6362, 2802, 98, 389, "SmallText"],
Cell[190125, 6462, 237, 9, 12, "Special2"],
Cell[190365, 6473, 520, 19, 97, "SmallText"],
Cell[190888, 6494, 156, 4, 24, "SmallText"],
Cell[191047, 6500, 136, 3, 49, "SmallText"],
Cell[191186, 6505, 4032, 125, 176, "Input"],
Cell[195221, 6632, 786, 23, 222, "SmallText"],
Cell[196010, 6657, 331, 11, 36, "Input"],
Cell[196344, 6670, 46, 0, 24, "SmallText"],
Cell[196393, 6672, 226, 8, 20, "Input"],
Cell[196622, 6682, 58, 0, 24, "SmallText"],
Cell[196683, 6684, 423, 15, 36, "Input"],
Cell[197109, 6701, 44, 0, 24, "SmallText"],
Cell[197156, 6703, 617, 18, 36, "Input"],
Cell[197776, 6723, 2808, 98, 389, "SmallText"],
Cell[200587, 6823, 237, 9, 12, "Special2"],
Cell[200827, 6834, 158, 4, 74, "SmallText"],
Cell[200988, 6840, 237, 9, 12, "Special2"],
Cell[201228, 6851, 520, 19, 97, "SmallText"],
Cell[201751, 6872, 1165, 27, 397, "SmallText"]
}, Closed]],
Cell[202931, 6902, 689, 24, 94, "Title"]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
