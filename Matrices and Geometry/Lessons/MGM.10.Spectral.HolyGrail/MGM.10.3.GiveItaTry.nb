(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    212563,       6638]
NotebookOptionsPosition[    142507,       5031]
NotebookOutlinePosition[    196433,       6169]
CellTagsIndexPosition[    196057,       6154]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.10 The Spectral Theorem for Symmetric Matrices and the Holy Grail of \
Matrix Theory\n",
 StyleBox["GIVE IT A TRY!",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["G.1) Symmetric matrices and the SVD", "Subsection",
 CellTags->"MGM.10.G1"],

Cell[CellGroupData[{

Cell["G.1.a.i) Setting the parameters", "Subsubsection"],

Cell["\<\
Here's a matrix with three cleared entries  r, s, t, x, y and z\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"r", ",", "s", ",", "t", ",", "x", ",", "y", ",", "z"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"2.1", "5.", 
         RowBox[{"-", "2.3"}], "0.0"},
        {
         StyleBox["r",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"-", "4.2"}], "1.7", "0.9"},
        {
         StyleBox["s",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["t",
          FontColor->RGBColor[0, 0, 1]], "4.2", 
         RowBox[{"-", "2.7"}]},
        {
         StyleBox["x",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["y",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["z",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"-", "1.8"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["\<\
Set r, s, t, x, y and z so that the resulting matrix is symmetric.\
\>", "Text",
 Evaluatable->False]
}, Closed]],

Cell[CellGroupData[{

Cell["G.1.a.ii) Hessians are symmetric", "Subsubsection"],

Cell[TextData[{
 "The hessian of a function of three variables f[x,y,z] is given by\n\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["H", "f"], "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", "="}]]],
 " ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]},
      {
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]},
      {
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}
     }], ")"}],
   MatrixForm[#]& ]]],
 "\nYou make the call. \nIs this matrix symmetric?"
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.1.a.iii) Symmetric matrices are square matrices", "Subsubsection"],

Cell["\<\
Does a matrix A that hits on 4D and hangs in 3D have any chance of being \
symmetric?
Why or why not?\
\>", "Text",
 Evaluatable->False]
}, Closed]],

Cell[CellGroupData[{

Cell["G.1.b.i) The transpose manipulation", "Subsubsection"],

Cell["Here is a random matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "6"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "9"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "hangdim", "}"}], ",", 
      RowBox[{"{", "hitdim", "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Here's a random X in hitdimD:", "Text"],

Cell[BoxData[
 RowBox[{"X", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}]], "Input"],

Cell["Here's a random Y in hangdimD:", "Text"],

Cell[BoxData[
 RowBox[{"Y", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}]}], "]"}]}]], "Input"],

Cell[TextData[{
 "Here's a calculation of ",
 Cell[BoxData[
  RowBox[{"Y\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{"A", ".", "X"}], ")"}]}]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{"Y", ".", 
  RowBox[{"(", 
   RowBox[{"A", ".", "X"}], ")"}]}]], "Input"],

Cell[TextData[{
 "And here's a calculation of ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "Y"}], " ", ")"}], "\[Bullet]X"}]]],
 "."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "Y"}], ")"}], ".", 
  "X"}]], "Input"],

Cell["Say why you are not at all surprised with the outcome.", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.1.c.i) Eigenvectors of non-symmetric matrices", "Subsubsection"],

Cell["\<\
Here's a non-symmetric 2D matrix A shown with a plot of the unit eigenvectors \
of A:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"2.0", 
         RowBox[{"-", "1.2"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.9"}], ",", 
             RowBox[{"-", "0.1"}]}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "A", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"Eigenvectors", "[", "A", "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"eigenvector", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"eigenplot", ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Unit eigenvectors of \\nnonsymmetric matrix A\>\""}]}], "]"}], 
  " "}]}], "Input"],

Cell["Here is the dot product of the two plotted eigenvectors:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eigenvector", "[", "1", "]"}], ".", 
  RowBox[{"eigenvector", "[", "2", "]"}]}]], "Input"],

Cell["\<\
Does the outcome surprise you? 
Why or why not?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.1.c.ii) Eigenvectors of symmetric matrices", "Subsubsection"],

Cell["Now do the same thing for a random symmetric 2D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"B", "+", 
       RowBox[{"Transpose", "[", "B", "]"}]}], ")"}]}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{"MatrixForm", "[", "A", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"Eigenvectors", "[", "A", "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"eigenvector", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"eigenplot", ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Unit eigenvectors of \\nrandom symmetric matrix B\>\""}]}], "]"}], 
  " "}]}], "Input"],

Cell["Here is the dot product of the wo plotted eigenvectors:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eigenvector", "[", "1", "]"}], ".", 
  RowBox[{"eigenvector", "[", "2", "]"}]}]], "Input"],

Cell["\<\
Does the outcome surprise you? 
Why or why not?
How is the Spectral Theorem for symmetric matrices related to your response?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.1.d.i)  SVD aligner frame from the eigenview", "Subsubsection"],

Cell["Here is random  2D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Here is  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}]], "Input"],

Cell[TextData[{
 "The matrix  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " is automatically symmetric because\n        ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "t"], ".", "A"}], ")"}], "t"], "=", 
   RowBox[{
    RowBox[{
     SuperscriptBox["A", "t"], ".", 
     SuperscriptBox[
      RowBox[{"(", 
       SuperscriptBox["A", "t"], ")"}], "t"]}], " ", "=", " ", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", "A"}]}]}]]],
 ".\nThe Spectral theorem guarantees a perpendicular frame of eigenvectors of \
",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ".\nHere they are:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"Eigenvectors", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"eigenvector", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"eigenplot", ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", "\n", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", "\n", " ", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<Unit eigenvectors of \!\(\*SuperscriptBox[\(A\), \
\(t\)]\).A\>\""}]}], "]"}], " "}]}], "Input"],

Cell["\<\
How do you get an SVD aligner frame for A from these two vectors?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.1.d.ii) SVD stretch factors and hanger frame from the eigenview\
\>", "Subsubsection"],

Cell["\<\
Stay with the same matrix A and use the eigenvectors you found in part i) to \
generate the SVD stretch factors and the corresponding SVD hanger  frame for \
A. Plot the hangerframe.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.1.e) Aligner frame for A versus aligner frame for  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]]
}], "Subsubsection"],

Cell["Here's a new random  2D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Here is  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}]], "Input"],

Cell[TextData[{
 "Let ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " come up with an SVD aligner frame for A:"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input"],

Cell[TextData[{
 "Let ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " come up with an SVD aligner frame for ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input"],

Cell["Speculate on why these two turned out the way they did.", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.2) The Spectral Theorem is the Holy Grail of Matrix Theory \
\>", "Subsection",
 CellTags->"MGM.10.G2"],

Cell[CellGroupData[{

Cell["G.2.a) Using the Spectral Theorem to do SVD analysis", "Subsubsection"],

Cell["Here is a random matrix A", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "7"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "7"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "  ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", "hangdim", "}"}], ",", 
      RowBox[{"{", "hitdim", "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "The Spectral theorem guarantees an orthonormal basis of hitdimD consisting \
of eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". Here is one such:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eigenvector", "[", "k_", "]"}], " ", ":=", 
    RowBox[{
     StyleBox[
      RowBox[{"Eigenvectors", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}],
      FontColor->RGBColor[0, 0, 1]], "[", 
     RowBox[{"[", "k", "]"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"eigenvector", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", " ", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"Eigenvectors", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], "]"}]}], 
    "}"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "\[FilledVerySmallSquare] Use these eigenvectors ",
 "of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " to come up with an SVD aligner frame for A.\n",
 StyleBox["Put answer here.",
  FontSize->10]
}], "Text"],

Cell[TextData[{
 "\[FilledVerySmallSquare] Hit A on your aligner frame vectors to come up \
with the SVD stretch factors for A.\n",
 StyleBox["Put answer here.",
  FontSize->10]
}], "Text"],

Cell[TextData[{
 "\[FilledVerySmallSquare] Hit A on your aligner frame vectors to come up \
with the SVD hangerframe corresponding to the aligner frame you came up with \
earlier.\n",
 StyleBox["Put answer here.",
  FontSize->10]
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.2.b) Rank, orthonormal bases of null space, column space and row space\
\>", "Subsubsection"],

Cell["Here is a random matrix A", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"5", ",", "8"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Here is a look at ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}]], "Input"],

Cell[TextData[{
 "The Spectral theorem guarantees an orthonormal basis of hitdimD consisting \
of eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". Here is one such:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eigenvector", "[", "k_", "]"}], " ", ":=", 
    RowBox[{
     StyleBox[
      RowBox[{"Eigenvectors", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}],
      FontColor->RGBColor[0, 0, 1]], "[", 
     RowBox[{"[", "k", "]"}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"eigenvector", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", " ", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"Eigenvectors", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], "]"}]}], 
    "}"}]}], "]"}]}], "Input"],

Cell["Now hit each of these eigenvectors with A:", "Text"],

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", " ", ",", 
     RowBox[{"Length", "[", 
      RowBox[{"Eigenvectors", "[", 
       RowBox[{
        RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], "]"}]}], 
    "}"}]}], "]"}]], "Input"],

Cell[TextData[{
 "Use the information above to come up with quick calculations of:\n\
\[FilledVerySmallSquare] The rank of A.\n",
 StyleBox["Put answer here.",
  FontSize->10]
}], "Text"],

Cell[TextData[{
 "\[FilledVerySmallSquare] An orthonormal basis the row space of A and the \
dimension of the row space of A.\n ",
 StyleBox["Put answer here.",
  FontSize->10]
}], "Text"],

Cell[TextData[{
 "\n\[FilledVerySmallSquare] An orthonormal basis of the null space of A and \
the dimension of the null space of A.\n ",
 StyleBox["Put answer here.",
  FontSize->10]
}], "Text"],

Cell[TextData[{
 "\n\[FilledVerySmallSquare] An orthonormal basis of the column space of A \
and the dimension of the column space of A.\n ",
 StyleBox["Put answer here.",
  FontSize->10]
}], "Text"],

Cell["\<\
\[FilledVerySmallSquare] PseudoInverse[A].Y for any Y in hangdimD.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.2.c)  Facts about dimensions", "Subsubsection"],

Cell[TextData[{
 "Given a matrix A hitting on hitdimD and hanging in hangdim D, you already \
know that ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " is a symmetric matrix which hits on hitdimD and hangs in hitdimD.\n\nThe \
Spectral theorem gives you an orthonormal basis {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} of hitdimD consisting of unit eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". Group and (if necessary relabel)  these vectors into two groups.\n        \
\nGroup I = {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " \[NotEqual] {0,0,...0} for all j = 1,2,...,p."
}], "Text"],

Cell["\<\
Group 1 gives an SVD aligner frame for A.
.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Group 2 = {",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "1"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "3"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " = {0,0,...} for all j = p+1,p+2, ...,hitdimD.\n\nThe facts of the matter \
are:\n \[FilledVerySmallSquare] The rank of A is p.\n\[FilledVerySmallSquare] \
 To get an orthonormal basis of the column space R[A], you just go with   \n  \
           {",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}]}], "||"}]], ",", " ", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}]}], "||"}]], ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "3"]}]}], "||"}]], ",", "...", ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "p"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "p"]}]}], "||"}]]}]]],
 "}."
}], "Text"],

Cell["\<\
The upshot: SVD hangerframe for A is an orthonormal basis for R[A].\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\[FilledVerySmallSquare] To get an orthonormal basis of the row space R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "], you just go with  {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}."
}], "Text"],

Cell[TextData[{
 "The upshot: SVD alignerframe (corresponding to non-zero stretch factors) \
for A is an orthonormal basis for R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "]."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\[FilledVerySmallSquare] To get an orthonormal basis of N[A], you just go \
with  {",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "1"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "}."
}], "Text"],

Cell[TextData[{
 "These are the eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " that are hit into {0,0,...,0} by A. "
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["", "Text"],

Cell[TextData[{
 "Given this:\n\[FilledSmallSquare] What is the dimension of the column space \
R[A]?\n",
 StyleBox["Put answer here,",
  FontSize->12]
}], "Text"],

Cell[TextData[{
 "\[FilledSmallSquare] What is the dimension of the row space  R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "]?\n",
 StyleBox["Put answer here,",
  FontSize->12]
}], "Text"],

Cell[TextData[{
 "\[FilledSmallSquare] What is the dimension of the null space  N[A]?\n",
 StyleBox["Put answer here,",
  FontSize->12]
}], "Text"],

Cell[TextData[{
 "\[FilledSmallSquare] When you add     (dimension of R[A]) + (dimension of \
N[A]) , what do you get?\n",
 StyleBox["Put answer here,",
  FontSize->12]
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.3) How SVD stretch factors of ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " are related to eigenvalues of  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]]
}], "Subsection",
 CellTags->"MGM.10.G3"],

Cell[CellGroupData[{

Cell[TextData[{
 "G.3.a.i) How SVD stretch factors of ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " are related to eigenvalues of  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]]
}], "Subsubsection"],

Cell["Here's a random 2D matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]},
        {
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["The SVD stretch factors of A are:", "Text"],

Cell[BoxData[
 RowBox[{
  StyleBox["stretches",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox["=",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  RowBox[{
   StyleBox[
    RowBox[{"SingularValues", "[", "A", "]"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[1, 0, 1]], 
   RowBox[{
    StyleBox["[",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["]",
     FontColor->RGBColor[1, 0, 1]]}], 
   StyleBox["]",
    FontColor->RGBColor[1, 0, 1]]}]}]], "Input"],

Cell[TextData[{
 "Compare with the square roots of the eigenvalues of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]]
}], "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x"}], "]"}], ";"}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], "=", 
     SqrtBox["x"]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.393608830239572*^9, 3.393608833852507*^9}}],

Cell["Try the same thing for other random matrices:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "7"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "7"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["The SVD stretch factors of A are:", "Text"],

Cell[BoxData[
 RowBox[{
  StyleBox["stretches",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox["=",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  RowBox[{
   StyleBox[
    RowBox[{"SingularValues", "[", "A", "]"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[1, 0, 1]], 
   RowBox[{
    StyleBox["[",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["]",
     FontColor->RGBColor[1, 0, 1]]}], 
   StyleBox["]",
    FontColor->RGBColor[1, 0, 1]]}]}]], "Input"],

Cell[TextData[{
 "Compare with the square roots of the eigenvalues of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]]
}], "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x"}], "]"}], ";"}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], "=", 
     SqrtBox["x"]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{3.393608860331278*^9}],

Cell[TextData[{
 "The strong suggestion is that the SVD stretch factors of any matrix A are \
the square roots of the eigenvalues of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". Explain why this is guaranteed for any matrix A."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Click on the right for a tip on how to get started.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "For any matrix A, the Spectral theorem gives you an orthonormal basis \n    \
       {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} \nof hitdimD consisting of ",
 StyleBox["unit ",
  FontWeight->"Bold"],
 "eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". "
}], "Text"],

Cell[TextData[{
 "\nGroup and (if necessary relabel) these vectors into two groups:\n        \
\nGroup I = {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " \[NotEqual] {0,0,...0} for all j = 1,2,...,p."
}], "Text"],

Cell[TextData[{
 "Group 2 = {",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "3"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " = {0,0,...} \n      for all j = p+1,p+2, ...,hitdimD.\n      \nFacts of \
the matter:\n\[FilledVerySmallSquare] An SVD alignerframe for A,\n          \
{alignerframe[1],alignerframe[2],.alignerframe[3], . .,alignerframe[p]}\n is \
\n            {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}."
}], "Text"],

Cell[TextData[{
 "\[FilledVerySmallSquare] The corresponding nonzero SVD stretch factors  for \
A,\n         {",
 StyleBox["stretch[1],stretch[2],stretch[3],....,stretch[p]",
  FontColor->RGBColor[1, 0, 1]],
 "}, \nare\n         {",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "1"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "2"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "3"]}], "||"}]]],
 ",....,",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "p"]}], "||"}]]],
 "}. \n"
}], "Text"],

Cell[TextData[{
 "So  stretch[k] = ",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "k"]}], "||"}]]],
 " = ",
 Cell[BoxData[
  SqrtBox[
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[1, 0, 0]], ".", 
    SubscriptBox["X", "k"], ".", " ", "A", ".", 
    SubscriptBox["X", "k"]}]]]],
 " = ",
 Cell[BoxData[
  SqrtBox[
   RowBox[{
    RowBox[{
     SubscriptBox["X", "k"], ".", 
     StyleBox[
      SuperscriptBox["A", "t"],
      FontColor->RGBColor[1, 0, 0]]}], 
    RowBox[{"A", ".", 
     SubscriptBox["X", "k"]}]}]]]]
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.3.a.ii) The stretch factors of  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 "  are the eigenvalues of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]]
}], "Subsubsection"],

Cell["Here's a random matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "7"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Here is a look at ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  StyleBox[
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}],
   FontColor->RGBColor[0, 0, 1]], "]"}]], "Input"],

Cell[TextData[{
 "Here are the non-zero SVD stretch factors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " "
}], "Text"],

Cell[BoxData[
 RowBox[{
  StyleBox["stretches",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox["=",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  RowBox[{
   StyleBox[
    RowBox[{"SingularValues", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[1, 0, 1]], 
   RowBox[{
    StyleBox["[",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["]",
     FontColor->RGBColor[1, 0, 1]]}], 
   StyleBox["]",
    FontColor->RGBColor[1, 0, 1]]}]}]], "Input"],

Cell[TextData[{
 "Here are the eigenvalues of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " "
}], "Text"],

Cell[BoxData[
 RowBox[{"eigenvalues", " ", "=", " ", 
  RowBox[{"Eigenvalues", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}]}]], "Input"],

Cell["Try it again for another random matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "7"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Here are the non-zero SVD stretch factors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " "
}], "Text"],

Cell[BoxData[
 RowBox[{
  StyleBox["stretches",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox["=",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], 
  RowBox[{
   StyleBox[
    RowBox[{"SingularValues", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox["[",
    FontColor->RGBColor[1, 0, 1]], 
   RowBox[{
    StyleBox["[",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["]",
     FontColor->RGBColor[1, 0, 1]]}], 
   StyleBox["]",
    FontColor->RGBColor[1, 0, 1]]}]}]], "Input"],

Cell[TextData[{
 "Here are the eigenvalues of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " "
}], "Text"],

Cell[BoxData[
 RowBox[{"eigenvalues", " ", "=", " ", 
  RowBox[{"Chop", "[", 
   RowBox[{"Eigenvalues", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], 
   "]"}]}]], "Input"],

Cell["Why did that happen?", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.3.a.iii) The condition  number of A in terms of the condition number of \
",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]]
}], "Subsubsection"],

Cell[TextData[{
 "Given any matrix A, you can express the condition number of A in terms of \
the condition number of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ".\nDo it.\nIf A is ill-conditioned, do you think that  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " even more ill-conditioned?\nWhy?"
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["G.4) The guts of Spectral Theorem", "Subsection",
 CellTags->"MGM.10.G4"],

Cell[CellGroupData[{

Cell["G.4.a) Importance of Spectral Theorem", "Subsubsection"],

Cell["\<\
All through the basics, there was lots of raving about the importance of the \
Spectral Theorem.
What does the Spectral Theorem say and why is it so important?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.4.b) Guts of the proof of the Spectral Theorem", "Subsubsection"],

Cell["Here's a random symmetric 2D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"B", "+", 
       RowBox[{"Transpose", "[", "B", "]"}]}], ")"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Make this function:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"g", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Expand", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ".", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ".", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}]], "]"}]}]}], "Input"],

Cell["Look at this graphic:", "Text"],

Cell[BoxData[
 RowBox[{"glevels", "=", 
  RowBox[{"DensityPlot", "[", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "The lighter the square, the higher g[x,y] = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]]]],
 " is."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Throw in the unit eigenvectors of A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"Eigenvectors", "[", "A", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"eigenvector", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"glevels", ",", "eigenplot"}], "]"}], " "}]}], "Input"],

Cell["Here's another:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"B", "+", 
       RowBox[{"Transpose", "[", "B", "]"}]}], ")"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"g", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", 
    RowBox[{"Expand", "[", 
     FractionBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ".", 
       RowBox[{"(", 
        RowBox[{"A", ".", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}]], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"glevels", "=", 
    RowBox[{"DensityPlot", "[", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"Eigenvectors", "[", "A", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"eigenvector", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"glevels", ",", "eigenplot", ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Density plot with eigenvectors of A\>\""}]}], 
  "]"}]}], "Input"],

Cell[TextData[{
 "The lighter the square, the higher g[x,y] = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]]]],
 " is."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
Rerun the last cell a couple of times.
How does the proof of the Spectral theorem tell you why all these graphics \
turned out the way they did?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.4.c) The eigenvalues of symmetric matrices are all real", \
"Subsubsection"],

Cell["\<\
How does the proof of the spectral theorem reveal why the eigenvalues of a \
symmetric matrix are all real?\
\>", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.5) Positive semidefinite and positive definite symmetric matrices\
\>", "Subsection",
 CellTags->"MGM.10.G5"],

Cell["G.5.a.i) The square root of a positive semidefinite matrix", \
"Subsubsection"],

Cell[TextData[{
 "If someone hands you a symmetric matrix A with all nonnegative eigenvalues, \
then it's pretty easy to come up with another symmetric matrix B so that \n   \
        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"B", ".", "B"}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["B", "t"], ".", "B"}], " ", "=", " ", "A"}]}]]],
 "\nExplain in general terms how you can do this."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "G.5.a.ii) If ",
 StyleBox["A = ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["B", "t"], ".", "B"}], " "}]],
  FontColor->RGBColor[0, 0, 1]],
 ", then all the eigenvalues of A  are non-negative"
}], "Subsubsection"],

Cell[TextData[{
 "When someone hands you any matrix B and you put  A = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["B", "t"], ".", "B"}], " ", ","}]]],
 "then the transpose manipulation\nyields\n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], " ", "=", " ", 
   RowBox[{"X\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["B", "t"], ".", "B"}], ")"}], ".", "X"}], ")"}]}]}]]],
 " \n                               = ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"X\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{
      StyleBox[
       SuperscriptBox["B", "t"],
       FontColor->RGBColor[1, 0, 0]], ".", 
      RowBox[{"(", 
       RowBox[{"B", ".", "X"}], ")"}]}], ")"}]}]}]]],
 " \n                               = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       StyleBox["B",
        FontColor->RGBColor[1, 0, 0]], ".", "X"}], ")"}], "\[Bullet]", " ", 
     RowBox[{"(", 
      RowBox[{"B", ".", "X"}], ")"}]}], ")"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"||", 
     RowBox[{"B", ".", "X"}]}], 
    SuperscriptBox["||", "2"]}]}]]],
 ". \nBecause ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"||", 
    RowBox[{"B", ".", "X"}]}], 
   SuperscriptBox["||", "2"]}]]],
 " cannot be negative, this tells you\n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], " ", "\[GreaterSlantEqual]", " ", 
   "0"}]]],
 " \nno matter what X is.\nAt this point you take over and explain why all \
the eigenvalues of  A = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["B", "t"], ".", "B"}], " "}]]],
 "are non-negative"
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.5.a.iii) FYI: Positive semi definite and positive definite matrices\
\>", "Subsubsection"],

Cell["No response from you is asked for here.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "At this point you have enough to settle on this factoid:\nSaying that all \
the eigenvalues of a symmetric matrix A  are nonnegative the same as saying\n \
   ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], " ", "\[GreaterSlantEqual]", " ", 
   "0"}]]],
 " \nno matter what X is.\nMost folks call these symmetric matrices by the \
name \"positive semi-definite matrices\"\n\nIt turns out that\nSaying that \
all the eigenvalues of a symmetric matrix A  are positive the same as saying\n\
    ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], " ", ">", " ", "0"}]]],
 " \nunless X = {0,0,...0}\nMost folks call these symmetric matrices by the \
name \"positive definite matrices.\"\n"
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.5.a.iv) Positive definite Hessians", "Subsubsection"],

Cell[TextData[{
 "When you go with a function f[x,y,z] and find a point {a,b,c} at which \
gradf[a,b,c] = 0 and you find that the Hessian ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["H", "f"], "[", 
    RowBox[{"a", ",", "b", ",", "c"}], "]"}], " "}]]],
 "is positive definite, how does f[a,b,c] compare to f[x,y,z] when {x,y,z} is \
near {a,b,c}?"
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["G.6) Hessians for function Max-Min", "Subsection",
 CellTags->"MGM.10.G6"],

Cell[CellGroupData[{

Cell[TextData[{
 "G.6.a) Local maximizers and local minimizers of ",
 StyleBox["f[x,y]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1.8"}], " ", 
       SuperscriptBox["x", "2"]}], "-", 
      RowBox[{"1.7", " ", 
       SuperscriptBox["y", "2"]}]}]], " ", 
    RowBox[{"(", 
     RowBox[{"x", "-", 
      SuperscriptBox["y", "2"], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"x", " ", "y"}], "]"}]}], ")"}]}],
   FontSize->12]]]
}], "Subsubsection"],

Cell["Here's a function f[x,y]:  ", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1.8"}], " ", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"1.7", " ", 
      SuperscriptBox["y", "2"]}]}]], " ", 
   RowBox[{"(", 
    RowBox[{"x", "-", 
     SuperscriptBox["y", "2"], "+", 
     RowBox[{"Sin", "[", 
      RowBox[{"x", " ", "y"}], "]"}]}], ")"}]}]}]}], "Input"],

Cell["\<\
Here's a plot of f[x,y] in the region -2 \[LessEqual] x  \[LessEqual] 2 and \
-2 \[LessEqual] y \[LessEqual] 2:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xlow", ",", "xhigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ylow", ",", "yhigh"}], "}"}], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xlow", ",", "xhigh"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "ylow", ",", "yhigh"}], "}"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<f[x,y]\>\""}], "}"}]}],
     ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
You can see a that this function has a local maximizer and possibly a couple \
of  local minimizers in the plotted region.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "gradf", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "x"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[PartialD]", "y"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}]}], "Input"],

Cell["\<\
There is no chance of solving gradf[x,y] = {0,0} with the solve command.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xderivcontourplot", "=", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"gradf", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xlow", ",", "xhigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ylow", ",", "yhigh"}], "}"}], ",", 
      RowBox[{"Contours", "\[Rule]", 
       RowBox[{"{", "0", "}"}]}], ",", 
      RowBox[{"ContourStyle", "\[Rule]", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], ",", 
      RowBox[{"ContourShading", "\[Rule]", "False"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"yderivcontourplot", "=", 
    RowBox[{"ContourPlot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"gradf", "[", 
        RowBox[{"x", ",", "y"}], "]"}], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "xlow", ",", "xhigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "ylow", ",", "yhigh"}], "}"}], ",", 
      RowBox[{"Contours", "\[Rule]", 
       RowBox[{"{", "0", "}"}]}], ",", 
      RowBox[{"ContourStyle", "\[Rule]", 
       RowBox[{"Thickness", "[", "0.01", "]"}]}], ",", 
      RowBox[{"ContourShading", "\[Rule]", "False"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"zeroderiv", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"xderivcontourplot", ",", "yderivcontourplot"}], "]"}]}]}], "Input",\

 AspectRatioFixed->True],

Cell[TextData[{
 "The curves are plots of ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["\[PartialD]", "x"], 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], " ", "=", " ", "0"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["\[PartialD]", "y"], 
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}]}], " ", "=", " ", "0"}]]],
 ".\nLet ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " come up with the points of intersection:"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x1", ",", "y1"}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"gradf", "[", 
       RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "0.5"}]}], "}"}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x2", ",", "y2"}], "}"}], " ", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", " ", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"gradf", "[", 
       RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "0.5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0.5"}], "}"}]}], "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x3", ",", "y3"}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], "/.", 
   RowBox[{"FindRoot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"gradf", "[", 
       RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0"}], "}"}]}], "]"}]}]}]], "Input"],

Cell["See them:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"pointplots", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"x1", ",", "y1"}], "}"}], "]"}]}], "}"}], "]"}], ",", "\n",
       "\t\t", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"x2", ",", "y2"}], "}"}], "]"}]}], "}"}], "]"}], ",", "\n",
       "\t\t", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"x3", ",", "y3"}], "}"}], "]"}]}], "}"}], "]"}]}], "}"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"zeroderiv", ",", "pointplots"}], "]"}], " "}]}], "Input"],

Cell["\<\
Move in with the Hessian to determine what's happening at these points.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.6.b) Local maximizers and local minimizers and saddle points of\n     ",
 StyleBox["f[x,y]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"3", " ", 
      SuperscriptBox["y", "2"]}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"0.5", " ", "x"}], "]"}], "2"]}], "-", 
     SuperscriptBox["y", "2"]}], ")"}]}]],
  FontSize->12]
}], "Subsubsection"],

Cell["Here's a function f[x,y]:  ", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", 
      SuperscriptBox["x", "2"]}], "-", 
     RowBox[{"3", " ", 
      SuperscriptBox["y", "2"]}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", 
        RowBox[{"0.5", " ", "x"}], "]"}], "2"]}], "-", 
     SuperscriptBox["y", "2"]}], ")"}]}]}]}], "Input"],

Cell["\<\
Here's a plot of f[x,y] in the region -1 \[LessEqual] x  \[LessEqual] 1 and \
-1 \[LessEqual] y \[LessEqual] 1:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xlow", ",", "xhigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ylow", ",", "yhigh"}], "}"}], "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xlow", ",", "xhigh"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "ylow", ",", "yhigh"}], "}"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<f[x,y]\>\""}], "}"}]}],
     ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"PlotRange", "->", "All"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
You can see that this function has local maximizers, a local minimizer and \
maybe a saddle point in the plotted region:
Locate the points and use the Hessian to determine which are local \
maximizers,which are local minimizers and which are saddle points.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.6.c) Kicking up the dimension", "Subsubsection"],

Cell["Here's a function of three variables:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "gradf", ",", "x", ",", "y", ",", "z"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"5.1", " ", "x"}], "+", 
   RowBox[{"6.5", " ", "y"}], "+", 
   RowBox[{"8.1", " ", "z"}], "+", 
   FractionBox["1.3", 
    RowBox[{"x", " ", "y", " ", "z"}]]}]}]}], "Input"],

Cell["\<\
You can't plot this function, but you can calculate its gradient:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "x"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[PartialD]", "y"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[PartialD]", "z"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}], "}"}]}]], "Input"],

Cell[TextData[{
 "The hessian\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["H", "f"], "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", "="}]]],
 " ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"2", ",", "0", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]},
      {
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "1", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "2", ",", "0"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]},
      {
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"1", ",", "0", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "1", ",", "1"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}], 
       RowBox[{
        SuperscriptBox["f", 
         TagBox[
          RowBox[{"(", 
           RowBox[{"0", ",", "0", ",", "2"}], ")"}],
          Derivative],
         MultilineFunction->None], "[", 
        RowBox[{"x", ",", "y", ",", "z"}], "]"}]}
     }], ")"}],
   MatrixForm[#]& ]]],
 "\nis given by"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "]"}], " ", "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"{", 
           RowBox[{"x", ",", "2"}], "}"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"x", ",", "y"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"x", ",", "z"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]},
       {
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"y", ",", "x"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"{", 
           RowBox[{"y", ",", "2"}], "}"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"y", ",", "z"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]},
       {
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"z", ",", "x"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"z", ",", "y"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}], 
        RowBox[{
         SubscriptBox["\[PartialD]", 
          RowBox[{"{", 
           RowBox[{"z", ",", "2"}], "}"}]], 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y", ",", "z"}], "]"}]}]}
      }], ")"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y", ",", "z"}], "]"}], "]"}]}], "Input"],

Cell["\<\
Find the point {a,b,c} with a > 0, b >0 and c >0 at which
             gradf[a,b,c] = {0,0,0}.
Use the Hessian to determine whether the point {a,b,c} is a local maximizer, \
local minimizer or saddle point for f[x,y,z].
Here's a start:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"gradf", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], " ", "==", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.7",
 ") Quadratic forms\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", "=", 
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b", " ", "x", " ", "y"}], "+", 
    RowBox[{"c", " ", 
     SuperscriptBox["y", "2"]}], "+", 
    RowBox[{"d", " ", "x"}], "+", 
    RowBox[{"e", " ", "y"}], "+", "g"}]}]]],
 "\nset equal to a constant  "
}], "Subsection",
 CellTags->"MGM.10.G7"],

Cell[CellGroupData[{

Cell["\<\
G.7.a)  Setting a quadratic form equal to a constant and getting an ellipse\
\>", "Subsubsection"],

Cell["Here's an example of something folks call a quadratic form:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   RowBox[{"2.3", " ", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"1.9", " ", "x", " ", "y"}], "+", 
   RowBox[{"1.5", " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"12.4", " ", "x"}], "+", 
   RowBox[{"10.8", " ", "y"}]}]}]}], "Input"],

Cell["And look at this plot: ", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"constant", "=", "5"}], ";"}], " "}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "15"}], ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "20"}], ",", "6"}], "}"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", "constant", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]}], "]"}]}]}], "Input"],

Cell["\<\
The border of the black region is a plot of the curve consisting of all the \
points {x,y} for which
             f[x,y] = constant = 5.
Parameterize and plot this curve.
Give the perpendicular frame on which it is hung and measure the length of \
the long axis and the short axis.\
\>", "Text",
 Evaluatable->False],

Cell["\<\
The border of the black region is a plot of the curve consisting of all the \
points {x,y} for which
             f[x,y] = constant = 5.
Parameterize and plot this curve.
Give the perpendicular frame on which it is hung and measure the length of \
the long axis and the short axis.
How is the shape of the ellipse related to the ratio of the eigenvalues of \
the Hessian?\
\>", "Text",
 Evaluatable->False]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.7.b.i) Setting a quadratic form equal to a constant and getting a hyperbola\
\
\>", "Subsubsection"],

Cell["\<\
Here's another example of something folks call a quadratic form:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   RowBox[{"5.4", " ", "x", " ", "y"}], "+", 
   SuperscriptBox["y", "2"], "+", 
   RowBox[{"2", " ", ".1", " ", "x"}], "+", "1.7"}]}]}], "Input"],

Cell["And look at this plot: ", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"constant", "=", "8"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "30"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", "constant", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]}], "]"}]}]}], "Input"],

Cell["\<\
The border of the black region is a plot of the curve consisting of all the \
points {x,y} for which
             f[x,y] = constant = 8.
You decide to look at the Hessian of f[x,y]:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "H", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", " ", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]},
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}], "\n"}], "Input"],

Cell["And you look at the eigenvalues of the Hessian:", "Text"],

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]], "Input"],

Cell["\<\
And now you say: \"I can explain why the plot came out the way it did.\" 
What did you mean?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.7.b.ii)  Setting a quadratic form equal to a constant and getting an ellipse\
\>", "Subsubsection"],

Cell["\<\
Here's another example of something folks call a quadratic form:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   SuperscriptBox["x", "2"], "+", 
   RowBox[{"2.5", " ", "x", " ", "y"}], "+", 
   RowBox[{"3", " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"2", " ", ".1", " ", "x"}], "+", "1.7"}]}]}], "Input"],

Cell["And look at this plot: ", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"constant", "=", "12"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "5"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", "constant", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]}], "]"}]}]}], "Input"],

Cell["\<\
The border of the black region is a plot of the curve consisting of all the \
points {x,y} for which
             f[x,y] = constant = 12.
You decide to look at the Hessian of f[x,y]:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "H", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", " ", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]},
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}], "\n"}], "Input"],

Cell["And you look at the eigenvalues of the Hessian:", "Text"],

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]], "Input"],

Cell["\<\
And now you say: \"I can explain why the plot came out the way it did.\" 
What did you mean?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.7.b.iii) Setting a quadratic form equal to a constant and getting a line\
\>", "Subsubsection"],

Cell["\<\
Here's another example of something folks call a quadratic form:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   SuperscriptBox["x", "2"], "-", 
   RowBox[{"4", " ", "x", " ", "y"}], "+", 
   RowBox[{"4", " ", 
    SuperscriptBox["y", "2"]}], "+", "1"}]}]}], "Input"],

Cell["And look at this plot: ", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"constant", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "30"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", "constant", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]}], "]"}]}]}], "Input"],

Cell["\<\
This is a plot of the curve defined by setting f[x,y] = constant = 2.
This puzzles you so you look at the gradient f[x,y]:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "gradf", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "x"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[PartialD]", "y"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"gradf", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]], "Input"],

Cell["And you look at the Hessian of f[x,y]:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "H", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", " ", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]},
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}], "\n"}], "Input"],

Cell["And you look at the eigenvalues of the Hessian:", "Text"],

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]], "Input"],

Cell["\<\
And now you exclaim: \"I can explain why the plot came out the way it did!\" 
What did you mean?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.7.b.iv) Setting a quadratic form equal to a constant and getting a parabola\
\
\>", "Subsubsection"],

Cell["\<\
Here's another example of something folks call a quadratic form:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{
   SuperscriptBox["x", "2"], "-", 
   RowBox[{"4.0", " ", "x", " ", "y"}], "+", 
   RowBox[{"4.0", " ", 
    SuperscriptBox["y", "2"]}], "+", 
   RowBox[{"2.3", " ", "x"}], "+", 
   RowBox[{"1.3", " ", "y"}]}]}]}], "Input"],

Cell["And look at this plot: ", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"constant", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "30"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"curveplot", "=", 
  RowBox[{"ContourPlot", "[", 
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
    RowBox[{"Contours", "\[Rule]", 
     RowBox[{"{", "constant", "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "Automatic"}]}], "]"}]}]}], "Input"],

Cell["\<\
This is a plot of the curve defined by setting f[x,y] = constant = 2.
It's not totally clear whether this is a parabola or part of an ellipse.
You look at the gradient f[x,y]:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "gradf", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "x"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[PartialD]", "y"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"gradf", "[", 
    RowBox[{"x", ",", "y"}], "]"}], " ", "==", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "]"}]], "Input"],

Cell["And you look at the Hessian of f[x,y]:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "H", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x_", ",", "y_"}], "]"}], "=", " ", 
    StyleBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]},
        {
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}
       }], ")"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]}], "Input"],

Cell["And you look at the eigenvalues of the Hessian:", "Text"],

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}], "]"}]], "Input"],

Cell["\<\
And now you exclaim: \"I can explain why the plot came out the way it did! \
And I know that this plot is a parabola!\"
What did you mean? And how did you come up with your decision?
\
\>", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.8",
 ") Quadratic forms defined by a symmetric matrix A via\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}]}]]]
}], "Subsection",
 CellTags->"MGM.10.G8"],

Cell[CellGroupData[{

Cell["\<\
G.8.a) Quadratic forms f[x,y]={x,y}.(A.{x,y}) don't  give rise to parabolas\
\>", "Subsubsection"],

Cell["Here's a symmetric matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "x", ",", "y", ",", "a", ",", "b", ",", "c", ",", "d"}],
     "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"b", "/", "2"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"b", "/", "2"}], ",", "c"}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}], "\n", 
 RowBox[{"\t"}]}], "Input"],

Cell["Use A to define this function f[x,y]={x,y}.(A.{x,y}):", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], "]"}]}]], "Input"],

Cell["\<\
This is a quadratic form.
Look at\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gradf", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["\[PartialD]", "x"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}], ",", 
    RowBox[{
     SubscriptBox["\[PartialD]", "y"], 
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}]], "Input"],

Cell["Notice that grad[0,0] = {0,0}:", "Text"],

Cell[BoxData[
 RowBox[{"gradf", "[", 
  RowBox[{"0", ",", "0"}], "]"}]], "Input"],

Cell["\<\
Say why this gives away the fact that when you set f[x,y] = constant, you \
will not get a parabola.\
\>", "Text"]
}, Closed]],

Cell["G.8.a.ii) The Hessian", "Subsubsection"],

Cell[TextData[{
 "Stay with the same function f[x,y] and calculate the Hessian ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["H", "f"], "[", 
    RowBox[{"x", ",", "y"}], "]"}], "."}]]],
 "\nHow is ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["H", "f"], "[", 
   RowBox[{"x", ",", "y"}], "]"}]]],
 " related to A?"
}], "Text"],

Cell[BoxData[
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["H", "f"], "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"x", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], ",", 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"x", ",", "y"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], ",", 
         RowBox[{
          SubscriptBox["\[PartialD]", 
           RowBox[{"{", 
            RowBox[{"y", ",", "2"}], "}"}]], 
          RowBox[{"f", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}]}], "}"}]}], "}"}]}], ";"}], " ", 
   "\n", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     SubscriptBox["H", "f"], "[", 
     RowBox[{"x", ",", "y"}], "]"}], "]"}]}]}]], "Input"],

Cell["G.8.a.iii)", "Subsubsection"],

Cell[TextData[{
 "How do the eigenvalues and eigenvectors of a given symmetric matrix  A tell \
you how\nhow curves defined by setting \n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ".", " ", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], " ", "=", " ", "constant", 
    " "}]}]]],
 "\nplot out?"
}], "Text"],

Cell["G.8.a.iv)", "Subsubsection"],

Cell["\<\
Explain this:
What do you look for in symmetric matrix A do you to be sure that it is \
impossible for ||{x,y}|| to go to infinity while maintaining the equality \
{x,y}.(A.{x,y} )= 20? \
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.9",
 ")  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 Cell[BoxData["A"]],
 " and the Grammian test for linear independence"
}], "Subsection",
 CellTags->"MGM.10.G9"],

Cell[CellGroupData[{

Cell[TextData[{
 "G.9.a.i) The rank of ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 Cell[BoxData["A"]],
 " is the same as the rank of A"
}], "Subsubsection"],

Cell[TextData[{
 "Explain this:\nGiven any matrix ",
 Cell[BoxData["A"]],
 ", the rank of ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 Cell[BoxData["A"]],
 " is the same as the rank of A."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.9.a.ii) If A is of full rank, then  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 Cell[BoxData["A"]],
 " is invertible"
}], "Subsubsection"],

Cell[TextData[{
 "Explain this:\n",
 " If A is of full rank, then  ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 Cell[BoxData["A"]],
 " is invertible."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.9.b.i) The Grammian matrix", "Subsubsection"],

Cell[TextData[{
 "Given a set of vectors\n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".."}], ",", 
    RowBox[{"X", "[", "n", "]"}]}], "}"}]]],
 "\nin kD, the corresponding Grammian matrix is the matrix with the entry \n  \
         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "i", "]"}], "\[Bullet]", " ", 
   RowBox[{"X", "[", "j", "]"}]}]]],
 " \nin its ith horizontal row and jth vertical column. The resulting \
Grammian matrix is a nD (square) symmetric matrix.\n\nClued in folks know \
that the Grammian matrix is the same as ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 Cell[BoxData["A"]],
 "  for a certain matrix A. What matrix A are they thinking about?"
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.9.b.ii) The Grammian test for linear independence", "Subsubsection"],

Cell[TextData[{
 "Given a set vectors\n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".."}], ",", 
    RowBox[{"X", "[", "n", "]"}]}], "}"}]]],
 ",\nclued in folks know that saying that \n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".."}], ",", 
    RowBox[{"X", "[", "n", "]"}]}], "}"}]]],
 " is a linearly independent set \nis the same as saying that  the \
determinant of the corresponding Grammian matrix is not 0.\nHow do they know \
this?"
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.9.b.iii) A case in which the determinant of the Grammian matrix is 0\
\>", "Subsubsection"],

Cell["\<\
Here is a random set consisting of at least seven vectors in 6D:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"number", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"7", ",", "12"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"X", ",", "i", ",", "j"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "i_", "]"}], " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "number"}], "}"}]}], "]"}]}], "Input"],

Cell["The determinant of the corresponding Grammian matrix is:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"grammian", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"X", "[", "i", "]"}], ".", 
       RowBox[{"X", "[", "j", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "number"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "number"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"Det", "[", "grammian", "]"}]}], "Input"],

Cell["Explain how you could have known this in advance.", "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "G.10",
 ")  Another version of the Holy Grail: Working with  ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SuperscriptBox["A", "t"]}]]],
 " instead of ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 Cell[BoxData["A"]],
 " "
}], "Subsection",
 CellTags->"MGM.10.G10"],

Cell[CellGroupData[{

Cell[TextData[{
 "G.10.a) ",
 "Working with  ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SuperscriptBox["A", "t"]}]]],
 " instead of ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".",
 Cell[BoxData["A"]],
 " "
}], "Subsubsection"],

Cell[TextData[{
 "Given a matrix A, the matrix ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SuperscriptBox["A", "t"]}]]],
 " is guaranteed to be symmetric. \nThe Spectral theorem steps in to \
guarantee an orthonormal basis (perpendicular frame) \n          {",
 Cell[BoxData[
  SubscriptBox["Y", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["Y", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["Y", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["Y", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["Y", "hangdim"]]],
 "}\nof eigenvectors of ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SuperscriptBox["A", "t"]}]]],
 " spanning all of hangdimD.\n\nHow are these vectors related to the SVD of \
A?\n\nHow can you use these vectors to find the SVD stretch factors of A?"
}], "Text"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.11)  Trying to get SVD to spit out eigenvectors for symmetric matrices\
\>", "Subsection",
 CellTags->"MGM.10.G11"],

Cell[CellGroupData[{

Cell["G.11.a.i) Eigenvectors and SVD for symmetric matrices", "Subsubsection"],

Cell["Here's 2D symmetric matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.6", "0.2"},
        {"0.2", "0.3"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Compare ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of eigenvectors of A with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of an SVD alignerframe of A:"
}], "Text"],

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", "A", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input"],

Cell["\<\
For this matrix, the calculated SVD aligner frame consists of eigenvectors.

Here's another 2D symmetric matrix A:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"0.3", " ", "Pi"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"perpframe", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
  "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", " ", "=", " ", "perpframe"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hanger", " ", "=", " ", 
    RowBox[{"Transpose", "[", "aligner", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"diagonal", " ", "=", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"1.2", ",", 
       RowBox[{"-", "0.6"}]}], "}"}], "]"}]}], ";"}], " ", "\n", 
  "\t\t"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"hanger", ".", "diagonal", " ", ".", "aligner"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Compare ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of eigenvectors of A with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of an SVD alignerframe of A:"
}], "Text"],

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", "A", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input"],

Cell["\<\
Again for this matrix, the calculated SVD aligner frame consists of \
eigenvectors.
Here's another 2D symmetric matrix A:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"0.4", " ", "\[Pi]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hanger", "=", 
    RowBox[{"Transpose", "[", "aligner", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"diagonal", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", 
       RowBox[{"-", "2"}]}], "}"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"hanger", ".", "diagonal", ".", "aligner"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "Compare ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of eigenvectors of A with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of an SVD alignerframe of A:"
}], "Text"],

Cell[BoxData[
 RowBox[{"Eigenvectors", "[", "A", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input"],

Cell["\<\
Are the calculated alignerframe vectors also eigenvectors of A?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.11.a.ii) Sometimes any perpendicular frame works for an aligner frame\
\>", "Subsubsection"],

Cell["\<\
Stay with the same matrix A as in the very last of part i).
This the matrix A was made with this frame for both its aligner and hanger \
frames:\
\>", "Text"],

Cell[BoxData["aligner"], "Input"],

Cell[TextData[{
 "Yet ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " comes up with these aligner and hangerframes:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"alignerframe", ",", "hangerframe"}], "]"}], ";", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"alignerframe", "[", "1", "]"}], ",", 
     RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", " ", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "[", 
    RowBox[{"[", "3", "]"}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"hangerframe", "[", "1", "]"}], ",", 
    RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input"],

Cell["And these stretch factors:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stretch", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"stretch", "[", "1", "]"}], ",", 
    RowBox[{"stretch", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Input"],

Cell["Check:", "Text"],

Cell[BoxData[{
 RowBox[{"Chop", "[", 
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "1", "]"}]}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"stretch", "[", "1", "]"}], " ", 
   RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{"Chop", "[", 
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "2", "]"}]}], " ", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"stretch", "[", "2", "]"}], " ", 
   RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "Input"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation checks out.\nNow look at ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Chop", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], "]"}]], "Input"],

Cell[TextData[{
 "Remembering that an SVD alignerframe is any perpendicular frame that \
consists of eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ", say why any 2D perpendicular frame works as an SVD aligner frame for A."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.11.a.iii) Key info about  {stretch[1],stretch[2]} of a symmetric matrix\
\>", "Subsubsection"],

Cell["\<\
Take your best shot at this question:
Given a 2D symmetric matrix A, you look at the SVD stretch factors of A, \
{stretch[1],stretch[2]}.
When you look at  
           {stretch[1],stretch[2]} 
and extract the key information, it is possible to decide whether any \
computed SVD alignerframe is guaranteed to consist of eigenvectors of A. 
What is this key information?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
G.11.a.iv) Key info about {eigenvalue[1],eigenvalue[2]} of a symmetric matrix\
\
\>", "Subsubsection"],

Cell["\<\
Take your best shot at this question:
Given a 2D symmetric matrix A, you look at the eigenvalues of A, \
{eigenvalue[1],eigenvalue[2]}.
When you look at 
          {eigenvalue[1],eigenvalue[2]} 
and extract the key information, it is possible to decide whether any \
computed SVD alignerframe is guaranteed to consist of eigenvectors of A. 
What is this key information?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.11.b.i) Moving to higher dimensions", "Subsubsection"],

Cell["\<\
Take your best shot at this question:
Given a kD symmetric matrix A, you look at the eigenvalues of A, 
         {eigenvalue[1],eigenvalue[2], . . ,eigenvalue[k]} 
as guaranteed by the Spectral Theorem.
When you look at 
          {eigenvalue[1],eigenvalue[2], . . ,eigenvalue[k]}
and extract the key information, it is possible to decide whether any \
computed SVD alignerframe is guaranteed to consist of eigenvectors of A. 
What is this key information?\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["G.11.b.ii) Moving to higher dimensions", "Subsubsection"],

Cell["\<\
Take your best shot at this question:
Given a kD symmetric matrix A, you look at the SVD stretch factors of A, 
         {stretch[1],stretch[2], . . ,stretch[k]} (including the zero stretch \
factors)
as guaranteed by the Spectral Theorem.
When you look at 
          {stretch[1],stretch[2], . . ,stretch[k]}
and extract the key information, it is possible to decide whether any \
computed SVD alignerframe is guaranteed to consist of eigenvectors of A. 
What is this key information?\
\>", "Text"]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
TrackCellChangeTimes->True,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.10.G1"->{
  Cell[29528, 803, 81, 1, 36, "Subsection",
   CellTags->"MGM.10.G1"]},
 "MGM.10.G10"->{
  Cell[131423, 4609, 287, 13, 39, "Subsection",
   CellTags->"MGM.10.G10"]},
 "MGM.10.G11"->{
  Cell[132788, 4673, 127, 3, 36, "Subsection",
   CellTags->"MGM.10.G11"]},
 "MGM.10.G2"->{
  Cell[48529, 1504, 115, 3, 36, "Subsection",
   CellTags->"MGM.10.G2"]},
 "MGM.10.G3"->{
  Cell[60039, 1959, 247, 9, 39, "Subsection",
   CellTags->"MGM.10.G3"]},
 "MGM.10.G4"->{
  Cell[74657, 2552, 79, 1, 36, "Subsection",
   CellTags->"MGM.10.G4"]},
 "MGM.10.G5"->{
  Cell[82691, 2849, 121, 3, 36, "Subsection",
   CellTags->"MGM.10.G5"]},
 "MGM.10.G6"->{
  Cell[87055, 3005, 80, 1, 36, "Subsection",
   CellTags->"MGM.10.G6"]},
 "MGM.10.G7"->{
  Cell[104352, 3609, 485, 17, 89, "Subsection",
   CellTags->"MGM.10.G7"]},
 "MGM.10.G8"->{
  Cell[122327, 4249, 412, 15, 61, "Subsection",
   CellTags->"MGM.10.G8"]},
 "MGM.10.G9"->{
  Cell[127039, 4434, 195, 9, 39, "Subsection",
   CellTags->"MGM.10.G9"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.10.G1", 195052, 6118},
 {"MGM.10.G10", 195141, 6121},
 {"MGM.10.G11", 195235, 6124},
 {"MGM.10.G2", 195327, 6127},
 {"MGM.10.G3", 195417, 6130},
 {"MGM.10.G4", 195507, 6133},
 {"MGM.10.G5", 195596, 6136},
 {"MGM.10.G6", 195686, 6139},
 {"MGM.10.G7", 195775, 6142},
 {"MGM.10.G8", 195867, 6145},
 {"MGM.10.G9", 195959, 6148}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 190, 6, 108, "Title"],
Cell[CellGroupData[{
Cell[6427, 138, 193, 7, 28, "Special2"],
Cell[6623, 147, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7940, 189, 38, 0, 31, "Subsubsection"],
Cell[7981, 191, 1344, 31, 156, "Input"],
Cell[9328, 224, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9501, 230, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26872, 713, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27119, 724, 39, 0, 35, "Subsubsection"],
Cell[27161, 726, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29528, 803, 81, 1, 36, "Subsection",
 CellTags->"MGM.10.G1"],
Cell[CellGroupData[{
Cell[29634, 808, 56, 0, 31, "Subsubsection"],
Cell[29693, 810, 108, 3, 24, "Text",
 Evaluatable->False],
Cell[29804, 815, 992, 33, 126, "Input"],
Cell[30799, 850, 111, 3, 24, "Text",
 Evaluatable->False]
}, Closed]],
Cell[CellGroupData[{
Cell[30947, 858, 57, 0, 31, "Subsubsection"],
Cell[31007, 860, 2690, 89, 177, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[33734, 954, 74, 0, 31, "Subsubsection"],
Cell[33811, 956, 146, 5, 74, "Text",
 Evaluatable->False]
}, Closed]],
Cell[CellGroupData[{
Cell[33994, 966, 60, 0, 31, "Subsubsection"],
Cell[34057, 968, 42, 0, 24, "Text"],
Cell[34102, 970, 864, 28, 81, "Input"],
Cell[34969, 1000, 45, 0, 24, "Text"],
Cell[35017, 1002, 324, 10, 20, "Input"],
Cell[35344, 1014, 46, 0, 24, "Text"],
Cell[35393, 1016, 320, 10, 20, "Input"],
Cell[35716, 1028, 163, 7, 24, "Text"],
Cell[35882, 1037, 96, 3, 20, "Input"],
Cell[35981, 1042, 194, 8, 26, "Text"],
Cell[36178, 1052, 137, 5, 20, "Input"],
Cell[36318, 1059, 70, 0, 24, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[36425, 1064, 72, 0, 31, "Subsubsection"],
Cell[36500, 1066, 130, 4, 24, "Text",
 Evaluatable->False],
Cell[36633, 1072, 2149, 69, 205, "Input"],
Cell[38785, 1143, 72, 0, 24, "Text"],
Cell[38860, 1145, 125, 3, 20, "Input"],
Cell[38988, 1150, 71, 3, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[39096, 1158, 69, 0, 31, "Subsubsection"],
Cell[39168, 1160, 73, 0, 24, "Text"],
Cell[39244, 1162, 2636, 86, 241, "Input"],
Cell[41883, 1250, 71, 0, 24, "Text"],
Cell[41957, 1252, 125, 3, 20, "Input"],
Cell[42085, 1257, 148, 4, 74, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[42270, 1266, 71, 0, 31, "Subsubsection"],
Cell[42344, 1268, 44, 0, 24, "Text"],
Cell[42391, 1270, 956, 30, 55, "Input"],
Cell[43350, 1302, 115, 6, 26, "Text"],
Cell[43468, 1310, 123, 3, 20, "Input"],
Cell[43594, 1315, 705, 26, 106, "Text"],
Cell[44302, 1343, 1571, 49, 136, "Input"],
Cell[45876, 1394, 89, 2, 24, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[46002, 1401, 98, 2, 31, "Subsubsection"],
Cell[46103, 1405, 206, 4, 74, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[46346, 1414, 162, 5, 35, "Subsubsection"],
Cell[46511, 1421, 49, 0, 24, "Text"],
Cell[46563, 1423, 956, 30, 55, "Input"],
Cell[47522, 1455, 115, 6, 26, "Text"],
Cell[47640, 1463, 123, 3, 20, "Input"],
Cell[47766, 1468, 130, 5, 24, "Text"],
Cell[47899, 1475, 118, 3, 20, "Input"],
Cell[48020, 1480, 203, 9, 26, "Text"],
Cell[48226, 1491, 180, 5, 20, "Input"],
Cell[48409, 1498, 71, 0, 24, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[48529, 1504, 115, 3, 36, "Subsection",
 CellTags->"MGM.10.G2"],
Cell[CellGroupData[{
Cell[48669, 1511, 77, 0, 31, "Subsubsection"],
Cell[48749, 1513, 41, 0, 24, "Text"],
Cell[48793, 1515, 874, 27, 81, "Input"],
Cell[49670, 1544, 220, 7, 51, "Text"],
Cell[49893, 1553, 804, 25, 51, "Input"],
Cell[50700, 1580, 254, 9, 45, "Text"],
Cell[50957, 1591, 189, 5, 43, "Text"],
Cell[51149, 1598, 241, 6, 68, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[51427, 1609, 105, 2, 31, "Subsubsection"],
Cell[51535, 1613, 41, 0, 24, "Text"],
Cell[51579, 1615, 986, 32, 66, "Input"],
Cell[52568, 1649, 124, 6, 26, "Text"],
Cell[52695, 1657, 123, 3, 20, "Input"],
Cell[52821, 1662, 220, 7, 51, "Text"],
Cell[53044, 1671, 804, 25, 51, "Input"],
Cell[53851, 1698, 58, 0, 24, "Text"],
Cell[53912, 1700, 413, 13, 20, "Input"],
Cell[54328, 1715, 187, 5, 68, "Text"],
Cell[54518, 1722, 188, 5, 49, "Text"],
Cell[54709, 1729, 195, 5, 74, "Text"],
Cell[54907, 1736, 199, 5, 99, "Text"],
Cell[55109, 1743, 90, 2, 24, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[55236, 1750, 55, 0, 31, "Subsubsection"],
Cell[55294, 1752, 1092, 43, 206, "Text"],
Cell[56389, 1797, 118, 5, 23, "Special2"],
Cell[56510, 1804, 1393, 54, 195, "Text"],
Cell[57906, 1860, 142, 4, 12, "Special2"],
Cell[58051, 1866, 377, 17, 54, "Text"],
Cell[58431, 1885, 245, 8, 30, "Special2"],
Cell[58679, 1895, 369, 17, 27, "Text"],
Cell[59051, 1914, 223, 8, 18, "Special2"],
Cell[59277, 1924, 16, 0, 24, "Text"],
Cell[59296, 1926, 163, 5, 68, "Text"],
Cell[59462, 1933, 195, 7, 45, "Text"],
Cell[59660, 1942, 147, 4, 43, "Text"],
Cell[59810, 1948, 180, 5, 43, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[60039, 1959, 247, 9, 39, "Subsection",
 CellTags->"MGM.10.G3"],
Cell[CellGroupData[{
Cell[60311, 1972, 230, 8, 35, "Subsubsection"],
Cell[60544, 1982, 42, 0, 24, "Text"],
Cell[60589, 1984, 978, 30, 55, "Input"],
Cell[61570, 2016, 49, 0, 24, "Text"],
Cell[61622, 2018, 640, 24, 20, "Input"],
Cell[62265, 2044, 152, 5, 26, "Text"],
Cell[62420, 2051, 565, 19, 57, "Input"],
Cell[62988, 2072, 61, 0, 24, "Text"],
Cell[63052, 2074, 986, 32, 66, "Input"],
Cell[64041, 2108, 49, 0, 24, "Text"],
Cell[64093, 2110, 640, 24, 20, "Input"],
Cell[64736, 2136, 152, 5, 26, "Text"],
Cell[64891, 2143, 543, 19, 57, "Input"],
Cell[65437, 2164, 270, 7, 51, "Text"],
Cell[CellGroupData[{
Cell[65732, 2175, 181, 3, 12, "Special2"],
Cell[65916, 2180, 540, 25, 76, "Text"],
Cell[66459, 2207, 429, 18, 102, "Text"],
Cell[66891, 2227, 806, 34, 205, "Text"],
Cell[67700, 2263, 652, 26, 127, "Text"],
Cell[68355, 2291, 570, 25, 39, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[68974, 2322, 242, 9, 35, "Subsubsection"],
Cell[69219, 2333, 41, 0, 24, "Text"],
Cell[69263, 2335, 984, 32, 66, "Input"],
Cell[70250, 2369, 124, 6, 26, "Text"],
Cell[70377, 2377, 171, 5, 20, "Input"],
Cell[70551, 2384, 151, 6, 26, "Text"],
Cell[70705, 2392, 706, 26, 20, "Input"],
Cell[71414, 2420, 134, 6, 26, "Text"],
Cell[71551, 2428, 169, 4, 20, "Input"],
Cell[71723, 2434, 57, 0, 24, "Text"],
Cell[71783, 2436, 984, 32, 66, "Input"],
Cell[72770, 2470, 151, 6, 26, "Text"],
Cell[72924, 2478, 706, 26, 20, "Input"],
Cell[73633, 2506, 134, 6, 26, "Text"],
Cell[73770, 2514, 207, 6, 20, "Input"],
Cell[73980, 2522, 36, 0, 24, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[74053, 2527, 185, 6, 35, "Subsubsection"],
Cell[74241, 2535, 367, 11, 128, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[74657, 2552, 79, 1, 36, "Subsection",
 CellTags->"MGM.10.G4"],
Cell[CellGroupData[{
Cell[74761, 2557, 62, 0, 31, "Subsubsection"],
Cell[74826, 2559, 183, 4, 74, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[75046, 2568, 73, 0, 31, "Subsubsection"],
Cell[75122, 2570, 54, 0, 24, "Text"],
Cell[75179, 2572, 811, 29, 87, "Input"],
Cell[75993, 2603, 35, 0, 24, "Text"],
Cell[76031, 2605, 593, 21, 58, "Input"],
Cell[76627, 2628, 37, 0, 24, "Text"],
Cell[76667, 2630, 539, 16, 36, "Input"],
Cell[77209, 2648, 484, 19, 30, "Special2"],
Cell[77696, 2669, 52, 0, 24, "Text"],
Cell[77751, 2671, 921, 29, 81, "Input"],
Cell[78675, 2702, 31, 0, 24, "Text"],
Cell[78709, 2704, 3020, 101, 276, "Input"],
Cell[81732, 2807, 484, 19, 30, "Special2"],
Cell[82219, 2828, 168, 4, 74, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[82424, 2837, 84, 1, 31, "Subsubsection"],
Cell[82511, 2840, 131, 3, 49, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[82691, 2849, 121, 3, 36, "Subsection",
 CellTags->"MGM.10.G5"],
Cell[82815, 2854, 85, 1, 31, "Subsubsection"],
Cell[82903, 2857, 413, 11, 101, "Text"],
Cell[CellGroupData[{
Cell[83341, 2872, 279, 10, 35, "Subsubsection"],
Cell[83623, 2884, 1808, 64, 288, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[85468, 2953, 102, 2, 31, "Subsubsection"],
Cell[85573, 2957, 106, 2, 12, "Special2"],
Cell[85682, 2961, 849, 21, 324, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[86568, 2987, 61, 0, 31, "Subsubsection"],
Cell[86632, 2989, 374, 10, 74, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[87055, 3005, 80, 1, 36, "Subsection",
 CellTags->"MGM.10.G6"],
Cell[CellGroupData[{
Cell[87160, 3010, 580, 21, 39, "Subsubsection"],
Cell[87743, 3033, 43, 0, 24, "Text"],
Cell[87789, 3035, 586, 20, 45, "Input"],
Cell[88378, 3057, 135, 3, 24, "Text"],
Cell[88516, 3062, 1008, 32, 81, "Input"],
Cell[89527, 3096, 146, 3, 49, "Text"],
Cell[89676, 3101, 475, 16, 40, "Input"],
Cell[90154, 3119, 96, 2, 24, "Text"],
Cell[90253, 3123, 1565, 43, 141, "Input"],
Cell[91821, 3168, 498, 19, 52, "Text"],
Cell[92322, 3189, 539, 18, 20, "Input"],
Cell[92864, 3209, 541, 18, 20, "Input"],
Cell[93408, 3229, 516, 17, 20, "Input"],
Cell[93927, 3248, 25, 0, 24, "Text"],
Cell[93955, 3250, 1088, 32, 66, "Input"],
Cell[95046, 3284, 95, 2, 24, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[95178, 3291, 623, 22, 61, "Subsubsection"],
Cell[95804, 3315, 43, 0, 24, "Text"],
Cell[95850, 3317, 632, 22, 45, "Input"],
Cell[96485, 3341, 135, 3, 24, "Text"],
Cell[96623, 3346, 1008, 32, 81, "Input"],
Cell[97634, 3380, 280, 5, 99, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[97951, 3390, 56, 0, 31, "Subsubsection"],
Cell[98010, 3392, 53, 0, 24, "Text"],
Cell[98066, 3394, 437, 14, 59, "Input"],
Cell[98506, 3410, 89, 2, 24, "Text"],
Cell[98598, 3414, 554, 17, 26, "Input"],
Cell[99155, 3433, 2599, 89, 127, "Text"],
Cell[101757, 3524, 2062, 63, 95, "Input"],
Cell[103822, 3589, 259, 6, 124, "Text"],
Cell[104084, 3597, 219, 6, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[104352, 3609, 485, 17, 89, "Subsection",
 CellTags->"MGM.10.G7"],
Cell[CellGroupData[{
Cell[104862, 3630, 108, 2, 31, "Subsubsection"],
Cell[104973, 3634, 75, 0, 24, "Text"],
Cell[105051, 3636, 466, 15, 39, "Input"],
Cell[105520, 3653, 60, 1, 24, "Text",
 Evaluatable->False],
Cell[105583, 3656, 739, 21, 66, "Input"],
Cell[106325, 3679, 326, 8, 149, "Text",
 Evaluatable->False],
Cell[106654, 3689, 416, 10, 174, "Text",
 Evaluatable->False]
}, Closed]],
Cell[CellGroupData[{
Cell[107107, 3704, 112, 3, 31, "Subsubsection"],
Cell[107222, 3709, 88, 2, 24, "Text"],
Cell[107313, 3713, 395, 12, 39, "Input"],
Cell[107711, 3727, 60, 1, 24, "Text",
 Evaluatable->False],
Cell[107774, 3730, 839, 24, 96, "Input"],
Cell[108616, 3756, 205, 5, 99, "Text"],
Cell[108824, 3763, 1334, 45, 91, "Input"],
Cell[110161, 3810, 63, 0, 24, "Text"],
Cell[110227, 3812, 139, 4, 20, "Input"],
Cell[110369, 3818, 116, 3, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[110522, 3826, 111, 2, 31, "Subsubsection"],
Cell[110636, 3830, 88, 2, 24, "Text"],
Cell[110727, 3834, 420, 13, 39, "Input"],
Cell[111150, 3849, 60, 1, 24, "Text",
 Evaluatable->False],
Cell[111213, 3852, 839, 24, 96, "Input"],
Cell[112055, 3878, 206, 5, 99, "Text"],
Cell[112264, 3885, 1340, 45, 106, "Input"],
Cell[113607, 3932, 63, 0, 24, "Text"],
Cell[113673, 3934, 139, 4, 20, "Input"],
Cell[113815, 3940, 116, 3, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[113968, 3948, 107, 2, 31, "Subsubsection"],
Cell[114078, 3952, 88, 2, 24, "Text"],
Cell[114169, 3956, 371, 12, 39, "Input"],
Cell[114543, 3970, 60, 1, 24, "Text",
 Evaluatable->False],
Cell[114606, 3973, 839, 24, 96, "Input"],
Cell[115448, 3999, 146, 3, 49, "Text"],
Cell[115597, 4004, 475, 16, 40, "Input"],
Cell[116075, 4022, 199, 6, 20, "Input"],
Cell[116277, 4030, 54, 0, 24, "Text"],
Cell[116334, 4032, 1334, 45, 91, "Input"],
Cell[117671, 4079, 63, 0, 24, "Text"],
Cell[117737, 4081, 139, 4, 20, "Input"],
Cell[117879, 4087, 120, 3, 49, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[118036, 4095, 112, 3, 31, "Subsubsection"],
Cell[118151, 4100, 88, 2, 24, "Text"],
Cell[118242, 4104, 437, 14, 39, "Input"],
Cell[118682, 4120, 60, 1, 24, "Text",
 Evaluatable->False],
Cell[118745, 4123, 839, 24, 96, "Input"],
Cell[119587, 4149, 199, 4, 74, "Text"],
Cell[119789, 4155, 475, 16, 40, "Input"],
Cell[120267, 4173, 199, 6, 20, "Input"],
Cell[120469, 4181, 54, 0, 24, "Text"],
Cell[120526, 4183, 1334, 45, 91, "Input"],
Cell[121863, 4230, 63, 0, 24, "Text"],
Cell[121929, 4232, 139, 4, 20, "Input"],
Cell[122071, 4238, 207, 5, 99, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[122327, 4249, 412, 15, 61, "Subsection",
 CellTags->"MGM.10.G8"],
Cell[CellGroupData[{
Cell[122764, 4268, 108, 2, 31, "Subsubsection"],
Cell[122875, 4272, 44, 0, 24, "Text"],
Cell[122922, 4274, 545, 19, 66, "Input"],
Cell[123470, 4295, 69, 0, 24, "Text"],
Cell[123542, 4297, 317, 11, 20, "Input"],
Cell[123862, 4310, 57, 3, 49, "Text"],
Cell[123922, 4315, 380, 13, 26, "Input"],
Cell[124305, 4330, 46, 0, 24, "Text"],
Cell[124354, 4332, 81, 2, 20, "Input"],
Cell[124438, 4336, 124, 3, 49, "Text"]
}, Closed]],
Cell[124577, 4342, 46, 0, 31, "Subsubsection"],
Cell[124626, 4344, 338, 13, 49, "Text"],
Cell[124967, 4359, 1225, 40, 42, "Input"],
Cell[126195, 4401, 35, 0, 31, "Subsubsection"],
Cell[126233, 4403, 519, 17, 99, "Text"],
Cell[126755, 4422, 34, 0, 31, "Subsubsection"],
Cell[126792, 4424, 210, 5, 74, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[127039, 4434, 195, 9, 39, "Subsection",
 CellTags->"MGM.10.G9"],
Cell[CellGroupData[{
Cell[127259, 4447, 167, 7, 35, "Subsubsection"],
Cell[127429, 4456, 210, 9, 51, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[127676, 4470, 169, 7, 35, "Subsubsection"],
Cell[127848, 4479, 172, 8, 51, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[128057, 4492, 53, 0, 31, "Subsubsection"],
Cell[128113, 4494, 809, 23, 226, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[128959, 4522, 76, 0, 31, "Subsubsection"],
Cell[129038, 4524, 684, 20, 174, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[129759, 4549, 103, 2, 31, "Subsubsection"],
Cell[129865, 4553, 88, 2, 24, "Text"],
Cell[129956, 4557, 814, 26, 51, "Input"],
Cell[130773, 4585, 72, 0, 24, "Text"],
Cell[130848, 4587, 458, 14, 36, "Input"],
Cell[131309, 4603, 65, 0, 24, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[131423, 4609, 287, 13, 39, "Subsection",
 CellTags->"MGM.10.G10"],
Cell[CellGroupData[{
Cell[131735, 4626, 231, 12, 35, "Subsubsection"],
Cell[131969, 4640, 770, 27, 206, "Text"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[132788, 4673, 127, 3, 36, "Subsection",
 CellTags->"MGM.10.G11"],
Cell[CellGroupData[{
Cell[132940, 4680, 78, 0, 31, "Subsubsection"],
Cell[133021, 4682, 43, 0, 24, "Text"],
Cell[133067, 4684, 297, 10, 55, "Input"],
Cell[133367, 4696, 231, 8, 49, "Text"],
Cell[133601, 4706, 65, 1, 20, "Input"],
Cell[133669, 4709, 118, 3, 20, "Input"],
Cell[133790, 4714, 138, 4, 74, "Text"],
Cell[133931, 4720, 1287, 43, 145, "Input"],
Cell[135221, 4765, 231, 8, 49, "Text"],
Cell[135455, 4775, 65, 1, 20, "Input"],
Cell[135523, 4778, 118, 3, 20, "Input"],
Cell[135644, 4783, 145, 4, 49, "Text"],
Cell[135792, 4789, 1114, 38, 115, "Input"],
Cell[136909, 4829, 231, 8, 49, "Text"],
Cell[137143, 4839, 65, 1, 20, "Input"],
Cell[137211, 4842, 118, 3, 20, "Input"],
Cell[137332, 4847, 87, 2, 24, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[137456, 4854, 104, 2, 31, "Subsubsection"],
Cell[137563, 4858, 168, 4, 49, "Text"],
Cell[137734, 4864, 33, 0, 20, "Input"],
Cell[137770, 4866, 135, 5, 24, "Text"],
Cell[137908, 4873, 655, 19, 51, "Input"],
Cell[138566, 4894, 42, 0, 24, "Text"],
Cell[138611, 4896, 379, 12, 36, "Input"],
Cell[138993, 4910, 22, 0, 24, "Text"],
Cell[139018, 4912, 272, 8, 36, "Input"],
Cell[139293, 4922, 272, 8, 36, "Input"],
Cell[139568, 4932, 195, 8, 51, "Text"],
Cell[139766, 4942, 156, 4, 20, "Input"],
Cell[139925, 4948, 277, 7, 76, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[140239, 4960, 106, 2, 31, "Subsubsection"],
Cell[140348, 4964, 392, 9, 199, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[140777, 4978, 112, 3, 31, "Subsubsection"],
Cell[140892, 4983, 394, 9, 199, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[141323, 4997, 62, 0, 31, "Subsubsection"],
Cell[141388, 4999, 480, 10, 224, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[141905, 5014, 63, 0, 31, "Subsubsection"],
Cell[141971, 5016, 508, 11, 224, "Text"]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
