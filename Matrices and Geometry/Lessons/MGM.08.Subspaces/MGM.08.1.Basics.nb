(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    263395,       8352]
NotebookOptionsPosition[    187185,       6561]
NotebookOutlinePosition[    240484,       7678]
CellTagsIndexPosition[    240260,       7668]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.08 Subspaces, Spans , Dimension, Linear Independence, Basis, \
Orthonormal Bases\n",
 StyleBox[" BASICS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1) Subspaces,  spanning sets.\nThe ",
 StyleBox["SpannerMatrix",
  FontColor->RGBColor[0, 0, 1]],
 " for a given spanning set ",
 StyleBox["{spanner[1], spanner[2], . . . , spanner[n]} ",
  FontColor->RGBColor[0, 0, 1]],
 "is                       \n",
 StyleBox["SpannerMatrix",
  FontColor->RGBColor[0, 0, 1]],
 " =",
 Cell[BoxData[
  RowBox[{"   ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"spanner", "[", "1", "]"}], 
       RowBox[{"spanner", "[", "2", "]"}], "...", 
       RowBox[{"spanner", "[", "n", "]"}]},
      {"\[DownArrow]", "\[DownArrow]", "...", "\[DownArrow]"}
     }], ")"}]}]]],
 ".\n\nThe subspace spanned by a given spanning set consists exactly of the \
vectors that are hits with the ",
 StyleBox["SpannerMatrix",
  FontColor->RGBColor[0, 0, 1]],
 ".\nThe ",
 StyleBox["dimension",
  FontColor->RGBColor[0, 0, 1]],
 " of a subspace spanned by a given spanning set is the ",
 StyleBox["rank",
  FontColor->RGBColor[0, 0, 1]],
 " of the  ",
 StyleBox["SpannerMatrix",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Subsection",
 CellTags->"MGM.08.B1"],

Cell[CellGroupData[{

Cell["B.1.a.i) Subspaces defined by spanning sets", "Subsubsection",
 Evaluatable->False],

Cell[TextData[{
 "To get a line through ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]]],
 " in 3D, you  go with one direction vector such as:"
}], "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"spanner", "[", "1", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{"1.43", ",", 
    RowBox[{"-", "0.5"}], ",", "1.2"}], "}"}]}]}], "Input"],

Cell["\<\
And then you make the line by taking all multiples of this vector.
Here's a piece of it:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.43", ",", 
      RowBox[{"-", "0.5"}], ",", "1.2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "=", "3"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "s", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lineplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{
       StyleBox["s",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox[" ",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"spanner", "[", "1", "]"}],
        FontColor->RGBColor[0, 0, 1]]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "h"}], ",", "h"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"linepiece", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"lineplot", ",", 
    RowBox[{"ThreeAxes", "[", "2", "]"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Piece of line\>\""}]}], 
   "]"}]}]}], "Input"],

Cell["\<\
Folks say that the specified vector spans the line because you can get to any \
point on the line by advancing on a multiple of the given vector:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "h"}], ",", "h"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"linepoint", "=", 
    RowBox[{"s", " ", 
     RowBox[{"spanner", "[", "1", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
       RowBox[{"Point", "[", "linepoint", "]"}]}], "}"}], "]"}]}], ";"}], " ",
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointspannerplot", "=", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"s", " ", 
       RowBox[{"spanner", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Orange"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"linepiece", ",", "pointplot", ",", "pointspannerplot", ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Piece of line\>\""}]}], 
  "]"}]}], "Input"],

Cell["Rerun several times.", "Special5",
 Evaluatable->False],

Cell["\<\
To get a plane through {0,0,0} in 3D, you just go with two vectors such as:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "spanner", ",", "i"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.43", ",", 
      RowBox[{"-", "0.5"}], ",", "1.2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.9"}], ",", "0.0", ",", "1.5"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spanners", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Column", "[", "spanners", "]"}]}], "Input"],

Cell[TextData[{
 "And then you make the plane by taking all combinations  \n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"s", " ", 
    RowBox[{"spanner", "[", "1", "]"}]}], "+", 
   RowBox[{"t", " ", 
    RowBox[{"spanner", "[", "2", "]"}]}]}]]],
 " \nof multiples of these two vectors:"
}], "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"h", "=", "5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", "4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planeplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox["s",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[
         RowBox[{"spanner", "[", "1", "]"}],
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox["+",
        FontColor->RGBColor[0, 0, 1]], 
       RowBox[{
        StyleBox["t",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[" ",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[
         RowBox[{"spanner", "[", "2", "]"}],
         FontColor->RGBColor[0, 0, 1]]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "h"}], ",", "h"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "k"}], ",", "k"}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spannerplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"1.3", " ", "h", " ", 
         RowBox[{"spanner", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"1.3", " ", "k", " ", 
         RowBox[{"spanner", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spannerlabels", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<spanner[1]\>\"", ",", 
         RowBox[{"0.9", " ", "h", " ", 
          RowBox[{"spanner", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<spanner[2]\>\"", ",", 
         RowBox[{"0.9", " ", "k", " ", 
          RowBox[{"spanner", "[", "2", "]"}]}]}], "]"}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"planepiece", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"planeplot", ",", "spannerplot", ",", "spannerlabels", ",", 
    RowBox[{"ThreeAxes", "[", "10", "]"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Piece of plane\>\""}]}], 
   "]"}]}]}], "Input"],

Cell["\<\
Folks say that the two specified vectors span the plane because you can get \
to any point on the plane by advancing on a multiple of spanner[1] and then \
advancing on a multiple of spanner[2].
See it happen for some random points on this plane:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "h"}], ",", "h"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"t", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "k"}], ",", "k"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"planepoint", "=", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"spanner", "[", "1", "]"}]}], "+", 
     RowBox[{"t", " ", 
      RowBox[{"spanner", "[", "2", "]"}]}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
       RowBox[{"Point", "[", "planepoint", "]"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointspannerplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"s", " ", 
         RowBox[{"spanner", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"t", " ", 
         RowBox[{"spanner", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"s", " ", 
          RowBox[{"spanner", "[", "1", "]"}]}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"planepiece", ",", "pointplot", ",", "pointspannerplot", ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Piece of plane\>\""}]}], 
  "]"}]}], "Input"],

Cell["Rerun at least seven times.", "Special5",
 Evaluatable->False],

Cell["\<\
Once you see how to make lines and planes with spanning vectors in 3D, you \
can make the jump to working with the analogs of planes and lines in higher \
dimensions. Most folks call these higher dimensional analogs by the name \
\"subspaces.\"\
\>", "Text",
 Evaluatable->False],

Cell["Here are three vectors in 4D:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"3.43", ",", 
      RowBox[{"-", "0.57"}], ",", "8.19", ",", 
      RowBox[{"-", "0.94"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.97", ",", "1.29", ",", "0.83", ",", "5.23"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.14"}], ",", "3.08", ",", 
      RowBox[{"-", "5.00"}], ",", 
      RowBox[{"-", "1.97"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], "Input"],

Cell[TextData[{
 "When folks talk about the subspace of 4D spanned by these three vectors, \
they are talking about the whole collection of all vectors expressible as a \
combination\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"x", "[", "1", "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{"spanner", "[", "1", "]"}]}], "+", 
   RowBox[{
    StyleBox[
     RowBox[{"x", "[", "2", "]"}],
     FontColor->RGBColor[1, 0, 0]], " ", 
    RowBox[{"spanner", "[", "2", "]"}]}], "+", 
   RowBox[{
    StyleBox[
     RowBox[{"x", "[", "3", "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    RowBox[{"spanner", "[", "3", "]"}]}]}]]],
 "\nwhere ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], ",", 
    RowBox[{"x", "[", "2", "]"}], ",", 
    RowBox[{"x", "[", "3", "]"}]}], "}"}]]],
 " range over all real numbers:"
}], "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], 
   RowBox[{"Length", "[", "spanners", "]"}]], 
  RowBox[{
   StyleBox[
    RowBox[{"x", "[", "k", "]"}],
    FontColor->RGBColor[1, 0, 0]], " ", 
   StyleBox[
    RowBox[{"spanner", "[", "k", "]"}],
    FontColor->RGBColor[0, 0, 1]]}]}]}], "Input"],

Cell["Here are some random members of this subspace:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "8"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "x", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "i_", "]"}], ":=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "1"}], 
   RowBox[{"Length", "[", "spanners", "]"}]], 
  RowBox[{
   StyleBox[
    RowBox[{"x", "[", "k", "]"}],
    FontColor->RGBColor[1, 0, 0]], " ", 
   StyleBox[
    RowBox[{"spanner", "[", "k", "]"}],
    FontColor->RGBColor[0, 0, 1]]}]}]}], "Input"],

Cell[TextData[StyleBox["Rerun a couple of times.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell["\<\
What's a good way of describing the vectors in this subspace?\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "The vectors in this subspace of 4D look like this\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], " ", 
    RowBox[{"spanner", "[", "1", "]"}]}], "+", 
   RowBox[{
    RowBox[{"x", "[", "2", "]"}], " ", 
    RowBox[{"spanner", "[", "2", "]"}]}], "+", 
   RowBox[{
    RowBox[{"x", "[", "3", "]"}], " ", 
    RowBox[{"spanner", "[", "3", "]"}]}]}]]],
 ".\nThese can be described as the 4D destinations of all three-stage trips \
made by\n1) going at first on a straight line segment from ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]]],
 " in the direction of ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "1", "]"}]]],
 ", \n2) then stopping and switching directions by going on a straight line \
segment in the direction of",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"spanner", "[", "2", "]"}]}]]],
 ",\n3) then stopping and switching directions by going on a straight line \
segment in the direction of ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "3", "]"}]]],
 ".\nThe size of the coefficients ",
 StyleBox["x[i]",
  FontColor->RGBColor[0, 0, 1]],
 " indicate the length of the trip at the ith stage.  "
}], "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1.a.ii) The spanner matrix for a given spanning set \
{spanner[1],spanner[2], , , ,spanner[n]}\nis ",
 Cell[BoxData[
  RowBox[{"   ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"spanner", "[", "1", "]"}], 
       RowBox[{"spanner", "[", "2", "]"}], "...", 
       RowBox[{"spanner", "[", "n", "]"}]},
      {"\[DownArrow]", "\[DownArrow]", "...", "\[DownArrow]"}
     }], ")"}]}]]],
 ".\nThe subspace spanned by ",
 StyleBox["{spanner[1],spanner[2], , , ,spanner[n]} ",
  FontColor->RGBColor[0, 0, 1]],
 "consists exactly of the vectors that are hits with this matrix"
}], "Subsubsection",
 Evaluatable->False],

Cell["\<\
Stay with the same subspace as in part i) immediately above spanned by the \
vectors: \
\>", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"spanners", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}]}], "}"}]}]], "Input"],

Cell[TextData[{
 "and look at this associated spanner matrix\n            ",
 StyleBox[" SpannerMatrix",
  FontColor->RGBColor[0, 0, 1]],
 "  =",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"spanner", "[", "1", "]"}], 
       RowBox[{"spanner", "[", "2", "]"}], 
       RowBox[{"spanner", "[", "3", "]"}]},
      {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
     }], ")"}]}]]],
 ":"
}], "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["SpannerMatrix",
     FontColor->RGBColor[0, 0, 1]], "=", 
    RowBox[{"Transpose", "[", 
     StyleBox["spanners",
      FontColor->RGBColor[0, 0, 1]], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix", "]"}]}], "Input"],

Cell[TextData[{
 "spanner[",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 "] is in the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " vertical column of SpannerMatrix.\n spanner[",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 "] is in the ",
 StyleBox["second",
  FontColor->RGBColor[0, 0, 1]],
 " vertical column of SpannerMatrix.\nspanner[",
 StyleBox["3",
  FontColor->RGBColor[0, 0, 1]],
 "] is in the ",
 StyleBox["third",
  FontColor->RGBColor[0, 0, 1]],
 " vertical column of SpannerMatrix."
}], "Special5",
 Evaluatable->False],

Cell[CellGroupData[{

Cell[TextData[{
 "How are the vectors in the subspace S of 4D spanned by\n      ",
 StyleBox["spanner[1], spanner[2]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["spanner[3]",
  FontColor->RGBColor[0, 0, 1]],
 " \nrelated to hits with the  associated spanner matrix?"
}], "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 StyleBox["The subspace S of 4D spanned by\n      spanner[1], spanner[2] and \
spanner[3] \n",
  FontWeight->"Bold"],
 StyleBox["consists exactly of the vectors that are hits with the \
SpannerMatrix.",
  FontWeight->"Bold"]
}], "SmallText",
 Evaluatable->False,
 Background->RGBColor[1, 0.889998, 0.00999466]],

Cell[TextData[{
 "Reason:\nHits with SpannerMatrix look like this:\n                  ",
 StyleBox["SpannerMatrix.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["{x[1],x[2],x[3]}",
  FontColor->GrayLevel[0]],
 "  "
}], "SmallText"],

Cell[TextData[{
 "                     =  ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"spanner", "[", "1", "]"}], 
       RowBox[{"spanner", "[", "2", "]"}], 
       RowBox[{"spanner", "[", "3", "]"}]},
      {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
     }], ")"}]}]]],
 ".",
 StyleBox["{x[1],x[2],x[3]}",
  FontColor->GrayLevel[0]]
}], "SmallText"],

Cell[TextData[{
 StyleBox["                     =  x[1] ",
  FontColor->GrayLevel[0]],
 StyleBox["spanner[1]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" + x[2] ",
  FontColor->GrayLevel[0]],
 StyleBox["spanner[2]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" + x[3] ",
  FontColor->GrayLevel[0]],
 StyleBox["spanner[3] ",
  FontColor->RGBColor[0, 0, 1]],
 "\n                   \nwhere x[1], x[2] and x[3] are real numbers."
}], "SmallText"],

Cell[TextData[{
 "The vectors in the subspace of 4D spanned by",
 StyleBox[" spanner[1]",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["spanner[2]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["spanner[3] ",
  FontColor->RGBColor[0, 0, 1]],
 "look like this: ",
 StyleBox[" \n                          x[1] ",
  FontColor->GrayLevel[0]],
 StyleBox["spanner[1]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" + x[2] ",
  FontColor->GrayLevel[0]],
 StyleBox["spanner[2]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" + x[3] ",
  FontColor->GrayLevel[0]],
 StyleBox["spanner[3] ",
  FontColor->RGBColor[0, 0, 1]],
 "\n                   \nwhere x[1], x[2] and x[3] are real numbers."
}], "SmallText"],

Cell["\<\
This is a big break in your favor because the spanner matrix is the key to \
working with subspaces.\
\>", "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.1.b.i) The rank of the spanner matrix is the dimension of the corresponding \
subspace\
\>", "Subsubsection",
 Evaluatable->False],

Cell["Here are five vectors in 5D:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"3.43", ",", 
      RowBox[{"-", "0.57"}], ",", "2.19", ",", 
      RowBox[{"-", "0.94"}], ",", "1.28"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.97", ",", "1.29", ",", "0.83", ",", "5.23", ",", "1.26"}], 
     "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.14"}], ",", "3.08", ",", 
      RowBox[{"-", "5.00"}], ",", 
      RowBox[{"-", "1.97"}], ",", 
      RowBox[{"-", "0.96"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.68"}], ",", "1.22", ",", 
      RowBox[{"-", "3.64"}], ",", 
      RowBox[{"-", "8.14"}], ",", 
      RowBox[{"-", "0.94"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "5", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"2.71", ",", 
      RowBox[{"-", "2.51"}], ",", "2.81", ",", "2.91", ",", 
      RowBox[{"-", "0.32"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], "Input"],

Cell["This matrix hits on 5D and hangs in 5D.", "Special5",
 Evaluatable->False],

Cell["\<\
These vectors span a subspace S of 5D. 
Make the associated spanner matrix for this subspace S:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix", "]"}]}], "Input"],

Cell["\<\
The subspace S is the same as all possible hits with this spanner matrix.
Check the rank of this spanner matrix:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"rank", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", 
     StyleBox["SpannerMatrix",
      FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Why do folks say that because the rank of the SpannerMatrix is ",
 StyleBox["3",
  FontColor->RGBColor[0, 0, 1]],
 ", the dimension of the subspace S is 3? "
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The rank of the spanner matrix is 3. 
This means the Spanner Matrix needs a perpendicular frame
consisting of three 5D mutually perpendicular unit vectors to hang its hits.
Here is one such perpendicular frame:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"k", ",", "hangerframe"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "k"}], "]"}], "]"}]}], ";"}], "  ", "\n"}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"hangerframe", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "rank"}], "}"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "\nAnd because the subspace S is the same as the collection of all possible \
hits with SpannerMatrix, this tells you that everything in ",
 StyleBox["S is framed up with the same three 5D mutually perpendicular unit \
vectors. ",
  FontColor->RGBColor[0, 0, 1]],
 "\nThat's why folks say that the dimension of S is 3."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.c.i) Calculating the dimension of a subspace of 6D", "Subsubsection"],

Cell["\<\
A subspace S of 6D is defined by the following given spanning set:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.829", ",", "1.202", ",", "0.539", ",", 
      RowBox[{"-", "0.925"}], ",", "1.289", ",", 
      RowBox[{"-", "0.397"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
     "0.073", ",", "1.463", ",", "0.312", ",", "1.622", ",", "1.841", ",", 
      "2.916"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
     "0.902", ",", "2.665", ",", "0.851", ",", "0.697", ",", "3.130", ",", 
      "2.519"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"2.335", ",", 
      RowBox[{"-", "1.908"}], ",", "0.925", ",", 
      RowBox[{"-", "1.391"}], ",", 
      RowBox[{"-", "1.820"}], ",", 
      RowBox[{"-", "0.154"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "5", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.390", ",", 
      RowBox[{"-", "4.513"}], ",", "0.0", ",", "1.316", ",", 
      RowBox[{"-", "1.968"}], ",", 
      RowBox[{"-", "0.037"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["Calculate the dimension of S.", "Text"],

Cell["Answer:", "Special1"],

Cell["The spanner matrix is:", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix", "]"}]}], "Input"],

Cell["This matrix hits on 5D and hangs in 6D.", "Special5",
 Evaluatable->False],

Cell["\<\
The dimension of S is the same as the rank of the spanner matrix:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"rank", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", 
     StyleBox["SpannerMatrix",
      FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input"],

Cell["The dimension of S is 4.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.c.ii) A perpendicular frame spanning S", "Subsubsection",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["\<\
Stay with the same four dimensional subspace  S of 6D as in part. i) \
immediately above. 
Exhibit a spanning set for S that consists of 4 mutually perpendicular 6D \
unit vectors.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Just go with the SVD hangerframe for the spanner matrix.", "SmallText"],

Cell[BoxData[
 RowBox[{"hangerframe", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["1",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], " "}]], "Input"],

Cell["Done.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2) Using the ",
 StyleBox["Ytest",
  FontColor->RGBColor[0, 0, 1]],
 " idea to determine whether a given vector is in a given subspace.\nUsing \
the ",
 StyleBox["Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 " matrix to find the vector in a subspace that is closest to a given vector.\
\nUsing the fact that ",
 StyleBox["Sprojection.Y = Ytest",
  FontColor->RGBColor[0, 0, 1]],
 " to build Sprojection as the sum of rank one matrices or through SVD of the \
SpannerMatrix.\nUsing the Sprojection matrix to determine whether a given \
vector is in a subspace.\nUsing the Sprojection matrix to determine whether \
two given subspaces are the same or different"
}], "Subsection",
 CellTags->"MGM.08.B2"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2.a.i) Using",
 StyleBox[" Ytest",
  FontColor->RGBColor[0, 0, 1]],
 " to determine whether a given vector is in a given subspace"
}], "Subsubsection"],

Cell["Here is a spanning set for a subspace S of 4D; ", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"k", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", "0", ",", "2.6", ",", 
      RowBox[{"-", "4.1"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0.3", ",", "1.2", ",", "0.5", ",", "1.3"}], "}"}]}], ";"}], 
  "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], " ", "=", "  ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.6"}], ",", "1.8", ",", 
      RowBox[{"-", "1.2"}], ",", "0.2"}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"spanners", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], "Input"],

Cell["Here are three 4D vectors:", "Text"],

Cell[TextData[{
 "           ",
 StyleBox[" Y1 = {0.76,-0.96,2.2,-5.14}\n            Y2 = \
{0.48,-2.13,0.66,1.66}\n            Y3 = {-0.62,1.38,-0.92,-2.42}",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[CellGroupData[{

Cell["Which of these vectors are in S?", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Make the spanner matrix\n            ",
 StyleBox[" SpannerMatrix",
  FontColor->RGBColor[0, 0, 1]],
 "  =",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{"spanner", "[", "1", "]"}], 
       RowBox[{"spanner", "[", "2", "]"}], 
       RowBox[{"spanner", "[", "3", "]"}]},
      {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
     }], ")"}]}]]],
 ":"
}], "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["SpannerMatrix",
     FontColor->RGBColor[0, 0, 1]], "=", 
    RowBox[{"Transpose", "[", 
     StyleBox["spanners",
      FontColor->RGBColor[0, 0, 1]], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix", "]"}]}], "Input"],

Cell["Calculate the dimension of S:", "SmallText"],

Cell[BoxData[
 RowBox[{"dim", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", 
     StyleBox["SpannerMatrix",
      FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input"],

Cell[TextData[StyleBox["The dimension of S is the same as the rank of the \
SpannerMatrix.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Calculate a hangerframe for SpannerMatrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", 
     StyleBox[
      RowBox[{
       StyleBox["k",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       StyleBox["1",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox[",",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["k",
        FontColor->RGBColor[0, 0, 1]]}], "]"}], "]"}]}], " ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"hangerframe", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "Because S consists exactly of all hits with the SpannerMatrix, saying that \
a 4D vector Y is in S is the same as saying that the linear system\n          \
    ",
 StyleBox["SpannerMatrix.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["X",
  FontColor->GrayLevel[0]],
 StyleBox[" = Y",
  FontColor->RGBColor[0, 0, 1]],
 " \nhas a solution for X.\nConsequently, saying that Y is in S is the same \
as saying that Y is the same as"
}], "SmallText"],

Cell[TextData[{
 "      ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"Ytest", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "rank"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Y", ".", 
        StyleBox[
         RowBox[{"hangerframe", "[", "k", "]"}],
         FontColor->RGBColor[0.0299992, 0.179995, 0.329992]]}], ")"}], " ", 
      RowBox[{"hangerframe", "[", "k", "]"}]}]}]}],
   FontSize->16]],
  FontSize->12],
 " =",
 " ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], 
    StyleBox["dim",
     FontColor->RGBColor[1, 0, 0]]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y", ".", 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0.0299992, 0.179995, 0.329992]]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 "  "
}], "SmallText"],

Cell["Try it out for Y1:", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Y", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]]}]], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0.76", ",", 
    RowBox[{"-", "0.96"}], ",", "2.2", ",", 
    RowBox[{"-", "5.14"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Y", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]], "test"}]], " ", "=", " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], 
    StyleBox["dim",
     FontColor->RGBColor[1, 0, 0]]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox[
       RowBox[{"Y", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]]}]], ".", 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0.0299992, 0.179995, 0.329992]]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}], " "}]}]}]], "Input"],

Cell[TextData[{
 "The call:\n        Y",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 " is in S because ",
 StyleBox["Y1test ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" Y1.",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell["Try it out for Y2:", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Y", 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]]}]], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0.48", ",", 
    RowBox[{"-", "2.13"}], ",", "0.66", ",", "1.66"}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Y", 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]], "test"}]], " ", "=", " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], 
    StyleBox["dim",
     FontColor->RGBColor[1, 0, 0]]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox[
       RowBox[{"Y", 
        StyleBox["2",
         FontColor->RGBColor[0, 0, 1]]}]], ".", 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0.0299992, 0.179995, 0.329992]]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}], " "}]}]}]], "Input"],

Cell[TextData[{
 "The call:\n        Y",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 " is ",
 StyleBox["not",
  FontWeight->"Bold"],
 " in S because ",
 StyleBox["Y2test ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[NotEqual]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" Y2.",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell["Try it out for Y3:", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Y", 
    StyleBox["3",
     FontColor->RGBColor[0, 0, 1]]}]], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.62"}], ",", "1.38", ",", 
    RowBox[{"-", "0.92"}], ",", 
    RowBox[{"-", "2.42"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Y", 
    StyleBox["3",
     FontColor->RGBColor[0, 0, 1]], "test"}]], " ", "=", " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], 
    StyleBox["dim",
     FontColor->RGBColor[1, 0, 0]]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox[
       RowBox[{"Y", 
        StyleBox["3",
         FontColor->RGBColor[0, 0, 1]]}]], ".", 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0.0299992, 0.179995, 0.329992]]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}], " "}]}]}]], "Input"],

Cell[TextData[{
 "The call:\n        Y",
 StyleBox["3",
  FontColor->RGBColor[0, 0, 1]],
 " is in S because ",
 StyleBox["Y3test ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" Y3.",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2.a.ii) Using a hit with ",
 StyleBox["Sprojection = SpannerMatrix ",
  FontColor->RGBColor[0, 0, 1]],
 ". ",
 StyleBox["PseudoInverse[SpannerMatrix]",
  FontColor->RGBColor[0, 0, 1]],
 " to get as close as you can get "
}], "Subsubsection"],

Cell[TextData[{
 "Here's a spanning set for a random subspace ",
 Cell[BoxData["S"]],
 " of 5D:"
}], "Text"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"k", ",", "spanner"}], "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "1", "]"}], " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "2", "]"}], " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "3", "]"}], " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "4", "]"}], " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], " ", "\n",
    "\[IndentingNewLine]", 
   RowBox[{"spanners", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]}]], "Input"],

Cell["Here is a random 5D vector:", "Text"],

Cell[BoxData[
 RowBox[{"Y", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "7"}], ",", "7"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Come up with a matrix Sprojection so that \n        ",
 StyleBox["Sprojection.Y",
  FontColor->RGBColor[0, 0, 1]],
 " is the member of S that is ",
 StyleBox["closest ",
  FontColor->RGBColor[0, 0, 1]],
 "to Y."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Just do this:", "SmallText"],

Cell[TextData[{
 "Make the spanner matrix\n            ",
 StyleBox[" SpannerMatrix",
  FontColor->RGBColor[0, 0, 1]],
 "  =",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", 
    RowBox[{GridBox[{
       {
        RowBox[{"spanner", "[", "1", "]"}], 
        RowBox[{"spanner", "[", "2", "]"}], 
        RowBox[{"spanner", "[", "3", "]"}]},
       {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
      }], "    ", GridBox[{
       {
        RowBox[{"spanner", "[", "4", "]"}]},
       {"\[DownArrow]"}
      }]}], ")"}]}]]],
 ":"
}], "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["SpannerMatrix",
     FontColor->RGBColor[0, 0, 1]], "=", 
    RowBox[{"Transpose", "[", 
     StyleBox["spanners",
      FontColor->RGBColor[0, 0, 1]], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix", "]"}]}], "Input"],

Cell["Define the Sprojection matrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", " ", "=", 
    RowBox[{
     StyleBox["SpannerMatrix",
      FontColor->RGBColor[1, 0, 0]], ".", 
     RowBox[{"PseudoInverse", "[", 
      StyleBox["SpannerMatrix",
       FontColor->RGBColor[1, 0, 0]], "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Sprojection", "]"}]}], "Input"],

Cell["The member of S closest to Y is:", "SmallText"],

Cell[BoxData[
 RowBox[{"Sprojection", ".", "Y"}]], "Input"],

Cell[TextData[{
 "Reason: \nWhen you go with any matrix A, then\n         ",
 Cell[BoxData[
  RowBox[{
   StyleBox["A",
    FontColor->RGBColor[1, 0, 0]], ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"PseudoInverse", "[", 
      StyleBox["A",
       FontColor->RGBColor[1, 0, 0]], "]"}], ".", "Y"}], ")"}]}]]],
 "\nis as close as you can get to Y with a hit with ",
 Cell[BoxData["A"]],
 ".\nSo when you have a spanning set for a subspace S of kD and make the \
corresponding SpannerMatrix, you know that for any Y in kD\n         ",
 Cell[BoxData[
  RowBox[{
   StyleBox["SpannerMatrix",
    FontColor->RGBColor[1, 0, 0]], ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"PseudoInverse", "[", 
      StyleBox["SpannerMatrix",
       FontColor->RGBColor[1, 0, 0]], "]"}], ".", "Y"}], ")"}]}]]],
 "\nis as close as you can get to Y with a hit with ",
 Cell[BoxData["SpannerMatrix"]],
 ". \nAnd because S consists precisely of all possible hits with \
SpannerMatrix, it is guaranteed that for any kD Y, \n       Sprojection.",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " =  ",
 Cell[BoxData[
  RowBox[{
   StyleBox["SpannerMatrix",
    FontColor->RGBColor[1, 0, 0]], ".", 
   RowBox[{"PseudoInverse", "[", 
    StyleBox["SpannerMatrix",
     FontColor->RGBColor[1, 0, 0]], "]"}], ".", "Y"}]]],
 "\nis the member of S closest to Y."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2.a.iii)   ",
 StyleBox["Sprojection.Y = Ytest",
  FontColor->RGBColor[0, 0, 1]],
 ",  so ",
 StyleBox["Ytest",
  FontColor->RGBColor[0, 0, 1]],
 " is as close as you can get to Y."
}], "Subsubsection"],

Cell[TextData[{
 "Here's a spanning set for a random subspace ",
 Cell[BoxData["S"]],
 " of 6D:"
}], "Text"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"k", ",", "spanner"}], "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "1", "]"}], " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "2", "]"}], " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "3", "]"}], " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "4", "]"}], " ", "=", "  ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], " ", "\n",
    "\[IndentingNewLine]", 
   RowBox[{"spanners", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]}]], "Input"],

Cell["Here is a random 6D vector:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "y", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Y", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}]}]}], "Input"],

Cell["The vector in S closest to Y is:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["SpannerMatrix",
     FontColor->RGBColor[0, 0, 1]], "=", 
    RowBox[{"Transpose", "[", 
     StyleBox["spanners",
      FontColor->RGBColor[0, 0, 1]], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", " ", "=", 
    RowBox[{
     StyleBox["SpannerMatrix",
      FontColor->RGBColor[1, 0, 0]], ".", 
     RowBox[{"PseudoInverse", "[", 
      StyleBox["SpannerMatrix",
       FontColor->RGBColor[1, 0, 0]], "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{"closest", " ", "=", " ", 
  RowBox[{"Sprojection", ".", "Y"}]}]}], "Input"],

Cell["Now look at this:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", 
       StyleBox["SpannerMatrix",
        FontColor->RGBColor[0, 0, 1]], "]"}], "\[LeftDoubleBracket]", 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], "]"}]}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", 
     StyleBox[
      RowBox[{
       StyleBox["k",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       StyleBox["1",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox[",",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["k",
        FontColor->RGBColor[0, 0, 1]]}], "]"}], "]"}]}], " ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Ytest", " ", "=", " ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], 
    StyleBox["dim",
     FontColor->RGBColor[1, 0, 0]]], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y", ".", 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0.0299992, 0.179995, 0.329992]]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Ytest",
  FontColor->RGBColor[0, 0, 1]],
 "  came out to be equal to the vector in S closest to ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 ".\nIs this some sort of accident? \nIf not explain why it is not an \
accident."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Criminee.", "SmallText"],

Cell[TextData[StyleBox["In mathematics, there are no accidents.",
 FontColor->RGBColor[1, 0, 0]]], "Title"],

Cell["\<\
To explain why it is not an accident and will happen every time, remember\
\>", "SmallText"],

Cell[TextData[Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"          ", 
    StyleBox[" ",
     FontSize->16]}]], 
  RowBox[{
   RowBox[{
    RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}], ".", 
    StyleBox["Y",
     FontColor->GrayLevel[0]]}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "dim"], 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{
        StyleBox["Y",
         FontColor->GrayLevel[0]], ".", 
        RowBox[{"hangerframe", "[", "k", "]"}]}], 
       StyleBox[
        RowBox[{"stretch", "[", "k", "]"}],
        FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
     RowBox[{"alignerframe", "[", "k", "]"}]}]}]}]}]]]], "SmallText"],

Cell[TextData[{
 "where ",
 StyleBox["stretch[k]",
  FontColor->RGBColor[1, 0, 1]],
 ", ",
 StyleBox["hangerframe[k]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["alignerframe[k]",
  FontColor->RGBColor[0, 0, 1]],
 " come from SVD analysis of SpannerMatrix so that\n                 \
SpannerMatrix",
 StyleBox[".alignerframe[k]",
  FontColor->RGBColor[0, 0, 1]],
 " =",
 StyleBox[" stretch[k] ",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["hangerframe[k].\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Now rock on:\n             ",
  FontColor->GrayLevel[0]],
 StyleBox[" Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".Y \n                       = SpannerMatrix.",
  FontColor->GrayLevel[0]],
 StyleBox["PseudoInverse[SpannerMatrix]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".Y",
  FontColor->GrayLevel[0]]
}], "SmallText"],

Cell[TextData[{
 "                      =   SpannerMatrix. ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "dim"], 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{"Y", ".", 
       RowBox[{"hangerframe", "[", "k", "]"}]}], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
    RowBox[{"alignerframe", "[", "k", "]"}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "                      =  . ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "dim"], 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{"Y", ".", 
       RowBox[{"hangerframe", "[", "k", "]"}]}], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
    RowBox[{
     StyleBox["SpannerMatrix",
      FontColor->GrayLevel[0]], ".", 
     RowBox[{"alignerframe", "[", "k", "]"}]}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "                      =  . ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "dim"], 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{"Y", ".", 
       RowBox[{"hangerframe", "[", "k", "]"}]}], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
    StyleBox[
     RowBox[{"stretch", "[", "k", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "                      =  . ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "dim"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y", ".", 
      RowBox[{"hangerframe", "[", "k", "]"}]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "                      =  .",
 StyleBox[" Ytest.\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["That's it.",
  FontColor->GrayLevel[0]]
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2.a.iv) Using the fact that ",
 StyleBox["Sprojection.Y = Ytest",
  FontColor->RGBColor[0, 0, 1]],
 " to build Sprojection as the sum of ",
 StyleBox["rank one",
  FontColor->RGBColor[0, 0, 1]],
 " matrices"
}], "Subsubsection"],

Cell[TextData[{
 "Here's a spanning set for a a subspace  ",
 Cell[BoxData["S"]],
 " of 6D:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"k", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.36"}], ",", 
      RowBox[{"-", "1.77"}], ",", 
      RowBox[{"-", "1.55"}], ",", "1.24", ",", "0.26", ",", 
      RowBox[{"-", "0.57"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], " ", "=", "  ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.76"}], ",", 
      RowBox[{"-", "1.34"}], ",", "1.39", ",", "0.73", ",", "1.85", ",", 
      "0.87"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], " ", "=", "  ", 
    RowBox[{"{", 
     RowBox[{"1.41", ",", "0.40", ",", "1.94", ",", 
      RowBox[{"-", "1.48"}], ",", "1.52`", ",", "1.57"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"3.16", ",", "0.91", ",", 
      RowBox[{"-", "4.33"}], ",", 
      RowBox[{"-", "0.22"}], ",", 
      RowBox[{"-", "3.44"}], ",", 
      RowBox[{"-", "2.31"}]}], "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "5", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0.21", ",", 
      RowBox[{"-", "1.32"}], ",", 
      RowBox[{"-", "1.77"}], ",", 
      RowBox[{"-", "1.39"}], ",", "0.67", ",", 
      RowBox[{"-", "0.29"}]}], "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "6", "]"}], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.73"}], ",", 
      RowBox[{"-", "1.36"}], ",", "4.55", ",", "2.85", ",", "3.03", ",", 
      "2.03"}], "}"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"spanners", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}]}]}], "Input"],

Cell["The Sprojection matrix for this subspace is:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], 
  StyleBox[
   RowBox[{" ", 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", " ", "=", " ", 
    RowBox[{
     StyleBox["SpannerMatrix",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox[
      RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Sprojection", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Build this matrix as the sum of well-chosen rank one matrices.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["In part iii) immediately above, you saw that", "SmallText"],

Cell[TextData[{
 "                  ",
 StyleBox["Sprojection.Y",
  FontColor->RGBColor[0, 0, 1]],
 "    =  . ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "dim"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y", ".", 
      RowBox[{"hangerframe", "[", "k", "]"}]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 "."
}], "SmallText"],

Cell["\<\
This tells you how to make rank one matrices whose sum is Sprojection.
Just do this:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["dim",
     FontColor->RGBColor[0, 0, 1]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "rankOne"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", 
      StyleBox["SpannerMatrix",
       FontColor->RGBColor[0, 0, 1]], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       StyleBox["1",
        FontColor->RGBColor[1, 0, 0]], ",", "k"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"rankOne", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"hangerframe", "[", "k", "]"}],
        FontColor->RGBColor[0, 0, 1]], "}"}], "]"}], ".", 
     RowBox[{"{", 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0, 0, 1]], "}"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sum", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["dim",
       FontColor->RGBColor[0, 0, 1]]], 
     StyleBox[
      RowBox[{"rankOne", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "sum", "]"}]}], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "Sprojection", "]"}]], "Input"],

Cell["\<\
Nailed it clean.
This will work every time because\
\>", "SmallText"],

Cell[TextData[{
 "                  ",
 StyleBox["Sprojection.Y",
  FontColor->RGBColor[0, 0, 1]],
 "    =  . ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "dim"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y", ".", 
      RowBox[{"hangerframe", "[", "k", "]"}]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.2.a.v) Building Sprojection directly from the SVD hanger frames of the \
SpannerMatrix\
\>", "Subsubsection"],

Cell[TextData[{
 "Here's a spanning set for a a subspace  ",
 Cell[BoxData["S"]],
 " of 6D:"
}], "Text"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"k", ",", "spanner"}], "]"}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "1", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.36"}], ",", 
       RowBox[{"-", "1.77"}], ",", 
       RowBox[{"-", "1.55"}], ",", "1.24", ",", "0.26", ",", 
       RowBox[{"-", "0.57"}]}], "}"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "2", "]"}], " ", "=", "  ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1.76"}], ",", 
       RowBox[{"-", "1.34"}], ",", "1.39", ",", "0.73", ",", "1.85", ",", 
       "0.87"}], "}"}]}], ";"}], " ", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "3", "]"}], " ", "=", "  ", 
     RowBox[{"{", 
      RowBox[{"1.41", ",", "0.40", ",", "1.94", ",", 
       RowBox[{"-", "1.48"}], ",", "1.52", ",", "1.57"}], "}"}]}], ";"}], " ",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "4", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"3.16", ",", "0.91", ",", 
       RowBox[{"-", "4.33"}], ",", 
       RowBox[{"-", "0.22"}], ",", 
       RowBox[{"-", "3.44"}], ",", 
       RowBox[{"-", "2.31"}]}], "}"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "5", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"0.21", ",", 
       RowBox[{"-", "1.32"}], ",", 
       RowBox[{"-", "1.77"}], ",", 
       RowBox[{"-", "1.39"}], ",", "0.67", ",", 
       RowBox[{"-", "0.29"}]}], "}"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"spanner", "[", "6", "]"}], " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "3.73"}], ",", 
       RowBox[{"-", "1.36"}], ",", "4.55", ",", "2.85", ",", "3.03", ",", 
       "2.03"}], "}"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"spanners", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}]}]}]}]], "Input"],

Cell["The Sprojection matrix for this subspace is:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], 
  StyleBox[
   RowBox[{" ", 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]]}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", " ", "=", " ", 
    RowBox[{
     StyleBox["SpannerMatrix",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox[
      RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Sprojection", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Build this matrix directly from the SVD of the SpannerMatrix.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["In part iii) immediately above, you saw that", "SmallText"],

Cell[TextData[{
 "                  ",
 StyleBox["Sprojection.Y",
  FontColor->RGBColor[0, 0, 1]],
 "    =  . ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "dim"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y", ".", 
      RowBox[{"hangerframe", "[", "k", "]"}]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 "."
}], "SmallText"],

Cell["\<\
This tells you how to make Sprojection directly from the SVD hangerframe of \
the Spanner Matrix
You go with the SVD hangerframe for both the alignerframe and the hangerframe \
of Sprojection with all stretch factors equal to 1.\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["dim",
     FontColor->RGBColor[0, 0, 1]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hangerframe", ",", "rankOne"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", " ", "=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", 
      StyleBox["SpannerMatrix",
       FontColor->RGBColor[0, 0, 1]], "]"}], "[", 
     RowBox[{"[", 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"IdentityMatrix", "[", "dim", "]"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hanger", " ", "=", " ", 
    RowBox[{"Transpose", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", 
       StyleBox["SpannerMatrix",
        FontColor->RGBColor[0, 0, 1]], "]"}], "[", 
      RowBox[{"[", 
       StyleBox["1",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", " ", "=", 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Sprojection", "]"}]}], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["SpannerMatrix",
    FontColor->RGBColor[0, 0, 1]], ".", 
   StyleBox[
    RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}],
    FontColor->RGBColor[0, 0, 1]]}], "]"}]], "Input"],

Cell["\<\
Nailed it clean.
This will work every time because\
\>", "SmallText"],

Cell[TextData[{
 "                  ",
 StyleBox["Sprojection.Y",
  FontColor->RGBColor[0, 0, 1]],
 "    =  . ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "dim"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y", ".", 
      RowBox[{"hangerframe", "[", "k", "]"}]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.2.b)  Using the Sprojection matrix to determine whether a given vector is \
in a given subspace\
\>", "Subsubsection",
 Evaluatable->False],

Cell["Here is a spanning set for a subspace S of 5D:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"k", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.4"}], ",", "1.5", ",", "2.9", ",", "0.6", ",", 
      RowBox[{"-", "2.4"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], " ", "=", "  ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.7"}], ",", "0.0", ",", "2.9", ",", "0.0", ",", 
      RowBox[{"-", "3.6"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", "1.0", ",", "0.0", ",", "0.4", ",", "0.8"}], "}"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.3"}], ",", "1.7", ",", 
      RowBox[{"-", "2.1"}], ",", 
      RowBox[{"-", "0.7"}], ",", "0.1"}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spanners", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}]}], "Input"],

Cell["Here are two 5D vectors:", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"X", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "5.08"}], ",", " ", "4.15", ",", "6.89", ",", "0.28", ",", 
    RowBox[{"-", "9.1"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Y", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "5.57"}], ",", " ", "4.15", ",", "6.89", ",", "0.28", ",", 
    RowBox[{"-", "9.1"}]}], "}"}], "  "}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
One of these vectors is in S. 
The other is not. 
Your job is to determine which one is in S and which one is not.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Go directly to the spanner matrix for S:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix", "]"}]}], "Input"],

Cell["Calculate Sprojection matrix", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", "=", 
    RowBox[{"SpannerMatrix", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "Sprojection", "]"}]}], "Input"],

Cell["The  first given vector is:", "SmallText"],

Cell[BoxData["X"], "Input"],

Cell[TextData[{
 "The vector in S that is closest to ",
 Cell[BoxData["X"]],
 " is:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Sprojection", ".", "X"}]], "Input"],

Cell[TextData[{
 "The result:\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Sprojection", ".", "X"}], "=", "X"}]]],
 "\nThe vector in S that is closest to X is X itself.\nThis tells you that X \
is in S.\n\nThe  second given vector is:"
}], "SmallText"],

Cell[BoxData["Y"], "Input"],

Cell[TextData[{
 "The vector in S that is closest to ",
 Cell[BoxData["Y"]],
 " is:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Sprojection", ".", "Y"}]], "Input"],

Cell[TextData[{
 "Close, but no cigar.\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Sprojection", ".", "Y"}], "   ", "\[NotEqual]", "  ", "Y"}]]],
 "\nThe vector in S that is closest to Y is not the same as Y.\nThis tells \
you that Y is NOT in S."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.c.i)  Different spanning sets for the same subspace", \
"Subsubsection",
 Evaluatable->False],

Cell["\<\
Here's a set of spanning vectors which define a subspace S1 of 5D:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner1"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"3.43", ",", 
      RowBox[{"-", "0.57"}], ",", "8.19", ",", 
      RowBox[{"-", "0.94"}], ",", "0.48"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.97", ",", "1.29", ",", "0.83", ",", "5.23", ",", 
      RowBox[{"-", "2.31"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.14"}], ",", "3.08", ",", 
      RowBox[{"-", "5.00"}], ",", 
      RowBox[{"-", "1.97"}], ",", "0.78"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner1", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], "Input"],

Cell["\<\
Here's a another set of spanning vectors which define a subspace S2 of 5D:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner2"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"4.40", ",", "0.72", ",", "9.02", ",", "4.29", ",", 
      RowBox[{"-", "1.83"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5.17"}], ",", "4.37", ",", 
      RowBox[{"-", "4.17"}], ",", "3.26", ",", 
      RowBox[{"-", "1.53"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5.17"}], ",", "4.37", ",", 
      RowBox[{"-", "4.17"}], ",", "3.26", ",", 
      RowBox[{"-", "1.53"}]}], "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "4", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1.94", ",", "2.58", ",", "1.66", ",", "10.46", ",", 
      RowBox[{"-", "4.62"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner2", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "\n"}], "Input"],

Cell[CellGroupData[{

Cell["\<\
At first glance, it would appear that S1 and S2 are in fact different \
subspaces of 5D.
Is this true?\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Subsubsection",
 Evaluatable->False],

Cell["Go directly to the spanner matrices for each subspace.", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix1", "=", 
    RowBox[{"Transpose", "[", "spanners1", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "SpannerMatrix1", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix2", "=", 
    RowBox[{"Transpose", "[", "spanners2", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix2", "]"}]}], "Input"],

Cell["\<\
Calculate the  S1projection matrix and the S2projection matrix and look at \
them:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"S1projection", "=", 
    RowBox[{"SpannerMatrix1", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix1", "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "S1projection", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"S2projection", "=", 
    RowBox[{"SpannerMatrix2", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix2", "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "S2projection", "]"}]}], "Input"],

Cell[TextData[{
 "The result:\n             ",
 Cell[BoxData[
  RowBox[{"S1projection", "=", "S2projection"}]]],
 "\nThe call::\n",
 StyleBox["The two subspaces are the same",
  FontWeight->"Bold"],
 ".\nReason: \n        Saying a vector",
 StyleBox[" Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in S1 is the same as saying ",
 StyleBox["S1projection.Y",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 ".\n        Saying a vector",
 StyleBox[" Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in S2 is the same as saying",
 StyleBox[" S2projection.Y = Y.",
  FontColor->RGBColor[0, 0, 1]],
 "\n        And because \n                    S1projection = S2projection,\n  \
     saying that a vector Y is in S1 is the same as saying Y is in S2."
}], "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.c.ii)  Different spanning sets for different subspaces", \
"Subsubsection",
 Evaluatable->False],

Cell["\<\
Here's a set of spanning vectors which define a subspace S1 of 6D:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner1"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"3.43", ",", 
      RowBox[{"-", "0.57"}], ",", "8.19", ",", 
      RowBox[{"-", "0.94"}], ",", "0.48", ",", "0.78"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.97", ",", "1.29", ",", "0.83", ",", "5.23", ",", 
      RowBox[{"-", "2.31"}], ",", "7.80"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.14"}], ",", "3.08", ",", 
      RowBox[{"-", "5.00"}], ",", 
      RowBox[{"-", "1.97"}], ",", "0.78", ",", "0.85"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.0", ",", 
      RowBox[{"-", "1.00"}], ",", "0.0", ",", 
      RowBox[{"-", "2.97"}], ",", "0.69", ",", "1.75"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"spanners1", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner1", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "Input"],

Cell["\<\
Here's a another set of spanning vectors which define a subspace S2 of 6D:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner2"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.39", ",", 
      RowBox[{"-", "0.49"}], ",", 
      RowBox[{"-", "2.96"}], ",", 
      RowBox[{"-", "4.13"}], ",", "0.74", ",", "4.19"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.68"}], ",", "1.23", ",", "0.62", ",", "5.09", ",", 
      "2.06", ",", 
      RowBox[{"-", "2.37"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.16", ",", "1.18", ",", "1.20", ",", 
      RowBox[{"-", "1.30"}], ",", "2.42", ",", "2.85"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
     "0.48", ",", "2.41", ",", "1.82", ",", "3.79", ",", "4.48", ",", 
      "0.48"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners2", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner2", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["Are these two subspaces the same?", "Text",
 Evaluatable->False],

Cell["Answer:", "Subsubsection",
 Evaluatable->False],

Cell["Go directly to the spanner matrices for each subspace.", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix1", "=", 
    RowBox[{"Transpose", "[", "spanners1", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "SpannerMatrix1", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix2", "=", 
    RowBox[{"Transpose", "[", "spanners2", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix2", "]"}]}], "Input"],

Cell["\<\
Calculate the  S1projection matrix and the S2projection matrix and look at \
them:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"S1projection", "=", 
    RowBox[{"SpannerMatrix1", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix1", "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "S1projection", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"S2projection", "=", 
    RowBox[{"SpannerMatrix2", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix2", "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "S2projection", "]"}]}], "Input"],

Cell[TextData[{
 "The result:\n             ",
 Cell[BoxData[
  RowBox[{"S1projection", " ", "\[NotEqual]", " ", "S2projection"}]]],
 "\nThe call:\n",
 StyleBox["The two subspaces are the not same.\n",
  FontWeight->"Bold"],
 "Reason: \n        Saying a vector",
 StyleBox[" Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in S1 is the same as saying ",
 StyleBox["S1projection.Y",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 ".\n        Saying a vector",
 StyleBox[" Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in S2 is the same as saying",
 StyleBox[" S2projection.Y = Y.",
  FontColor->RGBColor[0, 0, 1]],
 "\n        And because \n                    S1projection \[NotEqual] \
S2projection,\n       saying that a vector Y is in S1 is not the same as \
saying Y is in S2."
}], "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3)  Linear independence and dimension:\nSaying that a  spanning set \
{spanner[1], spanner[2],  . . . , spanner[",
 StyleBox["k",
  FontColor->RGBColor[0, 0, 1]],
 "]} for a subspace S of nD is ",
 StyleBox["linearly independent",
  FontColor->RGBColor[0, 0, 1]],
 " is the same as saying the dimension of S is ",
 StyleBox["k",
  FontColor->RGBColor[0, 0, 1]],
 ".\nRedundant spanning sets and linear dependence"
}], "Subsection",
 CellTags->"MGM.08.B3"],

Cell[TextData[{
 "Most folks like to say:\nA given spanning set for a subspace S is linearly ",
 StyleBox["independent",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "if the dimension of S is the ",
 StyleBox["same",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "as the number of vectors in the given spanning set.\n\nA given spanning set \
for a subspace S is linearly ",
 StyleBox["dependent",
  FontWeight->"Bold",
  FontColor->RGBColor[0.889998, 0.209995, 0.219989]],
 " if the dimension of S is",
 StyleBox[" less",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "than the number of vectors in the given spanning set.\n                     \
              "
}], "Text",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["B.3.a.i) A linearly independent set in 6D", "Subsubsection",
 Evaluatable->False],

Cell["Here is a spanning set for a subspace S of 6D:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"spanner", ",", "i"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", 
      RowBox[{"-", "2.3"}], ",", "5.0", ",", "6.7", ",", 
      RowBox[{"-", "4.9"}], ",", 
      RowBox[{"-", "2.0"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.3", ",", "2.3", ",", 
      RowBox[{"-", "4.6"}], ",", 
      RowBox[{"-", "1.7"}], ",", "5.8", ",", "0.0"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", "7.1", ",", "5.0", ",", "3.7", ",", "0.9", ",", 
      RowBox[{"-", "2.0"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Determine whether this spanning set is linearly independent or linearly \
dependent.\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
The spanner matrix for the subspace spanned by the given spanning set is:\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix", "]"}]}], "Input"],

Cell["\<\
The dimension of the subspace spanned by these vectors is the rank of \
SpannerMatrix:\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"rank", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], 
    "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input"],

Cell["The number of vectors in this given spanning set is:", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"Length", "[", "spanners", "]"}]], "Input"],

Cell[TextData[{
 "The result: The dimension of the subspace spanned by this spanning set is \
the same as the number of vectors in the given spanning set. \nThe call:\n\
This spanning set is ",
 StyleBox["LINEARLY INDEPENDENT",
  FontWeight->"Bold"],
 "."
}], "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3.a.ii) A linearly dependent set in 7D", "Subsubsection",
 Evaluatable->False],

Cell["Here is a spanning set of made with four vectors in 7D:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"spanner", ",", "i"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", 
      RowBox[{"-", "2.3"}], ",", "5.0", ",", "6.7", ",", 
      RowBox[{"-", "4.9"}], ",", 
      RowBox[{"-", "2.0"}], ",", 
      RowBox[{"-", "2.3"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.3", ",", "2.3", ",", 
      RowBox[{"-", "4.6"}], ",", 
      RowBox[{"-", "1.7"}], ",", "5.8", ",", "0.0", ",", "3.5"}], "}"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.0", ",", "7.1", ",", "5.0", ",", "3.7", ",", "0.9", ",", 
      RowBox[{"-", "2.0"}], ",", "4.9"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.6", ",", "11.7", ",", 
      RowBox[{"-", "4.2"}], ",", "0.3", ",", "12.5", ",", 
      RowBox[{"-", "2.0"}], ",", "11.9"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Determine whether this spanning set is linearly independent or linearly \
dependent.\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
The spanner matrix for the subspace spanned by the given spanning set is:\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "SpannerMatrix", "]"}]}], "Input"],

Cell["\<\
The dimension of the subspace spanned by these vectors is the rank of \
SpannerMatrix:\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"rank", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], 
    "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input"],

Cell["The number of vectors in this given spanning set is:", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"Length", "[", "spanners", "]"}]], "Input"],

Cell[TextData[{
 "The result: The dimension of the subspace spanned by this spanning set is \
less than the number of vectors in the given spanning set. \nThe call:\nThis \
spanning set is ",
 StyleBox["LINEARLY DEPENDENT",
  FontWeight->"Bold"],
 "."
}], "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.3.a.iii) A set of four 3D vectors cannot be linearly independent\
\>", "Subsubsection",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["\<\
You are given a set of four vectors in 3D. 
How do you know in advance that the given set of four given vectors is \
linearly dependent?\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "If the four vectors are linearly independent, then they span an ",
 StyleBox["four",
  FontColor->RGBColor[0, 0, 1]],
 " dimensional subspace of 3D.\nBut 3D can accommodate at most 3 dimensions \
and this rules out the possibility of any four dimensional subspace of 3D.  "
}], "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.3.a.iv)  A set of twelve 8D vectors cannot be linearly independent\
\>", "Subsubsection",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["\<\
You are given a set of 12 vectors in 8D. 
How do you know in advance that the given set of 12 given vectors is linearly \
dependent?\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
If the 12 vectors are linearly independent, then they span an 12  dimensional \
subspace of 8D.
But 8D can accommodate at most 8 dimensions and this rules out the \
possibility of any 12 dimensional subspace of 8D.  \
\>", "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.3.b.i) Finding redundant vectors  in linearly dependent sets\
\>", "Subsubsection"],

Cell["Here's a spanning set for a subspace S of 5D:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.43", ",", "2.57", ",", "6.19", ",", 
      RowBox[{"-", "3.94"}], ",", "0.0"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.95", ",", "1.50", ",", "1.85", ",", "1.20", ",", "0.50"}], 
     "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.67", ",", "1.37", ",", "4.71", ",", 
      RowBox[{"-", "4.9"}], ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"2.1", ",", "3.94", ",", "10.9", ",", 
      RowBox[{"-", "8.84"}], ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "5", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.10", ",", "2.00", ",", 
      RowBox[{"-", "2.1"}], ",", 
      RowBox[{"-", "1.90"}], ",", "0.46"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], "Input"],

Cell["When you look at:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "[", "SpannerMatrix", "]"}], ";"}], " "}], "\n", 
 RowBox[{"Sdim", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], 
    "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[0.859998, 0.149996, 0.269993]], 
    "\[RightDoubleBracket]"}], "]"}]}]}], "Input"],

Cell["And:", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"Length", "[", "spanners", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "You see:\nThe original spanning set is linearly dependent.\n\nAnd after a \
little more thought, you realize the",
 StyleBox[" 5 - 3 = 2 ",
  FontColor->RGBColor[0, 0, 1]],
 "of the given spanners are redundant in the sense when you throw them out of \
the spanning set, the resulting spanning set still spans the same subspace S.\
\nFind the redundant vectors in the given spanning set."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["To identify the redundant spanners, look at", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"spanners12", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"spanner", "[", "1", "]"}], ",", 
       RowBox[{"spanner", "[", "2", "]"}]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix12", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners12", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix12", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"S12dim", " ", "=", " ", "rank"}]}], "Input"],

Cell[TextData[{
 "This tells you that ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}]}], "}"}]]],
 " span a two dimensional subspace ",
 Cell[BoxData["S12"]],
 " of 5D.\nThe call:  Neither spanner[1] nor spanner[2] are redundant.\nNow \
look at:"
}], "SmallText"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"spanners123", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"spanner", "[", "1", "]"}], ",", 
       RowBox[{"spanner", "[", "2", "]"}], ",", 
       RowBox[{"spanner", "[", "3", "]"}]}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix123", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners123", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix123", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"S123dim", " ", "=", " ", "rank"}]}], "Input"],

Cell[TextData[{
 "The upshot: Including spanner[3] does not raise the dimension.\n\nSo ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "3", "]"}]]],
 " belongs to the subspace S12 spanned by  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"spanner", "[", "1", "]"}], ",", 
     RowBox[{"spanner", "[", "2", "]"}]}], "}"}], "."}]]],
 " \nThe call:  ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "3", "]"}]]],
 " is redundant."
}], "SmallText"],

Cell["\<\
This means it is possible express spanner[3] in terms of spanner[1] and \
spanner[2] 
  via
\t\t spanner[3] = x[1] spanner[1] + x2[spanner[2] 
\t\t\t\tfor some choice of numbers x[1] and x[2].\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Now look at:", "SmallText"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"spanners1234", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"spanner", "[", "1", "]"}], ",", 
       RowBox[{"spanner", "[", "2", "]"}], ",", 
       RowBox[{"spanner", "[", "3", "]"}], ",", 
       RowBox[{"spanner", "[", "4", "]"}]}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix1234", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners1234", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix1234", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"S1234dim", " ", "=", " ", "rank"}]}], "Input"],

Cell[TextData[{
 "The upshot: Including spanner[4] does not raise the dimension.\nSo ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "3", "]"}]]],
 " belongs to the subspace S12 spanned by  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"spanner", "[", "1", "]"}], ",", 
     RowBox[{"spanner", "[", "2", "]"}]}], "}"}], "."}]]],
 " \nThe call:  ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "4", "]"}]]],
 " is redundant.\nNow look at:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"spanners12345", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"spanner", "[", "1", "]"}], ",", 
      RowBox[{"spanner", "[", "2", "]"}], ",", 
      RowBox[{"spanner", "[", "3", "]"}], ",", 
      RowBox[{"spanner", "[", "4", "]"}], ",", 
      RowBox[{"spanner", "[", "5", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix12345", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners12345", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix12345", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"S12345dim", " ", "=", " ", "rank"}]}], "Input"],

Cell[TextData[{
 "The upshot: Including spanner[5] does raise the dimension.\n The call:  ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "5", "]"}]]],
 " is  not redundant.\n \nThe original (linearly dependent) spanning set for \
S is:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"originalspanners", " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}], ",", 
    RowBox[{"spanner", "[", "4", "]"}], ",", 
    RowBox[{"spanner", "[", "5", "]"}]}], "}"}]}]], "Input"],

Cell["\<\
The redundant vectors are spanner[3] and spanner[4]. Throwing them out gives \
a linearly independent spanning set for S ( with no redundant vectors):\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"reducedspanners", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "5", "]"}]}], "}"}]}]], "Input"],

Cell["\<\
Confirm by looking at the Sprojection matrices coming from the original \
spanning set and the reduced spanning set:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix1", "=", 
    RowBox[{"Transpose", "[", "originalspanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix2", "=", 
    RowBox[{"Transpose", "[", "reducedspanners", "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"S1projection", "=", 
    RowBox[{"SpannerMatrix1", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix1", "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "S1projection", "]"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"S2projection", "=", 
    RowBox[{"SpannerMatrix2", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix2", "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "S2projection", "]"}]}], "Input"],

Cell["Right on target.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.3.b.ii) Linearly independent sets have no redundant members\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Given a spanning set, agree that one of the spanners is redundant if you \
remove it from the spanning set and the remaining spanners span the same \
subspace as the original spanning set. 
Explain why it is IMPOSSIBLE for a linearly independent spanning set to \
contain a redundant vector.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "If a given spanning set \n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\nis linearly independent, then the dimension of the subspace S spanned by \
this set is k.\n\nIf you remove any one of the spanners from this set, then \
you are left with (k-1) vectors. These (k - 1) vectors can span at most a \
(k-1) dimensional subspace. This (k-1) dimensional subspace cannot be all of \
S (because S is k-dimensional)."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4) A",
 StyleBox[" basis ",
  FontColor->RGBColor[0, 0, 1]],
 "for S is any",
 StyleBox[" linearly independent spanning set",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "for S.\nUsing calculations of dimension to help to pare a linearly \
dependent spanning set down to a basis"
}], "Subsection",
 CellTags->"MGM.08.B4"],

Cell[TextData[{
 "Most folks say that a",
 StyleBox[" basis",
  FontWeight->"Bold"],
 " for a subspace S is any ",
 StyleBox["linearly independent spanning set ",
  FontWeight->"Bold"],
 "for S."
}], "Text"],

Cell[CellGroupData[{

Cell["\<\
B.4.a.i)  A basis for a subspace S is any spanning set for S not containing a \
redundant vector\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Is it true that  a basis for a subspace S is any spanning set for S not \
containing a redundant vector? \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["In one word:", "SmallText"],

Cell["Yes!", "Accident"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.4.a.ii) Saying that a spanning set is a basis is the same as saying that \
the associated spanner matrix is of full rank\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Is it true that saying that a spanning set is a basis is the same as saying \
that the associated spanner matrix is of full rank?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["In one word:", "SmallText"],

Cell["Yes!", "Accident"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.b) Basis expansion", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Given a basis ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " of a subspace S, \nexplain why X in S determines unique coefficients ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"x", "[", "1", "]"}], ",", 
   RowBox[{"x", "[", "2", "]"}], ",", 
   RowBox[{".", " ", ".", " ", "."}], ",", 
   RowBox[{"x", "[", "k", "]"}]}]]],
 " so that\n             ",
 Cell[BoxData[
  RowBox[{"X", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"x", "[", "i", "]"}], " ", 
     RowBox[{"spanner", "[", "i", "]"}]}]}]}]]]
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You are given that\n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " \n is linearly independent.\nThis tells you that the associated spanner \
matrix is of full rank.\nNow saying\n        ",
 Cell[BoxData[
  RowBox[{"X", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"x", "[", "i", "]"}], " ", 
     RowBox[{"spanner", "[", "i", "]"}], " "}]}]}]]],
 "\nis the same as saying\n         ",
 Cell[BoxData[
  RowBox[{"X", "="}]]],
 " ",
 Cell[BoxData[
  RowBox[{"SpannerMatrix", ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", 
     RowBox[{"x", "[", "2", "]"}], ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", 
     RowBox[{"x", "[", "k", "]"}]}], "}"}]}]]],
 "\nThis is the same as saying\n         ",
 Cell[BoxData[
  RowBox[{"XX", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", 
     RowBox[{"x", "[", "2", "]"}], ",", "...", ",", 
     RowBox[{"x", "[", "k", "]"}]}], "}"}]}]]],
 " \nis a solution of\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"SpannerMatrix", ".", "XX"}], "=", "X"}]]],
 ".\nAnd because SpannerMatrix is of full rank,\nthe solution\n         ",
 Cell[BoxData[
  RowBox[{"XX", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", 
     RowBox[{"x", "[", "2", "]"}], ",", "...", ",", 
     RowBox[{"x", "[", "k", "]"}]}], "}"}]}]]],
 "\nis the only solution. \nSo the coefficients ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], ",", 
    RowBox[{"x", "[", "2", "]"}], ",", 
    RowBox[{".", " ", "."}], " ", ",", 
    RowBox[{"x", "[", "k", "]"}]}], "}"}]]],
 " \nthat make\n           ",
 Cell[BoxData[
  RowBox[{"X", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"x", "[", "i", "]"}], " ", 
     RowBox[{"spanner", "[", "i", "]"}]}]}]}]]],
 "\nare uniquely determined. "
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.c.i) Is it a basis?", "Subsubsection"],

Cell["Here's a spanning set for a subspace S of 4D:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"3.43", ",", 
      RowBox[{"-", "0.57"}], ",", "8.19", ",", 
      RowBox[{"-", "0.94"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.97", ",", "1.29", ",", "0.83", ",", "5.23"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.14"}], ",", "3.08", ",", 
      RowBox[{"-", "5.00"}], ",", 
      RowBox[{"-", "1.97"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spanners", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Column", "[", "spanners", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["Determine whether this spanning set is a basis for S.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
This is the same as checking whether this spanning set is linearly independent.
To do this, check the rank of the associated spanner matrix:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", "=", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"Sdim", "=", "rank"}]}], "Input"],

Cell["\<\
This tells you that these 3 spanning vectors span a 3-dimensional subspace of \
S of 4D, so
the given spanner set is linearly independent.  
This confirms that the given spanning set is a basis of S.\
\>", "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.c.ii) Calculating a basis expansion", "Subsubsection"],

Cell["\<\
Stay with the same spanning set and subspace S as in part i) and look at
the projection of a random 4D vector onto S:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"random4D", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", "=", 
    RowBox[{"SpannerMatrix", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}]}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Svector", " ", "=", " ", 
  RowBox[{"Sprojection", ".", "random4D"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "This vector is guaranteed to be in S. \nYour job is to come up the basis \
expansion of ",
 StyleBox["Svector",
  FontColor->RGBColor[0, 0, 1]],
 " by coming up with the unique numbers\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"x", "[", "1", "]"}], ",", 
   RowBox[{"x", "[", "2", "]"}]}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"x", "[", "3", "]"}]]],
 "\nthat make\n        ",
 Cell[BoxData[
  RowBox[{"Svector", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "3"], 
    RowBox[{
     StyleBox[
      RowBox[{"x", "[", "i", "]"}],
      FontColor->GrayLevel[0]], 
     StyleBox["  ",
      FontColor->GrayLevel[0]], 
     RowBox[{
      RowBox[{"spanner", "[", "i", "]"}], "."}]}]}]}]]]
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "The unique  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"x", "[", "1", "]"}], ",", 
   RowBox[{"x", "[", "2", "]"}]}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"x", "[", "3", "]"}]]],
 " that make\n         ",
 Cell[BoxData[
  RowBox[{"Svector", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "3"], 
    RowBox[{
     StyleBox[
      RowBox[{"x", "[", "i", "]"}],
      FontColor->GrayLevel[0]], " ", 
     RowBox[{"spanner", "[", "i", "]"}]}]}]}]]],
 "\n solve the linear system\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"SpannerMatrix", ".", 
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "1", "]"}], ",", 
       RowBox[{"x", "[", "2", "]"}], ",", 
       RowBox[{"x", "[", "3", "]"}]}], "}"}],
     FontColor->GrayLevel[0]]}], "=", " ", "Svector"}]]],
 ".\nThe solution is:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], ",", 
    RowBox[{"x", "[", "2", "]"}], ",", 
    RowBox[{"x", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
  RowBox[{
   RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}], ".", "Svector"}], 
  " "}]], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"i", "=", "1"}], "3"], 
  RowBox[{
   RowBox[{"x", "[", "i", "]"}], " ", 
   StyleBox[
    RowBox[{"spanner", "[", "i", "]"}],
    FontColor->RGBColor[0, 0, 1]]}]}], "\n", "Svector"}], "Input"],

Cell["Nailed it.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.4.d.i) Is it a basis?", "Subsubsection"],

Cell["Here's a spanning set for a subspace S of 5D:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.43", ",", "2.57", ",", "6.19", ",", 
      RowBox[{"-", "3.94"}], ",", "0.0"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.95", ",", "1.50", ",", "1.85", ",", "1.20", ",", "0.50"}], 
     "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.67", ",", "1.37", ",", "4.71", ",", 
      RowBox[{"-", "4.9"}], ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"2.1", ",", "3.94", ",", "10.9", ",", 
      RowBox[{"-", "8.84"}], ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "5", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.10", ",", "2.00", ",", 
      RowBox[{"-", "2.1"}], ",", 
      RowBox[{"-", "1.90"}], ",", "0.46"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spanners", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Column", "[", "spanners", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["Determine whether this spanning set is a basis for S.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
This is the same as checking whether this spanning set is linearly independent.
To do this, check the rank of the associated spanner matrix:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", "=", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], 
      "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"Sdim", "=", "rank"}]}], "Input"],

Cell["\<\
This tells you that these 5 spanning vectors span a 3-dimensional subspace of \
S of 5D, so the given spanner set is linearly dependent.  
This confirms that the given spanning set is NOT a basis of S.\
\>", "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.4.d.ii) Paring a linearly dependent spanning set down to a basis\
\>", "Subsubsection"],

Cell["\<\
Stay with the same spanning set for a subspace S of 5D as in part i).\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.43", ",", "2.57", ",", "6.19", ",", 
      RowBox[{"-", "3.94"}], ",", "0.0"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.95", ",", "1.50", ",", "1.85", ",", "1.20", ",", "0.50"}], 
     "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.67", ",", "1.37", ",", "4.71", ",", 
      RowBox[{"-", "4.9"}], ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"2.1", ",", "3.94", ",", "10.9", ",", 
      RowBox[{"-", "8.84"}], ",", 
      RowBox[{"-", "0.4"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "5", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.10", ",", "2.00", ",", 
      RowBox[{"-", "2.1"}], ",", 
      RowBox[{"-", "1.90"}], ",", "0.46"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spanners", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Column", "[", "spanners", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Sitting in this spanning set is a basis for S. 
Come up with this basis for S by identifying and throwing out the redundant \
spanning vectors.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
In part i), You saw that the dimension of subspace S spanned by the original \
spanning set is 3. Because there are 5 vectors in the spanning set you are \
sure that the original spanning set has two redundant vectors.
To identify them, look at\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"spanners12", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"spanner", "[", "1", "]"}], ",", 
      RowBox[{"spanner", "[", "2", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix12", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners12", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix12", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"S12dim", " ", "=", " ", "rank"}]}], "Input"],

Cell[TextData[{
 "This tells you that ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}]}], "}"}]]],
 " span a two dimensional subspace ",
 Cell[BoxData["S12"]],
 " of 5D.\nThe call:  Neither spanner[1] nor spanner[2] are redundant.\nNow \
look at:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"spanners123", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"spanner", "[", "1", "]"}], ",", 
      RowBox[{"spanner", "[", "2", "]"}], ",", 
      RowBox[{"spanner", "[", "3", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix123", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners123", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix123", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"S123dim", " ", "=", " ", "rank"}]}], "Input"],

Cell[TextData[{
 "The upshot: Including spanner[3] does not raise the dimension.\nSo ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "3", "]"}]]],
 " belongs to the subspace S12 spanned by  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"spanner", "[", "1", "]"}], ",", 
     RowBox[{"spanner", "[", "2", "]"}]}], "}"}], "."}]]],
 " \nThe call:  ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "3", "]"}]]],
 " is redundant.\nNow look at:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"spanners1234", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"spanner", "[", "1", "]"}], ",", 
      RowBox[{"spanner", "[", "2", "]"}], ",", 
      RowBox[{"spanner", "[", "3", "]"}], ",", 
      RowBox[{"spanner", "[", "4", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix1234", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners1234", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix1234", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"S1234dim", " ", "=", " ", "rank"}]}], "Input"],

Cell[TextData[{
 "The upshot: Including spanner[4] does not raise the dimension.\nSo ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "3", "]"}]]],
 " belongs to the subspace S12 spanned by  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"spanner", "[", "1", "]"}], ",", 
     RowBox[{"spanner", "[", "2", "]"}]}], "}"}], "."}]]],
 " \nThe call:  ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "4", "]"}]]],
 " is redundant.\nNow look at:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"spanners12345", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"spanner", "[", "1", "]"}], ",", 
      RowBox[{"spanner", "[", "2", "]"}], ",", 
      RowBox[{"spanner", "[", "3", "]"}], ",", 
      RowBox[{"spanner", "[", "4", "]"}], ",", 
      RowBox[{"spanner", "[", "5", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix12345", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners12345", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix12345", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"S12345dim", " ", "=", " ", "rank"}]}], "Input"],

Cell[TextData[{
 "The upshot: Including spanner[5] does raise the dimension.\n The call:  ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "5", "]"}]]],
 " is  not redundant.\n \nThe original (linearly dependent) spanning set for \
S is:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"spanner", "[", "1", "]"}], ",", 
   RowBox[{"spanner", "[", "2", "]"}], ",", 
   RowBox[{"spanner", "[", "3", "]"}], ",", 
   RowBox[{"spanner", "[", "4", "]"}], ",", 
   RowBox[{"spanner", "[", "5", "]"}]}], "}"}]], "Input"],

Cell["\<\
The redundant vectors are spanner[3] and spanner[4]. Throwing them out gives \
a (linearly independent) basis for S:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"spanner", "[", "1", "]"}], ",", 
   RowBox[{"spanner", "[", "2", "]"}], ",", 
   RowBox[{"spanner", "[", "5", "]"}]}], "}"}]], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.5) Traditional book definitions of linear independence and linear dependence\
\>", "Subsection",
 CellTags->"MGM.08.B5"],

Cell[CellGroupData[{

Cell["\<\
B.5.a.i) Saying a spanning set is linearly independent is the same as saying \
the SpannerMatrix is of full rank\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this:\nSaying that a given spanning set\n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\n is linearly independent is the same as saying that the associated \
spanner matrix is of full rank."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Call S the subspace of nD spanned by the given spanning set\n      ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 ".\nThe associated spanner matrix (whose ith column is spanner[i]) hits on \
kD.\n\nSaying that the spanner matrix is of full rank is the same as saying \
that the rank of the spanner matrix is k.\n\nSaying that ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "is linearly independent is the same as saying that the rank of the spanner \
matrix is k.\n\nSo saying that a given spanning set\n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\n is linearly independent is the same as saying that the associated \
spanner matrix is of full rank."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.5.a.ii) Traditional book definition of linear independence", \
"Subsubsection"],

Cell["\<\
What you see below is the definition of linear independence that
you will see in most traditional linear algebra or matrix theory texts.
Many students have struggled with this definition.\
\>", "Special5"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this arcane statement:\n Saying that a given spanning set\n         \
 ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " \n is linearly independent the same as saying that it is ",
 StyleBox["IMPOSSIBLE",
  FontWeight->"Bold"],
 " to come up with numbers \n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], ",", 
    RowBox[{"x", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"x", "[", "k", "]"}]}], "}"}]]],
 "\n",
 StyleBox["not all of which are zero",
  FontWeight->"Bold"],
 ", so that\n           ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "k"], 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", 
    RowBox[{"spanner", "[", "i", "]"}]}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]]],
 "."
}], "Text",
 Evaluatable->False],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Saying that a given spanning set\n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\n is linearly independent is the same as saying that the associated \
spanner matrix is of full rank.\n \n This is the same as saying that all the \
SVD stretch factors for the spanner matrix are positive.\n \n This is the \
same as saying that the only solution of\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"SpannerMatrix", ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], ",", 
      RowBox[{"x", "[", "2", "]"}], ",", 
      RowBox[{".", " ", "."}], " ", ",", 
      RowBox[{"x", "[", "k", "]"}]}], "}"}]}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]}]]],
 " \n  is\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", 
     RowBox[{"x", "[", "2", "]"}], ",", 
     RowBox[{".", " ", "."}], " ", ",", 
     RowBox[{"x", "[", "k", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}], "."}]}]]],
 "\n         \n Because\n  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"SpannerMatrix", ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], ",", 
      RowBox[{"x", "[", "2", "]"}], ",", 
      RowBox[{".", " ", "."}], " ", ",", 
      RowBox[{"x", "[", "k", "]"}]}], "}"}]}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"x", "[", "i", "]"}], " ", 
     RowBox[{"spanner", "[", "i", "]"}]}]}]}]]],
 ",\n this is the same as saying that the only solution of\n                \
",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "k"], 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", 
    RowBox[{"spanner", "[", "i", "]"}]}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]]],
 "\nis \n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", 
     RowBox[{"x", "[", "2", "]"}], ",", 
     RowBox[{".", " ", "."}], " ", ",", 
     RowBox[{"x", "[", "k", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}], "."}]}]]],
 "\n         \nAnd this is the same as saying it is impossible to come up \
with numbers \n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], ",", 
    RowBox[{"x", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"x", "[", "k", "]"}]}], "}"}]]],
 "\nnot all of which are zero, so that\n           ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "k"], 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", 
    RowBox[{"spanner", "[", "i", "]"}]}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.5.b.i) Saying a spanning set is linearly dependent is the same as saying \
the SpannerMatrix is not of full rank\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this:\nSaying that a given spanning set\n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\nis linearly dependent is the same as saying that the associated spanner \
matrix is not of full rank."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Call S the subspace spanned by the given spanning set\n      ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 ".\nThe associated spanner matrix (whose ith column is spanner[i]) hits on \
kD.\n\nSaying that the spanner matrix is of not of full rank is the same as \
saying that the rank of the spanner matrix is less than k.\n\nSaying that ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "is linearly dependent is the also same as saying that the rank of the \
spanner matrix is less than k.\n\nSo saying that a given spanning set\n       \
  ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\n is linearly dependent is the same as saying that the associated spanner \
matrix is of not of full rank."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.5.b.ii) Traditional book definition of linear dependence", \
"Subsubsection"],

Cell["\<\
What you see below is the definition of linear dependence that
you will see in most traditional linear algebra or matrix theory texts.
Many students have also struggled with this definition.\
\>", "Special5"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this arcane statement:\n Saying that a given spanning set\n         \
 ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " \nis linearly dependent the same as saying that it is POSSIBLE to come up \
with numbers \n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], ",", 
    RowBox[{"x", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"x", "[", "k", "]"}]}], "}"}]]],
 "\n",
 StyleBox["not all of which are zero",
  FontWeight->"Bold"],
 ", so that\n           ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "k"], 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", 
    RowBox[{"spanner", "[", "i", "]"}]}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]]],
 "."
}], "Text",
 Evaluatable->False],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Saying that a given spanning set\n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\n is linearly dependent is the same as saying that the associated spanner \
matrix is of not of full rank.\n \n This is the same as saying that at least \
one SVD stretch factors for the spanner matrix is 0.\n \n This is the same as \
saying there is at least one vector\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", 
     RowBox[{"x", "[", "2", "]"}], ",", 
     RowBox[{".", " ", "."}], " ", ",", 
     RowBox[{"x", "[", "k", "]"}]}], "}"}], "\[NotEqual]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]}]]],
 " \n so that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"SpannerMatrix", ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], ",", 
      RowBox[{"x", "[", "2", "]"}], ",", 
      RowBox[{".", " ", "."}], " ", ",", 
      RowBox[{"x", "[", "k", "]"}]}], "}"}]}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]}]]],
 Cell[BoxData["."]],
 "\n         \n Because\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"SpannerMatrix", ".", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], ",", 
      RowBox[{"x", "[", "2", "]"}], ",", 
      RowBox[{".", " ", "."}], " ", ",", 
      RowBox[{"x", "[", "k", "]"}]}], "}"}]}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"x", "[", "i", "]"}], " ", 
     RowBox[{"spanner", "[", "i", "]"}]}]}]}]]],
 ",\nthis is the same as saying there is at least one vector\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", 
     RowBox[{"x", "[", "2", "]"}], ",", 
     RowBox[{".", " ", "."}], " ", ",", 
     RowBox[{"x", "[", "k", "]"}]}], "}"}], "\[NotEqual]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]}]]],
 " \n so that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"x", "[", "i", "]"}], " ", 
     RowBox[{"spanner", "[", "i", "]"}]}]}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]}]]],
 ".\n\nAnd this is the same as saying it is possible to come up with numbers \
\n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "1", "]"}], ",", 
    RowBox[{"x", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"x", "[", "k", "]"}]}], "}"}]]],
 "\nnot all of which are zero, so that\n           ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "k"], 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", 
    RowBox[{"spanner", "[", "i", "]"}]}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}]]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.6) All bases for a given subspace of nD have the same number of vectors\
\>", "Subsection",
 CellTags->"MGM.08.B6"],

Cell[TextData[{
 "Implicit in the definition of dimension as the rank of the Spanner Matrix \
is the fact that if a subspace S of nD is spanned by a perpendicular frame   \
{",
 Cell[BoxData[
  SubscriptBox["B", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["B", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["B", 
   StyleBox["k",
    FontColor->RGBColor[1, 0, 0]]]]],
 "}, then any basis of S also consists of exactly ",
 StyleBox["k",
  FontColor->RGBColor[1, 0, 0]],
 " vectors.\nThe purpose of this problem is to explain this in detail.\n\
Mathematics majors should fully engage. Others might want to as well. \nIf \
so, then continue on for a dose of some advanced mathematical reasoning."
}], "Text"],

Cell[CellGroupData[{

Cell["\<\
B.6.a.i)  If a subspace S of nD is spanned by perpendicular frame \
(orthonormal basis) consisting of exactly k vectors, then all other bases of \
S also consist of exactly k vectors\
\>", "Subsubsection"],

Cell["\<\
This problem was adapted from the classic book by
 Nicolaas H. Kuiper, Linear Algebra and Geometry, North Holland, \
Amsterdam,1965.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
Explain this statement:
If a subspace S of nD is spanned by perpendicular frame (orthonormal basis)\
\>", "Text"],

Cell[TextData[{
 "                      {",
 Cell[BoxData[
  SubscriptBox["B", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["B", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 "}"
}], "Text"],

Cell[CellGroupData[{

Cell["\<\
 then all other bases (linearly independent spanning sets)  of S consist of \
exactly k vectors.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["This is what mathematicians call a proof by induction.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "The statement is true for k =1.\nTo prove this by induction, you take a \
positive integer k. \nYou get to assume that  for any positive integer ",
 StyleBox["m",
  FontColor->RGBColor[1, 0, 0]],
 " < k that\nif a subspace S of nD is spanned by perpendicular frame \
(orthonormal basis)"
}], "SmallText"],

Cell[TextData[{
 "                      {",
 Cell[BoxData[
  SubscriptBox["B", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["B", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["B", 
   StyleBox["m",
    FontColor->RGBColor[1, 0, 0]]]]],
 "}"
}], "Text"],

Cell[TextData[{
 " then all other bases  of S consist of exactly ",
 StyleBox["m",
  FontColor->RGBColor[1, 0, 0]],
 " vectors.\n\nThe goal is to use this assumption to argue why the statement \
is true when you replace m with k."
}], "SmallText"],

Cell["\<\
To this end, go with a subspace S of nD spanned by a perpendicular frame\
\>", "SmallText"],

Cell[TextData[{
 "                     {",
 Cell[BoxData[
  SubscriptBox["B", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["B", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["B", 
   StyleBox["k",
    FontColor->RGBColor[1, 0, 0]]]]],
 "}"
}], "SmallText"],

Cell["\<\
Put
      SS = the subspace spanned by \
\>", "SmallText"],

Cell[TextData[{
 "                       {",
 Cell[BoxData[
  SubscriptBox["B", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["B", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["B", 
   StyleBox[
    RowBox[{"k", "-", "1"}],
    FontColor->RGBColor[1, 0, 0]]]]],
 "}"
}], "SmallText"],

Cell[TextData[{
 "\n",
 StyleBox["Legal Assumption:\nBecause k - 1 < k, you get to assume that every \
basis for SS consists of exactly k-1 vectors.\n",
  FontWeight->"Bold"],
 "\nNotice that SS = everything in S that is perpendicular to ",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 ".\n"
}], "SmallText"],

Cell["Now take another basis", "SmallText"],

Cell[TextData[{
 "                           {",
 Cell[BoxData[
  SubscriptBox["A", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["A", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["A", "r"]]],
 "}"
}], "SmallText"],

Cell[TextData[{
 " of S.  \n",
 StyleBox["The goal is to explain why r = k.",
  FontWeight->"Bold"],
 "\nFirst note that it must be true that ",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 "\[Bullet]",
 Cell[BoxData[
  SubscriptBox["A", "j"]]],
 " \[NotEqual] 0 for some j. \nIf r > j, swap the labels so that the old ",
 Cell[BoxData[
  SubscriptBox["A", "j"]]],
 " becomes the new ",
 Cell[BoxData[
  SubscriptBox["A", "r"]]],
 ".\n\nThis guarantees that ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["B", "k"], 
   SubscriptBox["\[Bullet]A", "r"]}]]],
 " \[NotEqual] 0.\nNow look at the vectors "
}], "SmallText"],

Cell[TextData[{
 "              ",
 Cell[BoxData[
  SubscriptBox["C", "i"]]],
 " = ",
 Cell[BoxData[
  SubscriptBox["A", "i"]]],
 " -  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      SubscriptBox["B", "k"], 
      SubscriptBox["\[Bullet]A", "i"]}], 
     RowBox[{
      SubscriptBox["B", "k"], 
      SubscriptBox["\[Bullet]A", "r"]}]], ")"}], 
   SubscriptBox["A", "r"]}]]],
 "    for i =1,2,. . ., ",
 StyleBox["r - 1",
  FontColor->RGBColor[1, 0, 0]],
 "."
}], "Text"],

Cell[TextData[{
 StyleBox["Fact 1: The set {",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["C", "1"]],
  FontWeight->"Bold"],
 StyleBox[",",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["C", "2"]],
  FontWeight->"Bold"],
 StyleBox[",. . ., ",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["C", 
   StyleBox[
    RowBox[{"r", "-", "1"}],
    FontColor->RGBColor[1, 0, 0]]]],
  FontWeight->"Bold"],
 StyleBox["} is linearly independent.",
  FontWeight->"Bold"]
}], "SmallText"],

Cell[CellGroupData[{

Cell["To see a reason, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Reason: Because ", "SmallText"],

Cell[TextData[{
 "                  {",
 Cell[BoxData[
  SubscriptBox["A", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["A", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["A", "r"]]],
 "}"
}], "Text"],

Cell["is linearly independent,", "SmallText"],

Cell["and", "SmallText"],

Cell[TextData[{
 "              ",
 Cell[BoxData[
  SubscriptBox["C", "i"]]],
 " = ",
 Cell[BoxData[
  SubscriptBox["A", "i"]]],
 " -  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      SubscriptBox["B", "k"], 
      SubscriptBox["\[Bullet]A", "i"]}], 
     RowBox[{
      SubscriptBox["B", "k"], 
      SubscriptBox["\[Bullet]A", "r"]}]], ")"}], 
   SubscriptBox["A", "r"]}]]],
 "    for i =1,2,. . ., r-1."
}], "Text"],

Cell["", "Text"],

Cell["you know that", "SmallText"],

Cell[TextData[{
 "         ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["C", "i"]}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 " + ",
 StyleBox["(messy constant)",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 Cell[BoxData[
  SubscriptBox["A", "r"]]]
}], "Text"],

Cell[TextData[{
 "cannot be {0,0,. . .,0}  unless ",
 Cell[BoxData[
  RowBox[{" ", 
   SubscriptBox["\[Lambda]", "1"]}]]],
 "= ",
 Cell[BoxData[
  RowBox[{" ", 
   SubscriptBox["\[Lambda]", "2"]}]]],
 " = .... = ",
 Cell[BoxData[
  RowBox[{" ", 
   SubscriptBox["\[Lambda]", 
    RowBox[{"r", " ", "-", " ", "1"}]]}]]],
 " = 0.\n\nThis explains (via the traditional definition of linear \
independence) why the set {",
 Cell[BoxData[
  SubscriptBox["C", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["C", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["C", 
   StyleBox[
    RowBox[{"r", "-", "1"}],
    FontColor->RGBColor[1, 0, 0]]]]],
 "} is linearly independent."
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 StyleBox["Fact 2: The set {",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["C", "1"]],
  FontWeight->"Bold"],
 StyleBox[",",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["C", "2"]],
  FontWeight->"Bold"],
 StyleBox[",. . ., ",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["C", 
   StyleBox[
    RowBox[{"r", "-", "1"}],
    FontColor->RGBColor[1, 0, 0]]]],
  FontWeight->"Bold"],
 StyleBox["}  spans SS and is therefore a basis of SS.",
  FontWeight->"Bold"]
}], "SmallText"],

Cell[CellGroupData[{

Cell["To see a reason, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Because S consists of all sums ", "SmallText"],

Cell[TextData[{
 "                 ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 " "
}], "Text"],

Cell[TextData[{
 "and because SS is everything in S perpendicular  to ",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 ", you know that SS is all sums"
}], "SmallText"],

Cell[TextData[{
 "\n              A =  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 "   with  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 "\[FilledVerySmallSquare]",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 " = 0."
}], "Text"],

Cell["", "Text"],

Cell["Remember that", "SmallText"],

Cell[TextData[{
 "              ",
 Cell[BoxData[
  SubscriptBox["C", "i"]]],
 " = ",
 Cell[BoxData[
  SubscriptBox["A", "i"]]],
 " -  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      SubscriptBox["B", "k"], 
      SubscriptBox["\[Bullet]A", "i"]}], 
     RowBox[{
      SubscriptBox["B", "k"], 
      SubscriptBox["\[Bullet]A", "r"]}]], ")"}], 
   SubscriptBox["A", "r"]}]]],
 "    for i =1,2,...,r-1."
}], "Text"],

Cell[TextData[{
 "\nSo SS is all sums   \n              A =  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["C", 
       RowBox[{"i", " "}]], "+", 
      RowBox[{
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          SubscriptBox["B", "k"], 
          SubscriptBox["\[Bullet]A", "i"]}], 
         RowBox[{
          SubscriptBox["B", "k"], 
          SubscriptBox["\[Bullet]A", "r"]}]], ")"}], 
       SubscriptBox["A", "r"]}]}], ")"}]}]}]]],
 " + ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Lambda]", 
    RowBox[{"r", " "}]], 
   SubscriptBox["A", 
    RowBox[{"r", " "}]]}]]],
 "  with  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 "\[FilledVerySmallSquare]",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 " = 0"
}], "SmallText"],

Cell[TextData[{
 "                   = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    SubscriptBox["C", 
     RowBox[{"i", " "}]]}]}]]],
 " + ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["B", "k"], 
       SubscriptBox["\[Bullet]A", "i"]}], 
      RowBox[{
       SubscriptBox["B", "k"], 
       SubscriptBox["\[Bullet]A", "r"]}]], ")"}], 
    SubscriptBox["A", "r"]}]}]]],
 " + ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Lambda]", 
    RowBox[{"r", " "}]], 
   SubscriptBox["A", 
    RowBox[{"r", " "}]]}]]],
 " with  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 "\[FilledVerySmallSquare]",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 " = 0."
}], "SmallText"],

Cell[TextData[{
 "                   = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    SubscriptBox["C", 
     RowBox[{"i", " "}]]}]}]]],
 " + ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["B", "k"], 
       SubscriptBox["\[Bullet]A", "i"]}], 
      RowBox[{
       SubscriptBox["B", "k"], 
       SubscriptBox["\[Bullet]A", "r"]}]], ")"}], 
    SubscriptBox["A", "r"]}]}]]],
 " + ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["\[Lambda]", 
    RowBox[{"r", " "}]], 
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      SubscriptBox["B", "k"], 
      SubscriptBox["\[Bullet]A", "r"]}], 
     RowBox[{
      SubscriptBox["B", "k"], 
      SubscriptBox["\[Bullet]A", "r"]}]], ")"}], 
   SubscriptBox["A", 
    RowBox[{"r", " "}]]}]]],
 " with  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 "\[FilledVerySmallSquare]",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 " = 0."
}], "SmallText"],

Cell[TextData[{
 "                   = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    SubscriptBox["C", 
     RowBox[{"i", " "}]]}]}]]],
 " + ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["B", "k"], 
       SubscriptBox["\[Bullet]A", "i"]}], 
      RowBox[{
       SubscriptBox["B", "k"], 
       SubscriptBox["\[Bullet]A", "r"]}]], ")"}], 
    SubscriptBox["A", "r"]}]}]]],
 "  with  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 "\[FilledVerySmallSquare]",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 " = 0."
}], "Text"],

Cell[TextData[{
 "                   = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    SubscriptBox["C", 
     RowBox[{"i", " "}]]}]}]]],
 " +",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{
    SubscriptBox["B", "k"], 
    SubscriptBox["\[Bullet]A", "r"]}]]]],
 Cell[BoxData[
  SubscriptBox["A", "r"]]],
 " ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["B", "k"], 
      SubscriptBox["\[Bullet]A", "i"]}], ")"}]}]}]]],
 "  with  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 "\[FilledVerySmallSquare]",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 " = 0."
}], "Text"],

Cell[TextData[{
 "                   = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    SubscriptBox["C", 
     RowBox[{"i", " "}]]}]}]]],
 " + ",
 Cell[BoxData["0"]],
 "  with  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "r"], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "i"], 
    SubscriptBox["A", "i"]}]}]]],
 "\[FilledVerySmallSquare]",
 Cell[BoxData[
  SubscriptBox["B", "k"]]],
 " = 0."
}], "Text"],

Cell[TextData[{
 "                   = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], 
    RowBox[{"r", "-", "1"}]], " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", 
     RowBox[{"i", " "}]], 
    SubscriptBox["C", 
     RowBox[{"i", " "}]]}]}]]],
 " "
}], "Text"],

Cell[TextData[{
 "This shows that the set {",
 Cell[BoxData[
  SubscriptBox["C", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["C", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["C", 
   StyleBox[
    RowBox[{"r", "-", "1"}],
    FontColor->RGBColor[1, 0, 0]]]]],
 "}  spans SS. \nAnd because the set {",
 Cell[BoxData[
  SubscriptBox["C", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["C", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["C", 
   StyleBox[
    RowBox[{"r", "-", "1"}],
    FontColor->RGBColor[1, 0, 0]]]]],
 "} is also linearly independent, the set {",
 Cell[BoxData[
  SubscriptBox["C", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["C", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["C", 
   StyleBox[
    RowBox[{"r", "-", "1"}],
    FontColor->RGBColor[1, 0, 0]]]]],
 "} is a basis of SS."
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 StyleBox["Fact 3: ",
  FontWeight->"Bold"],
 StyleBox[" r  =  k",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontWeight->"Bold"]
}], "SmallText"],

Cell[CellGroupData[{

Cell["To see a reason, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 StyleBox["{",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["C", "1"]],
  FontWeight->"Bold"],
 StyleBox[",",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["C", "2"]],
  FontWeight->"Bold"],
 StyleBox[",. . ., ",
  FontWeight->"Bold"],
 Cell[BoxData[
  SubscriptBox["C", 
   StyleBox[
    RowBox[{"r", "-", "1"}],
    FontColor->RGBColor[1, 0, 0]]]],
  FontWeight->"Bold"],
 StyleBox["}",
  FontWeight->"Bold"],
 " is a basis of SS.\nThe legal assumption is that ",
 StyleBox[" every basis for SS consists of exactly k-1 vectors.\n",
  FontWeight->"Bold"],
 StyleBox["So r - 1 = k - 1. This yields the equality r = k.",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["\n",
  FontWeight->"Bold"]
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 StyleBox["Summary:",
  FontWeight->"Bold"],
 "\nYou started with a subspace S of nD spanned by a perpendicular frame"
}], "SmallText"],

Cell[TextData[{
 "                     {",
 Cell[BoxData[
  SubscriptBox["B", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["B", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["B", 
   StyleBox["k",
    FontColor->RGBColor[1, 0, 0]]]]],
 "}"
}], "SmallText"],

Cell["And then you took any old basis", "SmallText"],

Cell[TextData[{
 "                           {",
 Cell[BoxData[
  SubscriptBox["A", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["A", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["A", "r"]]],
 "}"
}], "SmallText"],

Cell["\<\
of S and argued why r = k. 
This shows that all other bases (linearly independent spanning sets)  of S \
consist of exactly k vectors.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.6.a.ii) If a subspace S of nD is spanned by basis (linearly independent \
spanning set) consisting of exactly k vectors, then all other bases of S also \
consist of exactly k vectors\
\>", "Subsubsection"],

Cell["\<\
Explain this statement:
If a subspace S of nD is spanned by a basis (linearly independent spanning \
set but not necessarily orthonormal)\
\>", "Text"],

Cell[TextData[{
 "                      {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["X", "k"]]],
 "}"
}], "Text"],

Cell[CellGroupData[{

Cell["\<\
 then all other bases (linearly independent spanning sets)  of S consist of \
exactly k vectors.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Apply the Gram-Schmidt (See Tutorials) process to ", "SmallText"],

Cell[TextData[{
 "                     {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["X", "k"]]],
 "}\n to get an orthonormal basis  "
}], "SmallText"],

Cell[TextData[{
 "                      {",
 Cell[BoxData[
  SubscriptBox["G", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["G", "2"]]],
 ",. . ., ",
 Cell[BoxData[
  SubscriptBox["G", "k"]]],
 "}"
}], "Text"],

Cell["\<\
of S. According to the problem immediately above, all other bases of S \
consist of exactly k vectors.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{631, 431},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.08.B1"->{
  Cell[29517, 803, 1098, 35, 259, "Subsection",
   CellTags->"MGM.08.B1"]},
 "MGM.08.B2"->{
  Cell[59841, 1861, 724, 17, 236, "Subsection",
   CellTags->"MGM.08.B2"]},
 "MGM.08.B3"->{
  Cell[112086, 3751, 475, 13, 136, "Subsection",
   CellTags->"MGM.08.B3"]},
 "MGM.08.B4"->{
  Cell[131456, 4426, 379, 12, 86, "Subsection",
   CellTags->"MGM.08.B4"]},
 "MGM.08.B5"->{
  Cell[152273, 5171, 132, 3, 36, "Subsection",
   CellTags->"MGM.08.B5"]},
 "MGM.08.B6"->{
  Cell[166132, 5619, 127, 3, 36, "Subsection",
   CellTags->"MGM.08.B6"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.08.B1", 239702, 7647},
 {"MGM.08.B2", 239794, 7650},
 {"MGM.08.B3", 239886, 7653},
 {"MGM.08.B4", 239979, 7656},
 {"MGM.08.B5", 240071, 7659},
 {"MGM.08.B6", 240162, 7662}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 179, 6, 108, "Title"],
Cell[CellGroupData[{
Cell[6416, 138, 193, 7, 28, "Special2"],
Cell[6612, 147, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7929, 189, 38, 0, 31, "Subsubsection"],
Cell[7970, 191, 1344, 31, 156, "Input"],
Cell[9317, 224, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9490, 230, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26861, 713, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27108, 724, 39, 0, 35, "Subsubsection"],
Cell[27150, 726, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29517, 803, 1098, 35, 259, "Subsection",
 CellTags->"MGM.08.B1"],
Cell[CellGroupData[{
Cell[30640, 842, 89, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[30732, 845, 207, 7, 24, "Text",
 Evaluatable->False],
Cell[30942, 854, 279, 9, 36, "Input"],
Cell[31224, 865, 133, 4, 49, "Text",
 Evaluatable->False],
Cell[31360, 871, 1511, 47, 156, "Input"],
Cell[32874, 920, 190, 4, 49, "Text",
 Evaluatable->False],
Cell[33067, 926, 1552, 47, 171, "Input"],
Cell[34622, 975, 61, 1, 20, "Special5",
 Evaluatable->False],
Cell[34686, 978, 120, 3, 24, "Text",
 Evaluatable->False],
Cell[34809, 983, 831, 29, 96, "Input"],
Cell[35643, 1014, 323, 10, 74, "Text",
 Evaluatable->False],
Cell[35969, 1026, 3197, 94, 231, "Input"],
Cell[39169, 1122, 291, 6, 99, "Text",
 Evaluatable->False],
Cell[39463, 1130, 2227, 69, 186, "Input"],
Cell[41693, 1201, 68, 1, 20, "Special5",
 Evaluatable->False],
Cell[41764, 1204, 289, 6, 74, "Text",
 Evaluatable->False],
Cell[42056, 1212, 66, 1, 24, "Text",
 Evaluatable->False],
Cell[42125, 1215, 1011, 34, 81, "Input"],
Cell[43139, 1251, 1019, 34, 99, "Text",
 Evaluatable->False],
Cell[44161, 1287, 438, 15, 68, "Input"],
Cell[44602, 1304, 83, 1, 24, "Text",
 Evaluatable->False],
Cell[44688, 1307, 731, 27, 98, "Input"],
Cell[45422, 1336, 154, 3, 12, "Special2"],
Cell[CellGroupData[{
Cell[45601, 1343, 106, 3, 24, "Text",
 Evaluatable->False],
Cell[45710, 1348, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[45761, 1351, 1238, 35, 249, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[47048, 1392, 637, 17, 121, "Subsubsection",
 Evaluatable->False],
Cell[47688, 1411, 131, 4, 24, "Text",
 Evaluatable->False],
Cell[47822, 1417, 231, 6, 20, "Input"],
Cell[48056, 1425, 455, 16, 74, "Text",
 Evaluatable->False],
Cell[48514, 1443, 306, 9, 36, "Input"],
Cell[48823, 1454, 554, 21, 43, "Special5",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[49402, 1479, 310, 9, 74, "Text",
 Evaluatable->False],
Cell[49715, 1490, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[49766, 1493, 326, 9, 90, "SmallText",
 Evaluatable->False],
Cell[50095, 1504, 230, 7, 74, "SmallText"],
Cell[50328, 1513, 396, 14, 49, "SmallText"],
Cell[50727, 1529, 445, 14, 74, "SmallText"],
Cell[51175, 1545, 710, 24, 124, "SmallText"],
Cell[51888, 1571, 150, 4, 49, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[52087, 1581, 142, 4, 31, "Subsubsection",
 Evaluatable->False],
Cell[52232, 1587, 65, 1, 24, "Text",
 Evaluatable->False],
Cell[52300, 1590, 1601, 53, 111, "Input"],
Cell[53904, 1645, 80, 1, 20, "Special5",
 Evaluatable->False],
Cell[53987, 1648, 140, 4, 49, "Text",
 Evaluatable->False],
Cell[54130, 1654, 204, 5, 36, "Input"],
Cell[54337, 1661, 157, 4, 49, "Text",
 Evaluatable->False],
Cell[54497, 1667, 314, 9, 20, "Input"],
Cell[CellGroupData[{
Cell[54836, 1680, 187, 5, 49, "Text"],
Cell[55026, 1687, 27, 0, 23, "Special1"],
Cell[55056, 1689, 239, 5, 99, "SmallText"],
Cell[55298, 1696, 566, 17, 66, "Input"],
Cell[55867, 1715, 353, 7, 124, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[56269, 1728, 79, 0, 31, "Subsubsection"],
Cell[56351, 1730, 111, 3, 24, "Text",
 Evaluatable->False],
Cell[56465, 1735, 1658, 53, 111, "Input"],
Cell[CellGroupData[{
Cell[58148, 1792, 45, 0, 24, "Text"],
Cell[58196, 1794, 27, 0, 23, "Special1"],
Cell[58226, 1796, 64, 1, 24, "SmallText",
 Evaluatable->False],
Cell[58293, 1799, 204, 5, 36, "Input"],
Cell[58500, 1806, 80, 1, 20, "Special5",
 Evaluatable->False],
Cell[58583, 1809, 94, 2, 24, "SmallText"],
Cell[58680, 1813, 314, 9, 20, "Input"],
Cell[58997, 1824, 45, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[59091, 1830, 88, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[59204, 1835, 204, 5, 74, "Text"],
Cell[59411, 1842, 27, 0, 23, "Special1"],
Cell[59441, 1844, 77, 0, 24, "SmallText"],
Cell[59521, 1846, 230, 6, 20, "Input"],
Cell[59754, 1854, 26, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[59841, 1861, 724, 17, 236, "Subsection",
 CellTags->"MGM.08.B2"],
Cell[CellGroupData[{
Cell[60590, 1882, 171, 5, 31, "Subsubsection"],
Cell[60764, 1889, 63, 0, 24, "Text"],
Cell[60830, 1891, 991, 32, 96, "Input"],
Cell[61824, 1925, 42, 0, 24, "Text"],
Cell[61869, 1927, 203, 5, 74, "Text"],
Cell[CellGroupData[{
Cell[62097, 1936, 48, 0, 24, "Text"],
Cell[62148, 1938, 27, 0, 23, "Special1"],
Cell[62178, 1940, 441, 16, 74, "SmallText",
 Evaluatable->False],
Cell[62622, 1958, 306, 9, 36, "Input"],
Cell[62931, 1969, 50, 0, 24, "SmallText"],
Cell[62984, 1971, 313, 9, 20, "Input"],
Cell[63300, 1982, 196, 4, 12, "Special2"],
Cell[63499, 1988, 63, 0, 24, "SmallText"],
Cell[63565, 1990, 839, 28, 51, "Input"],
Cell[64407, 2020, 464, 12, 124, "SmallText"],
Cell[64874, 2034, 885, 33, 101, "SmallText"],
Cell[65762, 2069, 39, 0, 24, "SmallText"],
Cell[65804, 2071, 259, 9, 20, "Input"],
Cell[66066, 2082, 620, 21, 49, "Input"],
Cell[66689, 2105, 279, 11, 49, "SmallText"],
Cell[66971, 2118, 39, 0, 24, "SmallText"],
Cell[67013, 2120, 240, 8, 20, "Input"],
Cell[67256, 2130, 620, 21, 49, "Input"],
Cell[67879, 2153, 335, 14, 49, "SmallText"],
Cell[68217, 2169, 39, 0, 24, "SmallText"],
Cell[68259, 2171, 280, 10, 20, "Input"],
Cell[68542, 2183, 620, 21, 49, "Input"],
Cell[69165, 2206, 279, 11, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[69493, 2223, 261, 8, 52, "Subsubsection"],
Cell[69757, 2233, 108, 4, 24, "Text"],
Cell[69868, 2239, 1990, 61, 126, "Input"],
Cell[71861, 2302, 43, 0, 24, "Text"],
Cell[71907, 2304, 319, 10, 20, "Input"],
Cell[CellGroupData[{
Cell[72251, 2318, 241, 8, 49, "Text"],
Cell[72495, 2328, 27, 0, 23, "Special1"],
Cell[72525, 2330, 34, 0, 24, "SmallText"],
Cell[72562, 2332, 568, 21, 74, "SmallText",
 Evaluatable->False],
Cell[73133, 2355, 306, 9, 36, "Input"],
Cell[73442, 2366, 51, 0, 24, "SmallText"],
Cell[73496, 2368, 378, 11, 36, "Input"],
Cell[73877, 2381, 53, 0, 24, "SmallText"],
Cell[73933, 2383, 59, 1, 20, "Input"],
Cell[73995, 2386, 1358, 39, 299, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[75402, 2431, 222, 8, 31, "Subsubsection"],
Cell[75627, 2441, 108, 4, 24, "Text"],
Cell[75738, 2447, 1990, 61, 126, "Input"],
Cell[77731, 2510, 43, 0, 24, "Text"],
Cell[77777, 2512, 417, 13, 36, "Input"],
Cell[78197, 2527, 48, 0, 24, "Text"],
Cell[78248, 2529, 612, 19, 51, "Input"],
Cell[78863, 2550, 33, 0, 24, "Text"],
Cell[78899, 2552, 1454, 47, 97, "Input"],
Cell[CellGroupData[{
Cell[80378, 2603, 268, 8, 74, "Text"],
Cell[80649, 2613, 27, 0, 23, "Special1"],
Cell[80679, 2615, 30, 0, 24, "SmallText"],
Cell[80712, 2617, 107, 1, 63, "Title"],
Cell[80822, 2620, 102, 2, 24, "SmallText"],
Cell[80927, 2624, 711, 24, 50, "SmallText"],
Cell[81641, 2650, 852, 29, 149, "SmallText"],
Cell[82496, 2681, 459, 15, 50, "SmallText"],
Cell[82958, 2698, 530, 18, 50, "SmallText"],
Cell[83491, 2718, 591, 20, 50, "SmallText"],
Cell[84085, 2740, 325, 11, 50, "SmallText"],
Cell[84413, 2753, 170, 6, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[84632, 2765, 248, 8, 52, "Subsubsection"],
Cell[84883, 2775, 104, 4, 24, "Text"],
Cell[84990, 2781, 2164, 67, 141, "Input"],
Cell[87157, 2850, 60, 0, 24, "Text"],
Cell[87220, 2852, 709, 22, 51, "Input"],
Cell[CellGroupData[{
Cell[87954, 2878, 86, 2, 24, "Text"],
Cell[88043, 2882, 27, 0, 23, "Special1"],
Cell[88073, 2884, 65, 0, 24, "SmallText"],
Cell[88141, 2886, 396, 15, 50, "SmallText"],
Cell[88540, 2903, 113, 3, 49, "SmallText"],
Cell[88656, 2908, 1802, 61, 131, "Input"],
Cell[90461, 2971, 29, 0, 24, "SmallText"],
Cell[90493, 2973, 73, 1, 20, "Input"],
Cell[90569, 2976, 79, 3, 49, "SmallText"],
Cell[90651, 2981, 396, 15, 50, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91096, 3002, 121, 3, 31, "Subsubsection"],
Cell[91220, 3007, 104, 4, 24, "Text"],
Cell[91327, 3013, 2147, 61, 141, "Input"],
Cell[93477, 3076, 60, 0, 24, "Text"],
Cell[93540, 3078, 709, 22, 51, "Input"],
Cell[CellGroupData[{
Cell[94274, 3104, 85, 2, 24, "Text"],
Cell[94362, 3108, 27, 0, 23, "Special1"],
Cell[94392, 3110, 65, 0, 24, "SmallText"],
Cell[94460, 3112, 396, 15, 50, "SmallText"],
Cell[94859, 3129, 257, 5, 99, "SmallText"],
Cell[95119, 3136, 2006, 67, 126, "Input"],
Cell[97128, 3205, 29, 0, 24, "SmallText"],
Cell[97160, 3207, 248, 7, 20, "Input"],
Cell[97411, 3216, 79, 3, 49, "SmallText"],
Cell[97493, 3221, 396, 15, 50, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[97938, 3242, 151, 4, 31, "Subsubsection",
 Evaluatable->False],
Cell[98092, 3248, 83, 1, 24, "Text",
 Evaluatable->False],
Cell[98178, 3251, 1374, 45, 111, "Input"],
Cell[99555, 3298, 61, 1, 24, "Text",
 Evaluatable->False],
Cell[99619, 3301, 190, 5, 20, "Input"],
Cell[99812, 3308, 201, 5, 20, "Input"],
Cell[CellGroupData[{
Cell[100038, 3317, 138, 4, 74, "Text"],
Cell[100179, 3323, 27, 0, 23, "Special1"],
Cell[100209, 3325, 61, 0, 24, "SmallText"],
Cell[100273, 3327, 204, 5, 36, "Input"],
Cell[100480, 3334, 49, 0, 24, "SmallText"],
Cell[100532, 3336, 250, 7, 36, "Input"],
Cell[100785, 3345, 48, 0, 24, "SmallText"],
Cell[100836, 3347, 27, 0, 20, "Input"],
Cell[100866, 3349, 101, 4, 24, "SmallText"],
Cell[100970, 3355, 59, 1, 20, "Input"],
Cell[101032, 3358, 260, 7, 149, "SmallText"],
Cell[101295, 3367, 27, 0, 20, "Input"],
Cell[101325, 3369, 101, 4, 24, "SmallText"],
Cell[101429, 3375, 59, 1, 20, "Input"],
Cell[101491, 3378, 273, 7, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[101813, 3391, 103, 2, 31, "Subsubsection",
 Evaluatable->False],
Cell[101919, 3395, 111, 3, 24, "Text",
 Evaluatable->False],
Cell[102033, 3400, 1075, 34, 81, "Input"],
Cell[103111, 3436, 119, 3, 24, "Text",
 Evaluatable->False],
Cell[103233, 3441, 1356, 42, 111, "Input"],
Cell[CellGroupData[{
Cell[104614, 3487, 147, 5, 49, "Text",
 Evaluatable->False],
Cell[104764, 3494, 53, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[104820, 3497, 96, 1, 24, "SmallText",
 Evaluatable->False],
Cell[104919, 3500, 415, 11, 81, "Input"],
Cell[105337, 3513, 111, 3, 24, "SmallText"],
Cell[105451, 3518, 490, 14, 66, "Input"],
Cell[105944, 3534, 815, 25, 249, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[106808, 3565, 106, 2, 31, "Subsubsection",
 Evaluatable->False],
Cell[106917, 3569, 111, 3, 24, "Text",
 Evaluatable->False],
Cell[107031, 3574, 1381, 45, 96, "Input"],
Cell[108415, 3621, 119, 3, 24, "Text",
 Evaluatable->False],
Cell[108537, 3626, 1356, 45, 96, "Input"],
Cell[CellGroupData[{
Cell[109918, 3675, 70, 1, 24, "Text",
 Evaluatable->False],
Cell[109991, 3678, 53, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[110047, 3681, 96, 1, 24, "SmallText",
 Evaluatable->False],
Cell[110146, 3684, 415, 11, 81, "Input"],
Cell[110564, 3697, 111, 3, 24, "SmallText"],
Cell[110678, 3702, 490, 14, 66, "Input"],
Cell[111171, 3718, 854, 26, 249, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[112086, 3751, 475, 13, 136, "Subsection",
 CellTags->"MGM.08.B3"],
Cell[112564, 3766, 850, 27, 174, "Text",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[113439, 3797, 87, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[113529, 3800, 83, 1, 24, "Text",
 Evaluatable->False],
Cell[113615, 3803, 1083, 35, 81, "Input"],
Cell[CellGroupData[{
Cell[114723, 3842, 129, 4, 24, "Text",
 Evaluatable->False],
Cell[114855, 3848, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[114906, 3851, 123, 3, 24, "SmallText",
 Evaluatable->False],
Cell[115032, 3856, 204, 5, 36, "Input"],
Cell[115239, 3863, 136, 4, 24, "SmallText",
 Evaluatable->False],
Cell[115378, 3869, 267, 8, 20, "Input"],
Cell[115648, 3879, 94, 1, 24, "SmallText",
 Evaluatable->False],
Cell[115745, 3882, 66, 1, 20, "Input"],
Cell[115814, 3885, 293, 8, 99, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[116156, 3899, 86, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[116245, 3902, 92, 1, 24, "Text",
 Evaluatable->False],
Cell[116340, 3905, 1410, 44, 96, "Input"],
Cell[CellGroupData[{
Cell[117775, 3953, 129, 4, 24, "Text",
 Evaluatable->False],
Cell[117907, 3959, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[117958, 3962, 123, 3, 24, "SmallText",
 Evaluatable->False],
Cell[118084, 3967, 204, 5, 36, "Input"],
Cell[118291, 3974, 136, 4, 24, "SmallText",
 Evaluatable->False],
Cell[118430, 3980, 267, 8, 20, "Input"],
Cell[118700, 3990, 94, 1, 24, "SmallText",
 Evaluatable->False],
Cell[118797, 3993, 66, 1, 20, "Input"],
Cell[118866, 3996, 289, 8, 99, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[119204, 4010, 120, 3, 31, "Subsubsection",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[119349, 4017, 181, 5, 74, "Text",
 Evaluatable->False],
Cell[119533, 4024, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[119584, 4027, 329, 7, 99, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[119962, 4040, 122, 3, 31, "Subsubsection",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[120109, 4047, 177, 5, 74, "Text",
 Evaluatable->False],
Cell[120289, 4054, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[120340, 4057, 266, 6, 99, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[120655, 4069, 95, 2, 31, "Subsubsection"],
Cell[120753, 4073, 61, 0, 24, "Text"],
Cell[120817, 4075, 1495, 48, 111, "Input"],
Cell[122315, 4125, 33, 0, 24, "Text"],
Cell[122351, 4127, 514, 15, 51, "Input"],
Cell[122868, 4144, 41, 1, 24, "Text",
 Evaluatable->False],
Cell[122912, 4147, 66, 1, 20, "Input"],
Cell[CellGroupData[{
Cell[123003, 4152, 418, 8, 174, "Text"],
Cell[123424, 4162, 27, 0, 23, "Special1"],
Cell[123454, 4164, 64, 0, 24, "SmallText"],
Cell[123521, 4166, 714, 21, 66, "Input"],
Cell[124238, 4189, 346, 11, 99, "SmallText"],
Cell[124587, 4202, 766, 22, 66, "Input"],
Cell[125356, 4226, 461, 15, 99, "SmallText"],
Cell[125820, 4243, 267, 8, 47, "Special2"],
Cell[126090, 4253, 33, 0, 24, "SmallText"],
Cell[126126, 4255, 820, 23, 66, "Input"],
Cell[126949, 4280, 473, 15, 99, "SmallText"],
Cell[127425, 4297, 820, 22, 81, "Input"],
Cell[128248, 4321, 250, 6, 99, "SmallText"],
Cell[128501, 4329, 326, 8, 36, "Input"],
Cell[128830, 4339, 179, 3, 49, "SmallText"],
Cell[129012, 4344, 238, 6, 20, "Input"],
Cell[129253, 4352, 145, 3, 49, "SmallText"],
Cell[129401, 4357, 789, 24, 126, "Input"],
Cell[130193, 4383, 37, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[130279, 4389, 94, 2, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[130398, 4395, 315, 6, 124, "Text"],
Cell[130716, 4403, 27, 0, 23, "Special1"],
Cell[130746, 4405, 649, 14, 174, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[131456, 4426, 379, 12, 86, "Subsection",
 CellTags->"MGM.08.B4"],
Cell[131838, 4440, 207, 8, 49, "Text"],
Cell[CellGroupData[{
Cell[132070, 4452, 129, 3, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[132224, 4459, 129, 3, 49, "Text"],
Cell[132356, 4464, 27, 0, 23, "Special1"],
Cell[132386, 4466, 33, 0, 24, "SmallText"],
Cell[132422, 4468, 24, 0, 56, "Accident"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[132495, 4474, 155, 3, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[132675, 4481, 153, 3, 49, "Text"],
Cell[132831, 4486, 27, 0, 23, "Special1"],
Cell[132861, 4488, 33, 0, 24, "SmallText"],
Cell[132897, 4490, 24, 0, 56, "Accident"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[132970, 4496, 47, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[133042, 4500, 786, 25, 100, "Text"],
Cell[133831, 4527, 27, 0, 23, "Special1"],
Cell[133861, 4529, 2183, 69, 551, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[136093, 4604, 48, 0, 31, "Subsubsection"],
Cell[136144, 4606, 61, 0, 24, "Text"],
Cell[136208, 4608, 1117, 38, 111, "Input"],
Cell[CellGroupData[{
Cell[137350, 4650, 69, 0, 24, "Text"],
Cell[137422, 4652, 27, 0, 23, "Special1"],
Cell[137452, 4654, 169, 3, 49, "SmallText"],
Cell[137624, 4659, 429, 13, 51, "Input"],
Cell[138056, 4674, 249, 6, 99, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[138354, 4686, 64, 0, 31, "Subsubsection"],
Cell[138421, 4688, 162, 4, 49, "Text",
 Evaluatable->False],
Cell[138586, 4694, 1067, 34, 96, "Input"],
Cell[CellGroupData[{
Cell[139678, 4732, 761, 27, 175, "Text"],
Cell[140442, 4761, 27, 0, 23, "Special1"],
Cell[140472, 4763, 874, 32, 150, "SmallText"],
Cell[141349, 4797, 296, 9, 20, "Input"],
Cell[141648, 4808, 27, 0, 24, "SmallText"],
Cell[141678, 4810, 261, 8, 68, "Input"],
Cell[141942, 4820, 31, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[142022, 4826, 48, 0, 31, "Subsubsection"],
Cell[142073, 4828, 61, 0, 24, "Text"],
Cell[142137, 4830, 1601, 52, 141, "Input"],
Cell[CellGroupData[{
Cell[143763, 4886, 69, 0, 24, "Text"],
Cell[143835, 4888, 27, 0, 23, "Special1"],
Cell[143865, 4890, 169, 3, 49, "SmallText"],
Cell[144037, 4895, 429, 13, 51, "Input"],
Cell[144469, 4910, 251, 5, 74, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[144769, 4921, 99, 2, 31, "Subsubsection"],
Cell[144871, 4925, 93, 2, 24, "Text"],
Cell[144967, 4929, 1601, 52, 141, "Input"],
Cell[CellGroupData[{
Cell[146593, 4985, 167, 4, 74, "Text"],
Cell[146763, 4991, 27, 0, 23, "Special1"],
Cell[146793, 4993, 273, 5, 99, "SmallText"],
Cell[147069, 5000, 661, 19, 66, "Input"],
Cell[147733, 5021, 346, 11, 99, "SmallText"],
Cell[148082, 5034, 714, 20, 66, "Input"],
Cell[148799, 5056, 473, 15, 99, "SmallText"],
Cell[149275, 5073, 767, 21, 66, "Input"],
Cell[150045, 5096, 473, 15, 99, "SmallText"],
Cell[150521, 5113, 820, 22, 81, "Input"],
Cell[151344, 5137, 250, 6, 99, "SmallText"],
Cell[151597, 5145, 277, 7, 20, "Input"],
Cell[151877, 5154, 145, 3, 49, "SmallText"],
Cell[152025, 5159, 187, 5, 20, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[152273, 5171, 132, 3, 36, "Subsection",
 CellTags->"MGM.08.B5"],
Cell[CellGroupData[{
Cell[152430, 5178, 145, 3, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[152600, 5185, 427, 11, 124, "Text"],
Cell[153030, 5198, 27, 0, 23, "Special1"],
Cell[153060, 5200, 1263, 30, 349, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[154372, 5236, 87, 1, 31, "Subsubsection"],
Cell[154462, 5239, 215, 4, 43, "Special5"],
Cell[CellGroupData[{
Cell[154702, 5247, 1154, 39, 225, "Text",
 Evaluatable->False],
Cell[155859, 5288, 27, 0, 23, "Special1"],
Cell[155889, 5290, 3342, 104, 677, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[159280, 5400, 147, 3, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[159452, 5407, 428, 11, 124, "Text"],
Cell[159883, 5420, 27, 0, 23, "Special1"],
Cell[159913, 5422, 1294, 31, 349, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[161256, 5459, 85, 1, 31, "Subsubsection"],
Cell[161344, 5462, 218, 4, 43, "Special5"],
Cell[CellGroupData[{
Cell[161587, 5470, 1109, 37, 225, "Text",
 Evaluatable->False],
Cell[162699, 5509, 27, 0, 23, "Special1"],
Cell[162729, 5511, 3342, 101, 677, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[166132, 5619, 127, 3, 36, "Subsection",
 CellTags->"MGM.08.B6"],
Cell[166262, 5624, 710, 20, 149, "Text"],
Cell[CellGroupData[{
Cell[166997, 5648, 215, 4, 52, "Subsubsection"],
Cell[167215, 5654, 207, 6, 23, "Special2"],
Cell[167425, 5662, 123, 3, 49, "Text"],
Cell[167551, 5667, 208, 11, 24, "Text"],
Cell[CellGroupData[{
Cell[167784, 5682, 120, 3, 49, "Text"],
Cell[167907, 5687, 27, 0, 23, "Special1"],
Cell[167937, 5689, 121, 2, 12, "Special2"],
Cell[168061, 5693, 322, 7, 99, "SmallText"],
Cell[168386, 5702, 256, 13, 24, "Text"],
Cell[168645, 5717, 247, 6, 99, "SmallText"],
Cell[168895, 5725, 101, 2, 24, "SmallText"],
Cell[168999, 5729, 260, 13, 24, "SmallText"],
Cell[169262, 5744, 68, 3, 49, "SmallText"],
Cell[169333, 5749, 287, 14, 24, "SmallText"],
Cell[169623, 5765, 307, 9, 174, "SmallText"],
Cell[169933, 5776, 43, 0, 24, "SmallText"],
Cell[169979, 5778, 218, 11, 24, "SmallText"],
Cell[170200, 5791, 615, 22, 180, "SmallText"],
Cell[170818, 5815, 506, 23, 39, "Text"],
Cell[171327, 5840, 499, 21, 24, "SmallText"],
Cell[CellGroupData[{
Cell[171851, 5865, 103, 2, 12, "Special2"],
Cell[171957, 5869, 37, 0, 24, "SmallText"],
Cell[171997, 5871, 204, 11, 24, "Text"],
Cell[172204, 5884, 45, 0, 24, "SmallText"],
Cell[172252, 5886, 24, 0, 24, "SmallText"],
Cell[172279, 5888, 452, 20, 39, "Text"],
Cell[172734, 5910, 16, 0, 24, "Text"],
Cell[172753, 5912, 34, 0, 24, "SmallText"],
Cell[172790, 5914, 584, 25, 50, "Text"],
Cell[173377, 5941, 686, 28, 99, "SmallText"]
}, Closed]],
Cell[174078, 5972, 516, 21, 24, "SmallText"],
Cell[CellGroupData[{
Cell[174619, 5997, 103, 2, 12, "Special2"],
Cell[174725, 6001, 52, 0, 24, "SmallText"],
Cell[174780, 6003, 237, 10, 48, "Text"],
Cell[175020, 6015, 166, 5, 24, "SmallText"],
Cell[175189, 6022, 514, 21, 73, "Text"],
Cell[175706, 6045, 16, 0, 24, "Text"],
Cell[175725, 6047, 34, 0, 24, "SmallText"],
Cell[175762, 6049, 449, 20, 39, "Text"],
Cell[176214, 6071, 1073, 42, 100, "SmallText"],
Cell[177290, 6115, 1186, 49, 50, "SmallText"],
Cell[178479, 6166, 1402, 57, 50, "SmallText"],
Cell[179884, 6225, 1016, 41, 50, "Text"],
Cell[180903, 6268, 1041, 44, 50, "Text"],
Cell[181947, 6314, 609, 26, 50, "Text"],
Cell[182559, 6342, 308, 13, 50, "Text"],
Cell[182870, 6357, 835, 38, 74, "SmallText"]
}, Closed]],
Cell[183720, 6398, 191, 8, 24, "SmallText"],
Cell[CellGroupData[{
Cell[183936, 6410, 103, 2, 12, "Special2"],
Cell[184042, 6414, 750, 28, 99, "SmallText"]
}, Closed]],
Cell[184807, 6445, 151, 4, 49, "SmallText"],
Cell[184961, 6451, 260, 13, 24, "SmallText"],
Cell[185224, 6466, 52, 0, 24, "SmallText"],
Cell[185279, 6468, 218, 11, 24, "SmallText"],
Cell[185500, 6481, 163, 4, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[185712, 6491, 217, 4, 52, "Subsubsection"],
Cell[185932, 6497, 161, 4, 74, "Text"],
Cell[186096, 6503, 208, 11, 24, "Text"],
Cell[CellGroupData[{
Cell[186329, 6518, 120, 3, 49, "Text"],
Cell[186452, 6523, 27, 0, 23, "Special1"],
Cell[186482, 6525, 71, 0, 24, "SmallText"],
Cell[186556, 6527, 244, 11, 49, "SmallText"],
Cell[186803, 6540, 208, 11, 24, "Text"],
Cell[187014, 6553, 131, 3, 49, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
