(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    239785,       8100]
NotebookOptionsPosition[    173705,       6637]
NotebookOutlinePosition[    226883,       7750]
CellTagsIndexPosition[    226689,       7741]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.10 The Spectral Theorem for Symmetric Matrices and the Holy Grail of \
Matrix Theory\n",
 StyleBox[" BASICS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1)",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 "The Spectral Theorem says that if ",
 StyleBox["A ",
  FontColor->RGBColor[0, 0, 1]],
 "is a square symmetric matrix (",
 StyleBox["A = ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontColor->RGBColor[0, 0, 1]],
 " hitting on hitdimD, then there is an",
 StyleBox[" orthonormal basis",
  FontColor->RGBColor[0, 0, 1]],
 " of hitdimD consisting of unit ",
 StyleBox["eigenvectors",
  FontColor->RGBColor[0, 0, 1]],
 " of A."
}], "Subsection",
 CellTags->"MGM.10.B1"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.1.a.i) The Spectral Theorem says that if ",
 StyleBox["A ",
  FontColor->RGBColor[0, 0, 1]],
 "is a square symmetric matrix (",
 StyleBox["A = ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontColor->RGBColor[0, 0, 1]],
 " hitting on hitdimD, then there is an",
 StyleBox[" orthonormal basis",
  FontColor->RGBColor[0, 0, 1]],
 " of hitdimD consisting of unit ",
 StyleBox["eigenvectors",
  FontColor->RGBColor[0, 0, 1]],
 " of A."
}], "Subsubsection"],

Cell[CellGroupData[{

Cell["Talk a little bit about the spectral theorem.", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "The spectral theorem says that if you have symmetric matrix A (this means A \
= ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 "), then there is an",
 StyleBox[" orthonormal basis",
  FontColor->RGBColor[0, 0, 1]],
 " of hitdimD consisting of unit ",
 StyleBox["eigenvectors",
  FontColor->RGBColor[0, 0, 1]],
 " of A.\nTry it out on a random symmetric matrix A:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "5"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"b", ",", "i", ",", "j"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"b", "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"Random", "[", 
   RowBox[{"Real", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"i", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hitdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{
     RowBox[{"Transpose", "[", "B", "]"}], ".", "B"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["\<\
Let Mathematica calculate a linearly independent set of eigenvectors of A:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"eigenvector", ",", "k"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eigenvector", "[", "k_", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"Eigenvectors", "[", "A", "]"}], "[", 
   RowBox[{"[", "k", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"eigenvector", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], "Input"],

Cell["\<\
This set of eigenvectors of A forms an orthonormal basis of hitdimD as the \
following calculation confirms:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"eigenvector", "[", "j", "]"}], ".", 
     RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}], "]"}]], "Input"],

Cell["\<\
This output signals that if  k \[NotEqual] j, then eigenvector[k] is \
perpendicular to eigenvector[j] 
and each of the calculated eigenvectors is a unit vector.
Try it for more random symmetric matrices:
\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "10"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"b", ",", "i", ",", "j"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"b", "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"Random", "[", 
   RowBox[{"Real", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"i", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hitdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{
     RowBox[{"Transpose", "[", "B", "]"}], " ", ".", "B"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"eigenvector", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"eigenvector", "[", "k_", "]"}], " ", ":=", 
  RowBox[{
   RowBox[{"Eigenvectors", "[", "A", "]"}], "[", 
   RowBox[{"[", "k", "]"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"eigenvector", "[", "k", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}]}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Chop", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"eigenvector", "[", "j", "]"}], ".", 
      RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}], "]"}], 
  "]"}]}], "Input"],

Cell["Rerun as much as you want to.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.1.a.ii) Explanation of the Spectral Theorem", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
How about an explanation of where the Spectral Theorem comes from?\
\>", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
Hold your horses. 
You will get a full explanation later in this lesson.
Learning how to use the Spectral Theorem is more important than knowing its \
proof.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2) The Spectral Theorem as the holy grail of matrix theory:\nIf A is any \
matrix, then  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " is symmetric.\n",
 StyleBox["\n",
  FontColor->RGBColor[0, 0, 1]],
 "For any matrix A, the Spectral theorem gives you an orthonormal basis \n    \
       {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ", ...., ",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} \nof hitdimD consisting of ",
 StyleBox["unit ",
  FontWeight->"Bold"],
 "eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " .\nYou can get the alignerframe, the stretch factors and the hangerframe \
for A directly from these vectors."
}], "Subsection",
 CellTags->"MGM.10.B2"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2.a.i) If A is any matrix, then ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " is symmetric"
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this:\nIf A is any matrix, then ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " is symmetric."
}], "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "Go with any matrix A and put B = ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 "\nNow note that:"
}], "SmallText"],

Cell[TextData[{
 "       ",
 Cell[BoxData[
  SuperscriptBox["B", "t"]]],
 " =  ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", 
     StyleBox["A",
      FontColor->RGBColor[1, 0, 0]]}], ")"}], 
   RowBox[{"t", " "}]]]],
 "=  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    StyleBox["A",
     FontColor->RGBColor[1, 0, 0]], "t"], "."}]]],
 " ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], "."}], ")"}], 
   RowBox[{"t", " "}]]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    StyleBox["A",
     FontColor->RGBColor[1, 0, 0]], "t"], "."}]]],
 " A = B."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.2.a.ii) Using the Spectral Theorem to ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " to unlock the secrets of SVD analysis of A"
}], "Subsubsection"],

Cell[TextData[{
 "For any matrix A, the Spectral theorem gives you an orthonormal basis \n    \
       {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} \nof hitdimD consisting of ",
 StyleBox["unit ",
  FontWeight->"Bold"],
 "eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". "
}], "Text"],

Cell[TextData[{
 "\nGroup and (if necessary relabel) these vectors into two groups:\n        \
\nGroup I = {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " \[NotEqual] {0,0,...0} for all j = 1,2,...,p."
}], "Text"],

Cell[TextData[{
 "Group 2 = {",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "3"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " = {0,0,...} \n      for all j = p+1,p+2, ...,hitdimD.\n      \nFacts of \
the matter:\n\[FilledVerySmallSquare] An SVD alignerframe for A,\n          \
{alignerframe[1],alignerframe[2],.alignerframe[3], . .,alignerframe[p]}\n is \
\n            {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}."
}], "Text"],

Cell[TextData[{
 "\[FilledVerySmallSquare] The corresponding non-zero SVD stretch factors  \
for A,\n         {",
 StyleBox["stretch[1],stretch[2],stretch[3],....,stretch[p]",
  FontColor->RGBColor[1, 0, 1]],
 "}, \nare\n         {",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "1"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "2"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "3"]}], "||"}]]],
 ",....,",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "p"]}], "||"}]]],
 "}. \n"
}], "Text"],

Cell["\<\
\[FilledVerySmallSquare] The corresponding SVD hangerframe for A, 
       {hangerframe[1],hangerframe[2], . . .,hangerframe[p]}, 
is\
\>", "Text"],

Cell[TextData[{
 StyleBox["       {",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "1"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "2"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "2"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "3"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "3"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",. . .,",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "p"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "P"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["}.\n",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell["Go with this matrix  A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", "8"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", "=", " ", "5"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "And use unit eigenvectors of ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    SuperscriptBox["A", "t"], ".", "A"}],
   FontColor->RGBColor[0, 0, 1]]]],
 " to generate the full SVD of A."
}], "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "The Spectral theorem gives you an orthonormal basis \n           {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} \nof hitdimD consisting of ",
 StyleBox["unit ",
  FontWeight->"Bold"],
 "eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". \nHere they are:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"eigenvector", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eigenvector", "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Eigenvectors", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], "[", 
     RowBox[{"[", "k", "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"eigenvector", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}]}], "]"}], "]"}]}], "Input"],

Cell[TextData[{
 "\nGroup and (if necessary relabel) these vectors into two groups:\n        \
\nGroup I = {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " \[NotEqual] {0,0,...0} for all j = 1,2,...,p."
}], "SmallText"],

Cell[TextData[{
 "Group 2 = {",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "3"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " = {0,0,...} \n      for all j = p+1,p+2, ...,hitdimD.\n Find out what p is:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"Column", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[".",
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}]}], "]"}], "]"}], 
  "]"}]], "Input"],

Cell["So:", "SmallText"],

Cell[BoxData[
 RowBox[{"p", " ", "=", " ", "5"}]], "Input"],

Cell[TextData[{
 "\[FilledVerySmallSquare] An SVD alignerframe for A,\n          \
{alignerframe[1],alignerframe[2],.alignerframe[3], . .,alignerframe[p]}\n is \
\n            {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", " ", "=", " ", "5"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"alignerframe", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"eigenvector", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "p"}], "}"}]}], "]"}]}]}], "Input"],

Cell[TextData[{
 "\[FilledVerySmallSquare] The corresponding SVD stretch factors  for A,\n    \
     {",
 StyleBox["stretch[1],stretch[2],stretch[3],....,stretch[p]",
  FontColor->RGBColor[1, 0, 1]],
 "}, \nare\n         {",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "1"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "2"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "3"]}], "||"}]]],
 ",....,",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "p"]}], "||"}]]],
 "}:\n"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox["stretches",
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"Norm", "[", 
      RowBox[{"A", ".", 
       RowBox[{"eigenvector", "[", "k", "]"}]}], "]"}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "p"}], "}"}]}], "]"}]}]], "Input"],

Cell["\<\
\[FilledVerySmallSquare] The corresponding SVD hangerframe for A, 
       {hangerframe[1],hangerframe[2], . . .,hangerframe[p]}, 
is\
\>", "SmallText"],

Cell[TextData[{
 StyleBox["       {",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "1"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "2"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "2"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "3"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "3"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",. . .,",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "p"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "P"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["}.\n",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[BoxData[
 RowBox[{"hangerframe", " ", "=", 
  RowBox[{"Table", "[", "  ", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      StyleBox[
       RowBox[{"Norm", "[", 
        RowBox[{"A", ".", 
         RowBox[{"eigenvector", "[", "k", "]"}]}], "]"}],
       FontColor->RGBColor[0, 0, 1]]], 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[1, 0, 0]], ".", 
      RowBox[{"eigenvector", "[", "k", "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "p"}], "}"}]}], "]"}], "  "}]], "Input"],

Cell["Check it out:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"aligner", "=", " ", "alignerframe"}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"DiagonalMatrix", "[", "stretches", "]"}]}],
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[";",
    FontColor->GrayLevel[0]]}], 
  StyleBox[" ",
   FontColor->GrayLevel[0]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", "hangerframe", "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox["]",
   FontColor->RGBColor[0, 0, 1]]}]], "Input"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell["\<\
On the money.
Big time math happens again.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["B.2.a.iii) Explanations", "Subsubsection"],

Cell[TextData[{
 "For any matrix A, the Spectral theorem gives you an orthonormal basis \n    \
       {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} \nof hitdimD consisting of ",
 StyleBox["unit ",
  FontWeight->"Bold"],
 "eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". "
}], "Text"],

Cell[TextData[{
 "\nGroup and (if necessary relabel) these vectors into two groups:\n        \
\nGroup I = {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " \[NotEqual] {0,0,...0} for all j = 1,2,...,p."
}], "Text"],

Cell[TextData[{
 "Group 2 = {",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "3"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " = {0,0,...} \n      for all j = p+1,p+2, ...,hitdimD.\n      \nFacts of \
the matter:\n\[FilledVerySmallSquare] An SVD alignerframe for A,\n          \
{alignerframe[1],alignerframe[2],.alignerframe[3], . .,alignerframe[p]}\n is \
\n            {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}."
}], "Text"],

Cell[TextData[{
 "\[FilledVerySmallSquare] The corresponding SVD stretch factors  for A,\n    \
     {",
 StyleBox["stretch[1],stretch[2],stretch[3],....,stretch[p]",
  FontColor->RGBColor[1, 0, 1]],
 "}, \nare\n         {",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "1"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "2"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "3"]}], "||"}]]],
 ",....,",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "p"]}], "||"}]]],
 "}. \n"
}], "Text"],

Cell["\<\
\[FilledVerySmallSquare] The corresponding SVD hangerframe for A, 
       {hangerframe[1],hangerframe[2], . . .,hangerframe[p]}, 
is\
\>", "Text"],

Cell[TextData[{
 StyleBox["       {",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "1"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "2"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "2"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "3"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "3"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",. . .,",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "p"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "P"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["}.\n\n",
  FontColor->RGBColor[0, 0, 1]],
 "\[FilledVerySmallSquare]",
 StyleBox[" And when you go with these assignments, you are fully guaranteed \
that\n    A.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["X",
  FontColor->GrayLevel[0]],
 " =  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "p"], 
   RowBox[{
    StyleBox[
     RowBox[{"stretch", "[", "k", "]"}],
     FontColor->RGBColor[1, 0, 1]], " ", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["X",
       FontColor->GrayLevel[0]], ".", 
      RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 StyleBox[" \n  for any X in hitdimD\n",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[CellGroupData[{

Cell["Explain why all this works.", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["This is a little bit of mathematical bean-counting. ", "SmallText"],

Cell[TextData[{
 "\[FilledVerySmallSquare] Why the advertised aligner fame {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}  is a perpendicular frame."
}], "SmallText"],

Cell[CellGroupData[{

Cell["For an explanation, click on the right", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Reason:The Spectral theorem gives you an orthonormal basis \n{",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} is an orthonormal basis (perpendicular frame) \nof hitdimD consisting of ",
 StyleBox["unit ",
  FontWeight->"Bold"],
 "eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". \nSo {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} is a perpendicular frame"
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 "\[FilledVerySmallSquare] Why the advertised stretch factors\n         ",
 StyleBox["    stretch[k] ",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["= ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "k"]}], "||"}]],
  FontColor->RGBColor[0, 0, 1]],
 "  for k = 1,2,. . .,p \n are all positive."
}], "SmallText"],

Cell[CellGroupData[{

Cell["For an explanation, click on the right", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Reason:\n     ",
 StyleBox[" stretch[k]",
  FontColor->RGBColor[1, 0, 1]],
 " = ",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "k"]}], "||"}]]],
 " for k = 1,2,. . .,p are all positive\n because\n     ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SubscriptBox["X", "k"]}]]],
 " \[NotEqual] {0,0, . . . ,0} for k = 1,2,. . .,p "
}], "SmallText"]
}, Closed]],

Cell["\<\
\[FilledVerySmallSquare] Why the vectors in the advertised hanger frame\
\>", "SmallText"],

Cell[TextData[{
 StyleBox["       {",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "1"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "2"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "2"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "3"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "3"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",. . .,",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "p"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "P"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["}.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell["are all unit vectors.", "SmallText"],

Cell[CellGroupData[{

Cell["For an explanation, click on the right", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Go with any k with k = 1,2,. . .,p, and look at", "SmallText"],

Cell["and look at", "SmallText"],

Cell[TextData[{
 "              ( ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "k"]}], "||"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[0, 0, 1]],
 ").  ( ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "k"]}], "||"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[0, 0, 1]],
 ") "
}], "SmallText"],

Cell[TextData[{
 "          =   ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "k"]}], 
    SuperscriptBox["||", "2"]}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" (A. ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"k", " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["). (A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"k", " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "          =     ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"|", 
    RowBox[{
     RowBox[{"A", ".", 
      SubscriptBox["X", "k"]}], 
     SuperscriptBox["||", "2"]}]}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0, 1]], 
    SubscriptBox["X", 
     RowBox[{"k", " "}]]}], " ", 
   SuperscriptBox["||", "2"]}]]],
 "  "
}], "SmallText"],

Cell[TextData[{
 "           = ",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"]
}, Closed]],

Cell["\<\
\[FilledVerySmallSquare] Why the vectors in the advertised hanger frame\
\>", "SmallText"],

Cell[TextData[{
 StyleBox["       {",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "1"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "2"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "2"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "3"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "3"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",. . .,",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "p"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "P"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["}.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell["are orthonormal (perpendicular to each other).", "SmallText"],

Cell[CellGroupData[{

Cell["For an explanation, click on the right", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
Go with any k with k = 1,2,. . .,p, and any j with j = 1,2,. . .,p and j \
\[NotEqual] p\
\>", "SmallText"],

Cell["and look at", "SmallText"],

Cell[TextData[{
 "              ( ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "k"]}], "||"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[0, 0, 1]],
 ").  ( ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "j"]}], "||"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "j"]],
  FontColor->RGBColor[0, 0, 1]],
 ") "
}], "SmallText"],

Cell[TextData[{
 "          =   ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "k"]}], "||", "  ", "||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "j"]}], "||"}], "|"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" (",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[". ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"k", " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["). (A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"j", " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "          =   ",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "k"]}], "||", "  ", "||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "j"]}], "||"}], "|", " "}]], " "}]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["( ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"k", " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["). (",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", "t"],
   FontColor->RGBColor[1, 0, 0]]]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"j", " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "This comes from the transpose manipulation which says that\n(",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ".X).(Y) =  (X).(",
 Cell[BoxData[
  SuperscriptBox[
   StyleBox["A",
    FontSize->12], "t"]]],
 "Y) \nThis manipulation will be explained in a Basic below.."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "          =   ",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "k"]}], "||", "  ", "||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "j"]}], "||"}], "|"}]], " "}]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["( ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"k", " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[").(",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{
   StyleBox["eigenvalue",
    FontColor->RGBColor[1, 0, 0]], " ", 
   SubscriptBox["X", 
    RowBox[{"j", " "}]]}]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"j", " "}]]],
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is an eigenvector of ",
  FontSize->12],
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", "t"],
   FontColor->RGBColor[1, 0, 0]]],
  FontSize->12],
 StyleBox["A",
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 "; ",
 StyleBox[" so \n",
  FontSize->12],
 StyleBox[" (",
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", "t"],
   FontColor->RGBColor[1, 0, 0]]],
  FontSize->12],
 StyleBox["A.",
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"j", " "}]]],
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = ",
  FontSize->12],
 Cell[BoxData[
  RowBox[{
   StyleBox["eigenvalue",
    FontColor->RGBColor[1, 0, 0]], " ", 
   SubscriptBox["X", 
    RowBox[{"j", " "}]]}]],
  FontSize->12,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\n",
  FontSize->12]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "          =   ",
 Cell[BoxData[
  FractionBox[
   StyleBox["eigenvalue",
    FontColor->RGBColor[1, 0, 0]], 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "k"]}], "||", "  ", "||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "j"]}], "||"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ( ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"k", " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[").(",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"j", " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[")",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "          =   ",
 Cell[BoxData[
  FractionBox[
   StyleBox["eigenvalue",
    FontColor->RGBColor[1, 0, 0]], 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "k"]}], "||", "  ", "||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "j"]}], "||"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" 0  = 0.",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "because ",
 Cell[BoxData[
  SubscriptBox["X", "j"]],
  FontColor->RGBColor[0, 0, 1]],
 " is perpendicular to ",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"k", " "}]]],
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"]
}, Closed]],

Cell["\<\
\[FilledVerySmallSquare] Why when you go with
 {alignerframe[1],alignerframe[2],.alignerframe[3], . .,alignerframe[p]}\
\>", "SmallText"],

Cell[TextData[{
 "              =  {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}."
}], "SmallText"],

Cell[TextData[{
 "and\n         {",
 StyleBox["stretch[1],stretch[2],stretch[3],....,stretch[p]",
  FontColor->RGBColor[1, 0, 1]],
 "}"
}], "SmallText"],

Cell[TextData[{
 "              = {",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "1"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "2"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "3"]}], "||"}]]],
 ",....,",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "p"]}], "||"}]]],
 "}. "
}], "Text"],

Cell["\<\
and
       {hangerframe[1],hangerframe[2], . . .,hangerframe[p]}, \
\>", "SmallText"],

Cell[TextData[{
 StyleBox["    =  {",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "1"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "2"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "2"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "3"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "3"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",. . .,",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "p"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "P"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["}.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[TextData[{
 "you are guaranteed that\n                ",
 StyleBox["A.alignerframe[k] = ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretch[k]",
  FontColor->RGBColor[0.780407, 0.0823987, 0.521614]],
 StyleBox[" hangerframe[k] ",
  FontColor->RGBColor[0, 0, 1]],
 "\nfor all k = 1,2,3,. . .,p,"
}], "SmallText"],

Cell[CellGroupData[{

Cell["For an explanation, click on the right", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Because alignerframe[k] = ",
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[0, 0, 1]],
 ", you can be sure that"
}], "SmallText"],

Cell[TextData[{
 StyleBox["              A.alignerframe[k] = A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[0, 0, 1]],
 " \n                                           ",
 StyleBox["=  ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  StyleBox[
   FractionBox[
    StyleBox[
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}], "||"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}], "||"}],
     FontColor->RGBColor[0, 0, 1]]],
   FontColor->RGBColor[0, 0, 1]]]],
 " ",
 StyleBox[" A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[0, 0, 1]],
 " "
}], "SmallText"],

Cell[TextData[{
 "                                           = ",
 StyleBox["||A.",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"||", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     SubscriptBox["X", "k"]}], "||"}]]]],
 " ",
 StyleBox[" A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "                                           = ",
 StyleBox["stretch[k]",
  FontColor->RGBColor[1, 0, 1]],
 " ",
 StyleBox["hangerframe[k]",
  FontColor->RGBColor[0, 0, 1]],
 "\n because ",
 StyleBox["stretch[k]",
  FontColor->RGBColor[1, 0, 1]],
 " =  ",
 StyleBox["||A.",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[1, 0, 1]],
 "  and ",
 StyleBox["hangerframe[k]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"||", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     SubscriptBox["X", "k"]}], "||"}]]]],
 " ",
 StyleBox[" A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "k"]],
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"]
}, Closed]],

Cell["\<\
\[FilledVerySmallSquare] Why when you go with
 {alignerframe[1],alignerframe[2],.alignerframe[3], . .,alignerframe[p]}\
\>", "SmallText"],

Cell[TextData[{
 "              =  {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}."
}], "SmallText"],

Cell[TextData[{
 "and\n         {",
 StyleBox["stretch[1],stretch[2],stretch[3],....,stretch[p]",
  FontColor->RGBColor[1, 0, 1]],
 "}"
}], "SmallText"],

Cell[TextData[{
 "              = {",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "1"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "2"]}], "||"}]]],
 ",",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "3"]}], "||"}]]],
 ",....,",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "p"]}], "||"}]]],
 "}. "
}], "Text"],

Cell["\<\
and
       {hangerframe[1],hangerframe[2], . . .,hangerframe[p]}, \
\>", "SmallText"],

Cell[TextData[{
 StyleBox["    =  {",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "1"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "2"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "2"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "3"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "3"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",. . .,",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   StyleBox[
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "p"]}], "||"}],
    FontColor->RGBColor[1, 0, 1]]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SubscriptBox["X", "P"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["}.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell["you are guaranteed that for any X in hitdimD", "SmallText"],

Cell[TextData[{
 StyleBox["        A.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["X",
  FontColor->GrayLevel[0]],
 " =  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "p"], 
   RowBox[{
    StyleBox[
     RowBox[{"stretch", "[", "k", "]"}],
     FontColor->RGBColor[1, 0, 1]], " ", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["X",
       FontColor->GrayLevel[0]], ".", 
      RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 "."
}], "SmallText"],

Cell[CellGroupData[{

Cell["For an explanation, click on the right", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "The Spectral theorem gives you an orthonormal basis \n           {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} \nof hitdimD consisting of ",
 StyleBox["unit ",
  FontWeight->"Bold"],
 "eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". Because this is a basis of hitdimD, it spans all of hitdim D, so you can \
resolve X into its perpendicular components in the directions of these basis \
vectors."
}], "SmallText"],

Cell[TextData[{
 "              X = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "hitdim"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"X", ".", 
      SubscriptBox["X", "k"]}], ")"}], " ", 
    SubscriptBox["X", "k"]}]}]]]
}], "SmallText"],

Cell["Hit both sides with A to get ", "SmallText"],

Cell[TextData[{
 "              A.X = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "hitdim"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"X", ".", 
      SubscriptBox["X", "k"]}], ")"}], " ", 
    RowBox[{
     StyleBox["A",
      FontColor->GrayLevel[0]], ".", 
     SubscriptBox["X", "k"]}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "                       = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "p"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"X", ".", 
      SubscriptBox["X", "k"]}], ")"}], " ", 
    RowBox[{
     StyleBox["A",
      FontColor->GrayLevel[0]], ".", 
     SubscriptBox["X", "k"]}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "Reason: ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    StyleBox["A",
     FontColor->GrayLevel[0]], ".", 
    SubscriptBox["X", "k"]}],
   FontSize->12]]],
 " = {0,0,0,. . .,0} for k = p+1,p+2,....,hitdim. "
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "                       = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "p"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"X", ".", 
      RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}], " ", 
    RowBox[{
     StyleBox["A",
      FontColor->GrayLevel[0]], ".", 
     RowBox[{"alignerframe", "[", "k", "]"}]}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "Reason: ",
 Cell[BoxData[
  RowBox[{" ", 
   StyleBox[
    SubscriptBox["X", "k"],
    FontSize->12]}]]],
 " = ",
 StyleBox["alignerframe[k]",
  FontColor->RGBColor[0, 0, 1]],
 " for k = 1,2,...,p. "
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "                       = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "p"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"X", ".", 
      RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}], " ", 
    StyleBox[
     RowBox[{"stretch", "[", "k", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "Reason: A. ",
 StyleBox["alignerframe[k]",
  FontColor->RGBColor[0, 0, 1]],
 "  = stretch[k] hangerframe[k] for k = 1,2,...,p. "
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "                       = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "p"], " ", 
   RowBox[{
    StyleBox[
     RowBox[{"stretch", "[", "k", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{"(", 
     RowBox[{"X", ".", 
      RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]]
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.3) The Spectral Theorem as the holy grail of Matrix theory: \nIf",
 StyleBox[" A",
  FontColor->RGBColor[0, 0, 1]],
 " is a matrix (symmetric or not symmetric) that hits on hitdimD and if {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ", ...., ",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} is an orthonormal basis of unit eigenvectors of  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 "  (as guaranteed by the Spectral Theorem), then you can read off \n\[Rule] \
an orthonormal basis of the column space ",
 StyleBox["R[A]",
  FontColor->RGBColor[0, 0, 1]],
 " of ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " , \n\[Rule] an orthonormal basis of the null space ",
 StyleBox["N[A]",
  FontColor->RGBColor[0, 0, 1]],
 " of A,\n\[Rule] an orthonormal basis of the row space ",
 StyleBox["R[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " of ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 ",\nand\n\[Rule] the construction of the PseudoInverse of A"
}], "Subsection",
 CellTags->"MGM.10.B3"],

Cell["\<\
In this problem, you get to see how the Spectral Theorem reveals the secrets \
behind any matrix.
Here are the relevant terms:\
\>", "Text"],

Cell["Column space R[A] of a matrix A", "Subsubsection"],

Cell["\<\
Given a matrix A, the column space R[A] is the subspace of hangdimD \
consisting of all possible hits with A.\
\>", "Text"],

Cell["R[A] is spanned by the vertical columns of A.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Row space R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] of a matrix A"
}], "Subsubsection"],

Cell[TextData[{
 "Given matrix A, the row space R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] is the subspace of hitdimD consisting of all possible hits with ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "."
}], "Text"],

Cell[TextData[{
 "R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] is spanned by the horizontal rows of A."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Null space  N[A] of a matrix A", "Subsubsection"],

Cell["\<\
Given a matrix A, the null space N[A] is the subspace of hitdimD consisting \
of all X's with A.X = {0,0,...,0}\
\>", "Text"],

Cell["The pseudo inverse of a matrix A", "Subsubsection"],

Cell[TextData[{
 "Given a matrix A, and a vector Y in hangdimD, X = PseudoInverse[A].Y is the \
vector of smallest norm in hitdimD with the property that A.X is as close to \
Y as you can get by hitting with A. \nIf A is invertible, then \
PseudoInverse[A] = ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 "."
}], "Text"],

Cell[TextData[{
 "B.3.a.i)  Using an orthonormal basis{",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "}  unit ",
 "eigenvectors ",
 "of  ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 "   to read off \n\[Rule] an orthonormal basis of the column space R[A] of A \
, \n\[Rule] an orthonormal basis of the null space N[A] of A,\n\[Rule] an \
orthonormal basis of the row space R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] of A,\nand\n\[Rule] the construction of the PseudoInverse of A."
}], "Subsubsection"],

Cell[TextData[{
 "Given a matrix A hitting on hitdimD and hanging in hangdim D, you already \
know that ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " is a symmetric matrix which hits on hitdimD and hangs in hitdimD.\n\nThe \
Spectral theorem gives you an orthonormal basis {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} of hitdimD consisting of unit eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". Group and (if necessary relabel)  these vectors into two groups.\n        \
\nGroup I = {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " \[NotEqual] {0,0,...0} for all j = 1,2,...,p."
}], "Text"],

Cell["\<\
Group 1 gives an SVD aligner frame for A.
.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Group 2 = {",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "1"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "3"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " = {0,0,...} for all j = p+1,p+2, ...,hitdimD.\n\nThe facts of the matter \
are:\n\[FilledVerySmallSquare] The rank of A is p.\n\[FilledVerySmallSquare] \
To get an orthonormal basis of the column space R[A], you just go with   \n   \
          {",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}]}], "||"}]], ",", " ", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}]}], "||"}]], ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "3"]}]}], "||"}]], ",", "...", ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "p"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "p"]}]}], "||"}]]}]]],
 "}."
}], "Text"],

Cell["\<\
The upshot: SVD hangerframe for A is an orthonormal basis for R[A].\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\[FilledVerySmallSquare] To get an orthonormal basis of the row space R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "], you just go with  {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}."
}], "Text"],

Cell[TextData[{
 "The upshot: SVD alignerframe (corresponding to non-zero stretch factors) \
for A is an orthonormal basis for R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "]."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\[FilledVerySmallSquare]  To get an orthonormal basis of N[A], you just go \
with  {",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "1"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "}."
}], "Text"],

Cell[TextData[{
 "These are the eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " that are hit into {0,0,...,0} by A. "
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\[FilledVerySmallSquare]  For any Y in hangdimD, you can calculate \
PseudoInverse[A].Y ( or ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", 
    RowBox[{"-", "1"}]], ".", "Y"}]]],
 " if A is invertible) by going with\n            ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{"PseudoInverse", "[", "A", "]"}], ".", "Y"}]}]]],
 "=",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "p"], 
   RowBox[{
    FractionBox[
     RowBox[{"Y\[Bullet]", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}], ")"}]}], 
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "j"]}], 
      SuperscriptBox["||", "2"]}]], " ", 
    SubscriptBox["X", "j"]}]}]]]
}], "Text"],

Cell["\<\

Here's a matrix A. \
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
  "  "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Use the information above to come up with quick calculations of:
\[FilledVerySmallSquare] The rank of A
\[FilledVerySmallSquare] An orthonormal basis  the row space of A and the \
dimension of the row space of A,
\[FilledVerySmallSquare] An orthonormal basis of the null space of A and the \
dimension of the null space of A,
\[FilledVerySmallSquare] An orthonormal basis of the column space of A  and \
the dimension of the column space of A,
and
\[FilledVerySmallSquare] PseudoInverse[A].Y for any Y in hangdimD.\
\>", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["Look at A again:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell["This matrix hits on 6D and hangs in 4D.", "SmallText"],

Cell[BoxData[{
 RowBox[{"hitdim", " ", "=", " ", "6"}], "\n", 
 RowBox[{"hangdim", " ", "=", " ", "4"}]}], "Input"],

Cell[TextData[{
 "Look at:an orthonormal basis {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "}  of hitdimD consisting of unit eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 "."
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"eigenvector", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"eigenvector", "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Eigenvectors", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", "A", "]"}], ".", "A"}], "]"}], "[", 
     RowBox[{"[", "k", "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"eigenvector", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}]}], "]"}], "]"}]}], "Input"],

Cell["See which are hit into {0,0,. . . ,0} by A:", "SmallText"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"A", ".", 
     RowBox[{"eigenvector", "[", "k", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}]}], "]"}], "]"}]], "Input"],

Cell["\<\
The first four are non-zero. 
This signals that the rank of A is 4.:\
\>", "SmallText"],

Cell[TextData[{
 "An orthonormal basis of R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "], the row space of A is {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 "}:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", " ", "=", " ", "4"}], ";"}], " "}], "\n", 
 RowBox[{"rowspacebasis", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"eigenvector", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "p"}], "}"}]}], "]"}]}]}], "Input"],

Cell["The dimension of the row space of A is:", "SmallText"],

Cell[BoxData["p"], "Input"],

Cell[TextData[{
 "An orthonormal basis of N[A], the null space of A is {",
 Cell[BoxData[
  SubscriptBox["X", "5"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "6"]]],
 "} :"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nullspacebasis", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"eigenvector", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"p", "+", "1"}], ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"Column", "[", "nullspacebasis", "]"}]}], "Input"],

Cell["The dimension of the null space of A is:", "SmallText"],

Cell[BoxData[
 RowBox[{"hitdim", " ", "-", " ", "p"}]], "Input"],

Cell["\<\
An orthonormal basis {Y[1],Y[2],...,Y[p]} of R[A], the column space of A is:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"Y", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Y", "[", "k_", "]"}], " ", ":=", 
  FractionBox[
   RowBox[{"A", ".", 
    RowBox[{"eigenvector", "[", "k", "]"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"eigenvector", "[", "k", "]"}]}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"eigenvector", "[", "k", "]"}]}], ")"}]}]]]}], "\n", 
 RowBox[{"colspacebasis", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Y", "[", "k", "]"}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "p"}], "}"}]}], "]"}]}]}], "Input"],

Cell["The dimension of the column space of A is:", "SmallText"],

Cell[BoxData["p"], "Input"],

Cell[TextData[{
 "PseudoInverse[A].Y for any Y = {y[1],y[2],...,y[hangdim]} in hangdimD is\n\
",
 "  ",
 Cell[BoxData[
  RowBox[{"PseudoInverse", "[", 
   RowBox[{"A", ".", "Y"}], "]"}]]],
 " =",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "p"], 
   RowBox[{
    FractionBox[
     RowBox[{"Y\[Bullet]", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}], ")"}]}], 
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "j"]}], 
      SuperscriptBox["||", "2"]}]], " ", 
    SubscriptBox["X", "j"]}]}]]],
 ":\n"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"Y", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"y", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "hangdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"Expand", "[", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "p"], 
   RowBox[{
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{"Y", ".", 
        RowBox[{"(", 
         RowBox[{"A", ".", 
          RowBox[{"eigenvector", "[", "k", "]"}]}], ")"}]}], " "}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A", ".", 
         RowBox[{"eigenvector", "[", "k", "]"}]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{"A", ".", 
         RowBox[{"eigenvector", "[", "k", "]"}]}], ")"}]}]], ")"}], " ", 
    RowBox[{"eigenvector", "[", "k", "]"}]}]}], "]"}]}], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PseudoInverse", "[", "A", "]"}], ".", "Y"}]], "Input"],

Cell["Nailed it cold.", "SmallText"]
}, Closed]],

Cell[CellGroupData[{

Cell["B.3.a.ii) Explanations", "Subsubsection"],

Cell["Explain where all this good stuff comes from.", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "All of it comes from the Spectral theorem applied to a symmetric matrix \n\
Given a matrix A hitting on hitdimD and hanging in hangdim D, you already \
know that ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " is a symmetric matrix which hits on hitdimD and hangs in hitdimD.\n\nThe \
Spectral theorem gives you an orthonormal basis {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} of hitdimD consisting of unit eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". Group and (if necessary relabel)  these vectors into two groups.\n        \
\nGroup I = {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " \[NotEqual] {0,0,...0} for all j = 1,2,...,p.\nThese are also eigenvectors \
of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " whose corresponding eigenvalues are non -zero.\nGroup 2 = {",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "1"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "3"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " = {0,0,...} for all j = p+1,p+2, ...,hitdimD.\n\n"
}], "SmallText"],

Cell[TextData[{
 " To get an orthonormal basis of column space of A, R[A], you just go with  \
\n           {",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}]}], "||"}]], ",", " ", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}]}], "||"}]], ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "3"]}]}], "||"}]], ",", "...", ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "p"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "p"]}]}], "||"}]]}]]],
 "}.\nThe rank of A is p."
}], "Subsubsection"],

Cell[CellGroupData[{

Cell["For a detailed explanation, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "The Spectral theorem gives you an orthonormal basis {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} of hitdimD consisting of unit eigenvectors of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 ". \n        \n{",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} consists of the unit eigenvectors for which A.",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " \[NotEqual] {0,0,...} for all j = 1,2,...,p.\nGroup 1 gives an SVD aligner \
frame for A. So  \n          {",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}]}], "||"}]], ",", " ", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}]}], "||"}]], ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "3"]}]}], "||"}]], ",", "...", ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "p"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "p"]}]}], "||"}]]}]]],
 "}. \n is an SVD hanger frame for A. This perpendicular frame automatically \
spans R[A].\n This also reveals that the rank of A is p.\n"
}], "SmallText"]
}, Closed]],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
   "To", " ", "get", " ", "an", " ", "orthonormal", " ", "basis", " ", "of", 
    " ", "the", " ", "row", " ", "space", " ", "of", " ", "A"}], ",", 
   RowBox[{"R", "[", 
    SuperscriptBox["A", "t"], "]"}], ",", " ", 
   RowBox[{"you", " ", "just", " ", "go", " ", "with", "  ", 
    RowBox[{
     StyleBox[
      RowBox[{"{", 
       RowBox[{
        SubscriptBox["X", "1"], ",", 
        SubscriptBox["X", "2"], ",", 
        SubscriptBox["X", "3"], ",", 
        RowBox[{"...", "."}], ",", 
        SubscriptBox["X", "p"]}], "}"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", "The"}], " ", 
    "rank", " ", "of", " ", 
    SuperscriptBox["A", "t"], " ", "is", " ", "also", " ", 
    StyleBox["p",
     FontColor->RGBColor[0, 0, 1]], " ", "and", " ", "the", " ", "dimension", 
    " ", "of", " ", "the", " ", "row", " ", "space", " ", "of", " ", "A", " ",
     "is", " ", 
    StyleBox["p",
     FontColor->RGBColor[0, 0, 1]]}]}], TextForm]], "Subsubsection"],

Cell[CellGroupData[{

Cell["For a detailed explanation, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Note first:\nThe (dimension of R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "]) = ( rank of ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ")  = (rank of A) = dimension of R[A] = p.\nAlso note that\n {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} spans a p-dimensional subspace of hitdimD. \nNow, if you can explain why \
each of the vectors in  {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} are also in R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] ( the subspace consisting of all hits with ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ", you will have explained why  {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "} is an orthonormal basis of R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "].\n \nTo this end, take ",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 "  with 1 \[LessEqual] j \[LessEqual] p and remember that ",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 "  is and eigenvector of ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["A", "t"], ".", "A"}]]],
 " with corresponding eigenvalue  ",
 Cell[BoxData[
  SubscriptBox["\[Lambda]", "j"]]],
 " .\nThis tells you (and everyone else) that\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "t"], ".", "A"}], ")"}], ".", 
    SubscriptBox["X", "j"]}], " ", "=", " ", 
   RowBox[{
    SubscriptBox["\[Lambda]", "j"], " ", 
    SubscriptBox["X", 
     RowBox[{"j", " "}]]}]}]]],
 ".\nThis is the same as saying\n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["A", "t"], ".", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{"A", ".", 
       SubscriptBox["X", "j"]}], 
      SubscriptBox["\[Lambda]", "j"]], ")"}]}], "=", " ", 
   SubscriptBox["X", 
    RowBox[{"j", " "}]]}]]],
 ".\nThis tells you that to get  ",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"j", " "}]]]],
 ", all you have to do its to hit ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    FractionBox[
     RowBox[{"A", ".", 
      SubscriptBox["X", "j"]}], 
     SubscriptBox["\[Lambda]", "j"]], ")"}], " "}]]],
 "with ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 ".\nThis signals that  ",
 Cell[BoxData[
  SubscriptBox["X", "j"]]],
 " is in R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "]. \n\nThe upshot: The orthonormal set   {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}  is in R[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "].\n\nExplanation complete.\n            "
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 " To get an orthonormal basis of the null space of A, N[A], you just go with \
 {",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "1", " "}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "}.\nThe dimension of the null space of A is ",
 StyleBox["hitdim - p",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell["For a detailed explanation, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 " {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} is an orthonormal basis of hitdimD.\nAny X in hitdimD is of this form:\n  \
         ",
 Cell[BoxData[
  RowBox[{"X", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "hitdim"], 
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["X\[Bullet]X", "j"], ")"}], " ", 
     SubscriptBox["X", "j"]}]}]}]]],
 ".\nSo\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", "X"}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "hitdim"], 
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["X\[Bullet]X", "j"], ")"}], " ", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "j"]}]}]}]}]]],
 "\n                     ",
 Cell[BoxData[
  RowBox[{"=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], 
     StyleBox["p",
      FontColor->RGBColor[0.889998, 0.209995, 0.219989]]], 
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["X\[Bullet]X", "j"], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "j"]}], ")"}]}]}]}]]],
 "\nbecause ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    SubscriptBox["X", "j"]}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "...", ",", "0"}], "}"}]}]]],
 " for j= p+1, p+2, ..., hitdim.\n\nNow remember that \n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "i"]}], ")"}], "\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "j"]}], ")"}]}], " ", "=", " ", "0"}]]],
 " for i \[NotEqual] j\nand calculate\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", ".", "X"}], " ", ")"}], "\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{"A", ".", "X"}], ")"}]}]]],
 " =",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "p"], 
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "j"]}]}], 
    SuperscriptBox["||", "2"], "  ", 
    SuperscriptBox[
     RowBox[{"(", 
      SubscriptBox["X\[Bullet]X", "j"], ")"}], "2"]}]}]]],
 ". \nSo saying that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", "X"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "...", ",", "0"}], "}"}]}]]],
 " is the same as saying\n             ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "p"], 
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "j"]}]}], 
    SuperscriptBox["||", "2"], "  ", 
    SuperscriptBox[
     RowBox[{"(", 
      SubscriptBox["X\[Bullet]X", "j"], ")"}], "2"]}]}]]],
 " = 0.\n             \nBecause each term in the sum is non negative, saying \
that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", "X"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "...", ",", "0"}], "}"}]}]]],
 "is the same as saying that\n                 ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "j"]}]}], 
   SuperscriptBox["||", "2"], "  ", 
   SuperscriptBox[
    RowBox[{"(", 
     SubscriptBox["X\[Bullet]X", "j"], ")"}], "2"]}]]],
 " = 0 for all j = 1, 2,...p.\n                 \n But ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"||", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "j"]}]}], 
   SuperscriptBox["||", "2"]}]]],
 " > 0 for each j = 1,2,...p.\n \n So: Saying that  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", "X"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "...", ",", "0"}], "}"}]}]]],
 " is the same as saying that\n                 ",
 Cell[BoxData[
  RowBox[{" ", 
   SubscriptBox["X\[Bullet]X", "j"]}]]],
 " = 0 for all j = 1, 2,...p.\n                 \nTo recapitulate: \nStarting \
with\n            ",
 Cell[BoxData[
  RowBox[{"X", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "hitdim"], 
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["X\[Bullet]X", "j"], ")"}], " ", 
     SubscriptBox["X", "j"]}]}]}]]],
 ",\n saying that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", "X"}], "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "...", ",", "0"}], "}"}]}]]],
 " is the same as saying that\n            ",
 Cell[BoxData[
  RowBox[{"X", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     StyleBox[
      RowBox[{"j", "=", 
       RowBox[{"p", "+", "1"}]}],
      FontColor->RGBColor[0.889998, 0.209995, 0.219989]], "hitdim"], 
    RowBox[{
     RowBox[{"(", 
      SubscriptBox["X\[Bullet]X", "j"], ")"}], " ", 
     SubscriptBox["X", "j"]}]}]}]]],
 " \n and this is the same as saying that X is in the subspace of hitdimD \
spanned by\n            {",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "1"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "3"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "}.\n            \nThis explains why {",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "1"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{
    RowBox[{"2", "p"}], "+", "2"}]]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "3"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} is an orthonormal basis of N[A]."
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 " For any Y in hangdimD, you can calculate PseudoInverse[A] ( or ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]]],
 "if A is invertible) by going with\n                  ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{"PseudoInverse", "[", 
    RowBox[{"A", ".", "Y"}], "]"}]}]]],
 " =",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "p"], 
   RowBox[{
    FractionBox[
     RowBox[{"Y\[Bullet]", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}], ")"}]}], 
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "j"]}], 
      SuperscriptBox["||", "2"]}]], " ", 
    SubscriptBox["X", "j"]}]}]]]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell["For a detailed explanation, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "   {",
 Cell[BoxData[
  RowBox[{
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}]}], "||"}]], ",", " ", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}]}], "||"}]], ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "3"]}]}], "||"}]], ",", "...", ",", 
   FractionBox[
    RowBox[{"A", ".", 
     SubscriptBox["X", "p"]}], 
    RowBox[{
     RowBox[{"||", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "p"]}]}], "||"}]]}]]],
 "} is an orthonormal basis of R[A], the subspace of hangdimD consisting of \
all possible hits with A. Accordingly if Y is any vector in hangdimD, then \
the vector in R[A] closest to Y is\n           \n                R[A]closest= \
  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "p"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y\[Bullet]", 
      FractionBox[
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}], 
       RowBox[{
        RowBox[{"||", 
         RowBox[{"A", ".", 
          SubscriptBox["X", "j"]}]}], "||"}]]}], ")"}], " ", 
    FractionBox[
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[1, 0, 0]], ".", 
      SubscriptBox["X", "j"]}], 
     RowBox[{
      RowBox[{"||", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}]}], "||"}]]}]}]]],
 " =  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "p"], 
   RowBox[{
    FractionBox[
     RowBox[{"Y\[Bullet]", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}], ")"}]}], 
     RowBox[{
      RowBox[{"||", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}]}], 
      SuperscriptBox["||", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[".",
       FontColor->RGBColor[1, 0, 0]], 
      SubscriptBox["X", "j"]}], ")"}]}]}]]],
 "\nTo get PseudoInverse[A].Y, you just erase the red A to get\n              \
  Xapprox  =   ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "p"], 
   RowBox[{
    FractionBox[
     RowBox[{"Y\[Bullet]", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}], ")"}]}], 
     RowBox[{
      RowBox[{"||", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}]}], 
      SuperscriptBox["||", "2"]}]], " ", 
    SubscriptBox["X", "j"]}]}]]],
 " .\nNow when you hit Xapprox with A, you get\n       ",
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 ".Xapprox  =  ",
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 ". ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "p"], 
    RowBox[{
     FractionBox[
      RowBox[{"Y\[Bullet]", 
       RowBox[{"(", 
        RowBox[{"A", ".", 
         SubscriptBox["X", "j"]}], ")"}]}], 
      RowBox[{
       RowBox[{"||", 
        RowBox[{"A", ".", 
         SubscriptBox["X", "j"]}]}], 
       SuperscriptBox["||", "2"]}]], " ", 
     SubscriptBox["X", "j"]}]}], "  ", "="}]]],
 "  ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "p"], 
   RowBox[{
    FractionBox[
     RowBox[{"Y\[Bullet]", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}], ")"}]}], 
     RowBox[{
      RowBox[{"||", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "j"]}]}], 
      SuperscriptBox["||", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      StyleBox["A",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[".",
       FontColor->RGBColor[1, 0, 0]], 
      SubscriptBox["X", "j"]}], ")"}]}]}]]],
 " =    R[A]closest.\nTo see why Xapprox is the vector X in hitdimD of \
smallest norm satisfying\n       A.X =  R[A]closest, \nnotice that if X is \
any other vector with   \n           A.X =  R[A]closest,\nthen X - Xapprox = \
Z is in N[A]\nSo \n              X = Xapprox+ Z with Z in N[A]\nBut:\n-> \
Xapprox is in the span of"
}], "SmallText"],

Cell[TextData[{
 "          {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}"
}], "SmallText"],

Cell["\<\
and 
    Z is the span of\
\>", "SmallText"],

Cell[TextData[{
 "            {",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"p", "+", "2"}]]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "}."
}], "SmallText"],

Cell[TextData[{
 "This guarantees that\n           Xapprox\[Bullet]Z= 0 \n (because all the \
vectors in the span of {",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "hitdim"]]],
 "} are perpendicular to all vectors in the span of  {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "p"]]],
 "}.\n So"
}], "SmallText"],

Cell[TextData[{
 "               ",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"Xapprox", "+", "Z"}], 
   SuperscriptBox["||", "2"]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Xapprox", "+", "Z"}], ")"}], " ", "\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{"Xapprox", "+", "Z"}], ")"}]}]]],
 "  \n                                          = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Xapprox\[Bullet]", " ", "Xapprox"}], "+", 
   RowBox[{"2", 
    RowBox[{"(", " ", "Xapprox\[Bullet]Z", ")"}]}]}]]],
 " + ",
 Cell[BoxData["Z\[Bullet]Z"]],
 " \n                                          = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Xapprox\[Bullet]", " ", "Xapprox"}], "+", 
   RowBox[{"2", 
    RowBox[{"(", "0", ")"}]}]}]]],
 " + ",
 Cell[BoxData["Z\[Bullet]Z"]],
 " \n                                          = ",
 Cell[BoxData[
  RowBox[{"||", "Xapprox", 
   SuperscriptBox["||", "2"]}]]],
 " + ",
 Cell[BoxData[
  RowBox[{"||", "Z", 
   SuperscriptBox["||", "2"]}]]],
 " > ",
 Cell[BoxData[
  RowBox[{"||", "Xtest", 
   SuperscriptBox["||", "2"]}]]],
 " \nunless Z = {0,0,...,0}."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4) For the record: The transpose manipulation: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "t"], ".", "Y"}], " ", ")"}], "\[Bullet]X"}]}]]]
}], "Subsection",
 CellTags->"MGM.10.B4"],

Cell[CellGroupData[{

Cell[TextData[{
 "B.4) The transpose manipulation: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "t"], ".", "Y"}], " ", ")"}], "\[Bullet]X"}]}]]]
}], "Subsubsection"],

Cell[TextData[{
 "The transpose manipulation says that if a matrix A hits on hitdimD and \
hangs in hangdimD, you can be sure that\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "t"], ".", "Y"}], " ", ")"}], "\[Bullet]X"}]}]]],
 ".\nfor all hitdimD vectors X and for all hangdimD vectors Y.\nTry it out \
for random vectors X and Y and random matrices A:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "7"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Integer", ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "7"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"MatrixForm", "[", "A", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"X", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 StyleBox[
  RowBox[{"Y", ".", 
   RowBox[{"(", 
    RowBox[{"A", ".", "X"}], ")"}]}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Transpose", "[", "A", "]"}], ".", "Y"}], ")"}], ".", "X"}],
  FontColor->RGBColor[1, 0.379995, 0.00999466]]}], "Input"],

Cell["Rerun a couple of times.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Although not terribly interesting in its own right, the transpose \
manipulation \n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "t"], ".", "Y"}], " ", ")"}], "\[Bullet]X"}]}]]],
 ".\nlies at the heart of a lot of theory."
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "For the record, explain why the outcome\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "t"], ".", "Y"}], " ", ")"}], "\[Bullet]X"}]}]]],
 "\nis always guaranteed."
}], "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "Agree that the arbitrary vector X in hitdimD is:\n             ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"X", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], ",", 
      RowBox[{"x", "[", "2", "]"}], ",", 
      RowBox[{".", " ", ".", " ", "."}], ",", 
      RowBox[{"x", "[", "hitdim", "]"}]}], "}"}]}],
   FontColor->GrayLevel[0]]]],
 ".\nAgree that ",
 Cell[BoxData[
  RowBox[{"COL", "[", "j", "]"}]]],
 " is the jth vertical column of A.\nTake an arbitrary Y in hangdimD and \
start bean-counting calculations:\n               ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    StyleBox["X",
     FontColor->GrayLevel[0]]}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], 
     RowBox[{" ", "hitdim"}]], 
    RowBox[{
     StyleBox[
      RowBox[{"x", "[", "j", "]"}],
      FontColor->GrayLevel[0]], " ", 
     RowBox[{"COL", "[", "j", "]"}]}]}]}]]],
 ".\nSo:\n              ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y", ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      StyleBox["X",
       FontColor->GrayLevel[0]]}], ")"}]}], "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "hitdim"], 
    RowBox[{
     StyleBox[
      RowBox[{"x", "[", "j", "]"}],
      FontColor->GrayLevel[0]], 
     StyleBox[" ",
      FontColor->GrayLevel[0]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Y", ".", 
        RowBox[{"COL", "[", "j", "]"}]}], ")"}], "."}]}]}]}]]],
 "\n              \n On the other hand because the columns of A  are the rows \
of ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " ,\n               ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["A", "t"], ".", 
    StyleBox["Y",
     FontColor->RGBColor[1, 0, 0]]}], "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"COL", "[", "1", "]"}], ".", 
        StyleBox["Y",
         FontColor->RGBColor[1, 0, 0]]}], ")"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"COL", "[", "2", "]"}], ".", 
        StyleBox["Y",
         FontColor->RGBColor[1, 0, 0]]}], ")"}], ",", 
      RowBox[{".", " ", ".", " ", "."}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"COL", "[", "hitdim", "]"}], ".", 
        StyleBox["Y",
         FontColor->RGBColor[1, 0, 0]]}], ")"}]}], "}"}], "."}]}]]],
 "\nSo\n              ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", 
     StyleBox["Y",
      FontColor->RGBColor[1, 0, 0]]}], ")"}], ".", 
   StyleBox["X",
    FontColor->GrayLevel[0]], " "}]]],
 "= ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "hitdim"], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["Y",
       FontColor->RGBColor[1, 0, 0]], ".", 
      RowBox[{"COL", "[", "j", "]"}]}], ")"}], 
    StyleBox[
     RowBox[{"x", "[", "j", "]"}],
     FontColor->GrayLevel[0]]}]}]]],
 " \nAnd now because\n              ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"j", "=", "1"}], "hitdim"], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       StyleBox["Y",
        FontColor->RGBColor[1, 0, 0]], ".", 
       RowBox[{"COL", "[", "j", "]"}]}], ")"}], 
     StyleBox[
      RowBox[{"x", "[", "j", "]"}],
      FontColor->GrayLevel[0]]}]}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "hitdim"], 
   RowBox[{
    StyleBox[
     RowBox[{"x", "[", "j", "]"}],
     FontColor->GrayLevel[0]], 
    StyleBox[" ",
     FontColor->GrayLevel[0]], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Y", ".", 
       RowBox[{"COL", "[", "j", "]"}]}], ")"}], "."}]}]}]]],
 ",\nthe inescapable conclusion is\n                 ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "X"}], ")"}]}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["A", "t"], ".", "Y"}], " ", ")"}], "\[Bullet]X"}]}]]],
 ".\nExplanation complete.\nAnd you're out of here.\n   "
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "B.5",
 ") For the record: An explanation the Spectral Theorem: \nIf A is a \
symmetric kD matrix, then there is a perpendicular frame (orthonormal basis)  \
  \n            {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ", ...., ",
 Cell[BoxData[
  SubscriptBox["X", "k"]]],
 "}\nof real eigenvectors of A which spans all of kD"
}], "Subsection",
 CellTags->"MGM.10.B5"],

Cell[CellGroupData[{

Cell["B.5.a.i) Visualization", "Subsubsection"],

Cell["Here's a random symmetric 2D matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"B", "+", 
       RowBox[{"Transpose", "[", "B", "]"}]}], ")"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Make this function:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"g", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"g", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], "=", 
  RowBox[{"Expand", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ".", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ".", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}]}]], "]"}]}]}], "Input"],

Cell["Look at this graphic:", "Text"],

Cell[BoxData[
 RowBox[{"glevels", "=", 
  RowBox[{"DensityPlot", "[", 
   RowBox[{
    RowBox[{"g", "[", 
     RowBox[{"x", ",", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "The lighter the square, the higher g[x,y] = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]]]],
 " is."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Throw in the unit eigenvectors of A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"Eigenvectors", "[", "A", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"eigenvector", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"glevels", ",", "eigenplot"}], "]"}]}], "Input"],

Cell["Here's another:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"B", "+", 
       RowBox[{"Transpose", "[", "B", "]"}]}], ")"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"g", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"g", "[", 
      RowBox[{"x_", ",", "y_"}], "]"}], "=", 
     RowBox[{"Expand", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ".", 
        RowBox[{"(", 
         RowBox[{"A", ".", 
          RowBox[{"{", 
           RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ".", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}]], "]"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"glevels", "=", 
    RowBox[{"DensityPlot", "[", 
     RowBox[{
      RowBox[{"g", "[", 
       RowBox[{"x", ",", "y"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "eigenvector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"eigenvector", "[", "1", "]"}], ",", 
      RowBox[{"eigenvector", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"Eigenvectors", "[", "A", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"eigenplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"eigenvector", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"glevels", ",", "eigenplot", ",", 
   RowBox[{
   "PlotLabel", "->", "\"\<Density plot with eigenvectors of A\>\""}]}], 
  "]"}]}], "Input"],

Cell[TextData[{
 "The lighter the square, the higher g[x,y] = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y"}], "}"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}], ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}]]]],
 " is."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell["\<\
Rerun a couple of times.
From these graphics, you can see that one eigenvector of the symmetric matrix \
A points into the place where g[x,y] is biggest and the other eigenvector of \
A points into the place where g[x,y] is smallest.

What relevance does this have for the explanation of the Spectral Theorem?\
\>", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
These graphics set the strategy for the explanation of the Spectral Theorem.
For more, go on to the next part.
\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
B.5.a.ii) Explanation: The Spectral Theorem for  symmetric matrices\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "The Spectral Theorem for symmetric matrices says this.\nIf A is a kD \
symmetric matrix, then  you are guaranteed a perpendicular frame  {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "k"]]],
 "} of unit eigenvectors of A which spans all of kD .\nExplain the reasoning \
behind the Spectral Theorem."
}], "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
This full blown proof is adapted from Peter Lax's book \"Linear Algebra\" \
(Interscience, 1997).\
\>", "Special2"],

Cell[TextData[{
 "Step 1: ",
 StyleBox["Coming up with an eigenvector",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]]
}], "Subsubsection"],

Cell[TextData[{
 "Go with a kD symmetric matrix A and put  for each kD vector X\n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["g", "1"], "[", "X", "]"}], "=", 
   FractionBox[
    RowBox[{"X\[Bullet]", 
     RowBox[{"(", 
      RowBox[{"A", ".", "X"}], ")"}]}], "X\[Bullet]X"]}]]],
 " .\n            \nNotice that\n             ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["g", "1"], "[", 
    RowBox[{"t", " ", "X"}], "]"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"t", " ", "X"}], ")"}], "\[Bullet]", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"(", 
        RowBox[{"t", " ", "X"}], ")"}]}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"t", " ", "X"}], ")"}], "\[Bullet]", 
     RowBox[{"(", 
      RowBox[{"t", " ", "X"}], ")"}]}]]}]]],
 " = ",
 Cell[BoxData[
  FractionBox[
   RowBox[{
    SuperscriptBox["t", "2"], 
    RowBox[{"(", 
     RowBox[{"X\[Bullet]", 
      RowBox[{"(", 
       RowBox[{"A", ".", "X"}], ")"}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox["t", "2"], 
    RowBox[{"(", "X\[Bullet]X", ")"}]}]]]],
 " = ",
 Cell[BoxData[
  RowBox[{"g", "[", "X", "]"}]]],
 "\nso that ",
 Cell[BoxData[
  SubscriptBox["g", "1"]]],
 "[X] does not depend on the length of X.\nThe function ",
 Cell[BoxData[
  SubscriptBox["g", "1"]]],
 "[X] assumes a global maximum value on kD at a unit vector ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ".\n\nYou are going to see why ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 "is an eigenvector of A with corresponding eigenvalue ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "1"], "\[Bullet]", " ", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "1"]}]}]]],
 ".\n\nTo this end, take any other kD vector Y and put\nPut \n        ",
 Cell[BoxData[
  SubscriptBox["f", "1"]]],
 "[t] = ",
 Cell[BoxData[
  SubscriptBox["g", "1"]]],
 "[",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 " + t Y] \nand notice that t = 0 maximizes ",
 Cell[BoxData[
  SubscriptBox["f", "1"]]],
 "[t] so that ",
 Cell[BoxData[
  SubscriptBox["f", "1"]]],
 "'[0] = 0.\n      \nNow examine ",
 Cell[BoxData[
  SubscriptBox["f", "1"]]],
 "[t] noticing first that \n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["f", "1"], "[", "t", "]"}], "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["p", "1"], "[", "t", "]"}], 
    RowBox[{
     SubscriptBox["q", "1"], "[", "t", "]"}]]}]]],
 "\nwhere\n          ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{
    SubscriptBox["p", "1"], "[", "t", "]"}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["X", "1"], "+", 
     RowBox[{"t", " ", "Y"}]}], ")"}], " ", "\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["X", "1"], "+", 
       RowBox[{"t", " ", "Y"}]}], ")"}]}], ")"}]}]]],
 "\n                      = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["X", "1"], "\[Bullet]", " ", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}]}], "+", 
   RowBox[{"t", " ", 
    SubscriptBox["X", "1"], "\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "Y"}], ")"}]}], "+", 
   RowBox[{"t", " ", "Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], ")"}]}], "+", 
   RowBox[{
    SuperscriptBox["t", "2"], " ", "Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "Y"}], ")"}]}]}]]],
 "\n                       = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["X", "1"], "\[Bullet]", " ", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}]}], "+", 
   RowBox[{"t", " ", 
    SubscriptBox["X", "1"], "\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "Y"}], ")"}]}], "+", 
   RowBox[{"t", " ", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["A", "t"], ".", "Y"}], ")"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["\[Bullet]",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     SubscriptBox["X", "1"],
     FontColor->RGBColor[1, 0, 0]]}], "+", 
   RowBox[{
    SuperscriptBox["t", "2"], " ", "Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "Y"}], ")"}]}]}]]],
 "\n                       = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["X", "1"], "\[Bullet]", " ", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}]}], "+", 
   RowBox[{"t", " ", 
    SubscriptBox["X", "1"], "\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "Y"}], ")"}]}], "+", 
   RowBox[{"t", " ", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"A", ".", "Y"}], ")"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox["\[Bullet]",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     SubscriptBox["X", "1"],
     FontColor->RGBColor[1, 0, 0]]}], "+", 
   RowBox[{
    SuperscriptBox["t", "2"], " ", "Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "Y"}], ")"}]}]}]]],
 "\n                        =",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{
     SubscriptBox["X", "1"], "\[Bullet]", " ", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}]}], "+", 
    RowBox[{"2", " ", "t", " ", "Y\[Bullet]", " ", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}], ")"}]}], "+", 
    RowBox[{
     SuperscriptBox["t", "2"], " ", "Y\[Bullet]", " ", 
     RowBox[{"(", 
      RowBox[{"A", ".", "Y"}], ")"}]}]}]}]]],
 "\nand\n              ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["q", "1"], "[", "t", "]"}]]],
 " =  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["X", "1"], "+", 
     RowBox[{"t", " ", "Y"}]}], ")"}], " ", "\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["X", "1"], "+", 
     RowBox[{"t", " ", "Y"}]}], ")"}]}]]],
 " \n                         = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["X", "1"], 
    SubscriptBox["\[Bullet]X", "1"]}], "+", 
   RowBox[{"2", " ", "t", " ", 
    SubscriptBox["Y\[Bullet]X", "1"]}], "+", 
   RowBox[{
    SuperscriptBox["t", "2"], " ", "Y\[Bullet]Y"}]}]]],
 "\n          \nThe quotient rule from calculus says\n             ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["f", "1"], "\[Prime]",
     MultilineFunction->None], "[", "t", "]"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["q", "1"], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["p", "1"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}], "-", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["p", "1"], "[", "t", "]"}], " ", 
      RowBox[{
       SuperscriptBox[
        SubscriptBox["q", "1"], "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}]}]}], 
    SuperscriptBox[
     RowBox[{"q", "[", "t", "]"}], "2"]]}]]],
 ".\nAt this stage you know ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["f", "1"], "\[Prime]",
     MultilineFunction->None], 
    RowBox[{"[", "0", "]"}]}], "=", "0"}]]],
 " so\n             ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["q", "1"], "[", "0", "]"}], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["p", "1"], "\[Prime]",
       MultilineFunction->None], "[", "0", "]"}]}], "-", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", "1"], "[", "0", "]"}], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["q", "1"], "\[Prime]",
       MultilineFunction->None], "[", "0", "]"}]}]}], "=", "0"}]]],
 "\n             .\nDifferentiate ",
 Cell[BoxData[
  SubscriptBox["p", "1"]]],
 "[t] and ",
 Cell[BoxData[
  SubscriptBox["q", "1"]]],
 "[t] with respect to t to get\n       ",
 Cell[BoxData[
  SubscriptBox["p", "1"]]],
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["", "\[Prime]",
    MultilineFunction->None], 
   RowBox[{"[", "t", "]"}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"2", " ", "Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], ")"}]}], "+", 
   RowBox[{"2", " ", "t", " ", "Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", "Y"}], ")"}]}]}]]],
 "\n       ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    SubscriptBox["q", "1"], "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}]]],
 " =  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"2", " ", 
    SubscriptBox["Y\[Bullet]X", "1"]}], "+", 
   RowBox[{"2", " ", "t", " ", "Y\[Bullet]Y"}]}]]],
 "\n      \nRead off:\n      ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["p", "1"], "[", "0", "]"}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["X", "1"], "\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], ")"}]}], ","}]]],
 "        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["p", "1"], "\[Prime]",
     MultilineFunction->None], "[", "0", "]"}], "=", 
   RowBox[{"2", " ", "Y\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}], ")"}]}]}]]],
 "\n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["q", "1"], "[", "0", "]"}], "=", 
   RowBox[{
    SubscriptBox["X", "1"], 
    SubscriptBox["\[Bullet]X", 
     RowBox[{"1", " "}]]}]}]]],
 "             and ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     SubscriptBox["q", "1"], "\[Prime]",
     MultilineFunction->None], "[", "0", "]"}], "=", 
   RowBox[{"2", " ", "Y\[Bullet]", " ", 
    SubscriptBox["X", "1"]}]}]]],
 "\nPlug these into\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["q", "1"], "[", "0", "]"}], " ", 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["p", "1"], "\[Prime]",
       MultilineFunction->None], "[", "0", "]"}]}], "-", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", "1"], "[", "0", "]"}], 
     RowBox[{
      SuperscriptBox[
       SubscriptBox["q", "1"], "\[Prime]",
       MultilineFunction->None], "[", "0", "]"}]}]}], "=", "0"}]]],
 " \n to get\n       ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{
    SubscriptBox["X", "1"], 
    SubscriptBox["\[Bullet]X", "1"]}]}]]],
 ") ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "Y\[Bullet]", " ", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}], ")"}]}], ")"}], " ", "-"}]]],
 " (",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["X", "1"], "\[Bullet]", " ", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "1"]}], ")"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Y\[Bullet]", " ", 
      SubscriptBox["X", "1"]}], ")"}]}], "  ", "=", "0"}]]],
 ".\n Because ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 "is a unit vector (so that ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "1"], 
   SubscriptBox["\[Bullet]X", "1"]}]]],
 " = 1) , this is the same as\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"2", " ", "Y\[Bullet]", " ", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}], ")"}]}], ")"}], " ", "-"}]]],
 " (",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["X", "1"], "\[Bullet]", " ", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "1"]}], ")"}]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"2", " ", "Y\[Bullet]", " ", 
      SubscriptBox["X", "1"]}], ")"}]}], "  ", "=", "0"}]]],
 ".\n\n Divide both sides by 2 to get\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Y\[Bullet]", " ", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}], ")"}]}], ")"}], " ", "-"}]]],
 " (",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["X", "1"], "\[Bullet]", " ", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        SubscriptBox["X", "1"]}], ")"}]}], ")"}], " ", 
    RowBox[{"(", " ", 
     RowBox[{"Y\[Bullet]", " ", 
      SubscriptBox["X", "1"]}], ")"}]}], "  ", "=", "0"}]]],
 ".\n        \nPut\n           ",
 Cell[BoxData[
  SubscriptBox["e", "1"]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "1"], "\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], ")"}], " "}]]],
 " \nto get\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"Y\[Bullet]", " ", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}], ")"}]}], ")"}], " ", "-"}]]],
 " ",
 Cell[BoxData[
  SubscriptBox["e", "1"]]],
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{"Y\[Bullet]", " ", 
      SubscriptBox["X", "1"]}], ")"}], "  ", "=", "0"}]}]]],
 ".\n        \nFactor out Y to get\n         ",
 Cell[BoxData[
  RowBox[{"Y\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}], ")"}], " ", "-"}]}]}]]],
 " ",
 Cell[BoxData[
  SubscriptBox["e", "1"]]],
 Cell[BoxData[
  RowBox[{
   RowBox[{"  ", 
    SubscriptBox["X", "1"], ")"}], "  ", "=", " ", "0"}]]],
 ".\n         \nNow remember that Y is any kD vector.  This gives you the \
freedom to set\n         Y =  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], ")"}], " ", "-"}]]],
 "  ",
 Cell[BoxData[
  SubscriptBox["e", "1"]]],
 Cell[BoxData[
  RowBox[{"  ", 
   SubscriptBox["X", 
    RowBox[{"1", " "}]]}]]],
 ".\nto see that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "1"]}]}], "-", " ", 
    RowBox[{
     SubscriptBox["e", "1"], " ", 
     SubscriptBox["X", "1"]}]}], 
   SuperscriptBox["||", "2"]}]]],
 " = (",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}], "-", " ", 
      RowBox[{
       SubscriptBox["e", "1"], " ", 
       SubscriptBox["X", "1"]}]}], ")"}], "\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", ".", 
       SubscriptBox["X", "1"]}], "-", " ", 
      RowBox[{
       SubscriptBox["e", "1"], " ", 
       SubscriptBox["X", "1"]}]}], ")"}]}], " ", "=", " ", "0."}]]],
 "\nThis tells you and everyone else that\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], "-", " ", 
    RowBox[{
     SubscriptBox["e", "1"], " ", 
     SubscriptBox["X", "1"]}]}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{".", " ", ".", " ", ".0"}]}], "}"}]}]]],
 ".\n          \nThis is the same as\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    SubscriptBox["X", "1"]}], "=", " ", 
   RowBox[{
    SubscriptBox["e", "1"], " ", 
    SubscriptBox["X", 
     RowBox[{"1", " "}]]}]}]]],
 ",\nsignalling that ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 " is an eigenvector of A with corresponding eigenvalue ",
 Cell[BoxData[
  SubscriptBox["e", "1"]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "1"], "\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], ")"}], " "}]]]
}], "SmallText"],

Cell[TextData[{
 "Step 2:",
 StyleBox[" Coming up with a  new eigenvector ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 " ",
 StyleBox["perpendicular to ",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]]
}], "Subsubsection"],

Cell[TextData[{
 " Stay with the same kD symmetric matrix A and put ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 " = perpendicular complement of the one dimensional subspace of kD spanned \
by the eigenvector ",
 Cell[BoxData[
  SubscriptBox["X", "1."]]],
 "\nPut  for each kD vector X in  ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 "\n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["g", "2"], "[", "X", "]"}], "=", 
   FractionBox[
    RowBox[{"X\[Bullet]", 
     RowBox[{"(", 
      RowBox[{"A", ".", "X"}], ")"}]}], "X\[Bullet]X"]}]]],
 " .\n            \nAs in the part above, ",
 Cell[BoxData[
  SubscriptBox["g", "2"]]],
 "[X] does not depend on the length of X.\nThe function ",
 Cell[BoxData[
  SubscriptBox["g", "2"]]],
 "[X] assumes a global maximum value on ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 " at a unit vector ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ".\nYou are going to see why ",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"2", " "}]]]],
 "is an eigenvector of A and why ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 " is perpendicular to ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ".\nThings to note:"
}], "SmallText"],

Cell[TextData[{
 "1) ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 " ",
 StyleBox["is perpendicular to",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 "."
}], "Subsubsection"],

Cell[TextData[{
 " Reason:\n ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 " is in ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 " and everything is ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 " is perpendicular to ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "2) ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SubscriptBox["X", "2"]}]]],
 " ",
 StyleBox["is perpendicular to",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 " ",
 StyleBox["so that ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  RowBox[{"A", ".", 
   SubscriptBox["X", "2"]}]]],
 " ",
 StyleBox["is in",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 "."
}], "Subsubsection"],

Cell[TextData[{
 "Reason:\n            ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "1"], "\[Bullet]", 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], ")"}]}]]],
 "= ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", 
     SubscriptBox["X", "1"]}], ")"}], 
   SubscriptBox["\[Bullet]X", "2"]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], ")"}], "\[Bullet]", " ", 
   SubscriptBox["X", "2"]}]]],
 " \n                                   = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["e", "1"], ".", 
     SubscriptBox["X", "1"]}], ")"}], 
   SubscriptBox["\[Bullet]X", "2"]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["e", "1"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["X", "1"], 
      SubscriptBox["\[Bullet]X", "2"]}], ")"}]}], " ", "=", " ", "0"}]]],
 "\n            because ",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"2", " "}]]]],
 " is in ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 " and everything in ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 " is perpendicular to ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "1"], "."}]]],
 " "
}], "SmallText"],

Cell[TextData[{
 "\nNow for any vector Y in ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 ", put  \n        ",
 Cell[BoxData[
  SubscriptBox["f", "2"]]],
 "[t] = ",
 Cell[BoxData[
  SubscriptBox["g", "2"]]],
 "[",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 " + t Y] \nand notice that t = 0 maximizes ",
 Cell[BoxData[
  SubscriptBox["f", "2"]]],
 "[t] so that ",
 Cell[BoxData[
  SubscriptBox["f", "2"]]],
 "'[0] = 0.\n\nComputations virtually identical to those in the first part \
reveal that for any Y in ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 "\n     \n         ",
 Cell[BoxData[
  RowBox[{"Y\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}], ")"}], " ", "-"}]}]}]]],
 " ",
 Cell[BoxData[
  SubscriptBox["e", "2"]]],
 Cell[BoxData[
  RowBox[{
   RowBox[{"  ", 
    SubscriptBox["X", "2"], ")"}], "  ", "=", " ", "0"}]]],
 ".\n         where ",
 Cell[BoxData[
  SubscriptBox["e", "2"]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "2"], 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], ")"}]}]]],
 ".\n         \nNow remember that Y is any vector in ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 " .  This gives you the freedom to set\n         Y =  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], ")"}], " ", "-"}]]],
 "  ",
 Cell[BoxData[
  SubscriptBox["e", "2"]]],
 Cell[BoxData[
  RowBox[{"  ", 
   SubscriptBox["X", 
    RowBox[{"2", " "}]]}]]],
 ".\n(because both   ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "2"]}], ")"}]]],
 Cell[BoxData[" "]],
 "and ",
 Cell[BoxData[
  SubscriptBox["e", "2"]]],
 Cell[BoxData[
  RowBox[{"  ", 
   SubscriptBox["X", 
    RowBox[{"2", " "}]]}]]],
 " are in ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 "). \nto see that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "2"]}]}], "-", " ", 
    RowBox[{
     SubscriptBox["e", "2"], " ", 
     SubscriptBox["X", "2"]}]}], 
   SuperscriptBox["||", "2"]}]]],
 " = (",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}], "-", " ", 
      RowBox[{
       SubscriptBox["e", "2"], " ", 
       SubscriptBox["X", "2"]}]}], ")"}], "\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", ".", 
       SubscriptBox["X", "2"]}], "-", " ", 
      RowBox[{
       SubscriptBox["e", "2"], " ", 
       SubscriptBox["X", "2"]}]}], ")"}]}], " ", "=", " ", "0."}]]],
 "\nThis tells you and everyone else that\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], "-", " ", 
    RowBox[{
     SubscriptBox["e", "2"], " ", 
     SubscriptBox["X", "2"]}]}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{".", " ", ".", " ", ".0"}]}], "}"}]}]]],
 ".\n          \nThis is the same as\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    SubscriptBox["X", "2"]}], "=", " ", 
   RowBox[{
    SubscriptBox["e", "2"], " ", 
    SubscriptBox["X", 
     RowBox[{"2", " "}]]}]}]]],
 ",\nsignalling that ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 " is an eigenvector of A with corresponding eigenvalue ",
 Cell[BoxData[
  SubscriptBox["e", "2"]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "2"], "\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], ")"}], " "}]]],
 "\n\nAt this stage, you have two mutually perpendicular eigenvectors ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 " and ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 " of A."
}], "SmallText"],

Cell[TextData[{
 "Step 3: ",
 StyleBox["Coming up with a  new eigenvector ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 " ",
 StyleBox["perpendicular to both",
  FontColor->RGBColor[0, 0.392187, 0]],
 "  ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 StyleBox["and ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SubscriptBox["X", "2"]]]
}], "Subsubsection"],

Cell[TextData[{
 " Stay with the same kD symmetric matrix A and put\n ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 " = perpendicular complement of the two dimensional subspace of kD spanned \
by the eigenvectors ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 "and ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ".\nStay with the same kD symmetric matrix A and put  for each kD vector X \
in  ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 "\n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["g", "3"], "[", "X", "]"}], "=", 
   FractionBox[
    RowBox[{"X\[Bullet]", 
     RowBox[{"(", 
      RowBox[{"A", ".", "X"}], ")"}]}], "X\[Bullet]X"]}]]],
 " .\n            \nAs in the part above, ",
 Cell[BoxData[
  SubscriptBox["g", "3"]]],
 "[X] does not depend on the length of X.\nThe function ",
 Cell[BoxData[
  SubscriptBox["g", "3"]]],
 "[X] assumes a global maximum value on ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 " at a unitvector ",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ".\nYou are going to see why ",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"3", " "}]]]],
 "is an eigenvector of A and why ",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 " is perpendicular to both ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 "and ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ".\nThings to note:"
}], "SmallText"],

Cell[TextData[{
 "1) ",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 " ",
 StyleBox["is perpendicular to both",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 " ",
 StyleBox["and",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]]
}], "Subsubsection"],

Cell[TextData[{
 "    Reason: ",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 " is in ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 " and everything is ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 " is perpendicular to both ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 " and ",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 " ."
}], "SmallText"],

Cell[TextData[{
 "2) ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SubscriptBox["X", "3"]}]]],
 StyleBox[" is perpendicular to both ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 StyleBox[" and ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"2", " "}]]]],
 StyleBox["so that",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SubscriptBox["X", "3"]}]]],
 " ",
 StyleBox["is in",
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 "."
}], "Subsubsection"],

Cell[TextData[{
 "\nReasons:\n            ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "1"], "\[Bullet]", 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], ")"}]}]]],
 "= ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", 
     SubscriptBox["X", "1"]}], ")"}], 
   SubscriptBox["\[Bullet]X", "3"]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "1"]}], ")"}], "\[Bullet]", " ", 
   SubscriptBox["X", "3"]}]]],
 " \n                                   = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["e", "1"], ".", 
     SubscriptBox["X", "1"]}], ")"}], 
   SubscriptBox["\[Bullet]X", "3"]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["e", "1"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["X", "1"], 
      SubscriptBox["\[Bullet]X", "3"]}], ")"}]}], " ", "=", " ", "0"}]]],
 "\n            because ",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"3", " "}]]]],
 " is in ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 " and everything in ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 " is perpendicular to ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "1"], "."}]]],
 " \n            \nAlso  \n            ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "2"], "\[Bullet]", 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], ")"}]}]]],
 "= ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["A", "t"], ".", 
     SubscriptBox["X", "2"]}], ")"}], 
   SubscriptBox["\[Bullet]X", "3"]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "2"]}], ")"}], "\[Bullet]", " ", 
   SubscriptBox["X", "3"]}]]],
 " \n                                   = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["e", "2"], ".", 
     SubscriptBox["X", "2"]}], ")"}], 
   SubscriptBox["\[Bullet]X", "3"]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox["e", "2"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["X", "2"], 
      SubscriptBox["\[Bullet]X", "3"]}], ")"}]}], " ", "=", " ", "0"}]]],
 "\n            because ",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"3", " "}]]]],
 " is in ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 " and everything in ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 " is perpendicular to ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "2"], "."}]]],
 "\nThis explains why ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SubscriptBox["X", 
    RowBox[{"3", " "}]]}]]],
 "is perpendicular to both  ",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 " and to ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "2"], "."}]]],
 " And this puts  ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   SubscriptBox["X", 
    RowBox[{"3", " "}]]}]]],
 " into ",
 Cell[BoxData[
  SubscriptBox["S", 
   RowBox[{"3", " "}]]]],
 "\n      "
}], "SmallText"],

Cell[TextData[{
 "\nNow for any vector Y in ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 ", put  \n        ",
 Cell[BoxData[
  SubscriptBox["f", "3"]]],
 "[t] = ",
 Cell[BoxData[
  SubscriptBox["g", "3"]]],
 "[",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 " + t Y] \nand notice that t = 0 maximizes ",
 Cell[BoxData[
  SubscriptBox["f", "3"]]],
 "[t] so that ",
 Cell[BoxData[
  SubscriptBox["f", "3"]]],
 "'[0] = 0.\n\nComputations virtually identical to those in the first part \
reveal that for any Y in ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 "\n     \n         ",
 Cell[BoxData[
  RowBox[{"Y\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", ".", 
       SubscriptBox["X", "3"]}], ")"}], " ", "-"}]}]}]]],
 " ",
 Cell[BoxData[
  SubscriptBox["e", "3"]]],
 Cell[BoxData[
  RowBox[{
   RowBox[{"  ", 
    SubscriptBox["X", "3"], ")"}], "  ", "=", " ", "0"}]]],
 ".\n         where ",
 Cell[BoxData[
  SubscriptBox["e", "3"]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "3"], 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], ")"}]}]]],
 "\n         \nNow remember that Y is any vector in ",
 Cell[BoxData[
  SubscriptBox["S", "2"]]],
 " .  This gives you the freedom to set\n         Y =  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], ")"}], " ", "-"}]]],
 "  ",
 Cell[BoxData[
  SubscriptBox["e", "3"]]],
 Cell[BoxData[
  RowBox[{"  ", 
   SubscriptBox["X", 
    RowBox[{"3", " "}]]}]]],
 ".\n(because both   ",
 Cell[BoxData[
  RowBox[{"(", 
   RowBox[{"A", ".", 
    SubscriptBox["X", "3"]}], ")"}]]],
 Cell[BoxData[" "]],
 "and ",
 Cell[BoxData[
  SubscriptBox["e", "3"]]],
 Cell[BoxData[
  RowBox[{"  ", 
   SubscriptBox["X", 
    RowBox[{"3", " "}]]}]]],
 " are in ",
 Cell[BoxData[
  SubscriptBox["S", "3"]]],
 "). \nto see that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"||", 
     RowBox[{"A", ".", 
      SubscriptBox["X", "3"]}]}], "-", " ", 
    RowBox[{
     SubscriptBox["e", "3"], " ", 
     SubscriptBox["X", "3"]}]}], 
   SuperscriptBox["||", "2"]}]]],
 " = (",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"A", ".", 
       SubscriptBox["X", "3"]}], "-", " ", 
      RowBox[{
       SubscriptBox["e", "3"], " ", 
       SubscriptBox["X", "3"]}]}], ")"}], "\[Bullet]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"A", ".", 
       SubscriptBox["X", "3"]}], "-", " ", 
      RowBox[{
       SubscriptBox["e", "3"], " ", 
       SubscriptBox["X", "3"]}]}], ")"}]}], " ", "=", " ", "0."}]]],
 "\nThis tells you and everyone else that\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], "-", " ", 
    RowBox[{
     SubscriptBox["e", "3"], " ", 
     SubscriptBox["X", "3"]}]}], " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", 
     RowBox[{".", " ", ".", " ", ".0"}]}], "}"}]}]]],
 ".\n          \nThis is the same as\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    SubscriptBox["X", "3"]}], "=", " ", 
   RowBox[{
    SubscriptBox["e", "3"], " ", 
    SubscriptBox["X", 
     RowBox[{"3", " "}]]}]}]]],
 ",\nsignalling that ",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 " is an eigenvector of A with corresponding eigenvalue ",
 Cell[BoxData[
  SubscriptBox["e", "3"]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SubscriptBox["X", "3"], "\[Bullet]", " ", 
   RowBox[{"(", 
    RowBox[{"A", ".", 
     SubscriptBox["X", "3"]}], ")"}], " "}]]],
 "\n\nAt this stage, you have three mutually perpendicular eigenvectors ",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"1", " "}]]]],
 " , ",
 Cell[BoxData[
  SubscriptBox["X", 
   RowBox[{"2", " "}]]]],
 "and ",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 " of A."
}], "SmallText"],

Cell[TextData[{
 "Step 4 ",
 StyleBox["to",
  FontColor->RGBColor[0, 0.392187, 0]],
 " Step k: "
}], "Subsubsection"],

Cell[TextData[{
 "To get the advertised orthonormal basis of eigenvectors of A, you continue \
the process started above until you run out of dimensions.\nThis results in a \
perpendicular frame\n           {",
 Cell[BoxData[
  SubscriptBox["X", "1"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "2"]]],
 ",",
 Cell[BoxData[
  SubscriptBox["X", "3"]]],
 ", ",
 Cell[BoxData[
  SubscriptBox["X", "4"]]],
 ",....,",
 Cell[BoxData[
  SubscriptBox["X", "k"]]],
 "}\nof eigenvectors of A which spans all of kD - an orthonormal basis of kD \
consisting of eigenvectors of A."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.10.B1"->{
  Cell[29521, 803, 625, 23, 89, "Subsection",
   CellTags->"MGM.10.B1"]},
 "MGM.10.B2"->{
  Cell[36343, 1057, 917, 35, 217, "Subsection",
   CellTags->"MGM.10.B2"]},
 "MGM.10.B3"->{
  Cell[84152, 3113, 1323, 46, 242, "Subsection",
   CellTags->"MGM.10.B3"]},
 "MGM.10.B4"->{
  Cell[122439, 4625, 350, 12, 43, "Subsection",
   CellTags->"MGM.10.B4"]},
 "MGM.10.B5"->{
  Cell[130899, 4937, 539, 21, 136, "Subsection",
   CellTags->"MGM.10.B5"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.10.B1", 226222, 7723},
 {"MGM.10.B2", 226312, 7726},
 {"MGM.10.B3", 226404, 7729},
 {"MGM.10.B4", 226497, 7732},
 {"MGM.10.B5", 226589, 7735}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 183, 6, 108, "Title"],
Cell[CellGroupData[{
Cell[6420, 138, 193, 7, 28, "Special2"],
Cell[6616, 147, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7933, 189, 38, 0, 31, "Subsubsection"],
Cell[7974, 191, 1344, 31, 156, "Input"],
Cell[9321, 224, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9494, 230, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26865, 713, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27112, 724, 39, 0, 35, "Subsubsection"],
Cell[27154, 726, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29521, 803, 625, 23, 89, "Subsection",
 CellTags->"MGM.10.B1"],
Cell[CellGroupData[{
Cell[30171, 830, 556, 19, 57, "Subsubsection"],
Cell[CellGroupData[{
Cell[30752, 853, 61, 0, 24, "Text"],
Cell[30816, 855, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[30867, 858, 432, 13, 76, "SmallText"],
Cell[31302, 873, 1104, 38, 96, "Input"],
Cell[32409, 913, 103, 2, 24, "SmallText"],
Cell[32515, 917, 507, 15, 51, "Input"],
Cell[33025, 934, 137, 3, 49, "SmallText"],
Cell[33165, 939, 362, 10, 20, "Input"],
Cell[33530, 951, 234, 6, 99, "SmallText"],
Cell[33767, 959, 1988, 67, 171, "Input"],
Cell[35758, 1028, 50, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[35857, 1034, 70, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[35952, 1038, 90, 2, 24, "Text"],
Cell[36045, 1042, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[36096, 1045, 186, 5, 74, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[36343, 1057, 917, 35, 217, "Subsection",
 CellTags->"MGM.10.B2"],
Cell[CellGroupData[{
Cell[37285, 1096, 161, 6, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[37471, 1106, 159, 6, 51, "Text"],
Cell[37633, 1114, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[37684, 1117, 159, 6, 51, "SmallText"],
Cell[37846, 1125, 686, 33, 27, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[38581, 1164, 197, 6, 35, "Subsubsection"],
Cell[38781, 1172, 540, 25, 76, "Text"],
Cell[39324, 1199, 429, 18, 102, "Text"],
Cell[39756, 1219, 806, 34, 205, "Text"],
Cell[40565, 1255, 653, 26, 127, "Text"],
Cell[41221, 1283, 156, 4, 74, "Text"],
Cell[41380, 1289, 1583, 63, 63, "Text"],
Cell[42966, 1354, 39, 0, 24, "Text"],
Cell[43008, 1356, 732, 23, 66, "Input"],
Cell[CellGroupData[{
Cell[43765, 1383, 213, 8, 26, "Text"],
Cell[43981, 1393, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[44032, 1396, 541, 24, 101, "SmallText"],
Cell[44576, 1422, 625, 19, 51, "Input"],
Cell[45204, 1443, 434, 18, 102, "SmallText"],
Cell[45641, 1463, 438, 19, 77, "SmallText"],
Cell[46082, 1484, 395, 13, 20, "Input"],
Cell[46480, 1499, 24, 0, 24, "SmallText"],
Cell[46507, 1501, 59, 1, 20, "Input"],
Cell[46569, 1504, 397, 16, 102, "SmallText"],
Cell[46969, 1522, 326, 9, 36, "Input"],
Cell[47298, 1533, 648, 26, 127, "SmallText"],
Cell[47949, 1561, 430, 14, 20, "Input"],
Cell[48382, 1577, 161, 4, 74, "SmallText"],
Cell[48546, 1583, 1588, 63, 63, "SmallText"],
Cell[50137, 1648, 523, 16, 42, "Input"],
Cell[50663, 1666, 34, 0, 24, "SmallText"],
Cell[50700, 1668, 229, 6, 36, "Input"],
Cell[50932, 1676, 363, 11, 36, "Input"],
Cell[51298, 1689, 270, 7, 36, "Input"],
Cell[51571, 1698, 401, 14, 20, "Input"],
Cell[51975, 1714, 63, 1, 20, "Input"],
Cell[52041, 1717, 71, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[52161, 1726, 48, 0, 31, "Subsubsection"],
Cell[52212, 1728, 540, 25, 76, "Text"],
Cell[52755, 1755, 429, 18, 102, "Text"],
Cell[53187, 1775, 806, 34, 205, "Text"],
Cell[53996, 1811, 644, 26, 127, "Text"],
Cell[54643, 1839, 156, 4, 74, "Text"],
Cell[54802, 1845, 2274, 86, 188, "Text"],
Cell[CellGroupData[{
Cell[57101, 1935, 43, 0, 24, "Text"],
Cell[57147, 1937, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[57198, 1940, 73, 0, 24, "SmallText"],
Cell[57274, 1942, 322, 14, 27, "SmallText"],
Cell[CellGroupData[{
Cell[57621, 1960, 105, 2, 12, "Special2"],
Cell[57729, 1964, 799, 36, 104, "SmallText"]
}, Closed]],
Cell[58543, 2003, 390, 12, 74, "SmallText"],
Cell[CellGroupData[{
Cell[58958, 2019, 105, 2, 12, "Special2"],
Cell[59066, 2023, 390, 14, 99, "SmallText"]
}, Closed]],
Cell[59471, 2040, 100, 2, 24, "SmallText"],
Cell[59574, 2044, 1581, 63, 38, "Text"],
Cell[61158, 2109, 42, 0, 24, "SmallText"],
Cell[CellGroupData[{
Cell[61225, 2113, 105, 2, 12, "Special2"],
Cell[61333, 2117, 68, 0, 24, "SmallText"],
Cell[61404, 2119, 32, 0, 24, "SmallText"],
Cell[61439, 2121, 618, 26, 36, "SmallText"],
Cell[62060, 2149, 567, 23, 38, "SmallText"],
Cell[62630, 2174, 545, 23, 39, "SmallText"],
Cell[63178, 2199, 103, 5, 24, "SmallText"]
}, Closed]],
Cell[63296, 2207, 100, 2, 24, "SmallText"],
Cell[63399, 2211, 1581, 63, 38, "Text"],
Cell[64983, 2276, 67, 0, 24, "SmallText"],
Cell[CellGroupData[{
Cell[65075, 2280, 105, 2, 12, "Special2"],
Cell[65183, 2284, 117, 3, 24, "SmallText"],
Cell[65303, 2289, 32, 0, 24, "SmallText"],
Cell[65338, 2291, 665, 28, 38, "SmallText"],
Cell[66006, 2321, 732, 29, 39, "SmallText"],
Cell[66741, 2352, 804, 32, 39, "SmallText"],
Cell[67548, 2386, 353, 12, 42, "Special2"],
Cell[67904, 2400, 739, 29, 39, "SmallText"],
Cell[68646, 2431, 1127, 52, 50, "Special2"],
Cell[69776, 2485, 666, 26, 40, "SmallText"],
Cell[70445, 2513, 385, 14, 40, "SmallText"],
Cell[70833, 2529, 239, 10, 27, "SmallText"]
}, Closed]],
Cell[71087, 2542, 147, 3, 49, "SmallText"],
Cell[71237, 2547, 256, 14, 27, "SmallText"],
Cell[71496, 2563, 152, 5, 49, "SmallText"],
Cell[71651, 2570, 455, 22, 27, "Text"],
Cell[72109, 2594, 95, 3, 49, "SmallText"],
Cell[72207, 2599, 1581, 63, 38, "Text"],
Cell[73791, 2664, 319, 9, 74, "SmallText"],
Cell[CellGroupData[{
Cell[74135, 2677, 105, 2, 12, "Special2"],
Cell[74243, 2681, 164, 6, 24, "SmallText"],
Cell[74410, 2689, 780, 30, 63, "SmallText"],
Cell[75193, 2721, 616, 25, 36, "SmallText"],
Cell[75812, 2748, 901, 38, 61, "SmallText"]
}, Closed]],
Cell[76728, 2789, 147, 3, 49, "SmallText"],
Cell[76878, 2794, 256, 14, 27, "SmallText"],
Cell[77137, 2810, 152, 5, 49, "SmallText"],
Cell[77292, 2817, 455, 22, 27, "Text"],
Cell[77750, 2841, 95, 3, 49, "SmallText"],
Cell[77848, 2846, 1581, 63, 38, "Text"],
Cell[79432, 2911, 65, 0, 24, "SmallText"],
Cell[79500, 2913, 553, 21, 49, "SmallText"],
Cell[CellGroupData[{
Cell[80078, 2938, 105, 2, 12, "Special2"],
Cell[80186, 2942, 687, 26, 126, "SmallText"],
Cell[80876, 2970, 287, 11, 50, "SmallText"],
Cell[81166, 2983, 50, 0, 24, "SmallText"],
Cell[81219, 2985, 362, 14, 50, "SmallText"],
Cell[81584, 3001, 362, 14, 49, "SmallText"],
Cell[81949, 3017, 287, 12, 12, "Special2"],
Cell[82239, 3031, 396, 14, 49, "SmallText"],
Cell[82638, 3047, 280, 13, 16, "Special2"],
Cell[82921, 3062, 469, 16, 49, "SmallText"],
Cell[83393, 3080, 209, 7, 12, "Special2"],
Cell[83605, 3089, 474, 16, 49, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[84152, 3113, 1323, 46, 242, "Subsection",
 CellTags->"MGM.10.B3"],
Cell[85478, 3161, 150, 4, 74, "Text"],
Cell[85631, 3167, 56, 0, 31, "Subsubsection"],
Cell[85690, 3169, 133, 3, 49, "Text"],
Cell[85826, 3174, 112, 2, 12, "Special2"],
Cell[85941, 3178, 117, 5, 27, "Subsubsection"],
Cell[86061, 3185, 230, 8, 53, "Text"],
Cell[86294, 3195, 175, 7, 18, "Special2"],
Cell[86472, 3204, 55, 0, 23, "Subsubsection"],
Cell[86530, 3206, 135, 3, 49, "Text"],
Cell[86668, 3211, 57, 0, 31, "Subsubsection"],
Cell[86728, 3213, 342, 9, 102, "Text"],
Cell[87073, 3224, 747, 28, 172, "Subsubsection"],
Cell[87823, 3254, 1092, 43, 206, "Text"],
Cell[88918, 3299, 118, 5, 23, "Special2"],
Cell[89039, 3306, 1391, 54, 195, "Text"],
Cell[90433, 3362, 142, 4, 12, "Special2"],
Cell[90578, 3368, 377, 17, 54, "Text"],
Cell[90958, 3387, 245, 8, 30, "Special2"],
Cell[91206, 3397, 370, 17, 27, "Text"],
Cell[91579, 3416, 223, 8, 18, "Special2"],
Cell[91805, 3426, 774, 28, 105, "Text"],
Cell[92582, 3456, 44, 3, 49, "Text"],
Cell[92629, 3461, 502, 16, 36, "Input"],
Cell[CellGroupData[{
Cell[93156, 3481, 538, 11, 199, "Text"],
Cell[93697, 3494, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[93748, 3497, 37, 0, 24, "SmallText"],
Cell[93788, 3499, 63, 1, 20, "Input"],
Cell[93854, 3502, 60, 0, 24, "SmallText"],
Cell[93917, 3504, 115, 2, 36, "Input"],
Cell[94035, 3508, 445, 21, 51, "SmallText"],
Cell[94483, 3531, 625, 19, 51, "Input"],
Cell[95111, 3552, 64, 0, 24, "SmallText"],
Cell[95178, 3554, 245, 7, 20, "Input"],
Cell[95426, 3563, 97, 3, 49, "SmallText"],
Cell[95526, 3568, 336, 17, 26, "SmallText"],
Cell[95865, 3587, 310, 9, 36, "Input"],
Cell[96178, 3598, 60, 0, 24, "SmallText"],
Cell[96241, 3600, 27, 0, 20, "Input"],
Cell[96271, 3602, 191, 8, 24, "SmallText"],
Cell[96465, 3612, 371, 11, 36, "Input"],
Cell[96839, 3625, 61, 0, 24, "SmallText"],
Cell[96903, 3627, 64, 1, 20, "Input"],
Cell[96970, 3630, 105, 2, 24, "SmallText"],
Cell[97078, 3634, 707, 23, 79, "Input"],
Cell[97788, 3659, 63, 0, 24, "SmallText"],
Cell[97854, 3661, 27, 0, 20, "Input"],
Cell[97884, 3663, 616, 24, 102, "SmallText"],
Cell[98503, 3689, 992, 33, 82, "Input"],
Cell[99498, 3724, 27, 0, 24, "SmallText"],
Cell[99528, 3726, 89, 2, 20, "Input"],
Cell[99620, 3730, 36, 0, 24, "SmallText"]
}, Closed]],
Cell[CellGroupData[{
Cell[99693, 3735, 47, 0, 31, "Subsubsection"],
Cell[99743, 3737, 61, 0, 24, "Text"],
Cell[99807, 3739, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[99858, 3742, 1731, 67, 361, "SmallText"],
Cell[101592, 3811, 916, 34, 95, "Subsubsection"],
Cell[CellGroupData[{
Cell[102533, 3849, 114, 2, 12, "Special2"],
Cell[102650, 3853, 1782, 69, 272, "SmallText"]
}, Closed]],
Cell[104447, 3925, 1083, 28, 85, "Subsubsection"],
Cell[CellGroupData[{
Cell[105555, 3957, 114, 2, 12, "Special2"],
Cell[105672, 3961, 3089, 127, 600, "SmallText"]
}, Closed]],
Cell[108776, 4091, 430, 16, 84, "Subsubsection"],
Cell[CellGroupData[{
Cell[109231, 4111, 114, 2, 12, "Special2"],
Cell[109348, 4115, 5576, 206, 1059, "SmallText"]
}, Closed]],
Cell[114939, 4324, 736, 26, 109, "Subsubsection"],
Cell[CellGroupData[{
Cell[115700, 4354, 114, 2, 12, "Special2"],
Cell[115817, 4358, 4289, 152, 551, "SmallText"],
Cell[120109, 4512, 248, 14, 27, "SmallText"],
Cell[120360, 4528, 54, 3, 49, "SmallText"],
Cell[120417, 4533, 231, 12, 27, "SmallText"],
Cell[120651, 4547, 600, 27, 130, "SmallText"],
Cell[121254, 4576, 1124, 42, 130, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[122439, 4625, 350, 12, 43, "Subsection",
 CellTags->"MGM.10.B4"],
Cell[CellGroupData[{
Cell[122814, 4641, 313, 11, 39, "Subsubsection"],
Cell[123130, 4654, 525, 14, 126, "Text"],
Cell[123658, 4670, 2128, 73, 141, "Input"],
Cell[125789, 4745, 91, 2, 12, "Special2"],
Cell[125883, 4749, 408, 13, 76, "Text"],
Cell[CellGroupData[{
Cell[126316, 4766, 350, 12, 76, "Text"],
Cell[126669, 4780, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[126720, 4783, 4118, 147, 596, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[130899, 4937, 539, 21, 136, "Subsection",
 CellTags->"MGM.10.B5"],
Cell[CellGroupData[{
Cell[131463, 4962, 47, 0, 31, "Subsubsection"],
Cell[131513, 4964, 54, 0, 24, "Text"],
Cell[131570, 4966, 811, 29, 87, "Input"],
Cell[132384, 4997, 35, 0, 24, "Text"],
Cell[132422, 4999, 593, 21, 58, "Input"],
Cell[133018, 5022, 37, 0, 24, "Text"],
Cell[133058, 5024, 539, 16, 36, "Input"],
Cell[133600, 5042, 484, 19, 30, "Special2"],
Cell[134087, 5063, 52, 0, 24, "Text"],
Cell[134142, 5065, 925, 28, 96, "Input"],
Cell[135070, 5095, 31, 0, 24, "Text"],
Cell[135104, 5097, 3083, 103, 276, "Input"],
Cell[138190, 5202, 484, 19, 30, "Special2"],
Cell[CellGroupData[{
Cell[138699, 5225, 333, 7, 149, "Text"],
Cell[139035, 5234, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[139086, 5237, 140, 4, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[139275, 5247, 100, 2, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[139400, 5253, 524, 19, 99, "Text"],
Cell[139927, 5274, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[139978, 5277, 125, 3, 12, "Special2"],
Cell[140106, 5282, 180, 7, 24, "Subsubsection"],
Cell[140289, 5291, 15231, 565, 1787, "SmallText"],
Cell[155523, 5858, 305, 12, 32, "Subsubsection"],
Cell[155831, 5872, 1191, 43, 234, "SmallText"],
Cell[157025, 5917, 220, 11, 32, "Subsubsection"],
Cell[157248, 5930, 287, 14, 49, "SmallText"],
Cell[157538, 5946, 493, 24, 32, "Subsubsection"],
Cell[158034, 5972, 1279, 55, 101, "SmallText"],
Cell[159316, 6029, 3748, 150, 593, "SmallText"],
Cell[163067, 6181, 411, 16, 32, "Subsubsection"],
Cell[163481, 6199, 1349, 50, 284, "SmallText"],
Cell[164833, 6251, 331, 16, 32, "Subsubsection"],
Cell[165167, 6269, 347, 17, 24, "SmallText"],
Cell[165517, 6288, 608, 27, 32, "Subsubsection"],
Cell[166128, 6317, 2989, 129, 328, "SmallText"],
Cell[169120, 6448, 3837, 155, 593, "SmallText"],
Cell[172960, 6605, 117, 5, 31, "Subsubsection"],
Cell[173080, 6612, 585, 20, 149, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
