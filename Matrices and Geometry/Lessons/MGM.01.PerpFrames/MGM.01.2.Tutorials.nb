(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    264887,       7932]
NotebookOptionsPosition[    195227,       6357]
NotebookOutlinePosition[    248521,       7474]
CellTagsIndexPosition[    248297,       7464]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.01 Perpendicular Frames\n",
 StyleBox["TUTORIALS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
  3.503166885868726*^9, 3.503166892893751*^9}},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1)  Area and volume measurements resulting from stretch factors\
\>", "Subsection",
 CellTags->"MGM.01.T1"],

Cell[CellGroupData[{

Cell["T.1.a.i) Measuring the area enclosed by an ellipse", "Subsubsection"],

Cell[TextData[{
 "You plot the circle of radius 1 centered at {0,0} by plotting\n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cos", "[", "t", "]"}], ",", 
    RowBox[{"Sin", "[", "t", "]"}]}], "}"}]]],
 "  \nrunning t from 0 to 2 \[Pi]:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "t", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"circleplot", " ", "=", " ", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], ",", 
       RowBox[{"Sin", "[", "t", "]"}]}], "}"}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Red"}], "}"}], "}"}]}],
     ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Unit Circle\>\""}]}], "]"}], 
  " "}]}], "Input"],

Cell[TextData[{
 "Here's the ellipse you get ellipse by plotting\n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2.3", " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{"Sin", "[", "t", "]"}]}], "}"}]]],
 " \nrunning t from 0 to 2 \[Pi]:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "t", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"xstretch", " ", "=", " ", "2.3"}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{"ellipseplot", " ", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        StyleBox["xstretch",
         FontColor->RGBColor[1, 0, 1]], " ", 
        StyleBox[
         RowBox[{"Cos", "[", "t", "]"}],
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox[",",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"Sin", "[", "t", "]"}],
        FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", "\"\<Stretched Unit Circle\>\""}]}], 
    "]"}]}]}]}], "Input"],

Cell["See them in action:", "Text"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"circleplot", ",", " ", "ellipseplot"}], "}"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Given that the area enclosed by the circle measures out to \[Pi] square \
units, measure the area enclosed by the plotted ellipse.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You plot the circle by plotting \n\t{Cos[t], Sin[t]}  and running t from 0 \
to 2 \[Pi]:.\nYou plot the ellipse by putting ",
 StyleBox["xstretch = 2.3",
  FontColor->RGBColor[0, 0, 1]],
 "  and plotting\n\t{",
 StyleBox["xstretch ",
  FontColor->RGBColor[0, 0, 1]],
 "Cos[t], Sin[t]}  and running t from 0 to 2 \[Pi]:.\nIn other words, you \
start with \n           {Cos[t], Sin[t]} on the circle\n and stretch the x \
coordinate by a factor of xstretch to get to the corresponding point \n       \
    {",
 StyleBox["xstretch",
  FontColor->RGBColor[0, 0, 1]],
 " Cos[t], Sin[t]} on the ellipse.\n So to get from the circle to the ellipse \
you just stretch all x's on the circle by a factor of ",
 StyleBox["xstretch = 2.3",
  FontColor->RGBColor[0, 0, 1]],
 ". \n See it happen::"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"bars", ",", "s", ",", "x"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretcherbars", "[", "s_", "]"}], ":=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"xstretch", "-", "s"}], 
          RowBox[{"xstretch", "-", "1"}]], ",", "0", ",", 
         FractionBox[
          RowBox[{"s", "-", "1"}], 
          RowBox[{"xstretch", "-", "1"}]]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "s"}], " ", 
               RowBox[{"Cos", "[", "t", "]"}]}], ",", 
              RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"s", " ", 
               RowBox[{"Cos", "[", "t", "]"}]}], ",", 
              RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", 
            FractionBox["\[Pi]", "2"]}], ",", 
           FractionBox["\[Pi]", "2"], ",", 
           FractionBox["\[Pi]", "40"]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"circleplot", ",", "ellipseplot", ",", 
      RowBox[{"stretcherbars", "[", "s", "]"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "1", ",", "xstretch", ",", 
      FractionBox[
       RowBox[{"xstretch", "-", "1"}], "5"]}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.503167522083908*^9, 3.50316754093433*^9}}],

Cell["\<\
This tells you that 
           ellipse area = (xstretch)  (circle area) = (2.3)  \[Pi].
 \
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.1.a.ii) Measuring the area enclosed by another ellipse", \
"Subsubsection"],

Cell[TextData[{
 "Here's the ellipse you  by plotting\n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2.4", " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{"1.7", " ", 
     RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]]],
 "\n and running t from 0 to 2 \[Pi]:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "t", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", " ", "=", " ", "2.4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", " ", "=", " ", "1.7"}], ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{"ellipseplot", " ", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        StyleBox["xstretch",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[
         RowBox[{"Cos", "[", "t", "]"}],
         FontColor->RGBColor[0, 0, 1]]}], ",", 
       RowBox[{
        StyleBox["ystretch",
         FontColor->RGBColor[1, 0, 1]], " ", 
        StyleBox[
         RowBox[{"Sin", "[", "t", "]"}],
         FontColor->RGBColor[0, 0, 1]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}]}], 
    "]"}]}]}]}], "Input"],

Cell[CellGroupData[{

Cell["Measure the area enclosed by the plotted ellipse.", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "To get this ellipse, you plotted\n          {",
 StyleBox["xstretch",
  FontColor->RGBColor[0, 0, 1]],
 " Cos[t], ",
 StyleBox["ystretch",
  FontColor->RGBColor[0, 0, 1]],
 " Sin[t]} and running t from 0 to 2 \[Pi]:\n The area enclosed by this \
ellipse measures out (in square units) to:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "xstretch", ")"}], "  ", 
  RowBox[{"(", "ystretch", ")"}], "Pi"}]], "Input"],

Cell["Reason:", "SmallText"],

Cell[TextData[{
 "You plot the unit circle by plotting \n\t{Cos[t], Sin[t]}  and running t \
from 0 to 2 \[Pi].\nThe area enclosed by tis circle measure out to \[Pi] \
square units. \nYou plot the ellipse by plotting \n\t {",
 StyleBox["xstretch",
  FontColor->RGBColor[0, 0, 1]],
 " Cos[t], ",
 StyleBox["ystretch",
  FontColor->RGBColor[0, 0, 1]],
 " Sin[t]}  and running t from 0 to 2 \[Pi]:.\nIn other words, you start with \
\n           {Cos[t], Sin[t]} on the circle\n and stretch the x coordinate by \
a factor of xstretch  and stretch the y coordinate by a factor of ystretch  \
to get to the corresponding point \n            {",
 StyleBox["xstretch",
  FontColor->RGBColor[0, 0, 1]],
 " Cos[t], ",
 StyleBox["ystretch",
  FontColor->RGBColor[0, 0, 1]],
 " Sin[t]}  on the ellipse.\nThis tells you that \n           ellipse area = \
(",
 StyleBox["xstretch",
  FontColor->RGBColor[0, 0, 1]],
 ") (",
 StyleBox["ystretch",
  FontColor->RGBColor[0, 0, 1]],
 ") (circle area) = (2.4) (1.7) (circle area) = (2.4) (1.7) \[Pi].\n See it \
happen in two stages:\n "
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "t", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", " ", "=", " ", "2.4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", " ", "=", " ", "1.7"}], ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"stage0plot", " ", "=", " ", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      StyleBox[
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], ",", 
        RowBox[{"Sin", "[", "t", "]"}]}],
       FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Orange"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"\"\< Before any stretch. Area =\>\"", "\[Pi]"}]}]}], "]"}]}], 
  "\n"}], "\n", 
 RowBox[{" ", 
  RowBox[{"stage1plot", " ", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        StyleBox["xstretch",
         FontColor->RGBColor[1, 0, 1]], "  ", 
        StyleBox[
         RowBox[{"Cos", "[", "t", "]"}],
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox[",",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[
        RowBox[{"Sin", "[", "t", "]"}],
        FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", " ", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "1"}], "]"}]}], "}"}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
     " ", 
     RowBox[{"PlotLabel", "->", " ", "\"\<xstretch \[Pi] = Area\>\""}]}], " ",
     "]"}]}], "\n"}], "\n", 
 RowBox[{" ", 
  RowBox[{"stage2plot", " ", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        StyleBox["xstretch",
         FontColor->RGBColor[1, 0, 1]], "  ", 
        StyleBox[
         RowBox[{"Cos", "[", "t", "]"}],
         FontColor->RGBColor[0, 0, 1]]}], 
       StyleBox[",",
        FontColor->RGBColor[0, 0, 1]], 
       RowBox[{
        StyleBox["ystretch",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[" ",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox[
         RowBox[{"Sin", "[", "t", "]"}],
         FontColor->RGBColor[0, 0, 1]]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
     " ", 
     RowBox[{
     "PlotLabel", "->", " ", "\"\<xstretch ystretch \[Pi] = Area\>\""}]}], 
    " ", "]"}]}]}]}], "Input",
 AnimationDisplayTime->2],

Cell["See them in progression:", "SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"stage0plot", ",", " ", "stage1plot", ",", " ", "stage2plot"}], 
   "}"}], "]"}]], "Input"],

Cell["Now see them all at once:", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"stage0plot", ",", "stage1plot", ",", "stage2plot"}], 
  "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.1.b.i)  Measuring the volume enclosed by a 3D ellipsoid", \
"Subsubsection"],

Cell[TextData[{
 "You plot the sphere of radius 1 centered at {0,0,0} by plotting \n          \
 ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]]],
 "\nrunning t from 0 to 2 \[Pi] and running s from 0 to \[Pi]:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sphereplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"sphereplot", ",", 
   RowBox[{"Axes3D", "[", "ranger", "]"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "Here's the ellipsoid (football) you get by plotting\n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2.1", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]]],
 " \nrunning t from 0 to 2 \[Pi] and running s from 0 to \[Pi]:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", "=", "2.1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2.2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ellipsoidplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["xstretch",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Cos", "[", "t", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[
         RowBox[{
          RowBox[{"Sin", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[
         RowBox[{"Cos", "[", "s", "]"}],
         FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"ellipsoidplot", ",", 
   RowBox[{"Axes3D", "[", "ranger", "]"}]}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Given that the volume enclosed by the sphere measures out to ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    FractionBox["4", "3"], "\[Pi]"}]}]]],
 " cubic units, measure the volume enclosed by the plotted ellipsoid.."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You plot the sphere by plotting  \n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]]],
 "\nrunning t from 0 to 2 \[Pi] and running s from 0 to \[Pi]:\nYou plot the \
ellipsoid by putting xstretch = 2.1 and plotting  \n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xstretch", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]]],
 "\nrunning t from 0 to 2 \[Pi] and running s from 0 to \[Pi]:\nIn other \
words, you start with \n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]]],
 " on the sphere\n and stretch the x coordinate by a factor of xstretch to \
get to the corresponding point \n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xstretch", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]]],
 " on the ellipsoid.\n So to get from the sphere to the ellipse you just \
stretch all x's on the sphere by a factor of xstretch . \n See it happen:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"bars", ",", "v", ",", "x"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretcherbars", "[", "v_", "]"}], ":=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"xstretch", "-", "v"}], 
          RowBox[{"xstretch", "-", "1"}]], ",", "0", ",", 
         FractionBox[
          RowBox[{"v", "-", "1"}], 
          RowBox[{"xstretch", "-", "1"}]]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "v"}], " ", 
               RowBox[{"Sin", "[", "s", "]"}], " ", 
               RowBox[{"Cos", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"Sin", "[", "s", "]"}], " ", 
               RowBox[{"Sin", "[", "t", "]"}]}], ",", 
              RowBox[{"Cos", "[", "s", "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"v", " ", 
               RowBox[{"Sin", "[", "s", "]"}], " ", 
               RowBox[{"Cos", "[", "t", "]"}]}], ",", 
              RowBox[{
               RowBox[{"Sin", "[", "s", "]"}], " ", 
               RowBox[{"Sin", "[", "t", "]"}]}], ",", 
              RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", 
           RowBox[{"-", 
            FractionBox["\[Pi]", "2"]}], ",", 
           FractionBox["\[Pi]", "2"], ",", 
           FractionBox["\[Pi]", "12"]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"s", ",", "0", ",", "\[Pi]", ",", 
           FractionBox["\[Pi]", "12"]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Append", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"sphereplot", ",", 
        RowBox[{"stretcherbars", "[", "v", "]"}], ",", 
        RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
        
        RowBox[{"Axes", "\[Rule]", "True"}], ",", 
        RowBox[{"AxesLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
        ",", 
        RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
        RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", "1", ",", "xstretch", ",", 
        FractionBox[
         RowBox[{"xstretch", "-", "1"}], "6"]}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"ellipsoidplot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}]}], "]"}]}], "]"}], 
  "]"}]}], "Input"],

Cell[TextData[{
 "This tells you that \n           ellipsoid volume = (xstretch)  (sphere \
volume) = (xstretch) ( ",
 Cell[BoxData[
  FractionBox["4", "3"]]],
 " \[Pi]):"
}], "SmallText"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"(", "xstretch", ")"}], "  ", 
   RowBox[{"(", 
    RowBox[{"4", "/", "3"}], ")"}], "\[Pi]"}]}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.1.b.ii) Measuring the volume enclosed by another ellipsoid", \
"Subsubsection"],

Cell[TextData[{
 "Here's the ellipsoid (pancake!) you get by plotting\n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"2.1", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{"0.5", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"1.5", " ", 
     RowBox[{"Cos", "[", "s", "]"}]}]}], "}"}]]],
 " \nrunning t from 0 to 2 \[Pi] and running s from 0 to \[Pi]:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", "=", "2.1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", "=", "0.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"zstretch", "=", "1.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ellipsoidplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["xstretch",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Cos", "[", "t", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        RowBox[{
         StyleBox["ystretch",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "t", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        RowBox[{
         StyleBox["zstretch",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[
          RowBox[{"Cos", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"ellipsoidplot", ",", 
   RowBox[{"Axes3D", "[", "ranger", "]"}]}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["Measure the volume enclosed by the plotted ellipsoid..", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "To get this ellipsoid, you plotted\n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xstretch", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{"ystretch", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"zstretch", " ", 
     RowBox[{"Cos", "[", "s", "]"}]}]}], "}"}]]],
 "\nrunning t from 0 to 2 \[Pi] and running s from 0 to \[Pi]:\nThe volume \
enclosed by this ellipsoid measures out (in cubic units) to:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", " ", "=", " ", "2.1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", " ", "=", " ", "0.3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"zstretch", " ", "=", " ", "1.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"(", "xstretch", ")"}], "  ", 
  RowBox[{"(", "ystretch", ")"}], " ", 
  RowBox[{"(", "zstretch", ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"4", "/", "3"}], ")"}], " ", "Pi"}]}], "Input"],

Cell["Reason:", "SmallText"],

Cell[TextData[{
 "You plot the unit sphere by plotting  \n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]]],
 "\nrunning t from 0 to 2 \[Pi] and running s from 0 to \[Pi]:\nYou plot the \
ellipsoid by   plotting  \n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xstretch", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{"ystretch", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"zstretch", " ", 
     RowBox[{"Cos", "[", "s", "]"}]}]}], "}"}]]],
 "\nrunning t from 0 to 2 \[Pi] and running s from 0 to \[Pi]:\nIn other \
words, you start with \n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]]],
 " on the sphere\n and stretch the \n         x coordinate (first slot) by a \
factor of xstretch\n         y coordinate (second slot) by a factor of \
ystretch\n         z coordinate (second slot) by a factor of zstretch\n  to \
get to the corresponding point \n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"xstretch", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{"ystretch", " ", 
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"zstretch", " ", 
     RowBox[{"Cos", "[", "s", "]"}]}]}], "}"}]]],
 " \n on the ellipsoid.\n Each time you multiply by one of the factors, you \
multiply volume by that factor. \nSo\n           ellipsoid volume =  \
(xstretch)  (ystretch)  (zstretch) (sphere volume):"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "xstretch", ")"}], "  ", 
  RowBox[{"(", "ystretch", ")"}], "  ", 
  RowBox[{"(", "zstretch", ")"}], " ", 
  RowBox[{"(", 
   FractionBox[
    RowBox[{"4", " ", "\[Pi]"}], "3"], ")"}]}]], "Input"],

Cell[" See it happen in three stages:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", "=", "2.1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", "=", "0.3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"zstretch", "=", "1.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage0plot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"Sin", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], ",", 
         RowBox[{
          RowBox[{"Sin", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ",", 
         RowBox[{"Cos", "[", "s", "]"}]}],
        FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage1plot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["xstretch",
          FontColor->RGBColor[1, 0, 1]], " ", 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Cos", "[", "t", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[
         RowBox[{
          RowBox[{"Sin", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[
         RowBox[{"Cos", "[", "s", "]"}],
         FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage2plot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["xstretch",
          FontColor->RGBColor[1, 0, 1]], " ", 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Cos", "[", "t", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        RowBox[{
         StyleBox["ystretch",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "t", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox[
         RowBox[{"Cos", "[", "s", "]"}],
         FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stage3plot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["xstretch",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Cos", "[", "t", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        RowBox[{
         StyleBox["ystretch",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "t", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        RowBox[{
         StyleBox["zstretch",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[" ",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox[
          RowBox[{"Cos", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"stage0plot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Before any stretch. Volume =\!\(\*FractionBox[\(4\), \
\(3\)]\)\[Pi]\>\""}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"stage1plot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Volume = xstretch \!\(\*FractionBox[\(4\), \(3\)]\)\[Pi]\>\""}]}],
      "]"}], ",", 
    RowBox[{"Show", "[", 
     RowBox[{"stage2plot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Volume = xstretch ystretch \!\(\*FractionBox[\(4\), \(3\)]\)\[Pi]\
\>\""}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"stage3plot", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Volume = xstretch ystretch zstretch \!\(\*FractionBox[\(4\), \
\(3\)]\)\[Pi]\>\""}]}], "]"}]}], "}"}], "]"}]}], "Input",
 AnimationDisplayTime->1]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.2)  Using perpendicular frames to plot and measure tilted 2D ellipses and \
3D ellipsoids \
\>", "Subsection",
 CellTags->"MGM.01.T2"],

Cell[CellGroupData[{

Cell["T.2.a.i) Plotting tilted 2D ellipses", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Use stretch factors and perpendicular frames to plot tilted 2D ellipses.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
You get the unit circle centered at {0,0} by plotting {Cos[t], Sin[t]} \
running t from 0 to 2\[Pi]:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "t", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"circleplot", " ", "=", " ", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input"],

Cell["\<\
To plot an ellipse centered at {0,0} and aligned on the x and y axes you \
stretch the circle out on the x and y -axes by selecting stretch factors \
xstretch and ystretch and then plotting 
        {x[t],y[t]} =   {xstretch Cos[t], ystretch Sin[t]}
 like this:
\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", "=", " ", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", "=", " ", "1.3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", 
    RowBox[{"1.1", 
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"t", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xstretch", "  ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{"ystretch", "  ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"stretched", " ", "=", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", 
       RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "tlow", ",", "thigh"}], "}"}], ",", 
     RowBox[{"PlotStyle", "->", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
       "}"}]}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", "\n", "\t", 
     RowBox[{"PlotLabel", "->", "\"\<Ellipse aligned on xy-axes\>\""}]}], 
    "]"}]}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", "t", "]"}], ",", 
   RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "Input"],

Cell["\<\
The parameterization {x[t],y[t]} of this ellipse is shown directly below the \
plot.\
\>", "Special5"],

Cell["\<\
Next you choose a perpendicular frame. 
Here's a sample:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    FractionBox["\[Pi]", "3"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "2", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"stretched", ",", "frameplot", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Ellipse aligned on xy - axes\>\""}]}],
   "]"}]}], "Input"],

Cell[TextData[{
 "And then you hang that ellipse on the perpendicular frame with \n     ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 " playing the former role of the positive x-axis \nand with \n    ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 " playing the former role of the positive y-axis.\nby plotting\n    ",
 Cell[BoxData[
  RowBox[{"   ", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], " ", 
     RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], " ", 
     RowBox[{"perpframe", "[", "2", "]"}]}]}]}]]],
 ". "
}], "SmallText"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"hung", "=", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], " ", 
          RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
         RowBox[{
          RowBox[{"y", "[", "t", "]"}], " ", 
          RowBox[{"perpframe", "[", "2", "]"}]}]}],
        FontColor->RGBColor[0, 0, 1]], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"2", " ", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
         "}"}]}], ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
   " ", "\n", "\n", 
   RowBox[{"Show", "[", 
    RowBox[{"hung", ",", "frameplot", ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Ellipse hung on perpendicular frame\>\""}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], " ", 
      RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"y", "[", "t", "]"}], " ", 
      RowBox[{"perpframe", "[", "2", "]"}]}]}],
    FontColor->RGBColor[0, 0, 1]]}]}]], "Input"],

Cell["\<\
The parameterization  of this ellipse is shown directly below the plot.\
\>", "Special5"],

Cell["Make it look pretty by stretching out the perpframe vectors:", \
"SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"adjustedframeplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"xstretch", " ", 
         RowBox[{"perpframe", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "xstretch"}], " ", 
         RowBox[{"perpframe", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"ystretch", " ", 
         RowBox[{"perpframe", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "ystretch"}], " ", 
         RowBox[{"perpframe", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"hung", ",", "adjustedframeplot", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Axes for tilted ellipse\>\""}]}], 
  "]"}]}], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.2.a.ii) Measuring the area enclosed by a tilted ellipse", \
"Subsubsection"],

Cell["\<\
Here's another look at that hung ellipse at the end of part i):\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"hung", ",", "adjustedframeplot", ",", " ", 
   RowBox[{
   "PlotLabel", "->", "\"\<Ellipse hung on perpendicular frame\>\""}]}], 
  "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Measure the area enclosed by this ellipse.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The area of this ellipse measures out to (xstretch) (ystretch) \[Pi] \
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "xstretch", ")"}], " ", 
  RowBox[{"(", "ystretch", ")"}], " ", "\[Pi]", " "}]], "Input"],

Cell["\<\
Reason:
To make this ellipse you start by plotting the unit circle.
The area of the unit circle measures out to \[Pi] square units:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"circleplot", ",", 
   RowBox[{"PlotLabel", "->", "\"\<Area = \[Pi]\>\""}]}], "]"}]], "Input"],

Cell["\<\
Then you stretch this circle out the x-axis by a factor of 
xstretch 
and then you stretch the result out the y-axis by a factor of 
ystretch:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", "stretched", "]"}]], "Input"],

Cell["\<\
The area enclosed by this aligned ellipse (See T.1)  measures out to
         (xstretch) (ystretch) \[Pi]:
Next you hang this ellipse on the plotted perpendicular frame:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"hung", ",", "frameplot", ",", 
   RowBox[{"AspectRatio", "->", "Automatic"}], ",", "\n", "   ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", "\n",
    "   ", 
   RowBox[{
   "PlotLabel", "->", "\"\<Ellipse hung on perpendicular frame\>\""}]}], 
  "]"}]], "Input"],

Cell["\<\
This hung ellipse is the same physical ellipse as the original version \
immediately above. So the area it encloses measures to the same thing as the \
area enclosed by the original ellipse. 
Namely -    
                (xstretch) (ystretch) \[Pi] .    \
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.2.b.i) Plotting tilted 3D ellipsoids", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Use stretch factors and perpendicular frames to plot tilted 3D ellipsoids.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You plot the sphere of radius 1 centered at {0,0,0} by plotting \n          \
 ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]]],
 "\nrunning t from 0 to 2 \[Pi] and running s from 0 to \[Pi]:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sphereplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"sphereplot", ",", 
   RowBox[{"Axes3D", "[", "ranger", "]"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "To plot an ellipsoid centered at ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]]],
 " and aligned on the x , y and z axes you stretch the sphere out on the x,  \
y  and z -axes by selecting stretch factors xstretch, ystretch and zstretch \
and then plotting \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "t", "]"}], ",", 
     RowBox[{"y", "[", "t", "]"}], ",", 
     RowBox[{"z", "[", "t", "]"}]}], "}"}], "=", "\n", "\t         ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"xstretch", "  ", 
      RowBox[{"Sin", "[", "s", "]"}], " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", 
     RowBox[{"ystretch", "  ", 
      RowBox[{"Sin", "[", "s", "]"}], " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], ",", 
     RowBox[{"zstretch", "  ", 
      RowBox[{"Cos", "[", "s", "]"}]}]}], "}"}]}]]],
 "\n like this:\n"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", "=", " ", "2.75"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", "=", " ", "1.60"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"zstretch", " ", "=", " ", "0.76"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", 
    RowBox[{"1.3", 
     RowBox[{"Max", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], 
      "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "s", ",", "t"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xstretch", " ", 
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{"ystretch", " ", 
       RowBox[{"Sin", "[", "s", "]"}], "  ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{"zstretch", "  ", 
       RowBox[{"Cos", "[", "s", "]"}]}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"stretchedellipse", " ", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ",", 
        RowBox[{"y", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ",", 
        RowBox[{"z", "[", 
         RowBox[{"s", ",", "t"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "tlow", ",", "thigh"}], "}"}]}], "]"}]}], ";"}],
   " ", "\n"}], "\n", 
 RowBox[{" ", 
  RowBox[{"stretchedplot", " ", "=", " ", 
   RowBox[{"Show", "[", 
    RowBox[{"stretchedellipse", ",", 
     RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
     RowBox[{"PlotRange", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
     "  ", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     ",", " ", 
     RowBox[{"Boxed", "->", "False"}], ",", 
     RowBox[{"ViewPoint", "->", "CMView"}], ",", " ", 
     RowBox[{"PlotLabel", "->", "\"\<Ellipsoid aligned on xyz - axes\>\""}]}],
     "]"}]}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ",", 
   RowBox[{"y", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ",", 
   RowBox[{"z", "[", 
    RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], "Input"],

Cell["\<\
The parameterization {x[s,t],y[s,t],z[s,t]} of this ellipsoid is shown \
directly below the plot.\
\>", "Special5"],

Cell["\<\
Next you choose a perpendicular frame.
Here's a sample (later in the course you will see where this formula comes \
from):\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r", "=", 
    FractionBox["\[Pi]", "3"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"0.4", " ", "\[Pi]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t", "=", 
    FractionBox["\[Pi]", "4"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"perpframe", "[", "1", "]"}], ",", 
     RowBox[{"perpframe", "[", "2", "]"}], ",", 
     RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], " ", 
         RowBox[{"Cos", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", "r", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", "r", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Cos", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Cos", "[", "s", "]"}], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "t", "]"}]}], " ", 
        RowBox[{"Sin", "[", "s", "]"}]}], ",", 
       RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "2", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "3", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"frameplot", ",", 
   RowBox[{"Axes3D", "[", "1", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<3D perpendicular frame\>\""}]}], 
  "]"}]}], "Input"],

Cell[TextData[{
 "And then you hang that ellipse on the chosen perpendicular frame with \n    \
  ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 " playing the former role of ",
 StyleBox["{1,0,0}",
  FontColor->RGBColor[0, 0, 1]],
 " pointing out the positive x-axis \n      ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"perpframe", "[", "2", "]"}]}]]],
 " playing the former role of ",
 StyleBox["{0,1,0}",
  FontColor->RGBColor[0, 0, 1]],
 " pointing out the positive y-axis \nand with \n        ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "3", "]"}]]],
 " playing the former role of",
 StyleBox["{0,0,1}",
  FontColor->RGBColor[0, 0, 1]],
 " pointing out the positive z-axis \nby plotting\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"s", ",", "t"}], "]"}], " ", 
    RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
   RowBox[{
    RowBox[{"y", "[", 
     RowBox[{"s", ",", "t"}], "]"}], " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"z", "[", 
     RowBox[{"s", ",", "t"}], "]"}], " ", 
    RowBox[{"perpframe", "[", "3", "]"}]}]}]]],
 ":"
}], "SmallText"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hung", "=", 
    RowBox[{"ParametricPlot3D", "[", " ", 
     RowBox[{
      StyleBox[
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"s", ",", "t"}], "]"}], " ", 
         RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
        RowBox[{
         RowBox[{"y", "[", 
          RowBox[{"s", ",", "t"}], "]"}], " ", 
         RowBox[{"perpframe", "[", "2", "]"}]}], "+", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"s", ",", "t"}], "]"}], " ", 
         RowBox[{"perpframe", "[", "3", "]"}]}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}]}], "]"}]}], ";"}], " ",
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hungplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"hung", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Ellipsoid hung on perpendicular frame\>\""}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"adjustedframe", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"xstretch", " ", 
         RowBox[{"perpframe", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"ystretch", " ", 
         RowBox[{"perpframe", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"zstretch", " ", 
         RowBox[{"perpframe", "[", "3", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "xstretch"}], " ", 
         RowBox[{"perpframe", "[", "1", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "ystretch"}], " ", 
         RowBox[{"perpframe", "[", "2", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "zstretch"}], " ", 
         RowBox[{"perpframe", "[", "3", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"adjustedframeplot", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"adjustedframe", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Scaled hanger frame\>\""}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"adjustedframeplot", ",", " ", "hungplot"}], "}"}], 
  "]"}]}], "Input",
 AnimationDisplayTime->2],

Cell["Serious 3D action.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.2.b.ii) Measuring the volume enclosed by a tilted 3D ellipsoid\
\>", "Subsubsection"],

Cell["\<\
Here's another look at that hung ellipsoid at the end of part i}\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"hung", ",", 
   RowBox[{"Axes3D", "[", "ranger", "]"}], ",", "\n", "  ", 
   RowBox[{"PlotRange", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", "  ", 
   RowBox[{"Axes", "->", "True"}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   "  ", 
   RowBox[{"Boxed", "->", "False"}], ",", 
   RowBox[{"ViewPoint", "->", "CMView"}], ",", " ", 
   RowBox[{
   "PlotLabel", " ", "->", 
    "\"\<Ellipsoid hung on perpendicular frame\>\""}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["Measure the volume enclosed by this ellipsoid.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The volume of this hung ellipsoid measures out to 
             (xstretch) (ystretch) (zstretch) (4/3) \[Pi]  cubic units\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "xstretch", ")"}], " ", 
  RowBox[{"(", "ystretch", ")"}], " ", 
  RowBox[{"(", "zstretch", ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"4", "/", "3"}], ")"}], " ", "\[Pi]", " "}]], "Input"],

Cell["\<\
Reason:
The stretched aligned ellipse and the hung ellipse:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"stretchedplot", ",", "hungplot"}], "}"}], "]"}]], "Input"],

Cell["\<\
are the same physical ellipse. Only their positions are different. The volume \
enclosed by stretched aligned ellipse measures out to
            (xstretch) (ystretch) (zstretch) (4/3) \[Pi]  cubic units\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", "xstretch", ")"}], " ", 
  RowBox[{"(", "ystretch", ")"}], " ", 
  RowBox[{"(", "zstretch", ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"4", "/", "3"}], ")"}], " ", "\[Pi]", " "}]], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.3)  Lines through {0,0} in 2D and lines through {0,0,0} in 3D;  using \
perpendicular frame components to come up with closest points\
\>", "Subsection",
 CellTags->"MGM.01.T3"],

Cell[CellGroupData[{

Cell["T.3.a.i) Plotting 2D lines through {0,0}", "Subsubsection"],

Cell["Here's a  unit vector in 2D:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", "0.4"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"U", " ", "=", " ", 
  RowBox[{"{", 
   StyleBox[
    RowBox[{
     RowBox[{"Cos", "[", "s", "]"}], ",", 
     RowBox[{"Sin", "[", "s", "]"}]}],
    FontColor->RGBColor[0, 0, 1]], "}"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Come up with a parametric formula for the line that runs through ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}]]],
 " and runs parallel to U.\nShow the line, the vector, and the point in a \
single plot."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Here comes the parametric formula:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"line", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"line", "[", "t_", "]"}], "=", 
  RowBox[{"t", "  ", "U"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Note how the parametric formula displays the unit vector U:", \
"SmallText"],

Cell[BoxData["U"], "Input"],

Cell["Here comes the plot:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"unitvectorplot", "=", 
    RowBox[{"Vector", "[", 
     RowBox[{"U", ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Orange"}], ",", 
      RowBox[{"HeadSize", "->", "0.2"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lineplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"line", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"Thickness", "[", "0.008", "]"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ulabel", " ", "=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<U\>\"", ",", 
         RowBox[{"0.6", " ", "U"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{"all", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"lineplot", ",", "unitvectorplot", ",", "Ulabel"}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Done.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.a.ii) Closest points via components", "Subsubsection"],

Cell["Here's the line from part i) plotted with point: ", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"point", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1.5", ",", "2.1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", " ", "=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Gray", ",", 
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Point", "[", "point", "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"setup", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"all", ",", "pointplot", ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Come up with the point on the line closest to the plotted point.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Take the component of the plotted point in the direction of U:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"closestpoint", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"point", ".", "U"}], ")"}], " ", "U"}]}]], "Input"],

Cell[TextData[StyleBox["U is the unit vector that defines the direction of \
the line.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["See it:", "SmallText"],

Cell[BoxData[
 RowBox[{"closestplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"setup", ",", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Point", "[", "closestpoint", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Line, point and closest point\>\""}]}], 
   "]"}]}]], "Input"],

Cell["Looking good and feeling great.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.a.iii) Why that worked", "Subsubsection"],

Cell["Take another look at the last plot:", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", "closestplot", "]"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
To get that closest point, you took the line defined by the unit vector U a \
found that the point on the line closest to the given point is the component \
of the point in the direction of U.
Explain why this was guaranteed to work.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Throw in a unit vector V so that {U,V} is a perpendicular frame:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"V", "=", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"s", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"s", " ", "+", 
         FractionBox["\[Pi]", "2"]}], "]"}]}],
      FontColor->RGBColor[0, 0, 1]], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Vlabel", " ", "=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<V\>\"", ",", 
         RowBox[{"0.7", " ", "V"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\n", 
 RowBox[{"more", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"closestplot", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{"V", ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Orange"}], ",", 
      RowBox[{"HeadSize", "->", "0.2"}]}], "]"}], ",", "Vlabel"}], 
   "]"}]}]}], "Input"],

Cell["\<\
Resolve the point into perpendicular frame components parallel to U and V:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"more", ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{"point", ".", "U"}], ")"}],
       FontColor->RGBColor[0, 0, 1]], " ", "U"}], ",", 
     RowBox[{"Tail", "->", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}], ",", "\[IndentingNewLine]", 
     "                                ", 
     RowBox[{"VectorColor", "->", "Blue"}], ",", 
     RowBox[{"HeadSize", "->", "0.2"}]}], "]"}], ",", 
   RowBox[{"Vector", "[", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{"point", ".", "V"}], ")"}],
       FontColor->RGBColor[1, 0, 1]], " ", "V"}], ",", 
     RowBox[{"Tail", "->", 
      RowBox[{
       StyleBox[
        RowBox[{"(", 
         RowBox[{"point", ".", "U"}], ")"}],
        FontColor->RGBColor[0, 0, 1]], " ", "U"}]}], ",", 
     RowBox[{"VectorColor", "->", "Magenta"}]}], "]"}]}], "]"}]], "Input"],

Cell[TextData[{
 "That component of the point in the direction of V (",
 StyleBox["magenta",
  FontColor->RGBColor[1, 0, 1]],
 ") is perpendicular to the line and runs through the given point.  Because \
perpendicular distance is the shortest distance, that plotted point on the \
line is closest to the given point off the line."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.b.i) 3D lines", "Subsubsection"],

Cell["Here's a  unit vector in 3D:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", "0.4"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"t", " ", "=", " ", 
    RowBox[{"-", "0.2"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"U", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], "  ", 
     RowBox[{"Cos", "[", "t", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sin", "[", "s", "]"}], " ", 
     RowBox[{"Sin", "[", "t", "]"}]}], ",", 
    RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Come up with a parametric formula for the line that runs through ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]]],
 " and runs parallel to ",
 Cell[BoxData["U"]],
 ".\nShow the line, the vector, and the point in a single plot."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Here comes the parametric formula:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"line", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"line", "[", "t_", "]"}], "=", 
  RowBox[{"t", "  ", "U"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Note how the parametric formula displays the unit vector U:", \
"SmallText"],

Cell[BoxData["U"], "Input"],

Cell["Here comes the plot:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"unitvectorplot", "=", 
    RowBox[{"Vector", "[", 
     RowBox[{"U", ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", 
       RowBox[{"Darker", "[", "Orange", "]"}]}], ",", 
      RowBox[{"HeadSize", "->", "0.2"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lineplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"line", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", 
         StyleBox["\"\<z\>\"",
          FontColor->RGBColor[0, 0, 1]]}], "}"}]}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ulabel", " ", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<U\>\"", ",", 
         RowBox[{"0.6", " ", "U"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "]"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{"all", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"lineplot", ",", "unitvectorplot", ",", "Ulabel", ",", "    ", 
    StyleBox[
     RowBox[{"Axes3D", "[", 
      RowBox[{"2", ",", "0.1"}], "]"}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    StyleBox[
     RowBox[{"Boxed", "\[Rule]", "False"}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Done.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.b.ii) Closest points in 3D via components", "Subsubsection"],

Cell["Here's the line from part i) plotted with a point:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"givenpoint", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1.3", ",", 
      RowBox[{"-", "1.8"}], ",", "1.6"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", " ", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Gray", ",", 
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Point", "[", "givenpoint", "]"}]}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"setup", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"all", ",", "pointplot", ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Come up with the point on the line closest to the plotted point and plot it.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
You do the same thing you do in 2D.
The point on the line closest to the given point is the component of the \
given point in the direction of the unit vector:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"closestpoint", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"givenpoint", ".", "U"}], ")"}], " ", "U"}]}]], "Input"],

Cell[TextData[StyleBox["U is the unit vector that defines the direction of \
the line.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["See it:", "SmallText"],

Cell[BoxData[
 RowBox[{"closestplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"setup", ",", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Point", "[", "closestpoint", "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Line, point and closest point\>\""}]}], 
   "]"}]}]], "Input"],

Cell["\<\
Just as in 2D, the vector running from the red point on the line to the given \
point is perpendicular to the line:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"givenpoint", "-", " ", "closestpoint"}], ")"}], ".", "U"}], 
  "]"}]], "Input"],

Cell["\<\
Because perpendicular distance is the shortest distance, that plotted point \
on the line is closest to the given point off the line.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.4)  Planes through {0,0,0} in 3D, closest points, plotting 2D curves on 3D \
planes\
\>", "Subsection",
 CellTags->"MGM.01.T4"],

Cell[CellGroupData[{

Cell["T.4.a.i) Using a perpendicular frame to plot a plane in 3D.", \
"Subsubsection"],

Cell[CellGroupData[{

Cell["How do you use a perpendicular frame to plot a plane in 3D?", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
One easy way to get a plane through {0,0,0} is to start with a 3D \
perpendicular frame:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r", " ", "=", " ", 
    RowBox[{"-", "0.3"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"-", "0.25"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t", " ", "=", " ", "0.1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "s", "]"}]}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "r", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "1.0"}], ";"}], " "}], "\n", 
 RowBox[{"frameplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\n", "     ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", " ", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[3]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"2", ",", "0.1"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Boxed", "->", "False"}], ",", " ", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input",
 AnimationDisplayTime->1],

Cell[TextData[{
 "You get the plane through ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]]],
 " determined by ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 " by going with all combinations\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"s", " ", 
    RowBox[{"perpframe", "[", "1", "]"}]}], " ", "+", " ", 
   RowBox[{"t", " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]]],
 "\nwith ",
 Cell[BoxData["s"]],
 " and ",
 Cell[BoxData["t"]],
 " running over all real numbers.\nHere's how you plot a piece of the plane \
through ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]]],
 " determined by ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 ": "
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", 
     RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
    RowBox[{"t", "  ", 
     RowBox[{"perpframe", "[", "2", "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5"}], ",", "1.5"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.0"}], ",", "2.0"}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plane", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
       RowBox[{"t", "  ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"Mesh", "->", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"planeplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"frameplot", ",", "plane", ",", 
    RowBox[{"Axes", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]}], "]"}]}]}], "Input"],

Cell["See it from a viewpoint in the direction of perpframe[1]:", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"planeplot", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"20", " ", 
     RowBox[{"perpframe", "[", "2", "]"}]}]}]}], "]"}]], "Input"],

Cell["\<\
Perpframe[1] and perpframe[2] are in the plane. 
Perpframe[3] is perpendicular to the plane.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.4.a.ii) Closest points", "Subsubsection"],

Cell["\<\
Here's that same plane again shown with a point not on the plane.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"point", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.4"}], ",", 
      RowBox[{"-", "0.5"}], ",", "1.5"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", " ", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Gray", ",", 
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Point", "[", "point", "]"}]}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"newsetup", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"planeplot", ",", "pointplot"}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Come up with the point on the plane closest to the plotted point.
Throw this point into the plot.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Add the perpendicular frame components of the point in the directions of \
perpframe[1] and perpframe[2]:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"closestpoint", "=", " ", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"point", ".", 
      RowBox[{"perpframe", "[", "1", "]"}]}], ")"}], " ", 
    RowBox[{"perpframe", "[", "1", "]"}]}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"point", ".", 
      RowBox[{"perpframe", "[", "2", "]"}]}], ")"}], " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]}]], "Input"],

Cell["See it:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"closestpointplot", " ", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", 
       RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
       RowBox[{"Point", "[", "closestpoint", "]"}]}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{" ", 
  RowBox[{"closeplot", " ", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"newsetup", ",", "closestpointplot"}], "]"}]}]}]}], "Input"],

Cell["\<\
See it from a viewpoint far out in the direction of perpframe[1]::\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"closeplot", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"30", " ", 
     RowBox[{"perpframe", "[", "1", "]"}]}]}]}], "]"}]], "Input"],

Cell["\<\
See it from a viewpoint far out in the direction of perpframe[2]::\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"closeplot", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"30", " ", 
     RowBox[{"perpframe", "[", "2", "]"}]}]}]}], "]"}]], "Input"],

Cell["\<\
Lookin' good.
Notice that the line segment running from the closest point to the given \
point is parallel to perpframe[3] and is perpendicular to the plane.
If you want to see why this calculation worked, go on to the next part.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.4.a.iii) Why the calculation works", "Subsubsection"],

Cell[TextData[{
 "Here is what happened in part i) above:\nGiven a perpendicular frame ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}], ",", 
    RowBox[{"perpframe", "[", "3", "]"}]}], "}"}]]],
 ", \nyou make the plane through {0,0,0} determined by perpframe[1] and \
perpframe[2] by taking all combinations \n     ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"s", " ", 
    RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
   RowBox[{"t", " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]]],
 "\nwith s and t running over all real numbers."
}], "Text"],

Cell["\<\
Fancy folks often like to call s perpframe[1] + t perpframe[2] by the name
\"linear combonation of perpframe[1] and perpframe[2].\"\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell[TextData[{
 "According to the calculation in part i), if ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 " is a given 3D point, then the point on the plane closest to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 " is\n\n",
 Cell[BoxData[
  RowBox[{"closest", " ", "=", "\n", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ".", 
       RowBox[{"perpframe", "[", "1", "]"}]}], ")"}], " ", 
     RowBox[{"perpframe", "[", "1", "]"}]}], "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], ".", 
       RowBox[{"perpframe", "[", "2", "]"}]}], ")"}], " ", 
     RowBox[{"perpframe", "[", "2", "]"}]}]}]}]]],
 "..\n\nExplain why this calculation is guaranteed to work."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Break up {x,y,z} into components in the directions of perpframe[1],\n\
perpframe[2] and perpframe[3] this way:\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"comp", "[", "1", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ".", 
      RowBox[{"perpframe", "[", "1", "]"}]}], ")"}], " ", 
    RowBox[{"perpframe", "[", "1", "]"}]}]}]]],
 "\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"comp", "[", "2", "]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], ".", 
      RowBox[{"perpframe", "[", "2", "]"}]}], ")"}], " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]]],
 "\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"comp", "[", "3", "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], ".", 
     RowBox[{"perpframe", "[", "3", "]"}]}], " ", 
    RowBox[{"perpframe", "[", "3", "]"}]}]}]]],
 ".\n\nAt this stage, you are guaranteed that\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "=", 
   RowBox[{
    RowBox[{"comp", "[", "1", "]"}], "+", 
    RowBox[{"comp", "[", "2", "]"}], "+", 
    RowBox[{"comp", "[", "3", "]"}]}]}]]],
 ".\n You are also guaranteed that \n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"comp", "[", "1", "]"}], "+", 
   RowBox[{"comp", "[", "2", "]"}]}]]],
 "\n is in the  plane through ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0", ",", "0"}], "}"}]]],
 " determined by ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 "."
}], "SmallText"],

Cell["\<\
 Reason:
comp[1] runs in the direction of perpframe[1] 
 and comp[2] runs in the direction of perpframe[2].\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Now to get from \n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"comp", "[", "1", "]"}], "+", 
   RowBox[{"comp", "[", "2", "]"}]}]]],
 " to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 ", \nyou move along ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"comp", "[", "3", "]"}]}]]],
 ", a vector which is perpendicular to the plane."
}], "SmallText"],

Cell["\<\
 Reason:
comp[3] runs in the direction of perpframe[3] 
 and perpframe[3] is perpendicular to the plane.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\nIn other words, the vector running from \n            ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"comp", "[", "1", "]"}], "+", 
   RowBox[{"comp", "[", "2", "]"}]}]]],
 " to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 "\nis perpendicular to the plane. \n\nAnd because perpendicular distance is \
the shortest distance, you are guaranteed that\ncomp[1] + comp[2] = \t\
({x,y,z}.perpframe[1]) perpframe[1]+ ({x,y,z}.perpframe[2]) perpframe[2]\nis \
the point on the plane closest to {x,y,z}.\nExplanation complete."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.4.b) Hanging 2D curves on 3D planes", "Subsubsection"],

Cell["\<\
Here's a perpendicular frame {perpframe[1],perpframe[2],perpframe[3]} and \
part of the plane through {0,0,0} determined by perpframe[1] and perpframe[2]:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r", " ", "=", " ", "0.3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", " ", 
    RowBox[{"-", "0.6"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t", " ", "=", "0.2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "s", "]"}]}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "r", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"perpframe", "[", "k", "]"}], ",", 
          RowBox[{"Tail", "->", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", " ", "\n", 
      "     ", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[1]\>\"", ",", 
         RowBox[{"0.4", " ", 
          RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
      "     ", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[2]\>\"", ",", 
         RowBox[{"0.7", " ", 
          RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", "\n", 
      "     ", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[3]\>\"", ",", 
         RowBox[{"0.7", " ", 
          RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n", "    "}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"planeplotter", ",", "s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"planeplotter", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
     RowBox[{"t", "  ", 
      RowBox[{"perpframe", "[", "2", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"plane", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"planeplotter", "[", 
        RowBox[{"s", ",", "t"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"Mesh", "->", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"planeplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"frameplot", ",", "plane", ",", " ", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"1.0", ",", "0.1"}], "]"}], ",", "   ", "\n", "\n", "     ", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]}], "]"}]}]}], "Input",
 AnimationDisplayTime->1],

Cell["Here's an ellipse plotted in 2D:\t\t", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1.4", " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{"0.4", " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"ellipseplot", " ", "=", " ", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
You job is to duplicate this ellipse by hanging it on the plane with \
perpframe[1] playing the role of {1,0} (x-axis) and perpframe[2] playing the \
role of {0,1} (y-axis).\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The function used to plot the ellipse is:
           {x[t],y[t]} = x[t] {1,0} + y[t] {0,1}
To hang this curve on the plane with
            perpframe[1] playing the role of {1,0} (x-axis) 
  and 
             perpframe[2] playing the role of {0,1} (y-axis) ,
 change
              {1,0} to perpframe[1] 
and change
               {0,1} to perpframe[2]  
to get
            x[t] perpframe[1] + y[t] perpframe[2] 
 and plotting. Try it out:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hungellipseplot", " ", "=", " ", 
    RowBox[{"ParametricPlot3D", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"y", "[", "t", "]"}], " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], " ", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{"all", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"planeplot", ",", "hungellipseplot"}], "]"}]}]}], "Input"],

Cell["\<\
See it from the viewpoint far out in the direction  of perpframe[3]:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"all", ",", " ", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"12", " ", 
     RowBox[{"perpframe", "[", "3", "]"}]}]}]}], "]"}]], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", "ellipseplot", "]"}]], "Input"],

Cell["Tasty.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.5) The cross product ",
 Cell[BoxData[
  RowBox[{"X", "\[Cross]", "Y"}]]],
 " of two 3D vectors is perpendicular to both ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 "\nUsing the cross product to build a perpendicular frame"
}], "Subsection",
 CellTags->"MGM.01.T5"],

Cell[CellGroupData[{

Cell[TextData[{
 "T.",
 "5.a.i) The cross product ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " of two 3D vectors is perpendicular to both ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]]
}], "Subsubsection"],

Cell[TextData[{
 "Take two vectors ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 " from the same dimension.\nTesting for perpendicularity by checking whether \
\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", ".", "Y"}], "=", "0"}]]],
 " \nis quick and easy.\nIn three dimensions, another product comes to the \
front.  \nThis product is also related to perpendicularity.\nTo calculate the \
cross product \n       ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " for ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"X", "=", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ";"}], " "}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"Y", "=", 
   RowBox[{"{", 
    RowBox[{"d", ",", "e", ",", "f"}], "}"}]}]]],
 ", \nyou can use this formula:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"XcrossY", " ", "=", " ", 
  RowBox[{"Cross", "[", 
   RowBox[{"X", ",", " ", "Y"}], "]"}]}]}], "Input"],

Cell["Don't try to memorize this formula.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
That's nasty and you will learn a short cut later on. 
Meanwhile, see a sample 3D vector X and a sample 3D vector Y:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"{", 
     RowBox[{"0.9", ",", 
      RowBox[{"-", "1.0"}], ",", "0.5"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"{", 
     RowBox[{"1.2", ",", "2.0", ",", 
      RowBox[{"-", "0.7"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"XandY", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Vector", "[", 
     RowBox[{"X", ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"1", ",", "0.2"}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<X\>\"", ",", 
       FractionBox["X", "2"]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<Y\>\"", ",", 
       FractionBox["Y", "2"]}], "]"}], "]"}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Now throw in the cross product ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 ": "
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"XcrossY", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"crossplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"XandY", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{"XcrossY", ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Orange"}]}], "]"}], ",", "\n", 
    "\t\t", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<X \[Times] Y\>\"", ",", 
       FractionBox["XcrossY", "2"]}], "]"}], "]"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Golly, ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " appears to be perpendicular to ",
 Cell[BoxData["X"]],
 " and to ",
 Cell[BoxData["Y"]],
 ".\nSee the same thing from a viewpoint far out in the direction of Y"
}], "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"crossplot", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"12", " ", "Y"}]}], ",", 
   RowBox[{"PlotLabel", "->", " ", "\"\<Looking down Y\>\""}]}], 
  "]"}]], "Input"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " sure seems to be perpendicular to ",
 Cell[BoxData["X"]],
 ".\nSee the same thing from a viewpoint far out in the direction of X"
}], "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"crossplot", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"12", " ", "X"}]}], ",", 
   RowBox[{"PlotLabel", "->", " ", "\"\<Looking down X\>\""}]}], 
  "]"}]], "Input"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " sure seems to be perpendicular to ",
 Cell[BoxData["Y"]],
 ".\nTry it again with new random vectors  ",
 Cell[BoxData["X"]],
 " and to ",
 Cell[BoxData["Y"]],
 ": "
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XcrossY", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"crossplot", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Axes3D", "[", 
     RowBox[{"1", ",", "0.2"}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{"X", ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{"Y", ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<X\>\"", ",", 
       FractionBox["X", "2"]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<Y\>\"", ",", 
       FractionBox["Y", "2"]}], "]"}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{"XcrossY", ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Orange"}]}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<X \[Times] Y\>\"", ",", 
       FractionBox["XcrossY", "2"]}], "]"}], "]"}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"crossplot", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"12", " ", "Y"}]}], ",", 
   RowBox[{"PlotLabel", "->", " ", "\"\<Looking down Y\>\""}]}], 
  "]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"crossplot", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"12", " ", "X"}]}], ",", 
   RowBox[{"PlotLabel", "->", " ", "\"\<Looking down X\>\""}]}], 
  "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Rerun many times.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell[TextData[{
 "Each time, the cross product ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " appears to be perpendicular to both ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 ".\n\nFor the record, explain why it is that when you take any two 3D \
vectors ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 ", then their cross product \n       ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 "  \nis perpendicular to both ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 "."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Clear the vectors and test with the dot product:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XcrossY", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Expand", "[", 
  RowBox[{"X", ".", "XcrossY"}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Ah-ha! \nNo matter what ",
 Cell[BoxData["X"]],
 " is, the vector ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " is perpendicular to ",
 Cell[BoxData["X"]],
 "."
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Y", ".", "XcrossY"}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "No matter what ",
 Cell[BoxData["Y"]],
 " is, ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " is perpendicular to ",
 Cell[BoxData["Y"]],
 ".\nThat's all there is to it.\nAh, the joy of automated algebra!"
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.5.a.ii) The length of X\[Times]Y is  ||X ||  ||Y|| |Sin[angle between]|\
\>", "Subsubsection"],

Cell[TextData[{
 "The following calculations give clues to finding out what the length of ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " measures:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XcrossY", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Expand", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"X", ".", "Y"}], ")"}], "2"], "+", 
   RowBox[{"XcrossY", ".", "XcrossY"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"X", ".", "X"}], " ", ")"}], 
   RowBox[{"(", " ", 
    RowBox[{"Y", ".", "Y"}], ")"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Remembering that \n       ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"X", ".", "Y"}], ")"}], "2"], "=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], "2"], 
    SuperscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}], "2"], 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      RowBox[{"angle", " ", "between"}], "]"}], "2"]}]}]]],
 ",\nexplain how these calculations reveal that \n       ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"\[LeftDoubleBracketingBar]", 
    RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], "2"]]],
 " \n       ",
 Cell[BoxData[
  RowBox[{"=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"X", "\[Times]", "Y"}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"X", "\[Times]", "Y"}], ")"}]}]}]]],
 " \n       ",
 Cell[BoxData[
  RowBox[{"=", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], "2"], 
    SuperscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}], "2"], 
    SuperscriptBox[
     RowBox[{"Sin", "[", 
      RowBox[{"angle", " ", "between"}], "]"}], "2"]}]}]]],
 ",\nso that\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[LeftDoubleBracketingBar]", 
    RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
     "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], 
     RowBox[{
     "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}]}], 
    "\[VerticalSeparator]", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"angle", " ", "between"}], "]"}], "\[VerticalSeparator]"}]}]}]]],
 "."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["See the calculation again:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"{", 
     RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"XcrossY", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{"X", ",", "Y"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Expand", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"X", ".", "Y"}], ")"}], "2"], "+", 
   RowBox[{"XcrossY", ".", "XcrossY"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"X", ".", "X"}], " ", ")"}], 
   RowBox[{"(", " ", 
    RowBox[{"Y", ".", "Y"}], ")"}]}], "]"}]], "Input"],

Cell[TextData[{
 "The calculations reveal:\n",
 Cell[BoxData[
  RowBox[{"     ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X", ".", "Y"}], ")"}], "2"], "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"X", "\[Times]", "Y"}], "  ", ")"}], ".", 
     RowBox[{"(", 
      RowBox[{"X", "\[Times]", "Y"}], " ", ")"}]}], " "}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"X", ".", "X"}], ")"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Y", ".", "Y"}], ")"}], "."}]}]]]
}], "SmallText"],

Cell[TextData[{
 "This is the same as:\n",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{"   ", 
     StyleBox["  ",
      FontColor->RGBColor[1, 0, 1]]}]], 
   RowBox[{
    RowBox[{
     StyleBox[
      SuperscriptBox[
       RowBox[{
       "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], 
       "2"],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      SuperscriptBox[
       RowBox[{
       "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}], 
       "2"],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"angle", " ", "between"}], "]"}], "2"],
      FontColor->RGBColor[1, 0, 1]]}], "+", " ", 
    SuperscriptBox[
     RowBox[{"\[LeftDoubleBracketingBar]", 
      RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], 
     RowBox[{"2", " "}]]}]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    RowBox[{
    "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], "2"], 
   
   RowBox[{
    SuperscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}], "2"],
     "."}]}]]]
}], "SmallText"],

Cell[TextData[{
 "This is the same as:\n",
 Cell[BoxData[
  RowBox[{"      ", 
   SuperscriptBox[
    RowBox[{"\[LeftDoubleBracketingBar]", 
     RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], 
    RowBox[{"2", " "}]]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], "2"], 
    SuperscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}], 
     RowBox[{"2", " "}]]}], " ", "-", " ", 
   RowBox[{
    SuperscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], "2"], 
    SuperscriptBox[
     RowBox[{
     "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}], "2"], 
    StyleBox[
     SuperscriptBox[
      RowBox[{"Cos", "[", 
       RowBox[{"angle", " ", "between"}], "]"}], "2"],
     FontColor->RGBColor[1, 0, 1]]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "This is the same as:\n",
 Cell[BoxData[
  RowBox[{"      ", 
   SuperscriptBox[
    RowBox[{"\[LeftDoubleBracketingBar]", 
     RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], 
    RowBox[{"2", " "}]]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    RowBox[{
    "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], "2"], 
   
   SuperscriptBox[
    RowBox[{
    "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}], 
    RowBox[{"2", " "}]], 
   RowBox[{"(", 
    RowBox[{"1", "  ", "-", " ", 
     StyleBox[
      SuperscriptBox[
       RowBox[{"Cos", "[", 
        RowBox[{"angle", " ", "between"}], "]"}], "2"],
      FontColor->RGBColor[1, 0, 1]]}], " ", ")"}]}]]]
}], "SmallText"],

Cell[TextData[{
 "This is the same as:\n",
 Cell[BoxData[
  RowBox[{"      ", 
   SuperscriptBox[
    RowBox[{"\[LeftDoubleBracketingBar]", 
     RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], 
    RowBox[{"2", " "}]]}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox[
    RowBox[{
    "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], "2"], 
   
   SuperscriptBox[
    RowBox[{
    "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}], 
    RowBox[{"2", " "}]], 
   SuperscriptBox[
    RowBox[{"Sin", "[", 
     RowBox[{"angle", " ", "between"}], "]"}], 
    RowBox[{"2", " "}]]}]]]
}], "SmallText"],

Cell[TextData[{
 "Reason: If ",
 Cell[BoxData["\[Theta]"]],
 " is any angle, then\n",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], "=", "1."}]]]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "This is the same as:\n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[LeftDoubleBracketingBar]", 
    RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], " "}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
    "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], 
    RowBox[{
    "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}]}], "|", 
   RowBox[{"Sin", "[", 
    RowBox[{"angle", " ", "between"}], "]"}], "|"}]]],
 "."
}], "SmallText"],

Cell["Explanation complete.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.5.a.iii) Using the cross product to extend two perpendicular unit vectors \
to a perpendicular frame\
\>", "Subsubsection"],

Cell[TextData[{
 "No matter what ",
 Cell[BoxData["s"]],
 " you take, the following 3D vectors are perpendicular:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"X", ",", "Y", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "s_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      FractionBox[
       RowBox[{"Cos", "[", "s", "]"}], 
       SqrtBox["2"]], ",", 
      FractionBox[
       RowBox[{"Cos", "[", "s", "]"}], 
       SqrtBox["2"]], ",", 
      RowBox[{"Sin", "[", "s", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Y", "[", "s_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", "s", "]"}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"Sin", "[", "s", "]"}], 
        SqrtBox["2"]]}], ",", 
      RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"X", "[", "s", "]"}], ".", 
   RowBox[{"Y", "[", "s", "]"}]}], "]"}]}], "Input"],

Cell["\<\
They are unit vectors, because the length of each of them is 1:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"X", "[", "s", "]"}], ".", 
   RowBox[{"X", "[", "s", "]"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Y", "[", "s", "]"}], ".", 
   RowBox[{"Y", "[", "s", "]"}]}], "]"}]], "Input"],

Cell[TextData[{
 "No matter what ",
 Cell[BoxData["s"]],
 " you take, you find that ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "s", "]"}], "\[Times]", 
   RowBox[{"Y", "[", "s", "]"}]}]]],
 " is a unit vector:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"cross", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{"X", "[", "s", "]"}], ",", 
      RowBox[{"Y", "[", "s", "]"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Simplify", "[", 
  RowBox[{"cross", ".", "cross"}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain why:\nIf you take any two perpendicular 3D unit vectors ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 ", then \n\[Rule] ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " is perpendicular to both ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 " and\n\[Rule] ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " is also a unit vector.\nso that \n",
 Cell[BoxData[
  RowBox[{"     ", 
   RowBox[{"{", 
    RowBox[{"X", ",", "Y", ",", 
     RowBox[{"X", "\[Times]", "Y"}]}], "}"}]}]]],
 " \nis a 3D perpendicular frame"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You are guaranteed that ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " is perpendicular to both ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 " for any 3D vectors X and Y.\n\nTo see why  ",
 Cell[BoxData[
  RowBox[{"X", "\[Times]", "Y"}]]],
 " is also a unit vector in the case that  ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 ", are perpendicular unit vectors, use \n    ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"\[LeftDoubleBracketingBar]", 
    RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], " "}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
    "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], 
    RowBox[{
    "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}]}], "|", 
   RowBox[{"Sin", "[", 
    RowBox[{"angle", " ", "between"}], "]"}], "|"}]]],
 ".\nIn the case that  ",
 Cell[BoxData["X"]],
 " and ",
 Cell[BoxData["Y"]],
 ", are perpendicular unit vectors,\n",
 Cell[BoxData[
  RowBox[{"     ", 
   RowBox[{"\[LeftDoubleBracketingBar]", 
    RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], " "}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
    "\[LeftDoubleBracketingBar]", "X", "\[RightDoubleBracketingBar]"}], 
    RowBox[{
    "\[LeftDoubleBracketingBar]", "Y", "\[RightDoubleBracketingBar]"}]}], "|", 
   RowBox[{"Sin", "[", 
    RowBox[{"angle", " ", "between"}], "]"}], "|"}]]],
 ".\nreduces to \n",
 Cell[BoxData[
  RowBox[{"     ", 
   RowBox[{"\[LeftDoubleBracketingBar]", 
    RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], " "}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", "1", ")"}], " ", 
    RowBox[{"(", "1", ")"}]}], "|", 
   RowBox[{"Sin", "[", 
    RowBox[{"angle", " ", "between"}], "]"}], "|"}]]],
 " "
}], "SmallText"],

Cell["\<\
Reason:\[LeftDoubleBracketingBar]X\[RightDoubleBracketingBar] = \
\[LeftDoubleBracketingBar]Y\[RightDoubleBracketingBar] = 1
\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "And now because X is perpendicular to Y, \n",
 Cell[BoxData[
  RowBox[{"     ", 
   RowBox[{"\[LeftDoubleBracketingBar]", 
    RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], " "}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", "1", ")"}], " ", 
    RowBox[{"(", "1", ")"}]}], "|", 
   RowBox[{"Sin", "[", 
    RowBox[{"angle", " ", "between"}], "]"}], "|"}]]],
 "\nreduces to\n",
 Cell[BoxData[
  RowBox[{"     ", 
   RowBox[{"\[LeftDoubleBracketingBar]", 
    RowBox[{"X", "\[Times]", "Y"}], "\[RightDoubleBracketingBar]"}], " "}]]],
 " = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", "1", ")"}], " ", 
    RowBox[{"(", "1", ")"}], 
    RowBox[{"(", "1", ")"}]}], " ", "=", " ", "1"}]]]
}], "SmallText"],

Cell[TextData[{
 "Reason: ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"|", 
    RowBox[{"Sin", "[", 
     FractionBox["\[Pi]", "2"], "]"}], "|"}], "=", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "2"]}], "]"}], "=", "1"}]}]]],
 ":\n"
}], "SmallText",
 TextAlignment->Left,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"Sin", "[", 
    RowBox[{"Pi", "/", "2"}], "]"}], "]"}], " ", "==", " ", "1"}], "\n", 
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"-", "Pi"}], "/", "2"}], "]"}], "]"}], " ", "==", " ", 
  "1"}]}], "Input"],

Cell[TextData[{
 "This explains why when you start with two perpendicular 3D unit vectors X \
and Y, then\n",
 Cell[BoxData[
  RowBox[{"     ", 
   RowBox[{"{", 
    RowBox[{"X", ",", "Y", ",", 
     RowBox[{"X", "\[Times]", "Y"}]}], "}"}]}]]],
 " \ngives you a perpendicular frame."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.5.b) Extending a single vector to a custom 3D perpendicular frame\
\>", "Subsubsection"],

Cell["Here is a single vector X in 3D:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", "1.4", ",", "1.3"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "1.5"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Vector", "[", 
    RowBox[{"X", ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Blue"}]}], "]"}], ",", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"1.5", ",", "0.2"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
  "]"}]}], "Input"],

Cell["Make X into a unit vector , unitX, and plot:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"unitX", "=", 
    FractionBox["X", 
     SqrtBox[
      RowBox[{"X", ".", "X"}]]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "1"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Vector", "[", 
    RowBox[{"unitX", ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Orange"}]}], "]"}], ",", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"ranger", ",", "0.1"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
  "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Come up with a 3D perpendicular frame 
        {perpframe[1],perpframe[2],perpframe[3]} 
with 
         perpframe[3] = unitX. 
Show off your perpendicular frame with a good plot.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Do this:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "3", "]"}], "=", "unitX"}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"throwawayvector", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"throwawayvector", "\[Cross]", 
     RowBox[{"perpframe", "[", "3", "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], "=", 
    FractionBox["Y", 
     SqrtBox[
      RowBox[{"Y", ".", "Y"}]]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "2", "]"}], "=", 
    RowBox[{
     RowBox[{"perpframe", "[", "3", "]"}], "\[Cross]", 
     RowBox[{"perpframe", "[", "1", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"perpframe", "[", "k", "]"}], ",", 
       RowBox[{"Tail", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<perpframe[1]\>\"", ",", 
      RowBox[{"0.4", " ", 
       RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<perpframe[2]\>\"", ",", 
      RowBox[{"0.7", " ", 
       RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<perpframe[3]\>\"", ",", 
      RowBox[{"0.7", " ", 
       RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"ranger", ",", "0.1"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
  "]"}]}], "Input"],

Cell[TextData[{
 "Rerun both cells several times. You will probably get different ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 " vectors each time."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.5.b.ii) Why that worked", "Subsubsection"],

Cell[CellGroupData[{

Cell["Why did that work?", "Text"],

Cell["Answer:", "Special1"],

Cell["Look at the code but don't run it:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "3", "]"}], "=", "unitX"}], ";"}], " "}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"throwawayvector", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"throwawayvector", "\[Cross]", 
     RowBox[{"perpframe", "[", "3", "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], "=", 
    FractionBox["Y", 
     SqrtBox[
      RowBox[{"Y", ".", "Y"}]]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"perpframe", "[", "2", "]"}], "=", 
  RowBox[{
   RowBox[{"perpframe", "[", "3", "]"}], "\[Cross]", 
   RowBox[{"perpframe", "[", "1", "]"}]}]}]}], "Input"],

Cell["\<\
Make note of the following facts:
\[Rule] Because Y is the cross product of unitX and another vector, Y is \
guaranteed to be perpendicular to unitX = perpframe[3].
\[Rule] perpframe[1] = Y/Sqrt[Y.Y] points in the same direction as Y. So \
perpframe[1] and perpframe[3] are perpendicular unit vectors.
\[Rule] Because perpframe[2] is the cross product of the perpendicular unit \
vectors perpframe[1] and perpframe[3], perpframe[2] is automatically (See \
part a.iii) above) a unit vector perpendicular to both perpframe[1] and \
perpframe[3] .
\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.6)  Plotting Tips:\nFlatness and plotting via the options ",
 Cell[BoxData["PlotPoints"]],
 " and \n true scale plots via the options ",
 Cell[BoxData[
  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]]]
}], "Subsection",
 CellTags->"MGM.01.T6"],

Cell[CellGroupData[{

Cell["T.6.a.i) Flatness and  the PlotPoints option", "Subsubsection"],

Cell[TextData[{
 "Here are three ways of plotting the same piece of the plane \n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    FractionBox["x", "3"], "-", " ", 
    FractionBox["y", "2"], "+", " ", "z"}], "=", "1"}]]],
 ": "
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"defaultplot", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{"1", "-", 
       FractionBox["x", "3"], "+", 
       FractionBox["y", "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Mathematica Default\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input"],

Cell["\<\
The plot is covered with little bricks.
Try this one:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"betterplot", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{"1", "-", 
       FractionBox["x", "3"], "+", 
       FractionBox["y", "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    StyleBox[
     RowBox[{"Mesh", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", ",", "5"}], "}"}]}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Better plot\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]], "Input"],

Cell[TextData[{
 "Not as cluttered as the default plot.\nThe reason: Fewer bricks resulting \
from the plotting option\n       ",
 Cell[BoxData[
  RowBox[{"Mesh", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"3", ",", "5"}], "}"}]}]]],
 ".\nNow try:"
}], "Text"],

Cell[BoxData[
 RowBox[{"bestplot", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{"1", "-", 
       FractionBox["x", "3"], "+", 
       FractionBox["y", "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    StyleBox[
     RowBox[{"Mesh", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Best plot\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "That ran lightning fast.  And it looks really fine.\nThe reason: NO BRICKS. \
 \nThe reason: The plotting option\n        ",
 Cell[BoxData[
  RowBox[{"Mesh", "\[Rule]", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}]]],
 ".\nExplain what's going on."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The default plot is a good plot to try when the surfaces bend.  The little \
bricks can help you follow the shape of the surface.
Here is a situation in which the default plot is pretty good:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"defaultplot", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{"2", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["x", "3"], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["y", "2"], ")"}], "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Mathematica Default\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input"],

Cell["\<\
You can tinker with this the same way you tweaked the plot of the plane:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"tweakedplot", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{"2", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["x", "3"], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["y", "2"], ")"}], "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    StyleBox[
     RowBox[{"Mesh", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"2", ",", "2"}], "}"}]}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<tweaked plot\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input"],

Cell["Or even turn the bricks off entirely:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"tweakedplot", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", 
      RowBox[{"2", "-", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["x", "3"], ")"}], "2"], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["y", "2"], ")"}], "2"]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    StyleBox[
     RowBox[{"Mesh", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}],
     FontColor->RGBColor[0, 0, 1]], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<tweaked plot\>\""}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input"]
}, Closed]]
}, Closed]],

Cell["You pays your money and you takes your choice.", "Text"],

Cell[CellGroupData[{

Cell["\<\
T.5.a.ii) Other situations that benefit from this type of tweaking\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["What other situations benefit from this type of tweaking?", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Anytime flatness is around.
Look at this:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"vector1", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"vector2", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"-", "2"}], ",", "5"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"r", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"defaultplot", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "t", "]"}], " ", "vector1"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", "t", "]"}], " ", "vector2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Mathematica Default\>\""}]}], 
   "]"}]}]}], "Input"],

Cell[TextData[{
 "There is flatness around in the ",
 Cell[BoxData["r"]],
 " variable.  Try this (look at the ",
 Cell[BoxData["Mesh"]],
 " setting):"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"tweakedplot", "=", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "t", "]"}], " ", "vector1"}], "+", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", "t", "]"}], " ", "vector2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{
     StyleBox["Mesh",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\[Rule]",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
       StyleBox["2",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox[",",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["2",
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox["}",
       FontColor->RGBColor[0, 0, 1]]}]}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Tweaked Plot\>\""}]}], 
   "]"}]}]], "Input"],

Cell["\<\
Not too shabby.
Here's what it looks like with all the bricks turned off:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"r", " ", 
     RowBox[{"Cos", "[", "t", "]"}], " ", "vector1"}], "+", 
    RowBox[{"r", " ", 
     RowBox[{"Sin", "[", "t", "]"}], " ", "vector2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
   StyleBox[
    RowBox[{"Mesh", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
  "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.5.b) Perpendicularity and  Aspect Ratios", "Subsubsection"],

Cell["Look at this:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "8"}], ",", "4"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"X", ".", "Y"}]}], "Input"],

Cell["\<\
This tells you that the two vectors are perpendicular.
Now look at this:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Vector", "[", "X", "]"}], ",", 
   RowBox[{"Vector", "[", "Y", "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]], "Input"],

Cell["\<\
Although you knew in advance that these vectors are perpendicular, they \
didn't plot out perpendicularly.
What gives?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "The two vectors weren't plotted in true scale. To guarantee a true scale \
plot in 2D graphics, use the plotting option ",
 Cell[BoxData[
  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]]],
 ". This way you get the same scale on both axes. \nTry it out:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Vector", "[", "X", "]"}], ",", 
   RowBox[{"Vector", "[", "Y", "]"}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]], "Input"],

Cell[TextData[{
 "Much better.\nIn 2D plots, if you don't use ",
 Cell[BoxData[
  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]]],
 ", then actual perpendicularity can be obscured.\nIn 3D plots, if you don't \
use ",
 Cell[BoxData[
  RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]]],
 ", then actual perpendicularity can be obscured.\nMoral:\nWhen you are \
studying anything related to perpendicularity, you need to plot in true \
scale. You are tempting fate if you don't use the options ",
 Cell[BoxData[
  RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]]],
 " or ",
 Cell[BoxData[
  RowBox[{"BoxRatios", "\[Rule]", "Automatic"}]]],
 " as the situation demands."
}], "SmallText"]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.01.T1"->{
  Cell[29382, 801, 119, 3, 36, "Subsection",
   CellTags->"MGM.01.T1"]},
 "MGM.01.T2"->{
  Cell[74577, 2230, 146, 4, 61, "Subsection",
   CellTags->"MGM.01.T2"]},
 "MGM.01.T3"->{
  Cell[107251, 3286, 189, 4, 61, "Subsection",
   CellTags->"MGM.01.T3"]},
 "MGM.01.T4"->{
  Cell[121018, 3771, 139, 4, 36, "Subsection",
   CellTags->"MGM.01.T4"]},
 "MGM.01.T5"->{
  Cell[146000, 4603, 297, 10, 61, "Subsection",
   CellTags->"MGM.01.T5"]},
 "MGM.01.T6"->{
  Cell[180968, 5882, 341, 10, 102, "Subsection",
   CellTags->"MGM.01.T6"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.01.T1", 247744, 7443},
 {"MGM.01.T2", 247833, 7446},
 {"MGM.01.T3", 247923, 7449},
 {"MGM.01.T4", 248014, 7452},
 {"MGM.01.T5", 248105, 7455},
 {"MGM.01.T6", 248197, 7458}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 124, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6361, 137, 193, 7, 28, "Special2"],
Cell[6557, 146, 1212, 37, 111, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7794, 187, 38, 0, 31, "Subsubsection"],
Cell[7835, 189, 1344, 31, 156, "Input"],
Cell[9182, 222, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9355, 228, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26726, 711, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[26973, 722, 39, 0, 31, "Subsubsection"],
Cell[27015, 724, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29382, 801, 119, 3, 36, "Subsection",
 CellTags->"MGM.01.T1"],
Cell[CellGroupData[{
Cell[29526, 808, 75, 0, 31, "Subsubsection"],
Cell[29604, 810, 272, 8, 74, "Text"],
Cell[29879, 820, 1436, 46, 126, "Input"],
Cell[31318, 868, 285, 9, 74, "Text"],
Cell[31606, 879, 1755, 56, 126, "Input"],
Cell[33364, 937, 35, 0, 24, "Text"],
Cell[33402, 939, 135, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[33562, 946, 154, 3, 49, "Text"],
Cell[33719, 951, 27, 0, 23, "Special1"],
Cell[33749, 953, 819, 19, 274, "SmallText"],
Cell[34571, 974, 2089, 59, 199, "Input"],
Cell[36663, 1035, 119, 4, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[36831, 1045, 83, 1, 31, "Subsubsection"],
Cell[36917, 1048, 306, 10, 74, "Text"],
Cell[37226, 1060, 1883, 61, 141, "Input"],
Cell[CellGroupData[{
Cell[39134, 1125, 65, 0, 24, "Text"],
Cell[39202, 1127, 27, 0, 23, "Special1"],
Cell[39232, 1129, 324, 9, 74, "SmallText"],
Cell[39559, 1140, 116, 3, 20, "Input"],
Cell[39678, 1145, 28, 0, 24, "SmallText"],
Cell[39709, 1147, 1085, 27, 374, "SmallText"],
Cell[40797, 1176, 4558, 142, 321, "Input"],
Cell[45358, 1320, 45, 0, 24, "SmallText"],
Cell[45406, 1322, 162, 4, 20, "Input"],
Cell[45571, 1328, 46, 0, 24, "SmallText"],
Cell[45620, 1330, 120, 3, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[45789, 1339, 84, 1, 31, "Subsubsection"],
Cell[45876, 1342, 467, 14, 74, "Text"],
Cell[46346, 1358, 2047, 63, 186, "Input"],
Cell[48396, 1423, 464, 13, 74, "Text"],
Cell[48863, 1438, 2687, 84, 201, "Input"],
Cell[CellGroupData[{
Cell[51575, 1526, 250, 7, 58, "Text"],
Cell[51828, 1535, 27, 0, 23, "Special1"],
Cell[51858, 1537, 1815, 50, 324, "SmallText"],
Cell[53676, 1589, 3336, 91, 307, "Input"],
Cell[57015, 1682, 188, 6, 58, "SmallText"],
Cell[57206, 1690, 157, 5, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[57412, 1701, 87, 1, 31, "Subsubsection"],
Cell[57502, 1704, 504, 14, 74, "Text"],
Cell[58009, 1720, 3262, 103, 231, "Input"],
Cell[CellGroupData[{
Cell[61296, 1827, 70, 0, 24, "Text"],
Cell[61369, 1829, 27, 0, 23, "Special1"],
Cell[61399, 1831, 580, 15, 99, "SmallText"],
Cell[61982, 1848, 487, 15, 66, "Input"],
Cell[62472, 1865, 28, 0, 24, "SmallText"],
Cell[62503, 1867, 2100, 55, 449, "SmallText"],
Cell[64606, 1924, 235, 7, 40, "Input"],
Cell[64844, 1933, 52, 0, 24, "SmallText"],
Cell[64899, 1935, 9617, 288, 680, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[74577, 2230, 146, 4, 61, "Subsection",
 CellTags->"MGM.01.T2"],
Cell[CellGroupData[{
Cell[74748, 2238, 61, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[74834, 2242, 96, 2, 24, "Text"],
Cell[74933, 2246, 27, 0, 23, "Special1"],
Cell[74963, 2248, 129, 3, 49, "SmallText"],
Cell[75095, 2253, 942, 30, 81, "Input"],
Cell[76040, 2285, 291, 7, 149, "SmallText"],
Cell[76334, 2294, 2044, 65, 186, "Input"],
Cell[78381, 2361, 112, 3, 20, "Special5"],
Cell[78496, 2366, 85, 3, 49, "SmallText"],
Cell[78584, 2371, 1908, 60, 161, "Input"],
Cell[80495, 2433, 624, 18, 149, "SmallText"],
Cell[81122, 2453, 1790, 53, 141, "Input"],
Cell[82915, 2508, 99, 2, 20, "Special5"],
Cell[83017, 2512, 83, 1, 24, "SmallText"],
Cell[83103, 2515, 1611, 44, 111, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[84763, 2565, 84, 1, 31, "Subsubsection"],
Cell[84850, 2568, 87, 2, 24, "Text"],
Cell[84940, 2572, 196, 5, 36, "Input"],
Cell[CellGroupData[{
Cell[85161, 2581, 58, 0, 24, "Text"],
Cell[85222, 2583, 27, 0, 23, "Special1"],
Cell[85252, 2585, 98, 2, 24, "SmallText"],
Cell[85353, 2589, 128, 3, 20, "Input"],
Cell[85484, 2594, 160, 4, 74, "SmallText"],
Cell[85647, 2600, 141, 3, 20, "Input"],
Cell[85791, 2605, 171, 5, 99, "SmallText"],
Cell[85965, 2612, 65, 1, 20, "Input"],
Cell[86033, 2615, 198, 4, 74, "SmallText"],
Cell[86234, 2621, 538, 16, 51, "Input"],
Cell[86775, 2639, 283, 6, 124, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[87107, 2651, 63, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[87195, 2655, 98, 2, 24, "Text"],
Cell[87296, 2659, 27, 0, 23, "Special1"],
Cell[87326, 2661, 472, 14, 74, "SmallText"],
Cell[87801, 2677, 2047, 63, 171, "Input"],
Cell[89851, 2742, 921, 26, 170, "SmallText"],
Cell[90775, 2770, 3148, 97, 261, "Input"],
Cell[93926, 2869, 125, 3, 20, "Special5"],
Cell[94054, 2874, 151, 4, 49, "SmallText"],
Cell[94208, 2880, 4275, 128, 315, "Input"],
Cell[98486, 3010, 1162, 37, 174, "SmallText"],
Cell[CellGroupData[{
Cell[99673, 3051, 5151, 143, 351, "Input"],
Cell[104827, 3196, 39, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[104927, 3203, 97, 2, 31, "Subsubsection"],
Cell[105027, 3207, 88, 2, 24, "Text"],
Cell[105118, 3211, 887, 25, 81, "Input"],
Cell[CellGroupData[{
Cell[106030, 3240, 62, 0, 24, "Text"],
Cell[106095, 3242, 27, 0, 23, "Special1"],
Cell[106125, 3244, 150, 3, 49, "SmallText"],
Cell[106278, 3249, 225, 6, 20, "Input"],
Cell[106506, 3257, 88, 3, 49, "SmallText"],
Cell[106597, 3262, 130, 3, 20, "Input"],
Cell[106730, 3267, 232, 4, 74, "SmallText"],
Cell[106965, 3273, 225, 6, 20, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[107251, 3286, 189, 4, 61, "Subsection",
 CellTags->"MGM.01.T3"],
Cell[CellGroupData[{
Cell[107465, 3294, 65, 0, 31, "Subsubsection"],
Cell[107533, 3296, 44, 0, 24, "Text"],
Cell[107580, 3298, 322, 10, 36, "Input"],
Cell[CellGroupData[{
Cell[107927, 3312, 255, 7, 74, "Text"],
Cell[108185, 3321, 27, 0, 23, "Special1"],
Cell[108215, 3323, 55, 0, 24, "SmallText"],
Cell[108273, 3325, 239, 8, 36, "Input"],
Cell[108515, 3335, 82, 1, 24, "SmallText"],
Cell[108600, 3338, 27, 0, 20, "Input"],
Cell[108630, 3340, 41, 0, 24, "SmallText"],
Cell[108674, 3342, 1399, 42, 111, "Input"],
Cell[110076, 3386, 26, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[110151, 3392, 64, 0, 31, "Subsubsection"],
Cell[110218, 3394, 65, 0, 24, "Text"],
Cell[110286, 3396, 632, 18, 66, "Input"],
Cell[CellGroupData[{
Cell[110943, 3418, 88, 2, 24, "Text"],
Cell[111034, 3422, 27, 0, 23, "Special1"],
Cell[111064, 3424, 91, 2, 24, "SmallText"],
Cell[111158, 3428, 146, 4, 20, "Input"],
Cell[111307, 3434, 192, 4, 12, "Special2"],
Cell[111502, 3440, 28, 0, 24, "SmallText"],
Cell[111533, 3442, 411, 10, 51, "Input"],
Cell[111947, 3454, 52, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[112048, 3460, 51, 0, 31, "Subsubsection"],
Cell[112102, 3462, 51, 0, 24, "Text"],
Cell[112156, 3464, 67, 1, 20, "Input"],
Cell[CellGroupData[{
Cell[112248, 3469, 257, 5, 99, "Text"],
Cell[112508, 3476, 27, 0, 23, "Special1"],
Cell[112538, 3478, 93, 2, 24, "SmallText"],
Cell[112634, 3482, 1170, 37, 100, "Input"],
Cell[113807, 3521, 103, 2, 24, "SmallText"],
Cell[113913, 3525, 968, 29, 51, "Input"],
Cell[114884, 3556, 347, 7, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[115280, 3569, 42, 0, 31, "Subsubsection"],
Cell[115325, 3571, 44, 0, 24, "Text"],
Cell[115372, 3573, 551, 17, 51, "Input"],
Cell[CellGroupData[{
Cell[115948, 3594, 288, 8, 74, "Text"],
Cell[116239, 3604, 27, 0, 23, "Special1"],
Cell[116269, 3606, 55, 0, 24, "SmallText"],
Cell[116327, 3608, 239, 8, 36, "Input"],
Cell[116569, 3618, 82, 1, 24, "SmallText"],
Cell[116654, 3621, 27, 0, 20, "Input"],
Cell[116684, 3623, 41, 0, 24, "SmallText"],
Cell[116728, 3625, 1755, 51, 126, "Input"],
Cell[118486, 3678, 26, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[118561, 3684, 70, 0, 31, "Subsubsection"],
Cell[118634, 3686, 66, 0, 24, "Text"],
Cell[118703, 3688, 640, 19, 51, "Input"],
Cell[CellGroupData[{
Cell[119368, 3711, 100, 2, 24, "Text"],
Cell[119471, 3715, 27, 0, 23, "Special1"],
Cell[119501, 3717, 188, 4, 74, "SmallText"],
Cell[119692, 3723, 151, 4, 20, "Input"],
Cell[119846, 3729, 192, 4, 12, "Special2"],
Cell[120041, 3735, 28, 0, 24, "SmallText"],
Cell[120072, 3737, 413, 10, 51, "Input"],
Cell[120488, 3749, 144, 3, 49, "SmallText"],
Cell[120635, 3754, 157, 5, 20, "Input"],
Cell[120795, 3761, 162, 3, 49, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[121018, 3771, 139, 4, 36, "Subsection",
 CellTags->"MGM.01.T4"],
Cell[CellGroupData[{
Cell[121182, 3779, 86, 1, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[121293, 3784, 75, 0, 24, "Text"],
Cell[121371, 3786, 27, 0, 23, "Special1"],
Cell[121401, 3788, 117, 3, 24, "SmallText"],
Cell[121521, 3793, 4598, 135, 291, "Input"],
Cell[126122, 3930, 890, 34, 149, "SmallText"],
Cell[127015, 3966, 1674, 52, 156, "Input"],
Cell[128692, 4020, 78, 0, 24, "SmallText"],
Cell[128773, 4022, 186, 5, 20, "Input"],
Cell[128962, 4029, 121, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[129132, 4038, 49, 0, 31, "Subsubsection"],
Cell[129184, 4040, 89, 2, 24, "Text"],
Cell[129276, 4044, 615, 19, 51, "Input"],
Cell[CellGroupData[{
Cell[129916, 4067, 121, 3, 49, "Text"],
Cell[130040, 4072, 27, 0, 23, "Special1"],
Cell[130070, 4074, 134, 3, 49, "SmallText"],
Cell[130207, 4079, 424, 12, 36, "Input"],
Cell[130634, 4093, 28, 0, 24, "SmallText"],
Cell[130665, 4095, 458, 13, 51, "Input"],
Cell[131126, 4110, 95, 2, 24, "SmallText"],
Cell[131224, 4114, 186, 5, 20, "Input"],
Cell[131413, 4121, 95, 2, 24, "SmallText"],
Cell[131511, 4125, 186, 5, 20, "Input"],
Cell[131700, 4132, 258, 5, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[132007, 4143, 61, 0, 31, "Subsubsection"],
Cell[132071, 4145, 634, 17, 149, "Text"],
Cell[132708, 4164, 206, 5, 23, "Special2"],
Cell[CellGroupData[{
Cell[132939, 4173, 917, 28, 170, "Text"],
Cell[133859, 4203, 27, 0, 23, "Special1"],
Cell[133889, 4205, 1753, 59, 274, "SmallText"],
Cell[135645, 4266, 182, 6, 35, "Special2"],
Cell[135830, 4274, 408, 15, 74, "SmallText"],
Cell[136241, 4291, 179, 6, 35, "Special2"],
Cell[136423, 4299, 585, 14, 249, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[137057, 4319, 62, 0, 31, "Subsubsection"],
Cell[137122, 4321, 178, 3, 49, "Text"],
Cell[137303, 4326, 5839, 172, 411, "Input"],
Cell[143145, 4500, 52, 0, 24, "Text"],
Cell[143200, 4502, 943, 30, 66, "Input"],
Cell[CellGroupData[{
Cell[144168, 4536, 197, 4, 49, "Text"],
Cell[144368, 4542, 27, 0, 23, "Special1"],
Cell[144398, 4544, 467, 14, 324, "SmallText"],
Cell[144868, 4560, 651, 18, 66, "Input"],
Cell[145522, 4580, 97, 2, 24, "SmallText"],
Cell[145622, 4584, 185, 5, 20, "Input"],
Cell[145810, 4591, 29, 0, 24, "SmallText"],
Cell[145842, 4593, 67, 1, 20, "Input"],
Cell[145912, 4596, 27, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[146000, 4603, 297, 10, 61, "Subsection",
 CellTags->"MGM.01.T5"],
Cell[CellGroupData[{
Cell[146322, 4617, 224, 9, 32, "Subsubsection"],
Cell[146549, 4628, 797, 28, 224, "Text"],
Cell[147349, 4658, 538, 18, 66, "Input"],
Cell[147890, 4678, 102, 2, 12, "Special2"],
Cell[147995, 4682, 140, 3, 49, "Text"],
Cell[148138, 4687, 1348, 40, 122, "Input"],
Cell[149489, 4729, 120, 5, 24, "Text"],
Cell[149612, 4736, 859, 23, 122, "Input"],
Cell[150474, 4761, 254, 9, 49, "Text"],
Cell[150731, 4772, 219, 6, 20, "Input"],
Cell[150953, 4780, 217, 7, 49, "Text"],
Cell[151173, 4789, 219, 6, 20, "Input"],
Cell[151395, 4797, 252, 11, 49, "Text"],
Cell[151650, 4810, 3166, 97, 233, "Input"],
Cell[154819, 4909, 84, 2, 12, "Special2"],
Cell[CellGroupData[{
Cell[154928, 4915, 525, 21, 149, "Text"],
Cell[155456, 4938, 27, 0, 23, "Special1"],
Cell[155486, 4940, 69, 0, 24, "SmallText"],
Cell[155558, 4942, 661, 23, 81, "Input"],
Cell[156222, 4967, 206, 9, 49, "SmallText"],
Cell[156431, 4978, 113, 3, 20, "Input"],
Cell[156547, 4983, 249, 9, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[156845, 4998, 106, 2, 31, "Subsubsection"],
Cell[156954, 5002, 169, 5, 24, "Text"],
Cell[157126, 5009, 742, 26, 86, "Input"],
Cell[157871, 5037, 185, 6, 20, "Input"],
Cell[CellGroupData[{
Cell[158081, 5047, 1837, 59, 212, "Text"],
Cell[159921, 5108, 27, 0, 23, "Special1"],
Cell[159951, 5110, 47, 0, 24, "SmallText"],
Cell[160001, 5112, 742, 26, 86, "Input"],
Cell[160746, 5140, 185, 6, 20, "Input"],
Cell[160934, 5148, 545, 21, 52, "SmallText"],
Cell[161482, 5171, 1192, 43, 52, "SmallText"],
Cell[162677, 5216, 967, 31, 52, "SmallText"],
Cell[163647, 5249, 763, 26, 56, "SmallText"],
Cell[164413, 5277, 657, 23, 52, "SmallText"],
Cell[165073, 5302, 348, 13, 35, "Special2"],
Cell[165424, 5317, 520, 17, 51, "SmallText"],
Cell[165947, 5336, 42, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[166038, 5342, 135, 3, 52, "Subsubsection"],
Cell[166176, 5347, 126, 4, 24, "Text"],
Cell[166305, 5353, 1008, 36, 120, "Input"],
Cell[167316, 5391, 87, 2, 24, "Text"],
Cell[167406, 5395, 142, 4, 20, "Input"],
Cell[167551, 5401, 142, 4, 20, "Input"],
Cell[167696, 5407, 229, 9, 24, "Text"],
Cell[167928, 5418, 292, 9, 36, "Input"],
Cell[CellGroupData[{
Cell[168245, 5431, 583, 22, 174, "Text"],
Cell[168831, 5455, 27, 0, 23, "Special1"],
Cell[168861, 5457, 1847, 63, 255, "SmallText"],
Cell[170711, 5522, 200, 6, 23, "Special2"],
Cell[170914, 5530, 771, 26, 101, "SmallText"],
Cell[171688, 5558, 331, 14, 57, "SmallText"],
Cell[172022, 5574, 304, 10, 36, "Input"],
Cell[172329, 5586, 300, 9, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[172678, 5601, 100, 2, 31, "Subsubsection"],
Cell[172781, 5605, 48, 0, 24, "Text"],
Cell[172832, 5607, 1192, 36, 96, "Input"],
Cell[174027, 5645, 60, 0, 24, "Text"],
Cell[174090, 5647, 1201, 37, 137, "Input"],
Cell[CellGroupData[{
Cell[175316, 5688, 202, 6, 124, "Text"],
Cell[175521, 5696, 27, 0, 23, "Special1"],
Cell[175551, 5698, 29, 0, 24, "SmallText"],
Cell[175583, 5700, 3008, 93, 228, "Input"],
Cell[178594, 5795, 248, 8, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[178891, 5809, 50, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[178966, 5813, 34, 0, 24, "Text"],
Cell[179003, 5815, 27, 0, 23, "Special1"],
Cell[179033, 5817, 55, 0, 24, "SmallText"],
Cell[179091, 5819, 1239, 43, 123, "Input"],
Cell[180333, 5864, 574, 11, 224, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[180968, 5882, 341, 10, 102, "Subsection",
 CellTags->"MGM.01.T6"],
Cell[CellGroupData[{
Cell[181334, 5896, 69, 0, 31, "Subsubsection"],
Cell[181406, 5898, 241, 8, 58, "Text"],
Cell[181650, 5908, 927, 26, 96, "Input"],
Cell[182580, 5936, 77, 3, 49, "Text"],
Cell[182660, 5941, 962, 27, 80, "Input"],
Cell[183625, 5970, 258, 8, 99, "Text"],
Cell[183886, 5980, 958, 27, 80, "Input"],
Cell[CellGroupData[{
Cell[184869, 6011, 287, 8, 124, "Text"],
Cell[185159, 6021, 27, 0, 23, "Special1"],
Cell[185189, 6023, 220, 4, 74, "SmallText"],
Cell[185412, 6029, 1047, 30, 99, "Input"],
Cell[186462, 6061, 101, 2, 24, "SmallText"],
Cell[186566, 6065, 1190, 35, 99, "Input"],
Cell[187759, 6102, 58, 0, 24, "SmallText"],
Cell[187820, 6104, 1190, 35, 99, "Input"]
}, Closed]]
}, Closed]],
Cell[189037, 6143, 62, 0, 24, "Text"],
Cell[CellGroupData[{
Cell[189124, 6147, 99, 2, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[189248, 6153, 73, 0, 24, "Text"],
Cell[189324, 6155, 27, 0, 23, "Special1"],
Cell[189354, 6157, 70, 3, 49, "SmallText"],
Cell[189427, 6162, 1132, 34, 96, "Input"],
Cell[190562, 6198, 167, 6, 24, "SmallText"],
Cell[190732, 6206, 1178, 35, 51, "Input"],
Cell[191913, 6243, 102, 3, 49, "SmallText"],
Cell[192018, 6248, 730, 21, 36, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[192797, 6275, 67, 0, 31, "Subsubsection"],
Cell[192867, 6277, 29, 0, 24, "Text"],
Cell[192899, 6279, 315, 12, 51, "Input"],
Cell[193217, 6293, 96, 3, 49, "Text"],
Cell[193316, 6298, 359, 9, 36, "Input"],
Cell[193678, 6309, 142, 4, 74, "Text"],
Cell[193823, 6315, 27, 0, 23, "Special1"],
Cell[193853, 6317, 290, 6, 99, "SmallText"],
Cell[194146, 6325, 367, 9, 36, "Input"],
Cell[194516, 6336, 683, 17, 224, "SmallText"]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
