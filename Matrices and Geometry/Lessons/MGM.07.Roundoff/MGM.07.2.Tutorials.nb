(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    246409,       7590]
NotebookOptionsPosition[    177145,       6020]
NotebookOutlinePosition[    230314,       7133]
CellTagsIndexPosition[    230120,       7124]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.07 Ill-conditioned Matrices and Roundoff\n",
 StyleBox["TUTORIALS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1) Creative rounding of matrices and image compression: 
Color images\
\>", "Subsection",
 CellTags->"MGM.07.T1"],

Cell["This problem is a memory hog.", "Special5",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["T.1.a.i) Color in Mathematica", "Subsubsection",
 Evaluatable->False],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["How does ",
  Evaluatable->False,
  AspectRatioFixed->True],
 StyleBox["Mathematica",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontSlant->"Italic"],
 StyleBox[" handle color?",
  Evaluatable->False,
  AspectRatioFixed->True]
}], "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 StyleBox["Mathematica",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontSlant->"Italic"],
 StyleBox["  starts with the primary colors of light: \n            Red, \
green and blue:",
  Evaluatable->False,
  AspectRatioFixed->True]
}], "SmallText",
 Evaluatable->False],

Cell["\<\
With colorants such as paint and ink, the three primary colors are 
red, blue and yellow shaded with black and tinted with white.
Sometime folks also consider magenta and cyan to be primary colors for \
colorants.\
\>", "Special5",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"redcolor", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
       RowBox[{"PointSize", "[", "0.4", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}], " "}]], "Input"],

Cell[BoxData[
 RowBox[{"greencolor", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
       RowBox[{"PointSize", "[", "0.4", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "1", ",", "0"}], "]"}]}]}], "]"}], " "}]], "Input"],

Cell[BoxData[
 RowBox[{"bluecolor", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
       RowBox[{"PointSize", "[", "0.4", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"0", ",", "0", ",", "1"}], "]"}]}]}], "]"}], " "}]], "Input"],

Cell[TextData[{
 StyleBox["And then ",
  Evaluatable->False,
  AspectRatioFixed->True],
 StyleBox["Mathematica",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontSlant->"Italic"],
 StyleBox[" mixes these colors as follows:",
  Evaluatable->False,
  AspectRatioFixed->True]
}], "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"redlevel", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"greenlevel", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bluelevel", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"randommix", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{"redlevel", ",", "greenlevel", ",", "bluelevel"}], "]"}], ",", 
       RowBox[{"PointSize", "[", "0.4", "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"RGBColor", "[", 
      RowBox[{"redlevel", ",", "greenlevel", ",", "bluelevel"}], "]"}]}]}], 
   "]"}], " "}]}], "Input"],

Cell["\<\
Rerun many times.
You can experiment with mixing your own.\
\>", "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.1.a.ii) Trying to compress color images", "Subsubsection",
 Evaluatable->False],

Cell["\<\
Here's how you can modify the black and white image SVD image compression \
strategy to try to handle color:
Instead of going with just one matrix, you go with three matrices: one for \
red levels,one for green levels and one for the blue levels:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"red", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"green", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blue", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox["1", "dim"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "box", ",", "boxlabel", ",", "redmatrix", ",", "greenmatrix", ",", 
     "bluematrix", ",", "x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"box", "[", 
     RowBox[{
     "redmatrix_", ",", "greenmatrix_", ",", "bluematrix_", ",", "x_", ",", 
      "y_"}], "]"}], ":=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RGBColor", "[", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"redmatrix", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"dim", " ", "y"}], "+", "1"}], ",", 
             RowBox[{
              RowBox[{"dim", " ", "x"}], "+", "1"}]}], 
            "\[RightDoubleBracket]"}], ",", "0"}], "]"}], ",", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"greenmatrix", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"dim", " ", "y"}], "+", "1"}], ",", 
             RowBox[{
              RowBox[{"dim", " ", "x"}], "+", "1"}]}], 
            "\[RightDoubleBracket]"}], ",", "0"}], "]"}], ",", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{"bluematrix", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{
              RowBox[{"dim", " ", "y"}], "+", "1"}], ",", 
             RowBox[{
              RowBox[{"dim", " ", "x"}], "+", "1"}]}], 
            "\[RightDoubleBracket]"}], ",", "0"}], "]"}]}], "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"1", "-", "y"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "jump"}], ",", 
            RowBox[{"1", "-", "y"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "+", "jump"}], ",", 
            RowBox[{"1", "-", "y", "-", "jump"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"1", "-", "y", "-", "jump"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"1", "-", "y"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"box", "[", 
      RowBox[{"red", ",", "green", ",", "blue", ",", "x", ",", "y"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], "]"}], 
  " "}]}], "Input"],

Cell["\<\
Attached to each small square are the corresponding entries 
of the red, green and blue matrices.
For instance the color of the top square on the left is specified by:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{
   RowBox[{"red", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"green", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"blue", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], "]"}]], "Input"],

Cell["\<\
Attached to each small square are the corresponding entries 
of the red, green and blue matrices.
For instance the color of the top square on the right is specified by:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"RGBColor", "[", 
  RowBox[{
   RowBox[{"red", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"green", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
   RowBox[{"blue", "\[LeftDoubleBracket]", 
    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}]], "Input"],

Cell["Kick up the dimension:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", "3"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"red", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"green", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blue", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox["1", "dim"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"box", "[", 
      RowBox[{"red", ",", "green", ",", "blue", ",", "x", ",", "y"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], "]"}], 
  " "}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", "16"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"red", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"green", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blue", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox["1", "dim"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"box", "[", 
      RowBox[{"red", ",", "green", ",", "blue", ",", "x", ",", "y"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], "]"}], 
  " "}]}], "Input"],

Cell["Now look at this:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", "16"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"red", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"N", "[", 
        RowBox[{"1", "+", 
         RowBox[{"Sin", "[", 
          RowBox[{
           FractionBox["1", "4"], " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"i", "+", "j"}], ")"}]}], "]"}], "+", 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.1"}], "}"}]}], "]"}]}], "]"}], "2.2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"green", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      FractionBox[
       RowBox[{"N", "[", 
        RowBox[{"1", "+", 
         RowBox[{"Cos", "[", 
          RowBox[{
           FractionBox["1", "4"], " ", "\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"i", "+", "j"}], ")"}]}], "]"}], "+", 
         RowBox[{"Random", "[", 
          RowBox[{"Real", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0.1"}], "}"}]}], "]"}]}], "]"}], "2.2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"blue", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"N", "[", 
        FractionBox[
         RowBox[{"0.4", " ", 
          RowBox[{"(", 
           RowBox[{"i", "+", "j"}], ")"}]}], "dim"], "]"}], "+", 
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.03"}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "dim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox["1", "dim"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"original", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"box", "[", 
      RowBox[{"red", ",", "green", ",", "blue", ",", "x", ",", "y"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], "]"}], 
  " "}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
To reproduce this exactly, you need to keep track of all of the 256 (= 16 \
times 16)  entries of red,
all 256 entries of green
and all 256 entries of blue.
How do image compression folks use SVD go about trying to nearly reproduce \
this image keeping track of much less data? \
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
Enter and run the code you need for building up the red, the green and the \
blue matrices from rank one matrices:\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "redalignerframe", ",", "redstretch", ",", "redhangerframe", ",", "k"}], 
     "]"}], ";"}], " "}],
  FontColor->RGBColor[1, 0, 0]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"red", 
      StyleBox["rank",
       FontColor->RGBColor[0, 0, 1]]}]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "red", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"redhangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "red", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"redstretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "red", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"redalignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "red", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"redhanger", ",", "redstretcher", ",", "redaligner"}], "]"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["red",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["hanger",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k_",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      RowBox[{
       StyleBox[
        RowBox[{"red", 
         StyleBox["hangerframe",
          FontColor->RGBColor[0, 0, 1]]}]], 
       StyleBox["[",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["k",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["]",
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["red",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["stretcher",
        FontColor->RGBColor[1, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["k_",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      RowBox[{
       StyleBox[
        RowBox[{"red", 
         StyleBox["stretch",
          FontColor->RGBColor[1, 0, 1]]}]], 
       StyleBox["[",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["k",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["]",
        FontColor->RGBColor[1, 0, 1]]}], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["red",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["aligner",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k_",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     RowBox[{
      StyleBox[
       RowBox[{"red", 
        StyleBox["alignerframe",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"red", 
       StyleBox["rankOne",
        FontColor->RGBColor[1, 0, 0]]}]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"red", 
        StyleBox["hanger",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"red", 
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], ".", 
     RowBox[{
      StyleBox[
       RowBox[{"red", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{
     "greenalignerframe", ",", "greenstretch", ",", "greenhangerframe", ",", 
      "k"}], "]"}], ";"}], " "}],
  FontColor->RGBColor[0, 0.392187, 0]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"green", 
      StyleBox["rank",
       FontColor->RGBColor[0, 0, 1]]}]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "green", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"greenhangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "green", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"greenstretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "green", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"greenalignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "green", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"greenhanger", ",", "greenstretcher", ",", "greenaligner"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["green",
        FontColor->RGBColor[0, 0.392187, 0]], 
       StyleBox["hanger",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k_",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      RowBox[{
       StyleBox[
        RowBox[{"green", 
         StyleBox["hangerframe",
          FontColor->RGBColor[0, 0, 1]]}]], 
       StyleBox["[",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["k",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["]",
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["green",
        FontColor->RGBColor[0, 0.392187, 0]], 
       StyleBox["stretcher",
        FontColor->RGBColor[1, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["k_",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      RowBox[{
       StyleBox[
        RowBox[{"green", 
         StyleBox["stretch",
          FontColor->RGBColor[1, 0, 1]]}]], 
       StyleBox["[",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["k",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["]",
        FontColor->RGBColor[1, 0, 1]]}], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["green",
        FontColor->RGBColor[0, 0.392187, 0]], 
       StyleBox["aligner",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k_",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     RowBox[{
      StyleBox[
       RowBox[{"green", 
        StyleBox["alignerframe",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"green", 
       StyleBox["rankOne",
        FontColor->RGBColor[1, 0, 0]]}]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"green", 
        StyleBox["hanger",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"green", 
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], ".", 
     RowBox[{
      StyleBox[
       RowBox[{"green", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Clear", "[", 
     RowBox[{
     "bluealignerframe", ",", "bluestretch", ",", "bluehangerframe", ",", 
      "k"}], "]"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[";",
    FontColor->RGBColor[0, 0.392187, 0]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0.392187, 0]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"blue", 
      StyleBox["rank",
       FontColor->RGBColor[0, 0, 1]]}]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "blue", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bluehangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "blue", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bluestretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "blue", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"bluealignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "blue", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"bluehanger", ",", "bluestretcher", ",", "bluealigner"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"bluehanger", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      RowBox[{
       StyleBox[
        RowBox[{"blue", 
         StyleBox["hangerframe",
          FontColor->RGBColor[0, 0, 1]]}]], 
       StyleBox["[",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["k",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["]",
        FontColor->RGBColor[0, 0, 1]]}], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["blue",
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox["stretcher",
        FontColor->RGBColor[1, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["k_",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      RowBox[{
       StyleBox[
        RowBox[{"blue", 
         StyleBox["stretch",
          FontColor->RGBColor[1, 0, 1]]}]], 
       StyleBox["[",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["k",
        FontColor->RGBColor[1, 0, 1]], 
       StyleBox["]",
        FontColor->RGBColor[1, 0, 1]]}], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"bluealigner", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     RowBox[{
      StyleBox[
       RowBox[{"blue", 
        StyleBox["alignerframe",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"blue", 
       StyleBox["rankOne",
        FontColor->RGBColor[1, 0, 0]]}]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{"blue", 
        StyleBox["hanger",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"blue", 
        StyleBox["stretcher",
         FontColor->RGBColor[1, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[1, 0, 1]]}], ".", 
     RowBox[{
      StyleBox[
       RowBox[{"blue", 
        StyleBox["aligner",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["[",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["k",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}]}], "Input"],

Cell["This cell has no visible output but run it anyway.", "Special5"],

Cell["\<\
Trot out your SVD analysis of the red, the green and the blue matrices and \
look at the SVD stretch factors for each:\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", 
   StyleBox["red",
    FontColor->RGBColor[1, 0, 0]], "]"}], "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", 
   StyleBox["green",
    FontColor->RGBColor[0, 0.392187, 0]], "]"}], "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "blue", "]"}], "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input"],

Cell[TextData[{
 "The only stretch factors that pack lots of punch for the red matrix are the \
first",
 StyleBox[" 3",
  FontColor->RGBColor[1, 0, 0]],
 ".\nThe only stretch factors that lots of punch for the green matrix are the \
first ",
 StyleBox["3",
  FontColor->RGBColor[0, 0.392187, 0]],
 ".\nThe only stretch factors that lots of punch for the blue matrix are the \
first ",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 "\nGo with:."
}], "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"rounded", 
      StyleBox["red",
       FontColor->RGBColor[1, 0, 0]]}]], "=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]], 
     RowBox[{"redrankOne", "[", "k", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"rounded", 
      StyleBox["green",
       FontColor->RGBColor[0, 0.392187, 0]]}]], "=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["3",
       FontColor->RGBColor[0, 0.392187, 0]]], 
     RowBox[{"greenrankOne", "[", "k", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"rounded", 
      StyleBox["blue",
       FontColor->RGBColor[0, 0, 1]]}]], "=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]]], 
     RowBox[{"bluerankOne", "[", "k", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"compressedimage", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"box", "[", 
      RowBox[{
       StyleBox[
        RowBox[{"rounded", 
         StyleBox["red",
          FontColor->RGBColor[1, 0, 0]]}]], ",", 
       StyleBox[
        RowBox[{"rounded", 
         StyleBox["green",
          FontColor->RGBColor[0, 0.392187, 0]]}]], ",", 
       StyleBox[
        RowBox[{"rounded", 
         StyleBox["blue",
          FontColor->RGBColor[0, 0, 1]]}]], ",", "x", ",", "y"}], "]"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", 
       RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], "]"}], 
  " "}]}], "Input"],

Cell["Compare to the original:", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"Show", "[", "original", "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell["You might just be able to tell them apart through animation:", \
"SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"original", ",", " ", "compressedimage"}], "}"}], "]"}]], "Input"],

Cell["How does that grab you, sports fans?", "SmallText",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["T.1.a.iii) How much you save", "Subsubsection",
 Evaluatable->False],

Cell[CellGroupData[{

Cell["\<\
Exhibit the data you need for the compressed image and compare it with the \
data needed for the original.\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell[TextData[{
 "To get the compressed image, you went with:\n",
 Cell[BoxData[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"rounded", 
      StyleBox["red",
       FontColor->RGBColor[1, 0, 0]]}]], "=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]], 
     RowBox[{"redrankOne", "[", "k", "]"}]}]}], " "}], "\n", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"rounded", 
      StyleBox["green",
       FontColor->RGBColor[0, 0.392187, 0]]}]], "=", " ", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["3",
       FontColor->RGBColor[0, 0.392187, 0]]], 
     RowBox[{"greenrankOne", "[", "k", "]"}]}]}], " "}], "\n", 
  RowBox[{
   StyleBox[
    RowBox[{"rounded", 
     StyleBox["blue",
      FontColor->RGBColor[0, 0, 1]]}]], "=", " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], 
     StyleBox["2",
      FontColor->RGBColor[0, 0, 1]]], 
    RowBox[{"bluerankOne", "[", "k", "]"}], " "}]}]}]],
 "\nThis means you need the following data for the compressed image:"
}], "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"redhangerdata", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"red", 
       StyleBox["hangerframe",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"redstretchdata", "  ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"red", 
       StyleBox["stretch",
        FontColor->RGBColor[1, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["k",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"redalignerdata", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"red", 
       StyleBox["alignerframe",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"greenhangerdata", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"green", 
       StyleBox["hangerframe",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"greenstretchdata", "  ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"green", 
       StyleBox["stretch",
        FontColor->RGBColor[1, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["k",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"greenalignerdata", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"green", 
       StyleBox["alignerframe",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"bluehangerdata", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"blue", 
       StyleBox["hangerframe",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"bluestretchdata", "  ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"blue", 
       StyleBox["stretch",
        FontColor->RGBColor[1, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["k",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"bluealignerdata", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     StyleBox[
      RowBox[{"blue", 
       StyleBox["alignerframe",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["k",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]], "Input"],

Cell[TextData[{
 "The total count of the individual numbers needed to communicate ",
 StyleBox["roundedA",
  FontColor->RGBColor[0, 0, 1]],
 "  is:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"totalcompressed", " ", "=", 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 0]], 
  RowBox[{
   StyleBox[
    RowBox[{"Length", "[", 
     RowBox[{"Flatten", "[", "redhangerdata", "]"}], "]"}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["+",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[
    RowBox[{"Length", "[", "redstretchdata", "]"}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["+",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[
    RowBox[{"Length", "[", 
     RowBox[{"Flatten", "[", "redalignerdata", "]"}], "]"}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["+",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox["  ",
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[
    RowBox[{"Length", "[", 
     RowBox[{"Flatten", "[", "greenhangerdata", "]"}], "]"}],
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox["+",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox[
    RowBox[{"Length", "[", "greenstretchdata", "]"}],
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox["+",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox[
    RowBox[{"Length", "[", 
     RowBox[{"Flatten", "[", "greenalignerdata", "]"}], "]"}],
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox["+",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0.392187, 0]], 
   StyleBox[
    RowBox[{"Length", "[", 
     RowBox[{"Flatten", "[", "bluehangerdata", "]"}], "]"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["+",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[
    RowBox[{"Length", "[", "bluestretchdata", "]"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["+",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[
    RowBox[{"Length", "[", 
     RowBox[{"Flatten", "[", "bluealignerdata", "]"}], "]"}],
    FontColor->RGBColor[0, 0, 1]]}]}]], "Input"],

Cell[TextData[{
 "The total count of the individual numbers needed to communicate the each of \
the original red, green and blue data matrices ",
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 " is"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"totaloriginal", " ", "=", " ", 
  RowBox[{"3", " ", 
   RowBox[{"(", " ", 
    RowBox[{"dim", " ", "\[Times]", " ", "dim"}], ")"}]}]}]], "Input"],

Cell["The relative savings in decimals:", "SmallText"],

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["totalcompressed", "totaloriginal"], "]"}]], "Input"],

Cell[TextData[{
 "You can send the cleaner compressed image with only  about ",
 StyleBox["34 %",
  FontColor->RGBColor[0, 0, 1]],
 " of the total data count needed to send the original."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.1.a.iv) Seeing the image emerge", "Subsubsection",
 Evaluatable->False],

Cell["Look at:", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"box", "[", " ", 
         RowBox[{
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], 
            StyleBox["p",
             FontColor->RGBColor[1, 0, 0]]], 
           RowBox[{"redrankOne", "[", "k", "]"}]}], ",", " ", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], 
            StyleBox["p",
             FontColor->RGBColor[1, 0, 0]]], 
           RowBox[{"greenrankOne", "[", "k", "]"}]}], ",", " ", 
          RowBox[{
           UnderoverscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], 
            StyleBox["p",
             FontColor->RGBColor[1, 0, 0]]], 
           RowBox[{"bluerankOne", "[", "k", "]"}]}], ",", "x", ",", "y"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", 
          RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", 
          RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "p"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "1", ",", "3", ",", "1"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.503265885676784*^9, 3.503265895626031*^9}}],

Cell[CellGroupData[{

Cell["What do these depict?", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
The plot labeled \"1\" shows what image compression you get  using only the \
first stretch factor for the each of the red, green and blue matrices.\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"box", "[", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"redrankOne", "[", "k", "]"}]}], ",", " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"greenrankOne", "[", "k", "]"}]}], ",", " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"bluerankOne", "[", "k", "]"}]}], ",", "x", ",", "y"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "p"}]}], "]"}], " "}]}], "Input"],

Cell["Terrible.", "SmallText",
 Evaluatable->False],

Cell["\<\
The plot labeled \"2\" shows what image compression you get  using only the \
first two stretch factors for the each of the red, green and blue matrices.\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"box", "[", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"redrankOne", "[", "k", "]"}]}], ",", " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"greenrankOne", "[", "k", "]"}]}], ",", " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"bluerankOne", "[", "k", "]"}]}], ",", "x", ",", "y"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "p"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
Better, but still not so good.
The plot labeled \"3\" shows what image compression you get  using only the \
first three stretch factors for the each of the red, green and blue matrices.\
\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"p", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"box", "[", 
       RowBox[{
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"redrankOne", "[", "k", "]"}]}], ",", " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"greenrankOne", "[", "k", "]"}]}], ",", " ", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          StyleBox["p",
           FontColor->RGBColor[1, 0, 0]]], 
         RowBox[{"bluerankOne", "[", "k", "]"}]}], ",", "x", ",", "y"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "0", ",", 
        RowBox[{"1", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "p"}]}], "]"}], " "}]}], "Input"],

Cell["That's almost as good as the real thing - maybe better:", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"original", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Real thing\>\""}]}], "]"}], 
  " "}]], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.2) Ill-conditioned matrices: One more walk-through ", "Subsection",
 CellTags->"MGM.07.T2"],

Cell[CellGroupData[{

Cell["T.2.a.i) Innocent looking but ill-conditioned", "Subsubsection"],

Cell["Here's an innocent looking matrix A1:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A1", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"-", "7.41149"}], "2.1198", 
         RowBox[{"-", "8.62824"}]},
        {"3.22261", "5.71393", "11.150578"},
        {"6.85495", 
         RowBox[{"-", "2.6932"}], "7.16354"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A1", "]"}]}], "Input"],

Cell["The matrix A1 calculates out to be of full rank:", "Text"],

Cell[BoxData[
 RowBox[{"rankA1", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A1", "]"}], "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input"],

Cell["Here's another innocent looking matrix A2:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A2", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.081", 
         RowBox[{"-", "0.9287"}], "0.3649", 
         RowBox[{"-", "0.9676"}]},
        {"3.7683", "1.5014", "1.7123", "3.497"},
        {
         RowBox[{"-", "1.931"}], "2.4505", 
         RowBox[{"-", "0.5783"}], "2.8762"},
        {"0.6038", "2.9303", "0.5243", "4.46"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "A2", "]"}]}], "Input"],

Cell["The matrix A2 also calculates out to be of full rank:", "Text"],

Cell[BoxData[
 RowBox[{"rankA2", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A2", "]"}], "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input"],

Cell["Here's yet another innocent looking matrix A3:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A3", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"2.2609", "0.84056", 
         RowBox[{"-", "1.6583"}], 
         RowBox[{"-", "2.5815"}], 
         RowBox[{"-", "3.0806"}], 
         RowBox[{"-", "0.2194"}]},
        {"5.4933", 
         RowBox[{"-", "1.3923"}], "0.29712", 
         RowBox[{"-", "5.5638"}], 
         RowBox[{"-", "2.07006"}], 
         RowBox[{"-", "3.49005"}]},
        {"1.64772", 
         RowBox[{"-", "0.32397"}], "0.38924", 
         RowBox[{"-", "2.4077"}], 
         RowBox[{"-", "1.5451"}], 
         RowBox[{"-", "0.021811"}]},
        {
         RowBox[{"-", "2.073"}], 
         RowBox[{"-", "0.447829"}], "1.591427", "2.35395", "2.06216", 
         RowBox[{"-", "0.28895"}]},
        {"4.67362", 
         RowBox[{"-", "2.73171"}], 
         RowBox[{"-", "0.82372"}], 
         RowBox[{"-", "4.709489"}], "2.315149", "0.4708239"},
        {
         RowBox[{"-", "1.34082"}], "2.15553", 
         RowBox[{"-", "1.576917"}], "1.009432", 
         RowBox[{"-", "2.81729"}], "1.286609"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A3", "]"}]}], "Input"],

Cell["The matrix A3 also calculates out to be of full rank:", "Text"],

Cell[BoxData[
 RowBox[{"rankA3", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A3", "]"}], "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
They are all look fine. They' all calculate out to be of full rank. 
But they are all what the matrix pros call \"ill-conditioned.\"
How do the matrix pros determine that these three matrices are \
ill-conditioned?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Instead of looking at the rank of each matrix, matrix pros look at the list \
of individual SVD stretch factors for each matrix:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"A1stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A1", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"A2stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A2", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"A3stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A3", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell["\<\
For each of the three matrices, there is a huge discrepancy between the \
largest and the smallest SVD stretch factors.  This is why matrix pros call \
each of these matrices ill-conditioned.

And if any of these matrices appear are the coefficient matrix in a linear \
system, you can be almost certain that the solutions of that linear system \
are hugely subject to roundoff error.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.2.a.ii) Analyzing a linear system for ill-conditioning", \
"Subsubsection"],

Cell["\<\
Go with that last matrix as the coefficient matrix of a linear system:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", "=", "6"}], ";", " ", 
   RowBox[{"hangdim", "=", "6"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"2.2609", "0.84056", 
         RowBox[{"-", "1.6583"}], 
         RowBox[{"-", "2.5815"}], 
         RowBox[{"-", "3.0806"}], 
         RowBox[{"-", "0.2194"}]},
        {"5.4933", 
         RowBox[{"-", "1.3923"}], "0.29712", 
         RowBox[{"-", "5.5638"}], 
         RowBox[{"-", "2.07006"}], 
         RowBox[{"-", "3.49005"}]},
        {"1.64772", 
         RowBox[{"-", "0.32397"}], "0.38924", 
         RowBox[{"-", "2.4077"}], 
         RowBox[{"-", "1.5451"}], 
         RowBox[{"-", "0.021811"}]},
        {
         RowBox[{"-", "2.073"}], 
         RowBox[{"-", "0.447829"}], "1.591427", "2.35395", "2.06216", 
         RowBox[{"-", "0.28895"}]},
        {"4.67362", 
         RowBox[{"-", "2.73171"}], 
         RowBox[{"-", "0.82372"}], 
         RowBox[{"-", "4.709489"}], "2.315149", "0.4708239"},
        {
         RowBox[{"-", "1.34082"}], "2.15553", 
         RowBox[{"-", "1.576917"}], "1.009432", 
         RowBox[{"-", "2.81729"}], "1.286609"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"X", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"x", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"y", "[", "k", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "hangdim"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Thread", "[", 
   RowBox[{"linearsystem", "=", 
    RowBox[{
     RowBox[{"A", ".", "X"}], "==", "Y"}]}], "]"}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["Analyze this system for extreme sensitivity to roundoff.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Set up everything you need and look at the stretch factors of A:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "stretch", ",", "hangerframe", ",", "k"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["rank",
     FontColor->RGBColor[0, 0, 1]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"hanger", ",", "stretcher", ",", "aligner", ",", "rankOne"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"hanger", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"stretcher", "[", "k_", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"alignerframe", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["rankOne",
      FontColor->RGBColor[1, 0, 0]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"hanger", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"stretcher", "[", "k", "]"}],
      FontColor->RGBColor[1, 0, 1]], ".", 
     StyleBox[
      RowBox[{"aligner", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"stretches", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]}], "Input"],

Cell["\<\
Those two stretch factors on the right that are so much smaller than the \
others:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"stretch", "[", "5", "]"}], ",", 
   RowBox[{"stretch", "[", "6", "]"}]}], "}"}]], "Input"],

Cell["See it happen:", "SmallText"],

Cell[BoxData[
 RowBox[{"Y1", "=", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "4"], 
   RowBox[{
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Y2", "=", 
  RowBox[{"Y1", "+", 
   RowBox[{"0.00001", " ", 
    RowBox[{"hangerframe", "[", "5", "]"}]}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"Y3", "=", 
  RowBox[{"Y1", "+", 
   RowBox[{"0.00001", " ", 
    RowBox[{"hangerframe", "[", "6", "]"}]}]}]}]], "Input"],

Cell["\<\
Y1, Y2 and Y3 are very close together.
But look at the solutions X1, X2 and X3
         of A.X = Y1, AX = Y2 and A.X = Y3:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"  ", 
  StyleBox[
   RowBox[{"X1sol", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "rank"], 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"Y1", ".", 
         RowBox[{"hangerframe", "[", "k", "]"}]}], 
        StyleBox[
         RowBox[{"stretch", "[", "k", "]"}],
         FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
      RowBox[{"alignerframe", "[", "k", "]"}]}]}]}],
   FontSize->12]}]}], "Input"],

Cell[BoxData[
 RowBox[{"  ", 
  StyleBox[
   RowBox[{"X2sol", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "rank"], 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"Y2", ".", 
         RowBox[{"hangerframe", "[", "k", "]"}]}], 
        StyleBox[
         RowBox[{"stretch", "[", "k", "]"}],
         FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
      RowBox[{"alignerframe", "[", "k", "]"}]}]}]}],
   FontSize->12]}]], "Input"],

Cell[BoxData[
 RowBox[{"  ", 
  StyleBox[
   RowBox[{"X3sol", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "rank"], 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"Y3", ".", 
         RowBox[{"hangerframe", "[", "k", "]"}]}], 
        StyleBox[
         RowBox[{"stretch", "[", "k", "]"}],
         FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
      RowBox[{"alignerframe", "[", "k", "]"}]}]}]}],
   FontSize->12]}]], "Input"],

Cell["\<\
Scattered to the wind. 
Reason: The coefficient matrix A is ill-conditioned.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.2.a.iii) Getting around the ill-conditioning: Success", \
"Subsubsection"],

Cell["\<\
Here's a linear system based on the same coefficient matrix A as above.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "4"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], " ", 
        RowBox[{"hangerframe", "[", "k", "]"}]}], "+", 
       RowBox[{"0.00045", " ", 
        RowBox[{"hangerframe", "[", "5", "]"}]}], "+", 
       RowBox[{"0.00023", " ", 
        RowBox[{"hangerframe", "[", "6", "]"}]}]}], ")"}]}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"y", "[", "1", "]"}], ",", 
      RowBox[{"y", "[", "2", "]"}], ",", 
      RowBox[{"y", "[", "3", "]"}], ",", 
      RowBox[{"y", "[", "4", "]"}], ",", 
      RowBox[{"y", "[", "5", "]"}], ",", 
      RowBox[{"y", "[", "6", "]"}]}], "}"}], "=", "Y"}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Thread", "[", "linearsystem", "]"}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["Come up with the best solution you can feel good about.", "Text"],

Cell["Answer:", "Special1"],

Cell["Set up everything you need:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "stretch", ",", "hangerframe", ",", "k"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["rank",
     FontColor->RGBColor[0, 0, 1]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"hanger", ",", "stretcher", ",", "aligner", ",", "rankOne"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"hanger", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"stretcher", "[", "k_", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"alignerframe", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["rankOne",
      FontColor->RGBColor[1, 0, 0]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"hanger", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"stretcher", "[", "k", "]"}],
      FontColor->RGBColor[1, 0, 1]], ".", 
     StyleBox[
      RowBox[{"aligner", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}]}], "Input"],

Cell["Look again at the stretch factors for A:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
  StyleBox["2",
   FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]], "Input"],

Cell["\<\
Look at the components of Y in the directions of hangerframe[5] and \
hangerframe[6]:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Y", ".", 
    RowBox[{"hangerframe", "[", "5", "]"}]}], ")"}], " ", 
  RowBox[{"hangerframe", "[", "5", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Y", ".", 
    RowBox[{"hangerframe", "[", "6", "]"}]}], ")"}], " ", 
  RowBox[{"hangerframe", "[", "6", "]"}]}]}], "Input"],

Cell["\<\
These are fairly small. 
This signals that you probably have a good chance of getting around the \
ill-conditioning by rounding A.
Here's how you do it:\
\>", "SmallText"],

Cell["\<\
Again round off A by zeroing out stretch[5] and stretch[6]. This will rub out \
the questionable components of Y in the direction of hangerframe[5] and \
hangerframe[6].\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"roundedA", " ", "=", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"k", "=", "1"}], 
       StyleBox["4",
        FontColor->RGBColor[1, 0, 0]]], 
      RowBox[{"rankOne", "[", "k", "]"}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", "roundedA", "]"}]}]}]], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "A", "]"}]], "Input"],

Cell["\<\
The matrices A and rounded A are almost the same.
Now go with\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Xapprox", "=", 
  RowBox[{
   RowBox[{"PseudoInverse", "[", "roundedA", "]"}], ".", "Y"}]}]], "Input"],

Cell["This is the same as:", "SmallText"],

Cell[BoxData[
 RowBox[{"  ", 
  StyleBox[
   RowBox[{"Xapprox", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["4",
       FontColor->RGBColor[1, 0, 0]]], 
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{"Y", ".", 
         RowBox[{"hangerframe", "[", "k", "]"}]}], 
        StyleBox[
         RowBox[{"stretch", "[", "k", "]"}],
         FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
      RowBox[{"alignerframe", "[", "k", "]"}]}]}]}],
   FontSize->12]}]], "Input"],

Cell["Check how well Xapprox works out:", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", "Xapprox"}], ",", "Y"}], "}"}]], "Input"],

Cell["\<\
Nice and close.
Compare with what you get if you don't round off A:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Xsol", " ", "=", " ", 
  StyleBox[
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], 
     StyleBox["rank",
      FontColor->RGBColor[1, 0, 0]]], 
    RowBox[{
     RowBox[{"(", 
      FractionBox[
       RowBox[{"Y", ".", 
        RowBox[{"hangerframe", "[", "k", "]"}]}], 
       StyleBox[
        RowBox[{"stretch", "[", "k", "]"}],
        FontColor->RGBColor[1, 0, 1]]], ")"}], " ", 
     RowBox[{"alignerframe", "[", "k", "]"}]}]}],
   FontSize->12]}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"A", ".", "Xsol"}], ",", "Y"}], "}"}]], "Input"],

Cell["\<\
Both Xapprox and Xsol seem acceptable: But they are radically different:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"Xapprox", ",", "Xsol"}], "}"}]], "Input"],

Cell[TextData[{
 "Of these two, ",
 StyleBox["Xapprox",
  FontColor->RGBColor[0, 0, 1]],
 " (coming from the rounded version of A) is more trustworthy than ",
 StyleBox["Xsol",
  FontColor->RGBColor[0, 0, 1]],
 " (coming from the unrounded version of A).\nReason: Inverse[A] overreacts \
to potential small errors in the components of Y in the directions of \
hangerframe[5] and hangerframe[6].\nAnd now you're a pro."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.2.a.iv) Getting around the ill-conditioning: Failure", "Subsubsection"],

Cell["\<\
Here's a new linear system based on the same coefficient matrix A as above.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Y", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "6"], 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "8"}], "}"}]}], "]"}], " ", 
      RowBox[{"hangerframe", "[", "k", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"y", "[", "1", "]"}], ",", 
      RowBox[{"y", "[", "2", "]"}], ",", 
      RowBox[{"y", "[", "3", "]"}], ",", 
      RowBox[{"y", "[", "4", "]"}], ",", 
      RowBox[{"y", "[", "5", "]"}], ",", 
      RowBox[{"y", "[", "6", "]"}]}], "}"}], "=", "Y"}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Thread", "[", "linearsystem", "]"}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["Come up with the best solution you can feel good about.", "Text"],

Cell["Answer:", "Special1"],

Cell["Set up everything you need:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "stretch", ",", "hangerframe", ",", "k"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["rank",
     FontColor->RGBColor[0, 0, 1]], " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"stretch", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["k",
       FontColor->GrayLevel[0]]}], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[1, 0, 0]], ",", "k"}], "\[RightDoubleBracket]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{"Clear", "[", 
  RowBox[{"hanger", ",", "stretcher", ",", "aligner", ",", "rankOne"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"hanger", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "k", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"stretcher", "[", "k_", "]"}],
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[1, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"stretch", "[", "k", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"aligner", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{":", 
      StyleBox["=",
       FontColor->RGBColor[0, 0, 1]]}]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"alignerframe", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     StyleBox["rankOne",
      FontColor->RGBColor[1, 0, 0]], "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"hanger", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"stretcher", "[", "k", "]"}],
      FontColor->RGBColor[1, 0, 1]], ".", 
     StyleBox[
      RowBox[{"aligner", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}]}], "Input"],

Cell["Look again at the stretch factors for A:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
  StyleBox["2",
   FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]], "Input"],

Cell["\<\
Look at the components of Y in the directions of hangerframe[5] and \
hangerframe[6]:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Y", ".", 
    RowBox[{"hangerframe", "[", "5", "]"}]}], ")"}], " ", 
  RowBox[{"hangerframe", "[", "5", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{"Y", ".", 
    RowBox[{"hangerframe", "[", "6", "]"}]}], ")"}], " ", 
  RowBox[{"hangerframe", "[", "6", "]"}]}]}], "Input"],

Cell["\<\
These are not insignificant.
The call:
No proposed solution of this linear system is trustworthy.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3) Using rank one matrices to build up projections", "Subsection",
 CellTags->"MGM.07.T3"],

Cell[CellGroupData[{

Cell["T.3.a.i) Projecting onto lines", "Subsubsection"],

Cell[TextData[{
 "Here's a line through {0,0,0} running in the direction of the vector {1,-1,",
 Cell[BoxData[
  FractionBox["3", "2"]]],
 "} in 3D:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"directionvector", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      RowBox[{"-", "1"}], ",", 
      FractionBox["3", "2"]}], "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"lineplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "directionvector"}], ",", "directionvector"}], "}"}], 
        "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Axes3D", "[", "1", "]"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Make a rank one matrix P so that when you hit a point {x,y,z} with P, you get \
the point on the line closest to {x,y,z}. 
Illustrate with plots.\
\>", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
To make this matrix, convert the direction vector into a unitvector\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"unitdirectionvector", "=", 
  FractionBox["directionvector", 
   SqrtBox[
    RowBox[{"directionvector", ".", "directionvector"}]]]}]], "Input"],

Cell["\<\
Use this vector for your lone alignerframe and lone hangerframe vector 
and go with a stretch = 1:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hangerframevector", " ", "=", "unitdirectionvector"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["hangerframevector",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["\<\
This isn't a vector. This is a matrix consisting of a single column. 
    The vector in the column is the hangerframe vector\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stretch", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stretch", "=", " ", "1"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["stretch",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell["\<\
This isn't a number. This is a matrix consisting of one row and one column. 
  The lone entry is the stretch factor\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    RowBox[{"alignerframevector", " ", "=", " ", "unitdirectionvector"}], 
    ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["=",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["alignerframevector",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}]}], 
    StyleBox[";",
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
   RowBox[{"MatrixForm", "[", "aligner", "]"}]}]}]], "Input"],

Cell["\<\
This isn't a vector. This is a matrix consisting of a single row. 
    The vector in the row is the alignerframe vector\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["The projection matrix you want is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["P",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P", "]"}]}], "Input"],

Cell["Check it out:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    StyleBox[
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], " ", "-", " ", 
      RowBox[{"P", ".", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}],
     FontColor->RGBColor[0, 0, 1]], ")"}], ".", " ", 
   StyleBox["directionvector",
    FontColor->RGBColor[0, 0.392187, 0]]}], "]"}]}], "Input"],

Cell["\<\
This tells you that the vector running from P.{x,y,z} to {x,y,z} is \
perpendicular to the line. And because perpendicular distance is the shortest \
distance, the point on the line closest to {x,y,z} is:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"P", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input"],

Cell["\<\
See it happen by plotting a random {x,y,z} and the resulting closest point \
P.{x,y,z}:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], " ", "=", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.04", "]"}], ",", "Black", ",", 
       RowBox[{"Point", "[", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}],
         FontColor->RGBColor[0, 0, 1]], "]"}]}], "}"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"closestpointplot", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
       StyleBox["Pink",
        FontColor->GrayLevel[0]], 
       StyleBox[",",
        FontColor->GrayLevel[0]], 
       RowBox[{"Point", "[", 
        RowBox[{
         StyleBox["P",
          FontColor->RGBColor[1, 0, 0]], ".", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}],
          FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"lineplot", ",", "pointplot", ",", "closestpointplot"}], "]"}], 
  " "}]}], "Input"],

Cell["\<\
See the same thing from a view point perpendicular to the line and \
perpendicular to {x,y,z}- P.{x,y,z}:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"lineplot", ",", "pointplot", ",", "closestpointplot", ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"12", " ", 
      StyleBox[
       RowBox[{"Cross", "[", 
        RowBox[{"directionvector", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}], "-", " ", 
          RowBox[{"P", ".", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}]}], "]"}],
       FontColor->RGBColor[0, 0, 1]]}]}]}], "]"}], " "}]], "Input"],

Cell["See the same thing looking right down the line:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"lineplot", ",", "pointplot", ",", "closestpointplot", ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"12", " ", 
      StyleBox["directionvector",
       FontColor->RGBColor[0, 0, 1]]}]}]}], "]"}], " "}]], "Input"],

Cell["Nailed it down hard!", "Text"],

Cell["Rerun all three cells a couple of times.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.b.i) Projecting onto planes", "Subsubsection"],

Cell["Here's matrix A", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"(", GridBox[{
       {"1.0", "0", "1.0"},
       {
        RowBox[{"-", "0.5"}], "0.5", "0"},
       {"0", 
        RowBox[{"-", "1.0"}], 
        RowBox[{"-", "1.0"}]}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["The rank of this matrix is", "Text"],

Cell[BoxData[
 RowBox[{"rank", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "A", "]"}], "[", 
    RowBox[{"[", 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "This tells you A hangs all its hits on a plane in 3D. \nPlot part of that \
plane. \nThen use rank one matrices to build a projection matrix P so that\n  \
       ",
 StyleBox["P.{x,y,z}",
  FontColor->RGBColor[0, 0, 1]],
 " is the point on the plane closest to ",
 StyleBox["{x,y,z}",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
The matrix A hangs all its hits on the hangerframe for A, so you can use the \
calculated hangerframe for A to plot this plane:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "[", 
     RowBox[{"[", 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"h", " ", "=", " ", "2.5"}], ";"}], " "}], "\n", 
 RowBox[{"planeplot", " ", "=", "  ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Graphics3D", "[", "\[IndentingNewLine]", 
     RowBox[{"Polygon", "[", "\[IndentingNewLine]", 
      RowBox[{"h", 
       RowBox[{"{", 
        StyleBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"hangerframe", "[", "1", "]"}]}], "-", " ", 
           RowBox[{"hangerframe", "[", "2", "]"}]}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"hangerframe", "[", "1", "]"}]}], "+", " ", 
           RowBox[{"hangerframe", "[", "2", "]"}]}], ",", " ", 
          "\[IndentingNewLine]", " ", 
          RowBox[{
           RowBox[{"hangerframe", "[", "1", "]"}], " ", "+", 
           RowBox[{"hangerframe", "[", "2", "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"hangerframe", "[", "1", "]"}], "-", " ", 
           RowBox[{"hangerframe", "[", "2", "]"}]}]}],
         FontColor->RGBColor[0, 0, 1]], "}"}]}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Axes3D", "[", "3", "]"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
To make the projection matrix, you make these two rank one matrices:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger1",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "1", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stretch", "=", " ", "1"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher1",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["stretch",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["aligner1",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"hangerframe", "[", "1", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"rankOne", 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]]}]], " ", "=", 
    RowBox[{"hanger1", ".", "stretcher1", ".", "aligner1"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "rankOne1", "]"}]}], "Input"],

Cell[TextData[{
 "This matrix projects on the line through {0,0,0} running in the direction \
of hangerframe[",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 "]."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger2",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "2", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stretch", "=", " ", "1"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher2",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["stretch",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["aligner2",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"hangerframe", "[", "2", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"rankOne", 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]]}]], " ", "=", 
    RowBox[{"hanger2", ".", "stretcher2", ".", "aligner2"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "rankOne2", "]"}]}], "Input"],

Cell[TextData[{
 "This matrix projects on the line through {0,0,0} running in the direction \
of hangerframe[",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 "]."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["The matrix that projects onto the plane is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"P", " ", "=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"rankOne", 
       StyleBox["1",
        FontColor->RGBColor[1, 0, 0]]}]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["+",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox[
      RowBox[{"rankOne", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]]}]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[1, 0, 0]]}], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 0]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "P", "]"}]}], "Input"],

Cell["Check it out:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], " ", "-", " ", 
       RowBox[{"P", ".", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}],
      FontColor->RGBColor[0, 0, 1]], ")"}], ".", " ", 
    StyleBox[
     RowBox[{"hangerframe", "[", "1", "]"}],
     FontColor->RGBColor[0, 0.392187, 0]]}], "]"}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", "z"}], "}"}], " ", "-", " ", 
       RowBox[{"P", ".", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}],
      FontColor->RGBColor[0, 0, 1]], ")"}], ".", " ", 
    StyleBox[
     RowBox[{"hangerframe", "[", "2", "]"}],
     FontColor->RGBColor[0, 0.392187, 0]]}], "]"}], "]"}]], "Input"],

Cell["\<\
This tells you that the vector running from P.{x,y,z} to {x,y,z} is \
perpendicular to the plane. And because perpendicular distance is the \
shortest distance, the point on the line closest to a given point {x,y,z} is:\
\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"P", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input"],

Cell["\<\
See it happen by plotting a random {x,y,z} and the resulting closest point \
P.{x,y,z}:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}], " ", "=", 
    "\[IndentingNewLine]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.04", "]"}], ",", "Purple", ",", 
       RowBox[{"Point", "[", 
        StyleBox[
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "z"}], "}"}],
         FontColor->RGBColor[0, 0, 1]], "]"}]}], "}"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"closestpointplot", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
       StyleBox["Green",
        FontColor->RGBColor[0.229999, 0.370001, 0.170001]], ",", 
       RowBox[{"Point", "[", 
        RowBox[{
         StyleBox["P",
          FontColor->RGBColor[1, 0, 0]], ".", 
         StyleBox[
          RowBox[{"{", 
           RowBox[{"x", ",", "y", ",", "z"}], "}"}],
          FontColor->RGBColor[0, 0, 1]]}], "]"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"planeplot", ",", "pointplot", ",", "closestpointplot"}], 
  "]"}]}], "Input"],

Cell["See the same thing from a view point parallel to the plane.", \
"SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"planeplot", ",", "pointplot", ",", "closestpointplot", ",", 
   RowBox[{"ViewPoint", "->", 
    RowBox[{"12", " ", 
     StyleBox[
      RowBox[{"hangerframe", "[", "1", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}]}], "]"}]], "Input"],

Cell["Rerun both cells a couple of times.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.b.ii) Making the projection matrix directly", "Subsubsection"],

Cell[CellGroupData[{

Cell["Can you make that projection matrix in part i) directly?", "Text"],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
Sure can.
Just use the two hangerframe vectors for your aligner and for your hanger and \
go with stretch factors both 1:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "[", 
     RowBox[{"[", 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hangerframe", "[", "1", "]"}], ",", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}], "\n"}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stretch", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"stretch", "[", "1", "]"}], ",", 
      RowBox[{"stretch", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {
         RowBox[{"stretch", "[", "1", "]"}], "0"},
        {"0", 
         RowBox[{"stretch", "[", "2", "]"}]}
       }], "\[NoBreak]", ")"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"directP", " ", "=", " ", 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  StyleBox["directP",
   FontColor->RGBColor[0, 0, 1]], "]"}]}], "Input"],

Cell["Compare with the projection matrix P made in part i:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  StyleBox["P",
   FontColor->RGBColor[0, 0, 1]], "]"}]], "Input"],

Cell["They are the same - and for good reason", "SmallText"],

Cell[TextData[{
 "          ",
 StyleBox["P",
  FontColor->RGBColor[0, 0, 1]],
 ".X = rankOne",
 StyleBox["1",
  FontColor->RGBColor[1, 0, 0]],
 ".X + rankOne",
 StyleBox["2",
  FontColor->RGBColor[1, 0, 0]],
 ".X\n                    = (X.",
 StyleBox["hangerframe[1]",
  FontColor->RGBColor[0, 0, 1]],
 ") hangerframe[1] + (X.",
 StyleBox["hangerframe[2]",
  FontColor->RGBColor[0, 0, 1]],
 ") hangerframe[2]"
}], "SmallText"],

Cell[TextData[{
 "                      = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "2"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["X",
       FontColor->GrayLevel[0]], " ", 
      RowBox[{"hangerframe", "[", "k", "]"}]}], ")"}], " ", 
    StyleBox[
     RowBox[{"hangerframe", "[", "k", "]"}],
     FontColor->GrayLevel[0]]}]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "On the other hand,\n      ",
 StyleBox["directP",
  FontColor->RGBColor[0, 0, 1]],
 ".X = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "2"], 
   RowBox[{
    RowBox[{"stretch", "[", "k", "]"}], 
    RowBox[{"(", 
     RowBox[{
      StyleBox["X",
       FontColor->GrayLevel[0]], ".", 
      RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}], " ", 
    StyleBox[
     RowBox[{"hangerframe", "[", "k", "]"}],
     FontColor->GrayLevel[0]]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "                      = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "2"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      StyleBox["X",
       FontColor->GrayLevel[0]], " ", 
      RowBox[{"hangerframe", "[", "k", "]"}]}], ")"}], " ", 
    StyleBox[
     RowBox[{"hangerframe", "[", "k", "]"}],
     FontColor->GrayLevel[0]]}]}]]]
}], "SmallText"],

Cell["\<\
Reasons: Stretch[k] = 1 and alignerframe[k] = hangerframe[k].\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "This signals that ",
 StyleBox["directP",
  FontColor->RGBColor[0, 0, 1]],
 " and",
 StyleBox[" P ",
  FontColor->RGBColor[0, 0, 1]],
 "are the same matrix."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.4) Principal component data analysis via SVD:
Massaging the data with projections.
Relationship to least square fit\
\>", "Subsection",
 CellTags->"MGM.07.T4"],

Cell[CellGroupData[{

Cell["T.4.a.i) Massaging nearly linear data", "Subsubsection"],

Cell["Here's a little data sample:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.8"}], ",", " ", 
        RowBox[{"-", "1.4"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.4"}], ",", " ", "0.1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.2"}], ",", " ", "0.70"}], "}"}], ",", " ", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"0.4", ",", " ", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.8", ",", " ", "2.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.4", ",", " ", "3.00"}], "}"}], ",", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"1.8", ",", " ", "2.61"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.6", ",", " ", "4.59"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.2", ",", " ", "3.76"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.6", ",", " ", "5.00"}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"dataplot", " ", "=", " ", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"data", ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
Here's how you get the principal component line for these data.\
\>", "Text"],

Cell[TextData[StyleBox["This is explained in detail in B.4).",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mean", "=", 
    FractionBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], 
       RowBox[{"Length", "[", "data", "]"}]], 
      RowBox[{
      "data", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
     RowBox[{"Length", "[", "data", "]"}]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"centereddata", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "mean"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"centereddatamatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "centereddata", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "centereddatamatrix", " ", "]"}]}], "Input"],

Cell[TextData[{
 StyleBox["The kth centered data point ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["{x[k],y[k]}",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" shows up \nas the kth column ",
  FontVariations->{"CompatibilityType"->0}],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      RowBox[{"x", "[", "k", "]"}]},
     {
      RowBox[{"y", "[", "k", "]"}]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->12],
 " of the centered data matrix"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Look at the SVD stretch factors of centereddatamatrix :", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"stretch", "[", "1", "]"}], ",", 
    RowBox[{"stretch", "[", "2", "]"}]}], "}"}], "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "centereddatamatrix", " ", "]"}], "[", 
     RowBox[{"[", 
      StyleBox["1",
       FontColor->RGBColor[0.889998, 0.209995, 0.219989]], "]"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"principalline", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"principalline", "[", "t_", "]"}], " ", "=", " ", 
    RowBox[{"mean", " ", "+", " ", 
     RowBox[{"t", " ", 
      RowBox[{"hangerframe", "[", "1", "]"}]}]}]}], ";"}], " ", "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{"thigh", " ", "=", " ", "7"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"principalcomponentplot", " ", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"principalline", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "thigh"}], ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Yellow", "]"}], ",", 
          RowBox[{"Thickness", "[", "0.01", "]"}]}], "}"}], "}"}]}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", "principalcomponentplot"}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
If you have good reason to believe that the data should all land on the same \
line, how do you message the data to land on the principal component line?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Just take the centered data and build the matrix that projects it onto the \
line defined by hangerframe[1]:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hangerframevector", " ", "=", "unitdirectionvector"}], ";"}], 
  "  "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"hangerframe", "[", "1", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stretch", "=", " ", "1"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox["{",
       FontColor->GrayLevel[0]], 
      StyleBox["stretch",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["}",
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], ";"}], " "}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["aligner",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["{",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{"hangerframe", "[", "1", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["}",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["P",
       FontColor->RGBColor[0, 0, 1]], "roject"}]], 
    StyleBox[
     RowBox[{" ", 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", 
  StyleBox[
   RowBox[{
    StyleBox["P",
     FontColor->RGBColor[0, 0, 1]], "roject"}]], "]"}]}], "Input"],

Cell["\<\
Hit the centered data with this matrix to project the centered data onto the \
line defined by hangerframe[1] to get your centered messaged data: \
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "g", ",", "X"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "X_", "]"}], " ", ":=", " ", 
    RowBox[{"Project", ".", "X"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"messagedcentered", "=", 
  RowBox[{"Map", "[", 
   RowBox[{"f", ",", "centereddata"}], " ", "]"}]}]}], "Input"],

Cell["Add the mean to the messaged centered data:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"g", "[", "X_", "]"}], " ", ":=", " ", 
    RowBox[{"X", " ", "+", " ", "mean"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"messageddata", " ", "=", " ", 
  RowBox[{"Map", "[", 
   RowBox[{"g", ",", "messagedcentered"}], " ", "]"}]}]}], "Input"],

Cell["See it  with the principal component line:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"messageddataplot", " ", "=", "  ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"messageddata", ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", "\n", 
      "\t                            ", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", 
         RowBox[{"PointSize", "[", "0.05", "]"}]}], "}"}]}]}], "]"}]}], ";"}],
   " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"messageddataplot", ",", "principalcomponentplot"}], 
  "]"}]}], "Input"],

Cell["See everything:", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
  "dataplot", ",", "messageddataplot", ",", "principalcomponentplot"}], 
  "]"}]], "Input"],

Cell["\<\
Each messaged data point is the point on the principal component line closest \
to the corresponding original data point.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.4.a.ii) Comparing the principal component line and the least squares line\
\>", "Subsubsection"],

Cell["\<\
Here's that data from part i) shown with its principal component line:\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", "principalcomponentplot"}], "]"}]], "Input"],

Cell["Throw in a plot of the least squares fit line:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"leastquareline", ",", " ", "x"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"leastsquareline", "[", "x_", "]"}], " ", "=", " ", 
    RowBox[{"Fit", "[", 
     RowBox[{"data", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "x"}], "}"}], ",", "x"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"leastsquarelineplot", " ", "=", " ", 
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"leastsquareline", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "3"}], ",", "6"}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Black"}], "}"}], 
        "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
  "dataplot", ",", "principalcomponentplot", ",", "leastsquarelineplot"}], 
  "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "The least square line and the principal component line are almost the same \
but they are not ",
 StyleBox["exactly ",
  FontWeight->"Bold"],
 "the same. How do you account for this?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "As you probably know from one of the Give It a Try problems in the last \
lesson, the least square line fit minimizes the",
 StyleBox[" sum of the squares of the lengths ",
  FontWeight->"Bold"],
 "of the ",
 StyleBox["vertical line segments ",
  FontColor->RGBColor[1, 0, 0]],
 "indicated below:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"verticallinesegments", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Magenta", ",", 
         RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"data", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"leastsquareline", "[", 
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"data", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"leastsquares", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
   "dataplot", ",", "leastsquarelineplot", ",", "verticallinesegments", " ", 
    ",", 
    RowBox[{"PlotLabel", "->", "\"\<Least square line fit\>\""}]}], 
   "]"}]}]}], "Input"],

Cell[TextData[{
 "The principal component line minimizes the ",
 StyleBox["sum of the squares of the lengths ",
  FontWeight->"Bold"],
 "of the ",
 StyleBox["line segments",
  FontColor->RGBColor[0.0399939, 0.790005, 0.170001]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 "indicated below:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"perplinesegments", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Thickness", "[", "0.015", "]"}], ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"data", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"messageddata", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"principal", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "dataplot", ",", "principalcomponentplot", ",", "perplinesegments", " ", 
    ",", 
    RowBox[{"PlotLabel", "->", "\"\<Principal component line fit\>\""}], ",", 
    " ", 
    RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]}]}], "Input"],

Cell["See both:", "SmallText"],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   StyleBox["leastsquares",
    FontColor->RGBColor[1, 0, 1]], ",", 
   StyleBox["principal",
    FontColor->RGBColor[0.0399939, 0.790005, 0.170001]], ",", 
   RowBox[{"PlotLabel", "->", "\"\<Both\>\""}], ",", " ", 
   RowBox[{"AspectRatio", " ", "->", " ", "Automatic"}]}], "]"}]], "Input"],

Cell[TextData[{
 "The least squares line minimizes the sum of squares of the ",
 StyleBox["vertical distances",
  FontWeight->"Bold"],
 " between the points and the line.\nThe principal component line minimizes \
the sum of squares of the ",
 StyleBox["actual (perpendicular) distances",
  FontWeight->"Bold"],
 " between the points and the line."
}], "SmallText"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["For a few more words on why t",
  FontVariations->{"CompatibilityType"->0}],
 "he principal component line minimizes \nthe sum of squares of the ",
 StyleBox["actual distances",
  FontWeight->"Bold"],
 " between the points and the line,\nclick on the right"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Go back to the centered data:", "SmallText"],

Cell[BoxData[
 RowBox[{"centereddata", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "j", "]"}], "]"}], " ", "-", " ", "mean"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", 
      RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}]], "Input"],

Cell["Start with a cleared perpendicular frame ", "SmallText"],

Cell[TextData[{
 "        ",
 StyleBox["   {perpframe[1],perpframe[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["{{Cos[s],Sin[s]},{Cos[s + ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["\[Pi]", "2"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["],Sin[s + ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["\[Pi]", "2"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]}}",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "Resolve each centered data point into perpendicular components:\n\n         \
 ",
 StyleBox[" (centereddata[[k]].perpframe[1]) ",
  FontColor->RGBColor[0, 0, 1]],
 "perpframe[1] +",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["(centereddata[[k]].perpframe[2]) ",
  FontColor->RGBColor[1, 0, 1]],
 "perpframe[2]",
 ".\n           \nIf you go with the line through {0,0} running in the \
direction of perpframe[1] , then the perpendicular distance from this line to",
 StyleBox[" centereddata[[k]]",
  FontColor->RGBColor[0, 0, 1]],
 " is  |",
 StyleBox["centereddata[[k]].perpframe[2]",
  FontColor->RGBColor[1, 0, 1]],
 "|.\n\nAdd up the sums of the squares of these perpendicular distances:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "perpframe", ",", "sumsquares"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"{", 
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], ",", 
       RowBox[{"perpframe", "[", "2", "]"}]}], "}"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], "=", 
    RowBox[{
     StyleBox["{",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}]}], "}"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[",",
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{
       StyleBox["{",
        FontColor->RGBColor[0, 0, 1]], 
       RowBox[{
        RowBox[{
         StyleBox["Cos",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["[",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{
          StyleBox["s",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox["+",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0, 1]], 
          FractionBox["\[Pi]", "2"]}], 
         StyleBox["]",
          FontColor->RGBColor[0, 0, 1]]}], 
        StyleBox[",",
         FontColor->RGBColor[0, 0, 1]], 
        RowBox[{
         StyleBox["Sin",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["[",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{
          StyleBox["s",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox["+",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[0, 0, 1]], 
          FractionBox["\[Pi]", "2"]}], 
         StyleBox["]",
          FontColor->RGBColor[0, 0, 1]]}]}], 
       StyleBox["}",
        FontColor->RGBColor[0, 0, 1]]}]}], 
     StyleBox["}",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sumsquares", "[", "s_", "]"}], " ", "=", "  ", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], 
    RowBox[{"Length", "[", "data", "]"}]], 
   SuperscriptBox[
    RowBox[{"(", 
     StyleBox[
      RowBox[{
       RowBox[{"centereddata", "[", 
        RowBox[{"[", "k", "]"}], "]"}], ".", 
       RowBox[{"perpframe", "[", "2", "]"}]}],
      FontColor->RGBColor[1, 0, 1]], ")"}], "2"], " "}]}]}], "Input"],

Cell[TextData[{
 "Plot ",
 StyleBox["sumsquares[s]",
  FontColor->RGBColor[0, 0, 1]],
 " as a function of s:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"sumsquares", "[", "s", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", " ", 
      RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Magenta"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<s\>\"", ",", "\"\<sumsquares[s]\>\""}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "->", 
     RowBox[{"1", "/", "2"}]}]}], "]"}], " "}]], "Input"],

Cell["Go after the s that minimizes sumsquares[s]: ", "SmallText"],

Cell[BoxData[
 RowBox[{"ssol", " ", "=", " ", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"sumsquares", "'"}], "[", "s", "]"}], "==", "0"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0.9"}], "}"}]}], "]"}]}]], "Input"],

Cell["\<\
Use this s to set the direction of line through {0,0}  that minimizes the sum \
of the squares of the  perpendicular distances from the line to the centered \
data points:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"mindirection", " ", "=", " ", 
  RowBox[{
   RowBox[{"perpframe", "[", "1", "]"}], "/.", 
   RowBox[{"ssol", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input"],

Cell["The principal component line runs in this direction:", "SmallText"],

Cell[BoxData[
 RowBox[{"principaldirection", " ", "=", 
  RowBox[{"hangerframe", "[", "1", "]"}]}]], "Input"],

Cell[TextData[{
 "They are the same.\nThat's why the principal component line minimizes the \
sum of squares of the ",
 StyleBox["actual perpendicular distances",
  FontWeight->"Bold"],
 " between the points and the line."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.5) Two potential misconceptions:
Some ill-conditioned matrices have small determinants.
When all the stretch factors are small, the matrix might or might not be \
ill-conditioned\
\>", "Subsection",
 CellTags->"MGM.07.T5"],

Cell[CellGroupData[{

Cell["\<\
T.5.a.i) A misconception: Some ill-conditioned matrices have big determinants\
\
\>", "Subsubsection",
 Evaluatable->False],

Cell[CellGroupData[{

Cell[TextData[{
 "Lots of folks out there believe that they can recognize an ill-conditioned \
matrix merely by looking at its determinant. \nThey say: \"The closer the \
determinant is to zero, the more ill-conditioned the matrix is.\"\nWhen ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Fats heard one of them say this, he said \"I call  BS (barn stuff).\" \n\
Why is Fats right?"
}], "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["Look at this 2D stretcher matrix:", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"N", "[", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", "8"], ",", 
        FractionBox["1", 
         SuperscriptBox["10", "5"]]}], "}"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["The SVD stretch factors of A are:", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dim", "=", "2"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "stretch", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"stretch", "[", "k_", "]"}], ":=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   RowBox[{
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], ",", "k"}], 
   "\[RightDoubleBracket]"}]}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"stretch", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "dim"}], "}"}]}], "]"}]}], "Input"],

Cell["\<\
If this surprise you, then you have a lot of reviewing to do.\
\>", "Special5",
 Evaluatable->False],

Cell["\<\
Most folks in the know would say that this matrix is ill-conditioned.
But its determinant is:\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{"Det", "[", "A", "]"}]], "Input"],

Cell["\<\
This shoots down the notion that the size of determinant has anything to do \
with ill-conditioning.\
\>", "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.5.b.i) Another misconception: When all the stretch factors are small, the \
matrix might not be ill-conditioned\
\>", "Subsubsection",
 Evaluatable->False],

Cell["Here is a 4D matrix:", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.005143"}], ",", 
        RowBox[{"-", "0.002319"}], ",", 
        RowBox[{"-", "0.001221"}], ",", 
        RowBox[{"-", "0.000176"}]}], "}"}], ",", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"0.009811", ",", "0.0069168", ",", 
        RowBox[{"-", "0.007034"}], ",", 
        RowBox[{"-", "0.002563"}]}], "}"}], ",", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"0.00183", ",", 
        RowBox[{"-", "0.000383"}], ",", 
        RowBox[{"-", "0.00192"}], ",", "0.008168"}], "}"}], ",", "\n", "  ", 
      RowBox[{"{", 
       RowBox[{"0.", ",", 
        RowBox[{"-", "0.007466"}], ",", 
        RowBox[{"-", "0.008298"}], ",", "0.002618"}], "}"}]}], "}"}]}], ";"}],
   " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Here are the SVD stretch factors of A:", "Text",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
  StyleBox["2",
   FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Why would most clued-in matrix folks say that this matrix is not \
ill-conditioned?\
\>", "Text",
 Evaluatable->False],

Cell["Answer:", "Special1",
 Evaluatable->False],

Cell["\<\
Notice that the SVD stretch factors of A don't differ wildly:\
\>", "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input"],

Cell["Put:", "SmallText",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"1000", " ", "A"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "B", "]"}]}], "Input"],

Cell[TextData[{
 "Look at the stretch factors of ",
 StyleBox[" B = 1000 A:",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText",
 Evaluatable->False],

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValues", "[", "B", "]"}], "\[LeftDoubleBracket]", "2", 
  "\[RightDoubleBracket]"}]], "Input"],

Cell[TextData[{
 StyleBox["Few would say that B is ill-conditioned.\nSo when you go after a \
solution X of \n        ",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontColor->GrayLevel[0]],
 StyleBox["A.X = Y, ",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\nyou can get it by going after a solution of\n        ",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontColor->GrayLevel[0]],
 StyleBox["1000 A.X = 1000 Y",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",\nwhich is the same as going after a solution of\n      ",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontColor->GrayLevel[0]],
 StyleBox["  ",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["B.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["X = 1000 Y.",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\nAnd because B is not ill-conditioned, you avoid the risk of the \
problems of ill-conditioned coefficient matrices.",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontColor->GrayLevel[0]]
}], "Text",
 Evaluatable->False]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.07.T1"->{
  Cell[29479, 802, 125, 4, 61, "Subsection",
   CellTags->"MGM.07.T1"]},
 "MGM.07.T2"->{
  Cell[86778, 2816, 99, 1, 36, "Subsection",
   CellTags->"MGM.07.T2"]},
 "MGM.07.T3"->{
  Cell[118662, 3964, 98, 1, 36, "Subsection",
   CellTags->"MGM.07.T3"]},
 "MGM.07.T4"->{
  Cell[147766, 5005, 171, 5, 86, "Subsection",
   CellTags->"MGM.07.T4"]},
 "MGM.07.T5"->{
  Cell[171017, 5792, 234, 6, 111, "Subsection",
   CellTags->"MGM.07.T5"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.07.T1", 229662, 7106},
 {"MGM.07.T2", 229751, 7109},
 {"MGM.07.T3", 229840, 7112},
 {"MGM.07.T4", 229930, 7115},
 {"MGM.07.T5", 230021, 7118}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 141, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6378, 137, 193, 7, 28, "Special2"],
Cell[6574, 146, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7891, 188, 38, 0, 31, "Subsubsection"],
Cell[7932, 190, 1344, 31, 156, "Input"],
Cell[9279, 223, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9452, 229, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26823, 712, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27070, 723, 39, 0, 35, "Subsubsection"],
Cell[27112, 725, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29479, 802, 125, 4, 61, "Subsection",
 CellTags->"MGM.07.T1"],
Cell[29607, 808, 70, 1, 20, "Special5",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[29702, 813, 75, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[29802, 818, 293, 12, 24, "Text",
 Evaluatable->False],
Cell[30098, 832, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[30149, 835, 291, 10, 49, "SmallText",
 Evaluatable->False],
Cell[30443, 847, 262, 6, 43, "Special5",
 Evaluatable->False],
Cell[30708, 855, 548, 15, 51, "Input"],
Cell[31259, 872, 550, 15, 51, "Input"],
Cell[31812, 889, 549, 15, 51, "Input"],
Cell[32364, 906, 315, 12, 24, "SmallText",
 Evaluatable->False],
Cell[32682, 920, 1200, 37, 111, "Input"],
Cell[33885, 959, 108, 4, 49, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[34042, 969, 87, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[34132, 972, 291, 6, 99, "Text",
 Evaluatable->False],
Cell[34426, 980, 4185, 129, 267, "Input"],
Cell[38614, 1111, 212, 5, 74, "Text",
 Evaluatable->False],
Cell[38829, 1118, 382, 8, 20, "Input"],
Cell[39214, 1128, 213, 5, 74, "Text",
 Evaluatable->False],
Cell[39430, 1135, 382, 8, 20, "Input"],
Cell[39815, 1145, 59, 1, 24, "Text",
 Evaluatable->False],
Cell[39877, 1148, 1876, 63, 177, "Input"],
Cell[41756, 1213, 1877, 63, 177, "Input"],
Cell[43636, 1278, 54, 1, 24, "Text",
 Evaluatable->False],
Cell[43693, 1281, 2665, 85, 340, "Input"],
Cell[CellGroupData[{
Cell[46383, 1370, 323, 8, 149, "Text",
 Evaluatable->False],
Cell[46709, 1380, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[46760, 1383, 164, 4, 49, "SmallText",
 Evaluatable->False],
Cell[46927, 1389, 19981, 731, 531, "Input"],
Cell[66911, 2122, 70, 0, 20, "Special5"],
Cell[66984, 2124, 168, 4, 49, "SmallText",
 Evaluatable->False],
Cell[67155, 2130, 187, 5, 20, "Input"],
Cell[67345, 2137, 196, 5, 20, "Input"],
Cell[67544, 2144, 140, 3, 20, "Input"],
Cell[67687, 2149, 485, 15, 99, "SmallText",
 Evaluatable->False],
Cell[68175, 2166, 1953, 67, 211, "Input"],
Cell[70131, 2235, 66, 1, 24, "SmallText",
 Evaluatable->False],
Cell[70200, 2238, 64, 1, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[70291, 2243, 83, 1, 24, "SmallText"],
Cell[70377, 2246, 137, 3, 20, "Input"],
Cell[70517, 2251, 78, 1, 24, "SmallText",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[70620, 2256, 74, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[70719, 2261, 151, 4, 49, "Text",
 Evaluatable->False],
Cell[70873, 2267, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[70924, 2270, 1195, 40, 191, "SmallText",
 Evaluatable->False],
Cell[72122, 2312, 534, 18, 20, "Input"],
Cell[72659, 2332, 527, 18, 20, "Input"],
Cell[73189, 2352, 536, 18, 20, "Input"],
Cell[73728, 2372, 538, 18, 20, "Input"],
Cell[74269, 2392, 531, 18, 20, "Input"],
Cell[74803, 2412, 540, 18, 20, "Input"],
Cell[75346, 2432, 536, 18, 20, "Input"],
Cell[75885, 2452, 529, 18, 20, "Input"],
Cell[76417, 2472, 538, 18, 20, "Input"],
Cell[76958, 2492, 165, 5, 24, "SmallText"],
Cell[77126, 2499, 2402, 77, 81, "Input"],
Cell[79531, 2578, 217, 6, 49, "SmallText"],
Cell[79751, 2586, 169, 4, 20, "Input"],
Cell[79923, 2592, 54, 0, 24, "SmallText"],
Cell[79980, 2594, 101, 2, 42, "Input"],
Cell[80084, 2598, 204, 5, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[80337, 2609, 79, 1, 31, "Subsubsection",
 Evaluatable->False],
Cell[80419, 2612, 45, 1, 24, "Text",
 Evaluatable->False],
Cell[80467, 2615, 1444, 39, 127, "Input"],
Cell[CellGroupData[{
Cell[81936, 2658, 58, 1, 24, "Text",
 Evaluatable->False],
Cell[81997, 2661, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[82048, 2664, 198, 4, 49, "SmallText",
 Evaluatable->False],
Cell[82249, 2670, 1231, 36, 121, "Input"],
Cell[83483, 2708, 51, 1, 24, "SmallText",
 Evaluatable->False],
Cell[83537, 2711, 203, 4, 49, "SmallText",
 Evaluatable->False],
Cell[83743, 2717, 1231, 36, 121, "Input"],
Cell[84977, 2755, 238, 6, 74, "SmallText",
 Evaluatable->False],
Cell[85218, 2763, 1231, 36, 121, "Input"],
Cell[86452, 2801, 97, 1, 24, "SmallText",
 Evaluatable->False],
Cell[86552, 2804, 165, 5, 20, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[86778, 2816, 99, 1, 36, "Subsection",
 CellTags->"MGM.07.T2"],
Cell[CellGroupData[{
Cell[86902, 2821, 70, 0, 31, "Subsubsection"],
Cell[86975, 2823, 53, 0, 24, "Text"],
Cell[87031, 2825, 445, 14, 73, "Input"],
Cell[87479, 2841, 64, 0, 24, "Text"],
Cell[87546, 2843, 253, 7, 20, "Input"],
Cell[87802, 2852, 58, 0, 24, "Text"],
Cell[87863, 2854, 542, 16, 106, "Input"],
Cell[88408, 2872, 69, 0, 24, "Text"],
Cell[88480, 2874, 253, 7, 20, "Input"],
Cell[88736, 2883, 62, 0, 24, "Text"],
Cell[88801, 2885, 1220, 35, 123, "Input"],
Cell[90024, 2922, 69, 0, 24, "Text"],
Cell[90096, 2924, 253, 7, 20, "Input"],
Cell[CellGroupData[{
Cell[90374, 2935, 238, 5, 74, "Text"],
Cell[90615, 2942, 27, 0, 23, "Special1"],
Cell[90645, 2944, 157, 3, 49, "SmallText"],
Cell[90805, 2949, 217, 5, 20, "Input"],
Cell[91025, 2956, 217, 5, 20, "Input"],
Cell[91245, 2963, 217, 5, 20, "Input"],
Cell[91465, 2970, 413, 8, 174, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91927, 2984, 83, 1, 31, "Subsubsection"],
Cell[92013, 2987, 94, 2, 24, "Text"],
Cell[92110, 2991, 1931, 61, 188, "Input"],
Cell[CellGroupData[{
Cell[94066, 3056, 72, 0, 24, "Text"],
Cell[94141, 3058, 27, 0, 23, "Special1"],
Cell[94171, 3060, 93, 2, 24, "SmallText"],
Cell[94267, 3064, 4801, 171, 201, "Input"],
Cell[99071, 3237, 111, 3, 24, "SmallText"],
Cell[99185, 3242, 142, 4, 20, "Input"],
Cell[99330, 3248, 35, 0, 24, "SmallText"],
Cell[99368, 3250, 339, 11, 49, "Input"],
Cell[99710, 3263, 144, 4, 20, "Input"],
Cell[99857, 3269, 144, 4, 20, "Input"],
Cell[100004, 3275, 151, 4, 74, "SmallText"],
Cell[100158, 3281, 772, 26, 67, "Input"],
Cell[100933, 3309, 490, 16, 49, "Input"],
Cell[101426, 3327, 490, 16, 49, "Input"],
Cell[101919, 3345, 105, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[102073, 3354, 82, 1, 31, "Subsubsection"],
Cell[102158, 3357, 95, 2, 24, "Text"],
Cell[102256, 3361, 1088, 34, 128, "Input"],
Cell[CellGroupData[{
Cell[103369, 3399, 71, 0, 24, "Text"],
Cell[103443, 3401, 27, 0, 23, "Special1"],
Cell[103473, 3403, 48, 0, 24, "SmallText"],
Cell[103524, 3405, 4563, 164, 171, "Input"],
Cell[108090, 3571, 61, 0, 24, "SmallText"],
Cell[108154, 3573, 180, 4, 20, "Input"],
Cell[108337, 3579, 114, 3, 24, "SmallText"],
Cell[108454, 3584, 334, 10, 36, "Input"],
Cell[108791, 3596, 181, 5, 99, "SmallText"],
Cell[108975, 3603, 198, 4, 49, "SmallText"],
Cell[109176, 3609, 380, 12, 68, "Input"],
Cell[109559, 3623, 29, 0, 24, "SmallText"],
Cell[109591, 3625, 63, 1, 20, "Input"],
Cell[109657, 3628, 90, 3, 49, "SmallText"],
Cell[109750, 3633, 126, 3, 20, "Input"],
Cell[109879, 3638, 41, 0, 24, "SmallText"],
Cell[109923, 3640, 542, 18, 49, "Input"],
Cell[110468, 3660, 54, 0, 24, "SmallText"],
Cell[110525, 3662, 102, 3, 20, "Input"],
Cell[110630, 3667, 96, 3, 49, "SmallText"],
Cell[110729, 3672, 518, 17, 49, "Input"],
Cell[111250, 3691, 99, 3, 20, "Input"],
Cell[111352, 3696, 101, 2, 24, "SmallText"],
Cell[111456, 3700, 81, 2, 20, "Input"],
Cell[111540, 3704, 435, 10, 124, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[112024, 3720, 79, 0, 31, "Subsubsection"],
Cell[112106, 3722, 99, 2, 24, "Text"],
Cell[112208, 3726, 820, 26, 98, "Input"],
Cell[CellGroupData[{
Cell[113053, 3756, 71, 0, 24, "Text"],
Cell[113127, 3758, 27, 0, 23, "Special1"],
Cell[113157, 3760, 48, 0, 24, "SmallText"],
Cell[113208, 3762, 4563, 164, 171, "Input"],
Cell[117774, 3928, 61, 0, 24, "SmallText"],
Cell[117838, 3930, 180, 4, 20, "Input"],
Cell[118021, 3936, 114, 3, 24, "SmallText"],
Cell[118138, 3941, 334, 10, 36, "Input"],
Cell[118475, 3953, 126, 4, 74, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[118662, 3964, 98, 1, 36, "Subsection",
 CellTags->"MGM.07.T3"],
Cell[CellGroupData[{
Cell[118785, 3969, 55, 0, 31, "Subsubsection"],
Cell[118843, 3971, 161, 5, 33, "Text"],
Cell[119007, 3978, 950, 26, 102, "Input"],
Cell[CellGroupData[{
Cell[119982, 4008, 169, 4, 74, "Text"],
Cell[120154, 4014, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[120205, 4017, 96, 2, 24, "SmallText"],
Cell[120304, 4021, 168, 4, 45, "Input"],
Cell[120475, 4027, 127, 3, 49, "SmallText"],
Cell[120605, 4032, 984, 34, 51, "Input"],
Cell[121592, 4068, 199, 5, 23, "Special2"],
Cell[121794, 4075, 912, 32, 66, "Input"],
Cell[122709, 4109, 190, 5, 23, "Special2"],
Cell[122902, 4116, 766, 25, 66, "Input"],
Cell[123671, 4143, 194, 5, 23, "Special2"],
Cell[123868, 4150, 55, 0, 24, "SmallText"],
Cell[123926, 4152, 679, 24, 36, "Input"],
Cell[124608, 4178, 34, 0, 24, "SmallText"],
Cell[124645, 4180, 561, 18, 36, "Input"],
Cell[125209, 4200, 233, 4, 74, "SmallText"],
Cell[125445, 4206, 106, 3, 20, "Input"],
Cell[125554, 4211, 116, 3, 24, "SmallText"],
Cell[125673, 4216, 1915, 61, 111, "Input"],
Cell[127591, 4279, 134, 3, 49, "SmallText"],
Cell[127728, 4284, 558, 15, 36, "Input"],
Cell[128289, 4301, 63, 0, 24, "Text"],
Cell[128355, 4303, 278, 7, 36, "Input"],
Cell[128636, 4312, 36, 0, 24, "Text"],
Cell[128675, 4314, 61, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[128785, 4320, 56, 0, 31, "Subsubsection"],
Cell[128844, 4322, 31, 0, 24, "Text"],
Cell[128878, 4324, 357, 12, 73, "Input"],
Cell[129238, 4338, 42, 0, 24, "Text"],
Cell[129283, 4340, 244, 7, 20, "Input"],
Cell[CellGroupData[{
Cell[129552, 4351, 353, 10, 99, "Text"],
Cell[129908, 4363, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[129959, 4366, 156, 3, 49, "SmallText"],
Cell[130118, 4371, 2023, 53, 186, "Input"],
Cell[132144, 4426, 97, 2, 24, "SmallText"],
Cell[132244, 4430, 2514, 91, 96, "Input"],
Cell[134761, 4523, 228, 8, 12, "Special2"],
Cell[134992, 4533, 2514, 91, 96, "Input"],
Cell[137509, 4626, 228, 8, 12, "Special2"],
Cell[137740, 4636, 64, 0, 24, "SmallText"],
Cell[137807, 4638, 647, 23, 36, "Input"],
Cell[138457, 4663, 34, 0, 24, "SmallText"],
Cell[138494, 4665, 631, 20, 36, "Input"],
Cell[139128, 4687, 495, 15, 20, "Input"],
Cell[139626, 4704, 250, 5, 74, "SmallText"],
Cell[139879, 4711, 106, 3, 20, "Input"],
Cell[139988, 4716, 116, 3, 24, "SmallText"],
Cell[140107, 4721, 1796, 55, 111, "Input"],
Cell[141906, 4778, 82, 1, 24, "SmallText"],
Cell[141991, 4781, 284, 7, 36, "Input"],
Cell[142278, 4790, 56, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[142383, 4796, 72, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[142480, 4800, 72, 0, 24, "Text"],
Cell[142555, 4802, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[142606, 4805, 150, 4, 74, "SmallText"],
Cell[142759, 4811, 775, 24, 96, "Input"],
Cell[143537, 4837, 764, 25, 86, "Input"],
Cell[144304, 4864, 386, 11, 36, "Input"],
Cell[144693, 4877, 628, 21, 36, "Input"],
Cell[145324, 4900, 73, 0, 24, "SmallText"],
Cell[145400, 4902, 109, 3, 20, "Input"],
Cell[145512, 4907, 60, 0, 24, "SmallText"],
Cell[145575, 4909, 428, 17, 74, "SmallText"],
Cell[146006, 4928, 421, 16, 50, "SmallText"],
Cell[146430, 4946, 523, 19, 75, "SmallText"],
Cell[146956, 4967, 415, 15, 50, "SmallText"],
Cell[147374, 4984, 136, 4, 12, "Special2"],
Cell[147513, 4990, 192, 8, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[147766, 5005, 171, 5, 86, "Subsection",
 CellTags->"MGM.07.T4"],
Cell[CellGroupData[{
Cell[147962, 5014, 62, 0, 31, "Subsubsection"],
Cell[148027, 5016, 44, 0, 24, "Text"],
Cell[148074, 5018, 1442, 41, 96, "Input"],
Cell[149519, 5061, 87, 2, 24, "Text"],
Cell[149609, 5065, 166, 3, 12, "Special2"],
Cell[149778, 5070, 947, 28, 98, "Input"],
Cell[150728, 5100, 596, 19, 43, "Special2"],
Cell[151327, 5121, 71, 0, 24, "Text"],
Cell[151401, 5123, 289, 8, 20, "Input"],
Cell[151693, 5133, 1618, 49, 186, "Input"],
Cell[CellGroupData[{
Cell[153336, 5186, 177, 3, 49, "Text"],
Cell[153516, 5191, 27, 0, 23, "Special1"],
Cell[153546, 5193, 137, 3, 49, "SmallText"],
Cell[153686, 5198, 3031, 113, 126, "Input"],
Cell[156720, 5313, 175, 3, 49, "SmallText"],
Cell[156898, 5318, 430, 13, 51, "Input"],
Cell[157331, 5333, 64, 0, 24, "SmallText"],
Cell[157398, 5335, 316, 9, 36, "Input"],
Cell[157717, 5346, 63, 0, 24, "SmallText"],
Cell[157783, 5348, 645, 17, 66, "Input"],
Cell[158431, 5367, 36, 0, 24, "SmallText"],
Cell[158470, 5369, 139, 4, 20, "Input"],
Cell[158612, 5375, 150, 3, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[158811, 5384, 108, 2, 31, "Subsubsection"],
Cell[158922, 5388, 94, 2, 24, "Text"],
Cell[159019, 5392, 108, 2, 20, "Input"],
Cell[159130, 5396, 62, 0, 24, "Text"],
Cell[159195, 5398, 1028, 32, 96, "Input"],
Cell[CellGroupData[{
Cell[160248, 5434, 213, 6, 49, "Text"],
Cell[160464, 5442, 27, 0, 23, "Special1"],
Cell[160494, 5444, 332, 9, 74, "SmallText"],
Cell[160829, 5455, 1272, 35, 96, "Input"],
Cell[162104, 5492, 313, 10, 49, "SmallText"],
Cell[162420, 5504, 1062, 29, 81, "Input"],
Cell[163485, 5535, 30, 0, 24, "SmallText"],
Cell[163518, 5537, 339, 8, 36, "Input"],
Cell[163860, 5547, 364, 9, 99, "SmallText"],
Cell[CellGroupData[{
Cell[164249, 5560, 347, 9, 35, "Special2"],
Cell[164599, 5571, 50, 0, 24, "SmallText"],
Cell[164652, 5573, 326, 9, 20, "Input"],
Cell[164981, 5584, 62, 0, 24, "SmallText"],
Cell[165046, 5586, 465, 17, 30, "SmallText"],
Cell[165514, 5605, 741, 19, 249, "SmallText"],
Cell[166258, 5626, 2784, 92, 116, "Input"],
Cell[169045, 5720, 126, 5, 24, "SmallText"],
Cell[169174, 5727, 612, 18, 51, "Input"],
Cell[169789, 5747, 66, 0, 24, "SmallText"],
Cell[169858, 5749, 262, 8, 20, "Input"],
Cell[170123, 5759, 200, 4, 49, "SmallText"],
Cell[170326, 5765, 188, 5, 20, "Input"],
Cell[170517, 5772, 73, 0, 24, "SmallText"],
Cell[170593, 5774, 109, 2, 20, "Input"],
Cell[170705, 5778, 239, 6, 74, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[171017, 5792, 234, 6, 111, "Subsection",
 CellTags->"MGM.07.T5"],
Cell[CellGroupData[{
Cell[171276, 5802, 133, 4, 31, "Subsubsection",
 Evaluatable->False],
Cell[CellGroupData[{
Cell[171434, 5810, 424, 9, 149, "Text",
 Evaluatable->False],
Cell[171861, 5821, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[171912, 5824, 75, 1, 24, "SmallText",
 Evaluatable->False],
Cell[171990, 5827, 357, 12, 60, "Input"],
Cell[172350, 5841, 75, 1, 24, "SmallText",
 Evaluatable->False],
Cell[172428, 5844, 609, 19, 66, "Input"],
Cell[173040, 5865, 110, 3, 20, "Special5",
 Evaluatable->False],
Cell[173153, 5870, 143, 4, 49, "SmallText",
 Evaluatable->False],
Cell[173299, 5876, 56, 1, 20, "Input"],
Cell[173358, 5879, 150, 4, 49, "SmallText",
 Evaluatable->False]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[173557, 5889, 167, 4, 52, "Subsubsection",
 Evaluatable->False],
Cell[173727, 5895, 57, 1, 24, "Text",
 Evaluatable->False],
Cell[173787, 5898, 896, 25, 96, "Input"],
Cell[174686, 5925, 75, 1, 24, "Text",
 Evaluatable->False],
Cell[174764, 5928, 180, 4, 20, "Input"],
Cell[CellGroupData[{
Cell[174969, 5936, 128, 4, 24, "Text",
 Evaluatable->False],
Cell[175100, 5942, 48, 1, 23, "Special1",
 Evaluatable->False],
Cell[175151, 5945, 111, 3, 24, "SmallText",
 Evaluatable->False],
Cell[175265, 5950, 137, 3, 20, "Input"],
Cell[175405, 5955, 46, 1, 24, "SmallText",
 Evaluatable->False],
Cell[175454, 5958, 163, 5, 36, "Input"],
Cell[175620, 5965, 147, 5, 24, "SmallText",
 Evaluatable->False],
Cell[175770, 5972, 137, 3, 20, "Input"],
Cell[175910, 5977, 1195, 38, 224, "Text",
 Evaluatable->False]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
