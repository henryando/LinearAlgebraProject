(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    248530,       8015]
NotebookOptionsPosition[    178195,       6425]
NotebookOutlinePosition[    231492,       7542]
CellTagsIndexPosition[    231268,       7532]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.08 Subspaces, Spans , Dimension, Linear Independence, Basis, \
Orthonormal Basis\n",
 StyleBox["TUTORIALS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1) Orthonormal bases are bases consisting of mutually perpendicular unit \
vectors - they are perpendicular frames.
The advantages and pleasures of having an orthonormal basis.
Getting orthonormal bases via SVD hanger frames for the spanner matrix\
\>", "Subsection",
 CellTags->"MGM.08.T1"],

Cell[TextData[{
 "Most folks say that a basis for a subspace S of nD is any linearly \
independent spanning set\n           ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\nfor S. \nThe same folks say that a basis  ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " for a subspace S of nD is an ",
 StyleBox["orthonormal basis",
  FontWeight->"Bold"],
 " for S if \n            ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\nis also a perpendicular frame (This is the same as saying.\n             ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ".", 
    RowBox[{"spanner", "[", "i", "]"}]}], "=", "1"}]]],
 " for ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", "2", ",", 
   RowBox[{"...", "k"}]}]]],
 "\nand\n             ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ".", 
    RowBox[{"spanner", "[", "j", "]"}]}], "=", "0"}]]],
 " for ",
 Cell[BoxData[
  RowBox[{"i", "\[NotEqual]", "j"}]]],
 ".)"
}], "Text"],

Cell[CellGroupData[{

Cell["T.1.a.i) Life in the orthonormal world is good", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
List some of the advantages you get when have an orthonormal basis for a \
subspace S of kD.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Everything gets really easy.
Some examples:\
\>", "SmallText"],

Cell["Example 1: Easy calculation of basis coefficients", "Subsubsection"],

Cell[TextData[{
 "If  ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " is an orthonormal basis of a subspace S of nD, then every X in S is of the \
form\n         ",
 Cell[BoxData[
  RowBox[{"X", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"x", "[", "i", "]"}], " ", 
     RowBox[{"spanner", "[", "i", "]"}]}]}]}]]],
 "  \n with  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"x", "[", "i", "]"}], "=", 
   RowBox[{"X", ".", 
    RowBox[{"spanner", "[", "i", "]"}]}]}]]],
 ". "
}], "SmallText"],

Cell["\<\
No need to fool around with PseudoInverse of the Spanner Matrix..\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Example 2: Easy calculation closest vectors", "Subsubsection"],

Cell[TextData[{
 "If  ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " is an orthonormal basis of a subspace S of nD and X is a given vector in \
nD, then the vector in S closest to X is\n         ",
 Cell[BoxData[
  RowBox[{"XSclosest", "=", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "1"}], "k"], 
    RowBox[{
     RowBox[{"x", "[", "i", "]"}], " ", 
     RowBox[{"spanner", "[", "i", "]"}]}]}]}]]],
 "  \n with  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"x", "[", "i", "]"}], "=", 
   RowBox[{"X", ".", 
    RowBox[{"spanner", "[", "i", "]"}]}]}]]],
 ". "
}], "SmallText"],

Cell["\<\
No need to fool around with the Spanner Matrix or the Sprojection matrix.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Example 3: Easy calculation Sprojection matrix", "Subsubsection"],

Cell[TextData[{
 "If  ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " is an orthonormal basis of a subspace S of nD then you can go directly to \
the Sprojection matrix\n            ",
 Cell[BoxData[
  RowBox[{"Sprojection", "=", 
   RowBox[{"hanger", ".", "aligner"}]}]]],
 "\nwhere\n        ",
 Cell[BoxData[
  RowBox[{"aligner", " ", "="}]]],
 "  ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " \nand\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"hanger", " ", "="}], " "}]]],
 " ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{"spanner", "[", "1", "]"}], ",", 
     RowBox[{"spanner", "[", "2", "]"}], ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", 
     RowBox[{"spanner", "[", "k", "]"}]}], "}"}], "t"]]],
 "\nso that \n          ",
 Cell[BoxData[
  RowBox[{"spanner", "[", "i", "]"}]]],
 " is the ith horizontal row of aligner\nand\n         ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"spanner", "[", "j", "]"}]}]]],
 " is the jth vertical column of hanger."
}], "SmallText"],

Cell["\<\
No need to fool around with the Spanner Matrix or the Sprojection matrix.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Life in the orthonormal world is about as good as it gets.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1.a.ii) What happens when you don't have an orthonormal basis\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Do those nice clean formulas discussed in part i) work for a given basis that \
is not an orthonormal basis?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["No way.", "Accident"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1.b) Using SVD analysis of the Spanner Matrix to get an orthonormal basis\
\>", "Subsubsection"],

Cell["\<\
A subspace S of 5D is defined by the following given spanning set:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"3.43", ",", 
      RowBox[{"-", "0.57"}], ",", "2.19", ",", 
      RowBox[{"-", "0.94"}], ",", "1.28"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.97", ",", "1.29", ",", "0.83", ",", "5.23", ",", "1.26"}], 
     "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.14"}], ",", "3.08", ",", 
      RowBox[{"-", "5.00"}], ",", 
      RowBox[{"-", "1.97"}], ",", 
      RowBox[{"-", "0.96"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.68"}], ",", "1.22", ",", 
      RowBox[{"-", "3.64"}], ",", 
      RowBox[{"-", "8.14"}], ",", 
      RowBox[{"-", "0.94"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "5", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"2.71", ",", 
      RowBox[{"-", "2.51"}], ",", "2.81", ",", "2.91", ",", 
      RowBox[{"-", "0.32"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Use SVD analysis of the corresponding spanner matrix to come up with an \
orthonormal basis for S.
Use your orthonormal basis to build the Sprojection matrix.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The hangerframe for the Spanner Matrix is a  perpendicular frame (orthonormal \
basis) that spans S. 
This hangerframe is guaranteed to be an orthonormal basis of S.
Here it is:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Sdim", "=", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], 
      "\[LeftDoubleBracket]", 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"ortho", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox["ortho",
    FontColor->RGBColor[0, 0, 1]], "[", "k_", "]"}], ":=", 
  RowBox[{
   RowBox[{"SingularValues", "[", 
    StyleBox["SpannerMatrix",
     FontColor->RGBColor[0, 0, 1]], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     StyleBox["1",
      FontColor->RGBColor[1, 0, 0]], ",", "k"}], "]"}], "]"}]}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ortho", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "Sdim"}], "}"}]}], "]"}]}], "Input"],

Cell["\<\
You can use this to make the Sprojection very quickly from rank one matrices\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"rankOne", "[", "k_", "]"}],
     FontColor->RGBColor[0, 0, 1]], " ", ":=", " ", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       StyleBox[
        RowBox[{"ortho", "[", "k", "]"}],
        FontColor->RGBColor[0, 0, 1]], "}"}], "]"}], ".", 
     RowBox[{"{", 
      StyleBox[
       RowBox[{"ortho", "[", "k", "]"}],
       FontColor->RGBColor[0, 0, 1]], "}"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sum", "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], 
      StyleBox["Sdim",
       FontColor->RGBColor[0, 0, 1]]], 
     StyleBox[
      RowBox[{"rankOne", "[", "k", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "sum", "]"}]}], "Input"],

Cell["Or you can make the Sprojection matrix directly from SVD:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"aligner", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ortho", "[", "1", "]"}], ",", 
      RowBox[{"ortho", "[", "2", "]"}], ",", 
      RowBox[{"ortho", "[", "3", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hanger", " ", "=", " ", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ortho", "[", "1", "]"}], ",", 
       RowBox[{"ortho", "[", "2", "]"}], ",", 
       RowBox[{"ortho", "[", "3", "]"}]}], "}"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"SVDSprojection", " ", "=", " ", 
     RowBox[{"hanger", ".", "aligner"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"\t\t", 
  RowBox[{"MatrixForm", "[", "SVDSprojection", "]"}]}]}], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", "=", 
    RowBox[{"SpannerMatrix", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", "Sprojection", "]"}]}], "Input"],

Cell["Nailed it.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.2)  ",
 StyleBox["Vivid Graphics",
  FontColor->RGBColor[1, 0, 0]],
 ": \nAlien plots coming from projections of highD surfaces onto  three \
dimensional subspaces"
}], "Subsection",
 CellTags->"MGM.08.T2"],

Cell["\<\
If the plots you are about to see strike your fancy in a big way, get the book 
\"Beyond the Third Dimension\" by Thomas F. Banchoff 
(Scientific American Library, 1996).\
\>", "Special5"],

Cell[CellGroupData[{

Cell["\<\
T.2.a.i) Looking at a three dimensional photo of a 4D surface\
\>", "Subsubsection"],

Cell["Here's a function f[s,t]:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"f", ",", "s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cos", "[", "s", "]"}], ",", 
    RowBox[{"Sin", "[", "s", "]"}], ",", 
    RowBox[{"Cos", "[", "t", "]"}], ",", 
    RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}]}], "Input"],

Cell["Note the four slots.", "Special5"],

Cell[CellGroupData[{

Cell["\<\
If you could plot this function, the result would be a surface in 4D which \
some advanced folks call by the name \"Clifford Torus.\" 
Unfortunately, you can't plot this surface, but you can go with any three \
dimensional subspace S of 4D and plot the projection of this 4D surface onto S.
Just how do you go about doing this?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
You do this by going with a spanning set for your three dimensional subspace \
S or 4D.. 
Here's a sample:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.327337", ",", 
      RowBox[{"-", "0.121305"}], ",", "0.39909", ",", "0.397503"}], "}"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.871239", ",", "0.659994", ",", 
      RowBox[{"-", "0.659799"}], ",", "0.497028"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.028996", ",", "0.684016", ",", "0.746671", ",", 
      RowBox[{"-", "0.391136"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], "Input"],

Cell["\<\
Next you go from this spanning set for S to an orthonormal basis for S\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"ortho", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ortho", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "k"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"ortho", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "To plot the projection of the surface onto S, you plot\n\t",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"s", ",", "t"}], "]"}], ".", 
     RowBox[{"ortho", "[", "1", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"s", ",", "t"}], "]"}], ".", 
     RowBox[{"ortho", "[", "2", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"s", ",", "t"}], "]"}], ".", 
     RowBox[{"ortho", "[", "3", "]"}]}]}], "}"}]],
  FontSize->18],
 "\nand label the corresponding axes accordingly.\nHere you go:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"surfaceprojectionplotter", ",", "f", ",", "s", ",", "t"}], "]"}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "s", "]"}], ",", 
      RowBox[{"Sin", "[", "s", "]"}], ",", 
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"surfaceprojectionplotter", "[", 
      RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"ortho", "[", "1", "]"}]}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"ortho", "[", "2", "]"}]}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"ortho", "[", "3", "]"}]}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"surfaceprojectionplotter", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<ortho[1]\>\"", ",", "\"\<ortho[2]\>\"", ",", "\"\<ortho[3]\>\""}], 
      "}"}]}], ",", "\n", 
    RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}], " "}]}], "Input"],

Cell["How does that grab you, sports fans", "SmallText"],

Cell["\<\
See what happens when you project onto random three dimensional subspaces of \
4D:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spanners", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"ortho", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ortho", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "k"}], "]"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"surfaceprojectionplotter", ",", "f", ",", "s", ",", "t"}], "]"}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "s", "]"}], ",", 
      RowBox[{"Sin", "[", "s", "]"}], ",", 
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"surfaceprojectionplotter", "[", 
      RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"ortho", "[", "1", "]"}]}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"ortho", "[", "2", "]"}]}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"ortho", "[", "3", "]"}]}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"surfaceprojectionplotter", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<ortho[1]\>\"", ",", "\"\<ortho[2]\>\"", ",", "\"\<ortho[3]\>\""}], 
      "}"}]}], ",", "\n", 
    RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}], " "}]}], "Input"],

Cell["\<\
Rerun several times and if you're on a fast machine rerun many, many times.\
\>", "Special5"],

Cell["\<\
Each of these views is a three dimensional slice of a 4D surface.
Almost as good as the Hubble telescope.
\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.2.a.ii) Why it's just a little bit interesting", "Subsubsection"],

Cell["\<\
Take the function f[s,t] used to generate the plots in parts i and ii):\
\>", "Text"],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"s", ",", "t"}], "]"}]], "Input"],

Cell["Look at:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"s", ",", "t"}], "]"}], ".", 
  RowBox[{"f", "[", 
   RowBox[{"s", ",", "t"}], "]"}]}]], "Input"],

Cell["Apply trig identities:", "Text"],

Cell[BoxData[
 RowBox[{"TrigExpand", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ".", 
   RowBox[{"f", "[", 
    RowBox[{"s", ",", "t"}], "]"}]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "This tells you that no matter what s and t are, you are guaranteed that \
f[s,t] is on the surface of the 4D sphere of radius",
 Cell[BoxData[
  RowBox[{" ", 
   SqrtBox["2"]}]]],
 " centered at {0,0,0,0}.\nWhy is this fact just a little bit mind-boggling?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "This tells you that all the plots produced above are projections of pieces \
of the 4D sphere of radius ",
 Cell[BoxData[
  SqrtBox["2"]]],
 " centered at {0,0,0,0} onto  three dimensional subspace of 4D. \nThis might \
make you expect that these projections would look like pieces of \
spheres.-after all projections of pieces of spheres in 3D onto two \
dimensional subspaces of 3D look like pieces of circles.\nBut they don't: "
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"spanners", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"spanner", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"ortho", ",", "k"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ortho", "[", "k_", "]"}], ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "k"}], "]"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"surfaceprojectionplotter", ",", "f", ",", "s", ",", "t"}], "]"}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "s", "]"}], ",", 
      RowBox[{"Sin", "[", "s", "]"}], ",", 
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     RowBox[{"surfaceprojectionplotter", "[", 
      RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", "\n", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"ortho", "[", "1", "]"}]}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"ortho", "[", "2", "]"}]}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ".", 
        RowBox[{"ortho", "[", "3", "]"}]}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"surfaceprojectionplotter", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{
      "\"\<ortho[1]\>\"", ",", "\"\<ortho[2]\>\"", ",", "\"\<ortho[3]\>\""}], 
      "}"}]}], ",", "\n", 
    RowBox[{"ViewPoint", "->", "CMView"}]}], "]"}], " "}]}], "Input"],

Cell["Moral:  4D spheres are alien beasts but they are real. ", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3) The perpendicular complement ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 " of a subspace S of kD is the subspace of kD consisting of all of all Y \
that are perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ".\nThe perpendicular complement ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 " of a subspace ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 " is also the subspace of kD consisting of all hits with   ",
 StyleBox["Identity - Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 "\nHow to take a kD vector Y and put it in the form  ",
 StyleBox["Y = YS + Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " with ",
 StyleBox["YS ",
  FontColor->RGBColor[0, 0, 1]],
 "in S , ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " and  \n                           ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"||", "Y", "||"}],
   FontSize->12]]],
 " = ",
 Cell[BoxData[
  StyleBox[
   SqrtBox[
    RowBox[{" ", 
     RowBox[{"||", "YS", 
      SuperscriptBox["||", "2"], " ", 
      RowBox[{"+", "  ", 
       RowBox[{"||", 
        SuperscriptBox["YS", 
         StyleBox["\[UpTee]",
          FontSize->18]], 
        SuperscriptBox["||", "2"]}]}]}]}]],
   FontSize->12]],
  FontSize->12],
 "\nExtending a basis of subspace of kD to a basis of all of kD"
}], "Subsection",
 CellTags->"MGM.08.T3"],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.a.i) The perpendicular complement ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 " of a subspace ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 " of kD is the subspace of kD consisting of all hits with \n                 \
 ",
 StyleBox["Identity - Sprojection",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[TextData[{
 "The perpendicular complement ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 " of a subspace of kD is the subspace of kD consisting of all hits with \n   \
               ",
 StyleBox["Identity - Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 ". \nA handy spanning set for ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 " is the set of vertical columns of\n                  ",
 StyleBox["Identity - Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 ". \n                  \nHere's a spanning set for a subspace of 3D:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.2", ",", "0.9", ",", "0"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.0"}], ",", "1.2", ",", 
      RowBox[{"-", "1.5"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], " "}]}], "Input",
 AspectRatioFixed->True],

Cell["And a plot of part of this subspace:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"h", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"k", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planeplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"s", " ", 
        RowBox[{"spanner", "[", "1", "]"}]}], "+", 
       RowBox[{"t", " ", 
        RowBox[{"spanner", "[", "2", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"-", "h"}], ",", "h"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "k"}], ",", "k"}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Slabel", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<S\>\"", ",", 
         RowBox[{
          RowBox[{"0.5", " ", 
           RowBox[{"spanner", "[", "1", "]"}]}], "-", 
          RowBox[{"0.5", " ", 
           RowBox[{"spanner", "[", "2", "]"}]}], " ", "+", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0.3"}], "}"}]}]}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Splot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"planeplot", ",", "Slabel", ",", 
    RowBox[{"Axes3D", "[", "2", "]"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Piece of S\>\""}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Throw some of the members of ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 " into this plot and describe what you see."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Set up the Sprojection matrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", " ", "=", " ", 
    RowBox[{"SpannerMatrix", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Sprojection", "]"}]}], "Input"],

Cell[TextData[{
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 " consists of all hits with ",
 StyleBox["Identity - Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 ". \nSee some::"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", " ", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"point", "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"randomhits", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.02", "]"}], ",", "Orange", ",", 
         RowBox[{"Point", "[", 
          RowBox[{
           StyleBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"IdentityMatrix", "[", "3", "]"}], " ", "-", " ", 
              "Sprojection"}], ")"}],
            FontColor->RGBColor[0, 0, 1]], ".", 
           RowBox[{"point", "[", "k", "]"}]}], "]"}]}], "}"}], "]"}], 
      StyleBox[",",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "300"}], "}"}],
       FontColor->GrayLevel[0]]}], 
     StyleBox["]",
      FontColor->GrayLevel[0]]}]}], 
   StyleBox[";",
    FontColor->GrayLevel[0]]}], 
  StyleBox[" ",
   FontColor->GrayLevel[0]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"label", " ", "=", " ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Text", "[", 
        RowBox[{
        "\"\<\!\(\*SuperscriptBox[\(S\), \(\[UpTee]\)]\)\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", "3", "]"}], " ", "-", " ", 
            "Sprojection"}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"1.1", 
            RowBox[{"{", 
             RowBox[{"a", ",", "a", ",", "a"}], "}"}]}], ")"}]}]}], "]"}]}], 
      "}"}], "]"}]}], ";"}], " ", "\n"}], "\[IndentingNewLine]", 
 RowBox[{"both", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"Splot", ",", "randomhits", ",", "label", ",", 
    RowBox[{
    "PlotLabel", "->", 
     "\"\<S and \!\(\*SuperscriptBox[\(S\), \(\[UpTee]\)]\)\>\""}]}], "]"}], 
  " "}]}], "Input"],

Cell["Look at everything from a view point parallel to S:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"both", ",", 
    RowBox[{"ViewPoint", "->", 
     RowBox[{"12", " ", 
      RowBox[{"spanner", "[", "1", "]"}]}]}], ",", 
    RowBox[{"Axes", "->", "False"}]}], "]"}], " "}]], "Input"],

Cell[TextData[{
 "The vectors in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 " are perpendicular to everything in S.\nIf you want to see why this is \
automatic, then go on."
}], "SmallText"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.a.ii)  If ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 ",  then ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this:\nGiven a subspace",
 StyleBox[" S ",
  FontColor->RGBColor[0, 0, 1]],
 "of kD and a vector ",
 StyleBox["X",
  FontColor->RGBColor[0, 0, 1]],
 " in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 ", then it's automatic that ",
 StyleBox["X",
  FontColor->RGBColor[0, 0, 1]],
 "  is perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with an X in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 ". This means X is a hit with ",
 StyleBox["Identity - Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 ".\nIn other words, there is guaranteed to be a Y in kD with\n             X \
= ",
 StyleBox["(Identity - Sprojection)",
  FontColor->RGBColor[0, 0, 1]],
 ".Y = Y",
 StyleBox[" - Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 ".Y\nRemember this: ",
 StyleBox["Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 "Y is the vector in S that is",
 StyleBox[" closest",
  FontWeight->"Bold"],
 " to Y. \nAnd because perpendicular distance is the closest distance,\n      \
       X = Y - ",
 StyleBox["Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 ".Y \nis perpendicular to everything in S."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.a.iii)  You can decompose ",
 StyleBox["Y = YS + Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " with ",
 StyleBox["YS ",
  FontColor->RGBColor[0, 0, 1]],
 "in S , ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " and  \n                           ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"||", "Y", "||"}],
   FontSize->12]]],
 " = ",
 Cell[BoxData[
  StyleBox[
   SqrtBox[
    RowBox[{" ", 
     RowBox[{"||", "YS", 
      SuperscriptBox["||", "2"], " ", 
      RowBox[{"+", "  ", 
       RowBox[{"||", 
        SuperscriptBox["YS", 
         StyleBox["\[UpTee]",
          FontSize->18]], 
        SuperscriptBox["||", "2"]}]}]}]}]],
   FontSize->12]],
  FontSize->12]
}], "Subsubsection"],

Cell[TextData[{
 "Explain this:\nGiven a subspace ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 " of kD and given any kD vector ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 ", you can decompose \n              ",
 StyleBox["Y = YS + Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " \nwith ",
 StyleBox["YS ",
  FontColor->RGBColor[0, 0, 1]],
 "in S and with ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " and with"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "           ",
 Cell[BoxData[
  RowBox[{"||", "Y", "||"}]]],
 " = ",
 Cell[BoxData[
  SqrtBox[
   RowBox[{" ", 
    RowBox[{"||", "YS", 
     SuperscriptBox["||", "2"], " ", 
     RowBox[{"+", "  ", 
      RowBox[{"||", 
       SuperscriptBox["YS", 
        StyleBox["\[UpTee]",
         FontSize->18]], 
       SuperscriptBox["||", "2"]}]}]}]}]]]],
 "."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with your ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " and set\n           ",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 " = Sprojection.",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " \nand set\n           ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " = (Identity - Sprojection).",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 "  = ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " - Sprojection.",
 StyleBox["Y.",
  FontColor->RGBColor[0, 0, 1]],
 "\nIt' s now automatic that \n           ",
 StyleBox["Y ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 " + ",
 StyleBox[" Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " \nand that ",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 ".\nAnd: "
}], "SmallText"],

Cell[TextData[{
 "         ",
 Cell[BoxData[
  RowBox[{"||", 
   RowBox[{"Y", ".", "Y"}], 
   SuperscriptBox["||", "2"]}]]],
 " = Y.Y = (",
 StyleBox["YS ",
  FontColor->RGBColor[0, 0, 1]],
 " + ",
 Cell[BoxData[
  SuperscriptBox["YS", "\[UpTee]"]]],
 "). (",
 StyleBox["YS ",
  FontColor->RGBColor[1, 0, 0]],
 " +",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["YS", "\[UpTee]"],
   FontColor->RGBColor[1, 0, 0]]]],
 ") "
}], "SmallText"],

Cell[TextData[{
 "             = (",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ") + (",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 Cell[BoxData[
  SuperscriptBox["YS", "\[UpTee]"]],
  FontColor->RGBColor[1, 0, 0]],
 ") + (",
 Cell[BoxData[
  SuperscriptBox["YS", "\[UpTee]"]]],
 ".",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ") + (",
 Cell[BoxData[
  SuperscriptBox["YS", "\[UpTee]"]]],
 ".",
 Cell[BoxData[
  SuperscriptBox["YS", "\[UpTee]"]],
  FontColor->RGBColor[1, 0, 0]],
 ")\n             = (",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 ".",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ")  + 0 + 0 + (",
 Cell[BoxData[
  SuperscriptBox["YS", "\[UpTee]"]]],
 ".",
 Cell[BoxData[
  SuperscriptBox["YS", "\[UpTee]"]],
  FontColor->RGBColor[1, 0, 0]],
 ")"
}], "SmallText"],

Cell[TextData[{
 "             = ",
 Cell[BoxData[
  RowBox[{"||", "YS", 
   SuperscriptBox["||", "2"], " ", 
   RowBox[{"+", "  ", 
    RowBox[{"||", 
     SuperscriptBox["YS", "\[UpTee]"], 
     SuperscriptBox["||", "2"]}]}]}]]],
 ".\nSo"
}], "SmallText"],

Cell[TextData[{
 "                  ",
 Cell[BoxData[
  RowBox[{"||", "Y", "||"}]]],
 " = ",
 Cell[BoxData[
  SqrtBox[
   RowBox[{" ", 
    RowBox[{"||", "YS", 
     SuperscriptBox["||", "2"], " ", 
     RowBox[{"+", "  ", 
      RowBox[{"||", 
       SuperscriptBox["YS", "\[UpTee]"], 
       SuperscriptBox["||", "2"]}]}]}]}]]]]
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.a.iv)  If ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ", then ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this:\nGo with a subspace ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 " of kD. \nIf a kD vector",
 StyleBox[" Y",
  FontColor->RGBColor[0, 0, 1]],
 " is perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ", then it's automatic that  ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with a ",
 StyleBox["Y ",
  FontColor->RGBColor[0, 0, 1]],
 "that is perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ".\nDecompose\n                ",
 StyleBox["Y = YS + Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " \nwith ",
 StyleBox["YS ",
  FontColor->RGBColor[0, 0, 1]],
 "in S and ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 ".\n\nThe goal is to explain why ",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["{0,0,. . .,0}",
  FontColor->RGBColor[0, 0, 1]],
 ", forcing Y = ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 "  and putting Y into",
 Cell[BoxData[
  RowBox[{" ", 
   SuperscriptBox["S", 
    StyleBox["\[UpTee]",
     FontSize->18]]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "To this end, take the equation\n      ",
 StyleBox["         Y = YS + Y",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 ".\nDot ",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 " through this equation to get\n          ",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 " + ",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 Cell[BoxData[
  SuperscriptBox["YS", "\[UpTee]"]]],
 ".\nThis is the same as\n             0 =  ",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 "  + 0 "
}], "SmallText"],

Cell[TextData[{
 "Reasons: \n",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " = 0 because ",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 " is in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ". \n",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["YS", "\[UpTee]"],
   FontSize->10]]],
 " = 0 because ",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 " is in S and ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["YS", "\[UpTee]"],
   FontSize->10]]],
 " is perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "This results in \n            0 =  ",
 StyleBox["YS",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["YS",
  FontColor->RGBColor[0, 0, 1]],
 "   = ",
 Cell[BoxData[
  RowBox[{"||", "YS", 
   SuperscriptBox["||", "2"]}]]],
 "\nand leads to the inescapable conclusion that\n           ",
 StyleBox[" YS",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["{0,0,. . . ,0}",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.a.v)   ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " consists exactly of all",
 StyleBox[" Y",
  FontColor->RGBColor[0, 0, 1]],
 " that are perpendicular to everything in",
 StyleBox[" S",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this:\nGo with a subspace ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 " of kD. You are guaranteed that ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " consists exactly of all",
 StyleBox[" Y",
  FontColor->RGBColor[0, 0, 1]],
 " that are perpendicular to everything in",
 StyleBox[" S.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Put ",
 StyleBox["PS",
  FontColor->RGBColor[1, 0, 0]],
 " equal to the set of vectors in kD that are perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ". \n\nPart ii) above says that  if Y is in ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 ",  then Y is perpendicular to everything in ",
 StyleBox["S.\n",
  FontColor->RGBColor[0, 0, 1]],
 "So   ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 "\[Subset] ",
 StyleBox["PS",
  FontColor->RGBColor[1, 0, 0]],
 ".\n\nPart iv) above says that  if ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is perpendicular to everything in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ", then ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 ".\nSo   ",
 StyleBox[" PS",
  FontColor->RGBColor[1, 0, 0]],
 " \[Subset] ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 ".\nThe conclusion:\n         ",
 StyleBox["PS",
  FontColor->RGBColor[1, 0, 0]],
 " = ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.3.a.vi) The projection matrix for Perp[S] is (Identity - Sprojection)\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Given a subspace S of kD,you can express the projection matrix for Perp[S] \
as \n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"Perp", "[", "S", "]"}], "projection"}], " ", "=", " ", 
   RowBox[{"IdentityMatrix", "-", "Sprojection"}]}]]],
 ".\nExplain why this works."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Take any vector ",
 Cell[BoxData["X"]],
 " in kD\nPut \n           ",
 Cell[BoxData[
  RowBox[{"Y", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"IdentityMatrix", "-", "Sprojection"}], ")"}], ".", "X"}]}]]],
 "\nTo explain why\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"Perp", "[", "S", "]"}], " ", "projection"}], "=", 
   RowBox[{"(", 
    RowBox[{"IdentityMatrix", "-", "Sprojection"}], ")"}]}]]],
 ",\n you've got to explain why\n->",
 Cell[BoxData["Y"]],
 " is in ",
 Cell[BoxData[
  RowBox[{"Perp", "[", "S", "]"}]]],
 " \nand why\n-> ",
 Cell[BoxData["Y"]],
 " is closer to ",
 Cell[BoxData["X"]],
 " than any other member of ",
 Cell[BoxData[
  RowBox[{"Perp", "[", "S", "]"}]]],
 "."
}], "SmallText"],

Cell["Explanation of why Y is in Perp[S]", "Subsubsection"],

Cell[TextData[{
 "Because Sprojection.X is the closest member of S to X and because \
perpendicular distance is the shortest distance.\n           ",
 Cell[BoxData[
  RowBox[{"Y", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"IdentityMatrix", "-", "Sprojection"}], ")"}], ".", "X"}], "  ",
     "=", "   ", 
    RowBox[{"X", "-", 
     RowBox[{"Sprojection", ".", "X"}]}]}]}]]],
 "\nis perpendicular to everything in S. This tells you that Y is Perp[S]."
}], "SmallText"],

Cell["\<\
Explanation of why Y is closer to X than any other member of Perp[S].\
\>", "Subsubsection"],

Cell["\<\
Because perpendicular distance is the shortest distance, this is the same as \
explaining why X - Y is perpendicular to everything in Perp[S]. 
To do this, take any Z in Perp[S]  and look at this little calculation:
            Z.(X - Y) = Z.( X - (X - Sprojection.X)) = Z.(Sprojection.X) = 0
because Z is In Perp[S] and Sprojection.X is in S and everything in Perp[S] \
is perpendicular to everything in S.

This tells you that if you take any member of Perp[S], then (X - Y) is \
perpendicular to it. In other words,
 X - Y is perpendicular to everything in Perp[S].  
 Done. \
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.b.i)  Using the ",
 Cell[BoxData[
  SuperscriptBox["S", 
   StyleBox["\[UpTee]",
    FontSize->16]]],
  FontColor->RGBColor[0, 0, 1]],
 " idea to extend a given basis for a subspace  ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 " of  kD to a basis for",
 StyleBox[" all ",
  FontColor->RGBColor[0, 0, 1]],
 "of kD"
}], "Subsubsection"],

Cell["\<\
Here's a basis (linearly independent spanning set) for a subspace S of 5D\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", 
     StyleBox["1",
      FontColor->RGBColor[0, 0, 1]], "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", 
     StyleBox["2",
      FontColor->RGBColor[0, 0, 1]], "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", 
     StyleBox["3",
      FontColor->RGBColor[0, 0, 1]], "]"}], "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", 
      StyleBox["3",
       FontColor->RGBColor[0, 0, 1]]}], "}"}]}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Check to see that these spanners are a basis of S:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"rank", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}], "]"}]}]}], "Input"],

Cell[TextData[{
 StyleBox["If the output of the last cell is not ",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["3",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", go back to the beginning and rerun.",
  FontVariations->{"CompatibilityType"->0}]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell[TextData[{
 "Come up with two 5D vectors ",
 StyleBox["X[1]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["X[2]",
  FontColor->RGBColor[0, 0, 1]],
 " so that \nwhen you put \n           ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["spanner[4]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = X[1]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["spanner[5]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" = X[2]",
  FontColor->RGBColor[0, 0, 1]],
 ", \nthen\n         ",
 StyleBox[" {spanner[1], spanner[2], spanner[3], ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["spanner[4]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[", ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["spanner[5]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["} ",
  FontColor->RGBColor[0, 0, 1]],
 "\nis a basis (linearly independent spanning set) for all of 5D."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["Make the Sprojection matrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sprojection", " ", "=", " ", 
    RowBox[{"SpannerMatrix", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "Sprojection", "]"}]}], "Input"],

Cell[TextData[{
 "You can extend the original spanning set of S by throwing in a basis of ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 ".\n\nBecause  ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 " is all hits with",
 StyleBox[" Identity - Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 ", you can get a basis for ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 " by looking at ",
 "stretch",
 " factors and the hanger frame for ",
 StyleBox[" Identity - Sprojection:",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], "=", " ", 
    StyleBox[
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "5", "]"}], " ", "-", " ", 
      "Sprojection"}],
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"stretches", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", 
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], "]"}], "[", 
   RowBox[{"[", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"hangerframe", "[", "1", "]"}], ",", 
    RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", 
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], "]"}], "[", 
   RowBox[{"[", 
    StyleBox["1",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]}], "Input"],

Cell["\<\
Put  spanner[4] = hangerframe[1] and spanner[5] = hangerframe[2] to get your \
basis of all of 5D:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"spanner", "[", "4", "]"}],
     FontColor->RGBColor[1, 0, 0]], " ", "=", " ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"spanner", "[", "5", "]"}],
     FontColor->RGBColor[1, 0, 0]], " ", "=", " ", 
    RowBox[{"hangerframe", "[", "2", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["extendedspanners",
   FontColor->RGBColor[1, 0, 0]], " ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], "Input"],

Cell[TextData[{
 "Check to see that {",
 StyleBox["spanner[1],spanner[2],spanner[3]",
  FontColor->RGBColor[0, 0, 1]],
 ",",
 StyleBox["spanner[4],spanner[5]",
  FontColor->RGBColor[1, 0, 0]],
 "} spans all five dimensions of 5D:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"extendedSpannerMatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "extendedspanners", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"rank", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", 
     StyleBox["extendedSpannerMatrix",
      FontColor->RGBColor[0, 0, 1]], "]"}], "[", 
    RowBox[{"[", 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}]}], "Input"],

Cell[TextData[{
 "Yep, {",
 StyleBox["spanner[1],spanner[2],spanner[3]",
  FontColor->RGBColor[0, 0, 1]],
 ",",
 StyleBox["spanner[4],spanner[5]",
  FontColor->RGBColor[1, 0, 0]],
 "} spans all five dimensions of 5D.\nAnd you're out of here."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.4)  The null space of a matrix A is the subspace of hitdimD of vectors \
hit onto {0,0,...,0} by A.\nThe SVD aligner frame for A spans a subspace S  \
of hitdimD. \nThe null space of A is the perpendicular complement ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 "of this subspace. \nThis fact tells you how to come up with an orthonormal \
basis for the null space of A"
}], "Subsection",
 CellTags->"MGM.08.T4"],

Cell[CellGroupData[{

Cell["\<\
T.4.a.i)  The null space of A is the subspace of hitdimD of vectors hit onto \
{0,0,...,0} by A\
\>", "Subsubsection"],

Cell["Here's a matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "7"}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["When you ask Mathematica for the null space of A, you get:", "Text"],

Cell[BoxData[
 RowBox[{"NullSpace", "[", "A", "]"}]], "Input"],

Cell[CellGroupData[{

Cell["What are these vectors?", "Text"],

Cell["Answer:", "Special1"],

Cell["Look again:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "spanner", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}], ",", 
    RowBox[{"spanner", "[", "4", "]"}]}], "}"}], " ", "=", 
  RowBox[{"NullSpace", "[", "A", "]"}]}]}], "Input"],

Cell["\<\
Mathematica delivers a basis for the subspace of 7D consisting of the Y's in \
7D that are squashed to  {0,0,. . .,0} by a hit with A.  
Try this out for cleared coefficients x[j]:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Chop", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"A", ".", 
    RowBox[{"(", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"j", "=", "1"}], "4"], 
      RowBox[{
       RowBox[{"x", "[", "j", "]"}], " ", 
       RowBox[{"spanner", "[", "j", "]"}]}]}], ")"}]}], "]"}], "]"}]], "Input"],

Cell["This subspace of 7D is called the Null Space of A.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.4.a.ii) The SVD aligner frame for A spans a ",
 "subspace",
 StyleBox[" S ",
  FontColor->RGBColor[0, 0, 1]],
 " of hitdimD. The null space of A is the perpendicular complement  ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 "of this subspace. This fact tells you how to come up with an orthonormal \
basis for the null space of A"
}], "Subsubsection"],

Cell["Here's a new matrix A:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hangdim", " ", "=", " ", "4"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hitdim", " ", "=", " ", "7"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "a", "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"Random", "[", 
   RowBox[{"Real", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"a", "[", 
       RowBox[{"i", ",", "j"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "hangdim"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "hitdim"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Use SVD and perpendicular complements to come up with an orthonormal basis \
for the null space of A.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Calculate the SVD alignerframe consisting of vectors with corresponding \
positive stretch factors:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rankA", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "A", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "k_", "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "k"}], "]"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Sspanners", " ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"alignerframe", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "rankA"}], "}"}]}], "]"}]}]}], "Input"],

Cell[TextData[{
 "The set ",
 StyleBox["{alignerframe[1],alignerframe[2],. . ., alignerframe[rankA]}",
  FontColor->RGBColor[0, 0, 1]],
 " spans a subspace S of hitdimD.\n",
 StyleBox["The truth is that the null space of A is the perpendicular \
complement ",
  FontWeight->"Bold"],
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]],
  FontWeight->"Bold"],
 StyleBox[" of ",
  FontWeight->"Bold"],
 StyleBox["S.",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[CellGroupData[{

Cell["For a detailed explanation of this, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "On way of explaining why the null space of A ",
 StyleBox["is",
  FontWeight->"Bold"],
 " the perpendicular complement ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 " of ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 " is to explain  the following two facts:"
}], "SmallText"],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FrameBox[
   RowBox[{"Fact", " ", "1"}],
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold"],
 " ",
 StyleBox["Any X in ",
  FontWeight->"Bold"],
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]],
  FontWeight->"Bold"],
 StyleBox[" is also in the null space of A.",
  FontWeight->"Bold"]
}], "SmallText"],

Cell[CellGroupData[{

Cell["For a detailed explanation of Fact 1, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Go with an X in ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 " and look at"
}], "SmallText"],

Cell[TextData[{
 "       A.X = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "rankA"], 
   RowBox[{
    RowBox[{"stretch", "[", "k", "]"}], " ", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"X", ".", 
       RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}],
     FontColor->RGBColor[1, 0, 0]], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 "       ( with stretch[k] > 0)"
}], "Text"],

Cell[TextData[{
 "              = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "rankA"], 
   RowBox[{
    RowBox[{"stretch", "[", "k", "]"}], " ", 
    StyleBox[
     RowBox[{"(", " ", "0", " ", ")"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[
     RowBox[{
      StyleBox[" ",
       FontColor->RGBColor[1, 0, 0]], " "}]], 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 "        "
}], "Text"],

Cell["Reason: X is perpendicular to everything in S.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "              = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "rankA"], 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{".", " ", ".", " ", "."}], ",", "0"}], "}"}],
    FontColor->RGBColor[1, 0, 0]]}]]],
 "        "
}], "Text"],

Cell[TextData[{
 "              =  ",
 StyleBox["{0 ,0, . . .,0}.",
  FontColor->RGBColor[1, 0, 0]]
}], "SmallText"],

Cell[TextData[{
 "This explains why any X in ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 " is also in the null space of A."
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 " ",
 Cell[BoxData[
  FrameBox[
   RowBox[{"Fact", " ", "2"}],
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold"],
 " ",
 StyleBox["Any X in the null space of A is also in ",
  FontWeight->"Bold"],
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]],
  FontWeight->"Bold"],
 "."
}], "SmallText"],

Cell[CellGroupData[{

Cell["For a detailed explanation of Fact 2, click on the right.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
Go with an X in the null space of A. 
This gives:\
\>", "SmallText"],

Cell[TextData[{
 "      {0,0,. . .,0} = A.X = ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "rankA"], 
   RowBox[{
    RowBox[{"stretch", "[", "k", "]"}], " ", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"X", ".", 
       RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}],
     FontColor->RGBColor[1, 0, 0]], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 ".\nSo        "
}], "SmallText"],

Cell[TextData[{
 "         ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "rankA"], 
   RowBox[{
    RowBox[{"stretch", "[", "k", "]"}], " ", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"X", ".", 
       RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}],
     FontColor->RGBColor[1, 0, 0]], " ", 
    RowBox[{"hangerframe", "[", "k", "]"}]}]}]]],
 " = ",
 StyleBox["{0,0,. . .,0}",
  FontColor->RGBColor[0, 0, 1]],
 "\nTake a p with 1\[LessEqual]  p \[LessEqual] rankA and dot both sides with \
hangerframe[p] to get      "
}], "SmallText"],

Cell[TextData[{
 "         ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"k", "=", "1"}], "rankA"], 
   RowBox[{
    RowBox[{"stretch", "[", "k", "]"}], " ", 
    StyleBox[
     RowBox[{"(", 
      RowBox[{"X", ".", 
       RowBox[{"alignerframe", "[", "k", "]"}]}], ")"}],
     FontColor->RGBColor[1, 0, 0]], " ", 
    RowBox[{
     StyleBox[
      RowBox[{"hangerframe", "[", "p", "]"}],
      FontWeight->"Bold",
      FontColor->GrayLevel[0]], ".", 
     RowBox[{"hangerframe", "[", "k", "]"}]}]}]}]]],
 " = ",
 StyleBox["hangerframe[p]",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 ".",
 StyleBox["{0,0,. . .,0} ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->GrayLevel[0]],
 StyleBox[" 0.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[TextData[{
 StyleBox["This gives:",
  FontColor->GrayLevel[0]],
 "\n               ",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["stretch[p]",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["(X.alignerframe[p]) ",
  FontColor->RGBColor[1, 0, 0]],
 " = 0."
}], "SmallText"],

Cell[TextData[{
 "Reason: ",
 StyleBox["hangerframe[p]",
  FontWeight->"Bold"],
 ".",
 StyleBox["hangerframe[k]",
  FontColor->RGBColor[0, 0, 1]],
 " = 0 for k",
 StyleBox[" ",
  FontSize->14],
 StyleBox["\[NotEqual]",
  FontSize->14,
  FontColor->RGBColor[0, 0, 1]],
 " p.\n        ",
 StyleBox["hangerframe[p]",
  FontWeight->"Bold"],
 ".",
 StyleBox["hangerframe[k]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["1",
  FontColor->RGBColor[1, 0, 0]],
 " for k",
 StyleBox[" ",
  FontSize->14],
 StyleBox["=",
  FontSize->14,
  FontColor->RGBColor[0, 0, 1]],
 " k.\n"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 StyleBox["The result:",
  FontColor->GrayLevel[0]],
 "\n                ",
 StyleBox["(X.alignerframe[p]) ",
  FontColor->RGBColor[1, 0, 0]],
 " = 0."
}], "SmallText"],

Cell[TextData[{
 "Reason: ",
 StyleBox["stretch[p] >0",
  FontWeight->"Bold"]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "And because p is any integer with 1\[LessEqual] p \[LessEqual] rankA, this \
tells you that X is perpendicular to each of the spanning vectors \n          \
 ",
 StyleBox["{alignerframe[1],alignerframe[2],. . .,alignerframe[rankA]}",
  FontColor->RGBColor[0, 0, 1]],
 " of S. \nConsequently X is perpendicular to everything in S. \nThis signals \
that X is in ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 ".\nThis explains why a",
 StyleBox["ny X in the null space of A is also in ",
  FontVariations->{"CompatibilityType"->0}],
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]],
  FontVariations->{"CompatibilityType"->0}]
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[TextData[{
 "To go after an orthonormal basis for S (perpendicular frame spanning S) \
remember that ",
 Cell[BoxData[
  SuperscriptBox["S", "\[UpTee]"]]],
 " consists of all hits with",
 StyleBox[" Identity - Sprojection",
  FontColor->RGBColor[0, 0, 1]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "Sspanners", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SProjection", " ", "=", " ", 
    RowBox[{"SpannerMatrix", ".", 
     RowBox[{"PseudoInverse", "[", "SpannerMatrix", "]"}]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"B", " ", "=", " ", 
     RowBox[{
      RowBox[{"IdentityMatrix", "[", "hitdim", "]"}], " ", "-", 
      "SProjection"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], 
  StyleBox[
   RowBox[{" ", 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]]}]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "B", " ", "]"}]}], "Input"],

Cell[TextData[{
 "So you can get an orthonormal basis for the null space of A  by going with \
the SVD hangerframe of \n                   B = ",
 StyleBox["Identity - Sprojection.",
  FontVariations->{"CompatibilityType"->0}],
 "\nHere you go:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rankB", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "B", "]"}], "[", 
      RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hangerframe", "[", "k_", "]"}], " ", ":=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "B", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "k"}], "]"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{"nullspacespanners", " ", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"hangerframe", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "rankB"}], "}"}]}], "]"}]}]}], "Input"],

Cell["\<\
There you go.
Try it out:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "j"}], "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Chop", "[", 
  RowBox[{"Expand", "[", 
   RowBox[{"A", ".", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "1"}], "rankB"], 
     RowBox[{
      RowBox[{"x", "[", "k", "]"}], " ", 
      RowBox[{"hangerframe", "[", "k", "]"}]}]}]}], "]"}], "]"}]}], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.5) The sum ",
 StyleBox[" S1 + S2",
  FontColor->RGBColor[0, 0, 1]],
 " of two subspaces of kD is a subspace of kD.\nThe intersection  ",
 StyleBox["S1\[Intersection] S2",
  FontColor->RGBColor[0, 0, 1]],
 " of two subspaces of kD is a subspace of kD.\nHow to find orthonormal bases \
for them.\nNo matter what ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " in kD you go with, you are guaranteed that ",
 StyleBox["||Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| \[LessEqual] ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[0, 0, 1]],
 ".\nSaying ",
 StyleBox["||Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 "for a given Y in kD ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "is the same as saying ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ".\nSaying",
 StyleBox[" ", "Text"],
 StyleBox["||Sprojection.", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y", "Text",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["<", "Text",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[" ", "Text",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y", "Text",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ", "Text",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "for a given Y in kD ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "is the same as saying ",
 StyleBox["Y", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ", "Text"],
 "is ",
 StyleBox[" ", "Text"],
 StyleBox["not ", "Text",
  FontColor->GrayLevel[0]],
 "in",
 StyleBox[" ", "Text"],
 StyleBox["S", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\n", "Text"],
 "Saying that a given Y in kD is in ",
 StyleBox["S1\[Intersection] S2",
  FontColor->RGBColor[0, 0, 1]],
 " is the same as saying\n                            ",
 StyleBox["||S2Projection.S1Projection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| = ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 CellTags->"MGM.08.T5"],

Cell[CellGroupData[{

Cell["T.5.a.i)  Adding two subspaces of kD", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Given two subspaces S1 and S2 of kD, most folks calculate
                  S1 + S2 
by taking everything in S1 and adding this to everything in S2.
Confirm that  S1 + S2 is a subspace of kD by explaining how to get a spanning \
set for 
                 S1 + S2 
from a given spanning sets S1 and a given spanning set for S2. \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "To do this you've got to start with a spanning sets for S1 and S2 and \
exhibit a spanning set for S1 + S2.\n\n The subspace S",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 " is specified by a spanning set"
}], "SmallText"],

Cell[TextData[{
 "             ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["spanners",
      FontColor->GrayLevel[0]], "1"}]], " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{
        StyleBox["spanner",
         FontColor->GrayLevel[0]], "1"}]], "[", "1", "]"}], ",", 
     RowBox[{
      StyleBox[
       RowBox[{
        StyleBox["spanner",
         FontColor->GrayLevel[0]], "1"}]], "[", "2", "]"}], ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", 
     RowBox[{
      StyleBox[
       RowBox[{
        StyleBox["spanner",
         FontColor->GrayLevel[0]], "1"}]], "[", "p", "]"}]}], "}"}]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "The members of S",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 " look like this:"
}], "SmallText"],

Cell[TextData[{
 "             ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "p"], 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", 
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["spanner",
        FontColor->GrayLevel[0]], "1"}]], "[", "i", "]"}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "where the ",
 StyleBox["x[i]",
  FontColor->RGBColor[0, 0, 1]],
 "'s are real numbers."
}], "SmallText"],

Cell[TextData[{
 "The subspace S",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 " is specified by a spanning set"
}], "SmallText"],

Cell[TextData[{
 "             ",
 Cell[BoxData[
  RowBox[{
   StyleBox[
    RowBox[{
     StyleBox["spanners",
      FontColor->GrayLevel[0]], "2"}]], " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      StyleBox[
       RowBox[{
        StyleBox["spanner",
         FontColor->GrayLevel[0]], "2"}]], "[", "1", "]"}], ",", 
     RowBox[{
      StyleBox[
       RowBox[{
        StyleBox["spanner",
         FontColor->GrayLevel[0]], "2"}]], "[", "2", "]"}], ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", 
     RowBox[{
      StyleBox[
       RowBox[{
        StyleBox["spanner",
         FontColor->GrayLevel[0]], "2"}]], "[", "q", "]"}]}], "}"}]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "The members of S",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 " look like this:"
}], "SmallText"],

Cell[TextData[{
 "             ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "q"], 
   RowBox[{
    RowBox[{"y", "[", "j", "]"}], " ", 
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["spanner",
        FontColor->GrayLevel[0]], "2"}]], "[", "j", "]"}]}]}]]]
}], "SmallText"],

Cell[TextData[{
 "where the ",
 StyleBox["y[j]",
  FontColor->RGBColor[0, 0, 1]],
 "'s are real numbers."
}], "SmallText"],

Cell[TextData[{
 "You get S1 + S2 by taking everything in S1 and adding this to everything in \
S2.\n\nIn other words S1 + S2 is everything of this form:\n         ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"i", "=", "1"}], "p"], 
   RowBox[{
    RowBox[{"x", "[", "i", "]"}], " ", 
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["spanner",
        FontColor->GrayLevel[0]], "1"}]], "[", "i", "]"}]}]}]]],
 "+ ",
 Cell[BoxData[
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"j", "=", "1"}], "q"], 
   RowBox[{
    RowBox[{"y", "[", "j", "]"}], " ", 
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["spanner",
        FontColor->GrayLevel[0]], "2"}]], "[", "j", "]"}]}]}]]],
 ".\nThis tells you that a spanning set for  S1 + S2  is the spanning set you \
get by throwing \n",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    StyleBox["spanners",
     FontColor->GrayLevel[0]], "1"}]]]],
 " and ",
 Cell[BoxData[
  StyleBox[
   RowBox[{
    StyleBox["spanners",
     FontColor->GrayLevel[0]], "2"}]]]],
 " into one big spanning set. \nIn fancier terms, a spanning set for S1 + S2 \
is:\n            ",
 Cell[BoxData[
  RowBox[{"spanners1", "\[Union]", "spanners2"}]]],
 "\n"
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.5.a.ii)  Calculating the dimension of S1 + S2 and getting an orthonormal \
basis for S1 + S2\
\>", "Subsubsection"],

Cell["\<\
A subspace S1 of 8D is specified by the following spanning set:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "spanner1"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.0", ",", 
      RowBox[{"-", "0.3"}], ",", 
      RowBox[{"-", "0.2"}], ",", "0.2", ",", "0.4", ",", "0.4", ",", "0.5", 
      ",", "0.9"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.9", ",", "0.8", ",", "0.7", ",", "0.4", ",", "0.0", ",", 
      RowBox[{"-", "0.1"}], ",", "0.0", ",", 
      RowBox[{"-", "0.7"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5"}], ",", 
      RowBox[{"-", "0.3"}], ",", "0.9", ",", "0.4", ",", 
      RowBox[{"-", "0.3"}], ",", "0.2", ",", 
      RowBox[{"-", "0.5"}], ",", "0.4"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.4", ",", "0.8", ",", 
      RowBox[{"-", "0.4"}], ",", "0.2", ",", "0.7", ",", "0.1", ",", "1.", 
      ",", 
      RowBox[{"-", "0.2"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"spanners", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner1", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "Input"],

Cell["\<\
Another subspace S2 of 8D  is specified by the following spanning set:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"j", ",", "spanner2"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", 
      RowBox[{"-", "0.5"}], ",", 
      RowBox[{"-", "0.3"}], ",", "0.4", ",", "0.4", ",", 
      RowBox[{"-", "0.8"}], ",", "0", ",", "0"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
     "0.4", ",", "0.2", ",", "1.4", ",", "1.", ",", "0.1", ",", "0.5", ",", 
      "0", ",", "0.6"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"spanners", 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner2", "[", "j", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Calculate:
\[FilledVerySmallSquare] the dimension of S1,
\[FilledVerySmallSquare] the dimension of S2 and 
\[FilledVerySmallSquare] the dimension of S1 + S2.
Exhibit an orthonormal basis of S1 + S2\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["The dimension of S1 is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"SpannerMatrix", 
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]]}]], "=", 
    RowBox[{"Transpose", "[", "spanners1", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", "=", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix1", "]"}], 
      "\[LeftDoubleBracket]", 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{"S1dim", "=", "rank"}]}], "Input"],

Cell["The dimension of S2 is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix2", "=", 
    RowBox[{"Transpose", "[", "spanners2", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", "=", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", "SpannerMatrix2", "]"}], 
      "\[LeftDoubleBracket]", 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{"S2dim", "=", "rank"}]}], "Input"],

Cell[TextData[{
 "To calculate the dimension of S1 + S2, you have to come up with a spanning \
set. According to part i) immediately above, you just take spanners1 and \
throw in spanners2 to get \n        ",
 Cell[BoxData[
  RowBox[{"spanners1", "\[Union]", "spanners2"}]]],
 " \nas a spanning set for S1 + S2:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{
    StyleBox["S1plusS2",
     FontColor->RGBColor[0, 0, 1]], "spanners"}]], " ", "=", 
  RowBox[{"spanners1", 
   StyleBox["\[Union]",
    FontColor->RGBColor[0, 0, 1]], "spanners2"}]}]], "Input"],

Cell["\<\
Now you can make the spanner matrix for S1 + S2 and use it to calculate the \
dimension of S1 + S2:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"SpannerMatrix", 
      StyleBox["12",
       FontColor->RGBColor[0, 0, 1]]}]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], "=", " ", 
    RowBox[{"Transpose", "[", 
     StyleBox[
      RowBox[{
       StyleBox["S1plusS2",
        FontColor->RGBColor[0, 0, 1]], "spanners"}]], " ", "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rank", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{
      RowBox[{"SingularValues", "[", 
       StyleBox[
        RowBox[{"SpannerMatrix", 
         StyleBox["12",
          FontColor->RGBColor[0, 0, 1]]}]], "]"}], "[", 
      RowBox[{"[", 
       StyleBox["2",
        FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"S1plusS2dim", " ", "=", " ", "rank"}]}], "Input"],

Cell["\<\
The dimension of S1 + S2  is 4.
An orthonormal basis for S1 + S2 comes from the hanger frame that \
SpannerMatrix12 uses to hang its hits:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"hangerframe", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", 
    StyleBox[
     RowBox[{"SpannerMatrix", 
      StyleBox["12",
       FontColor->RGBColor[0, 0, 1]]}]], "]"}], "[", 
   RowBox[{"[", 
    StyleBox["1",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}], "   "}]], "Input"],

Cell["There you go.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.5.b.i)  Using the S1 Projection and the S2 Projection matrices to come up \
with an orthonormal basis of S1\[Intersection] S2  and to get the  S1\
\[Intersection] S2 Projection matrix\
\>", "Subsubsection"],

Cell["\<\
A subspace S1 of 7D is specified by the following spanning set:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "spanner1"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.0", ",", 
      RowBox[{"-", "0.3"}], ",", 
      RowBox[{"-", "0.2"}], ",", "0.2", ",", "0.4", ",", "0.4", ",", "0.5"}], 
     "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.9", ",", "0.8", ",", "0.7", ",", "0.4", ",", "0.0", ",", 
      RowBox[{"-", "0.1"}], ",", "0.0"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5"}], ",", 
      RowBox[{"-", "0.3"}], ",", "0.9", ",", "0.4", ",", 
      RowBox[{"-", "0.3"}], ",", "0.2", ",", 
      RowBox[{"-", "0.5"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner1", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.4", ",", "0.8", ",", 
      RowBox[{"-", "0.4"}], ",", "0.2", ",", "0.7", ",", "0.1", ",", "1."}], 
     "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"spanners", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner1", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "Input"],

Cell["\<\
Another subspace S2 of 7D  is specified by the following spanning set:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"j", ",", "spanner2"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", 
      RowBox[{"-", "0.5"}], ",", 
      RowBox[{"-", "0.3"}], ",", "0.4", ",", "0.4", ",", 
      RowBox[{"-", "0.8"}], ",", "0"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
     "0.4", ",", "0.2", ",", "1.4", ",", "1.", ",", "0.1", ",", "0.5", ",", 
      "0"}], "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner2", "[", "3", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.4"}], ",", 
      RowBox[{"-", "1.1"}], ",", "0.2", ",", "0", ",", 
      RowBox[{"-", "0.3"}], ",", "0.3", ",", 
      RowBox[{"-", "0.5"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"spanners", 
    StyleBox["2",
     FontColor->RGBColor[0, 0, 1]]}]], "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner2", "[", "j", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "3"}], "}"}]}], "]"}]}]}], "Input"],

Cell["\<\
Come up with an orthonormal basis for S1 \[Intersection] S2 and use the \
result to calculate the dimension of S1 \[Intersection] S2.
Come up with the  S1\[Intersection] S2Projection matrix.
\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Calculate the S1projection matrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"SpannerMatrix", 
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]]}]], "=", 
    RowBox[{"Transpose", "[", "spanners1", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["S1",
       FontColor->RGBColor[0, 0, 1]], "projection"}]], " ", "=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"SpannerMatrix", 
       StyleBox["1",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["PseudoInverse",
       FontColor->GrayLevel[0]], 
      StyleBox["[",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"SpannerMatrix", 
        StyleBox["1",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  StyleBox[
   RowBox[{
    StyleBox["S1",
     FontColor->RGBColor[0, 0, 1]], "projection"}]], "]"}]}], "Input"],

Cell["Calculate the S2projection matrix:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"SpannerMatrix", 
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]]}]], "=", 
    RowBox[{"Transpose", "[", "spanners2", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["S2",
       FontColor->RGBColor[0, 0, 1]], "projection"}]], " ", "=", " ", 
    RowBox[{
     StyleBox[
      RowBox[{"SpannerMatrix", 
       StyleBox["2",
        FontColor->RGBColor[0, 0, 1]]}]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["PseudoInverse",
       FontColor->GrayLevel[0]], 
      StyleBox["[",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{"SpannerMatrix", 
        StyleBox["2",
         FontColor->RGBColor[0, 0, 1]]}]], 
      StyleBox["]",
       FontColor->RGBColor[0, 0, 1]]}]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  StyleBox[
   RowBox[{
    StyleBox["S2",
     FontColor->RGBColor[0, 0, 1]], "projection"}]], "]"}]}], "Input"],

Cell["Multiply out S1projection.S2projection  ", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"product", " ", "=", 
    RowBox[{
     StyleBox[
      RowBox[{
       StyleBox["S2",
        FontColor->RGBColor[0, 0, 1]], "projection"}]], ".", 
     StyleBox[
      RowBox[{
       StyleBox["S1",
        FontColor->RGBColor[0, 0, 1]], "projection"}]]}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "product", "]"}]}], "Input"],

Cell[TextData[{
 "This is not necessarily the projection matrix for S1 \[Intersection] S2, \
but you can extract the  projection matrix for S1 \[Intersection] S2 from ",
 StyleBox["S2",
  FontColor->RGBColor[0, 0, 1]],
 "projection.",
 StyleBox["S1",
  FontColor->RGBColor[0, 0, 1]],
 "projection.\nHere's how:"
}], "SmallText"],

Cell["Look at the stretch factors of S2projection.S1projection:", "SmallText"],

Cell[BoxData[
 RowBox[{"stretches", " ", "=", " ", 
  RowBox[{
   RowBox[{"SingularValues", "[", "product", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell[TextData[{
 StyleBox["Two",
  FontColor->RGBColor[0, 0, 1]],
 " of them equal ",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 ". This is your signal that the dimension of S1 \[Intersection] S2 is ",
 StyleBox["2",
  FontColor->RGBColor[0, 0, 1]],
 ". \nTo get an orthonormal basis for  S1 \[Intersection] S2, you go with the \
first ",
 StyleBox["two",
  FontColor->RGBColor[1, 0, 0]],
 " alignerframe vectors for\n               product  = ",
 StyleBox["S2",
  FontColor->RGBColor[0, 0, 1]],
 "projection.",
 StyleBox["S1",
  FontColor->RGBColor[0, 0, 1]],
 "projection:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", 
     StyleBox[
      RowBox[{
       StyleBox["k",
        FontColor->RGBColor[0, 0, 1]], "_"}]], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"SingularValues", "[", 
      RowBox[{
       StyleBox[
        RowBox[{
         StyleBox["S2",
          FontColor->RGBColor[0, 0, 1]], "projection"}]], ".", 
       StyleBox[
        RowBox[{
         StyleBox["S1",
          FontColor->RGBColor[0, 0, 1]], "projection"}]]}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{
       StyleBox["3",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox[",",
        FontColor->RGBColor[1, 0, 0]], 
       StyleBox["k",
        FontColor->RGBColor[0, 0, 1]]}], "]"}], "]"}]}], " ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"orthonormal", " ", "=", " ", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"alignerframe", "[", "k", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], "]"}]}]}], "Input"],

Cell["\<\
The projection matrix  for S1\[Intersection] S2 is: \
\>", "SmallText"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hanger", " ", "=", " ", 
    RowBox[{"Transpose", "[", " ", "aligner", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["S1",
       FontColor->RGBColor[0, 0, 1]], "intersect", 
      StyleBox["S2",
       FontColor->RGBColor[0, 0, 1]], "Projection"}]], " ", "=", " ", 
    StyleBox[
     RowBox[{"hanger", ".", "aligner"}],
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  StyleBox[
   RowBox[{
    StyleBox["S1",
     FontColor->RGBColor[0, 0, 1]], "intersect", 
    StyleBox["S2",
     FontColor->RGBColor[0, 0, 1]], "Projection"}]], "]"}]}], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["T.5.b.ii) Why did that work?", "Subsubsection"],

Cell[TextData[StyleBox["Thanks go to Timothy \"Timbo\" Braun for helpful \
pointers on this.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell[TextData[{
 "In the last problem,you calculated an  SVD aligner frame for the product  \
",
 StyleBox["S2Projection.S1Projection",
  FontColor->RGBColor[0, 0, 1]],
 ".\nAnd then you got your orthonormal basis for S1\[Intersection] S2 by \
taking all the aligner frame vectors with corresponding SVD stretch factors \
equal to",
 StyleBox[" 1",
  FontColor->RGBColor[0, 0, 1]],
 ".\nWhy did that do the job?\nWhy will the same thing work in other \
situations?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with subspaces S1 and S2 of kD and a given kD vector Y.\nIt so happens \
that saying that ",
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 " is in ",
 StyleBox["S1\[Intersection] S2 ",
  FontColor->RGBColor[0, 0, 1]],
 "is the same as saying that\n          ",
 StyleBox["||S2Projection.S1Projection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| = ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"],

Cell["\<\
For an explanation of this  delicious fact, go to the next part.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "That's why you go with the aligner frame vectors for the product  ",
 StyleBox["S2Projection.S1Projection",
  FontColor->RGBColor[0, 0, 1]],
 " that have corresponding stretch factors equal to 1."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.5.b.iii) Explanation of the logical sequence that says for subspaces S. \
S1 and S2 of kD: \n ",
 StyleBox["          ",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  FrameBox["1",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0.392187, 0]],
 "No matter what ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " in kD you go with, you are guaranteed that ",
 StyleBox["||Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| \[LessEqual] ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[0, 0, 1]],
 ".\n            ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  FrameBox["2",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 "Saying ",
 StyleBox["||Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 "for a given Y in kD ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "is the same as saying ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ".\n            ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  FrameBox["3",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 "Saying",
 StyleBox[" ", "Text"],
 StyleBox["||Sprojection.", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y", "Text",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["<", "Text",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[" ", "Text",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y", "Text",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ", "Text",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "for a given Y in kD ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "is the same as saying ",
 StyleBox["Y", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ", "Text"],
 "is ",
 StyleBox[" ", "Text"],
 StyleBox["not ", "Text",
  FontColor->GrayLevel[0]],
 "in",
 StyleBox[" ", "Text"],
 StyleBox["S", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".\n     ", "Text"],
 StyleBox[" \[RightTeeArrow]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  FrameBox["4",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0},
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Plain",
  FontVariations->{"CompatibilityType"->0}],
 " Saying that a given Y in kD is in ",
 StyleBox["S1\[Intersection] S2",
  FontColor->RGBColor[0, 0, 1]],
 " is the same as saying\n                            ",
 StyleBox["||S2Projection.S1Projection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| = ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[TextData[{
 "Here is the logical sequence for an explanation of why when you are given \
two subspaces S1 and S2 of kD, then saying that a given Y in kD is in ",
 StyleBox["S1\[Intersection] S2",
  FontColor->RGBColor[0, 0, 1]],
 " is the same as saying\n                            ",
 StyleBox["||S2Projection.S1Projection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| = ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell["\<\

For subspaces S, S1 and S2 of kD: \
\>", "Text"],

Cell[TextData[{
 "     ",
 " ",
 StyleBox["  ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  FrameBox["1",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0.392187, 0]],
 "No matter what ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " in kD you go with, you are guaranteed that ",
 StyleBox["||Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| \[LessEqual] ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["Click on the right for a detailed explanation", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 StyleBox["Explanation:",
  FontSize->12,
  FontWeight->"Bold",
  FontColor->RGBColor[0.466697, 0.533303, 0.6]],
 "\nTake Y break it into",
 StyleBox[" Y = Y1 + Y2",
  FontColor->RGBColor[0, 0, 1]],
 "  with Y1 in S and Y2 perpendicular to S. (So that SProjectionY = Y1).\nNow \
note that\n                 ||SProjectionY|| = ||Y1|| ",
 StyleBox["\[LessEqual]",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 Cell[BoxData[
  StyleBox[
   SqrtBox[
    RowBox[{"||", "Y1", 
     SuperscriptBox["||", "2"], 
     RowBox[{"+", 
      RowBox[{"||", "Y2", 
       SuperscriptBox["||", "2"]}]}]}]],
   FontSize->14,
   FontColor->GrayLevel[0]]]],
 " = ||Y||."
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 "       ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  FrameBox["2",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["  ",
  FontColor->RGBColor[1, 0, 1]],
 "Saying ",
 StyleBox["||Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 "for a given Y in kD ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "is the same as saying ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Text"],

Cell[CellGroupData[{

Cell["Click on the right for a detailed explanation", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 StyleBox["Explanation:\n",
  FontSize->12,
  FontWeight->"Bold",
  FontColor->RGBColor[0.466697, 0.533303, 0.6]],
 "Take Y break it into",
 StyleBox[" Y = Y1 + Y2",
  FontColor->RGBColor[0, 0, 1]],
 "  with Y1 in S and Y2 perpendicular to S. (So that SProjectionY = Y1).\n\
It's automatic that ||SProjectionY|| = ||Y1||. \n\n",
 StyleBox["||SProjectionY||",
  FontColor->RGBColor[0, 0, 1]],
 " = ||Y1|| ",
 StyleBox["=",
  FontColor->RGBColor[0, 0, 1]],
 " ||Y|| = ",
 Cell[BoxData[
  StyleBox[
   SqrtBox[
    RowBox[{"||", "Y1", 
     SuperscriptBox["||", "2"], 
     RowBox[{"+", 
      RowBox[{"||", "Y2", 
       SuperscriptBox["||", "2"]}]}]}]],
   FontSize->14,
   FontColor->GrayLevel[0]]]],
 "  ",
 StyleBox["\[DoubleLongLeftRightArrow]",
  FontColor->RGBColor[0.0979934, 0.0979934, 0.4392]],
 " ",
 StyleBox["Y2",
  FontColor->RGBColor[0, 0, 1]],
 " = {0,0,...,0} ",
 StyleBox["\[DoubleLongLeftRightArrow]",
  FontColor->RGBColor[0, 0, 0.502007]],
 " ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"],

Cell[TextData[{
 StyleBox["Read ",
  FontVariations->{"CompatibilityType"->0}],
 "\[DoubleLongLeftRightArrow]",
 StyleBox[" as \"is the same as\"",
  FontVariations->{"CompatibilityType"->0}]
}], "Special2",
 TextAlignment->Center,
 TextJustification->0]
}, Closed]],

Cell[TextData[{
 "       ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  FrameBox["3",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 " ",
 StyleBox["Saying ", "Text"],
 StyleBox["||Sprojection.", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y", "Text",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["<", "Text",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[" ", "Text",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y", "Text",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" for a given Y in kD", "Text",
  FontColor->GrayLevel[0]],
 StyleBox[" ", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["is the same as saying ", "Text"],
 StyleBox["Y", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is ", "Text"],
 StyleBox["not", "Text",
  FontColor->GrayLevel[0]],
 StyleBox[" in ", "Text"],
 StyleBox["S", "Text",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".", "Text"]
}], "Text"],

Cell[CellGroupData[{

Cell["Click on the right for a detailed explanation", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\nAccording to",
 StyleBox[" ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  FrameBox["1",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0.392187, 0]],
 ", you know that ",
 StyleBox["||Sprojection.Y|| \[LessEqual] ||Y||",
  FontColor->RGBColor[0, 0, 1]],
 ". \n",
 Cell[BoxData[
  FrameBox["2",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 " tells you that saying  ",
 StyleBox["||Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 "for a given Y in kD ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "is the same as saying ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ".\nSo saying ",
 StyleBox["||Sprojection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["<",
  FontWeight->"Bold",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" is the same as saying",
  FontColor->GrayLevel[0]],
 " ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " is ",
 StyleBox["not",
  FontColor->GrayLevel[0]],
 " in ",
 StyleBox["S",
  FontColor->RGBColor[0, 0, 1]],
 ".\n"
}], "SmallText"]
}, Closed]],

Cell[TextData[{
 "  ",
 StyleBox[" \[RightTeeArrow]",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 0.502007]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 Cell[BoxData[
  FrameBox["4",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 "  Given two subspaces S1 and S2 of kD, then saying that a given Y in kD is \
in ",
 StyleBox["S1\[Intersection] S2",
  FontColor->RGBColor[0, 0, 1]],
 " is the same as saying\n                            ",
 StyleBox["||S2Projection.S1Projection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| = ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell[CellGroupData[{

Cell["Click on the right for a detailed explanation", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 StyleBox["First half of the explanation:\n",
  FontWeight->"Bold"],
 StyleBox[" Assume Y is in S1 \[Intersection] S2 and explain why \
||S2Projection.S1Projection.Y||  =  ||Y||.",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 "\nThe assumption that Y is in S1\[Intersection] S2,  guarantees that ",
 StyleBox["S1Projection.Y = Y",
  FontColor->RGBColor[0, 0, 1]],
 " and  ",
 StyleBox["S2Projection.Y = Y.",
  FontColor->RGBColor[1, 0, 0]],
 "   \nSo if Y is in both S1\[Intersection] S2, then\n              \
S2Projection.",
 StyleBox["S1Projection.Y",
  FontColor->RGBColor[0, 0, 1]],
 "  = ",
 StyleBox["S2Projection.Y",
  FontColor->RGBColor[1, 0, 0]],
 " = ",
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 0]],
 ". \nAnd so\n",
 StyleBox["               ||S2Projection.S1Projection.Y||  =  ||Y||.",
  FontColor->RGBColor[0, 0.392187, 0]],
 " \n              \n",
 StyleBox["Second half of the explanation:",
  FontWeight->"Bold"],
 ":\n",
 StyleBox["Assume ||S2Projection.S1Projection.Y||  =  ||Y|| and explain why Y \
is in S1\[Intersection] S2.",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]]
}], "SmallText"],

Cell[TextData[{
 "According to ",
 StyleBox[" ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  FrameBox["3",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[", ",
  FontColor->RGBColor[0, 0.392187, 0]],
 "if Y is ",
 StyleBox["not in S1",
  FontColor->RGBColor[1, 0, 1]],
 ", then ",
 StyleBox["||S1projection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["|| ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["<",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ||",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||.\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["But according to ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  FrameBox["1",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontColor->GrayLevel[0]],
 "\n      ||Y|| = ||S2Projection.",
 StyleBox["S1Projection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->RGBColor[0, 0, 1]],
 "  \[LessEqual] ",
 StyleBox["||",
  FontColor->GrayLevel[0]],
 StyleBox["S1Projection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox["||",
  FontColor->GrayLevel[0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 " ",
 StyleBox["< ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["|| ",
  FontColor->GrayLevel[0]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[" ||.",
  FontColor->GrayLevel[0]],
 "  \nThe upshot:\nThe assumption that Y is",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["not in S1",
  FontColor->RGBColor[1, 0, 1]],
 " leads to the contradiction  ||Y|| ",
 StyleBox["< ",
  FontColor->RGBColor[1, 0, 0]],
 " ||",
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 "||.\nThis explains why  ",
 StyleBox["Y is in S1",
  FontColor->RGBColor[1, 0, 1]],
 ". \n\nThe fact that Y is in S1 guarantees that ",
 StyleBox["S1Projection.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 " = ",
 StyleBox["Y",
  FontColor->RGBColor[1, 0, 1]],
 ".\nSo according to",
 StyleBox["  ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  FrameBox["1",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 " ,\n                ||Y||  = ||S2Projection.",
 StyleBox["S1Projection.Y||",
  FontColor->RGBColor[0, 0, 1]],
 "  = ||S2Projection.",
 StyleBox["Y||.\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["This gives \n                ",
  FontColor->GrayLevel[0]],
 "||S2Projection.",
 StyleBox["Y|| = ",
  FontColor->RGBColor[0, 0, 1]],
 " ||Y||",
 StyleBox[".\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Now",
  FontColor->GrayLevel[0]],
 " ",
 Cell[BoxData[
  FrameBox["2",
   FrameMargins->{{0.2, 0.2}, {0.4, 0.4}}]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 1]],
 " steps in to tell you",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["that Y is also in S2. \n\nThe conclusion:\nSaying ",
  FontColor->GrayLevel[0]],
 StyleBox["||S2Projection.S1Projection.",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["||  =  ||",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["|| ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["is the same as saying",
  FontVariations->{"CompatibilityType"->0}],
 StyleBox["  Y is in S1\[Intersection] S2.",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["\n",
  FontColor->GrayLevel[0]],
 "There you go."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.6) Getting an orthonormal basis from a given basis via the Gram-Schmidt \
process\
\>", "Subsection",
 CellTags->"MGM.08.T6"],

Cell[CellGroupData[{

Cell["T.6.a.i) Using the GramSchmidt instruction", "Subsubsection"],

Cell["\<\
A subspace S of 6D is defined by the following given spanning set:\
\>", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.43", ",", 
      RowBox[{"-", "0.57"}], ",", "2.19", ",", 
      RowBox[{"-", "0.94"}], ",", "1.28"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.97", ",", 
      RowBox[{"-", "3.29"}], ",", 
      RowBox[{"-", "0.83"}], ",", "5.23", ",", "1.26"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.14"}], ",", "3.08", ",", "0.00", ",", 
      RowBox[{"-", "1.97"}], ",", 
      RowBox[{"-", "0.96"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.68"}], ",", "1.22", ",", 
      RowBox[{"-", "3.64"}], ",", 
      RowBox[{"-", "2.14"}], ",", 
      RowBox[{"-", "0.94"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "Input"],

Cell["Check the dimension of S:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", "=", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Sdim", "=", 
  RowBox[{"Length", "[", 
   RowBox[{
    RowBox[{"SingularValues", "[", "SpannerMatrix", "]"}], 
    "\[LeftDoubleBracket]", 
    StyleBox["2",
     FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}], 
   "]"}]}]}], "Input"],

Cell["\<\
This tells you that the dimension of S is the same as the number of vectors \
in the spanning set. 
And this signals that the given spanning set for S is also a basis (linearly \
independent spanning set) for S.
Old matrix hands know that you can get an orthonormal basis (perpendicular \
frame spanning S) for S by applying what lots of folks like to call the \
\"Gram-Schmidt Orthogonalization Process:\"\
\>", "Text"],

Cell[BoxData[
 RowBox[{"orthospanners", "=", " ", 
  RowBox[{"Orthogonalize", "[", " ", "spanners", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["What are these vectors?", "Text"],

Cell["Answer:", "Special1"],

Cell["Take another look:", "SmallText"],

Cell[BoxData[
 RowBox[{"orthospanners", "=", " ", 
  RowBox[{"Orthogonalize", "[", " ", "spanners", "]"}]}]], "Input"],

Cell["\<\
These four vectors give you an orthonormal basis for the subspace S spanned \
by the original basis. They were produced through a process widely known as \
the Gram-Schmidt process. 

If you want to know what the Gram-Schmidt process is, go on.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.a.ii) How the Gram-Schmidt process works", "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "How does the Gram-Schmidt process take in a basis (linearly independent \
spanning set)\n        ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\nfor a subspace S of kD and spit out an orthonormal basis (perpendicular \
frame) for the same subspace S?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Here's how it goes:\nGo with the given basis   \n      ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 "\nfor  a subspace S of nD."
}], "SmallText"],

Cell[TextData[{
 "Gram-Schmidt  ",
 StyleBox["Step1",
  FontColor->GrayLevel[0]],
 ":"
}], "Subsubsection"],

Cell[TextData[{
 "Put ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y", "[", "1", "]"}], "=", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "."}]}]]],
 " \nand put\n     ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "1", "]"}], "=", 
   FractionBox[
    RowBox[{"Y", "[", "1", "]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"Y", "[", "1", "]"}], ".", 
      RowBox[{"Y", "[", "1", "]"}]}]]]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "Gram-Schmidt  ",
 StyleBox[" Step2:",
  FontColor->GrayLevel[0]]
}], "Subsubsection"],

Cell[TextData[{
 "Put \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y", "[", "2", "]"}], "=", 
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "-", 
    RowBox[{"(", 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "2", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "1", "]"}]}], ")"}]}]}]]],
 ".\n Put \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "2", "]"}], "=", 
   FractionBox[
    RowBox[{"Y", "[", "2", "]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"Y", "[", "2", "]"}], ".", 
      RowBox[{"Y", "[", "2", "]"}]}]]]}]]],
 " .\nNote:\n       ",
 Cell[BoxData[
  RowBox[{"X", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"X", "[", "2", "]"}]]],
 " are unit vectors,\n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ".", 
    RowBox[{"X", "[", "2", "]"}]}], "=", "0"}]]],
 " ,\n and \n    ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}]}], "}"}]]],
 " spans the subspace spanned by ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}]}], "}"}]]]
}], "SmallText"],

Cell[TextData[{
 "Gram-Schmidt  ",
 StyleBox["Step3",
  FontColor->GrayLevel[0]],
 ":"
}], "Subsubsection"],

Cell["Put ", "SmallText"],

Cell[TextData[{
 "\n      ",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"Y", "[", "3", "]"}], "=", 
   RowBox[{"spanner", "[", "3", "]"}]}], "\n", 
  RowBox[{"\t\t", 
   RowBox[{"-", " ", 
    RowBox[{"(", 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "3", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "1", "]"}]}], ")"}]}], " "}]}]],
 "."
}], "SmallText"],

Cell[TextData[{
 "                              ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"-", " ", 
    RowBox[{"(", 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "3", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "2", "]"}]}], ")"}]}]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "and put \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "3", "]"}], "=", 
   FractionBox[
    RowBox[{"Y", "[", "3", "]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"Y", "[", "3", "]"}], ".", 
      RowBox[{"Y", "[", "3", "]"}]}]]]}]]],
 ".\nNote:Note:\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "1", "]"}], ",", 
   RowBox[{"X", "[", "2", "]"}]}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"X", "[", "3", "]"}]]],
 " are all unit vectors,\n     \n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ".", 
    RowBox[{"X", "[", "2", "]"}]}], "=", "0"}]]],
 " \n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ".", 
    RowBox[{"X", "[", "3", "]"}]}], "=", "0"}]]],
 " \n      ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{
     RowBox[{"X", "[", "2", "]"}], ".", 
     RowBox[{"X", "[", "3", "]"}]}], "=", "0"}]}]]],
 " \n and \n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}], ",", 
    RowBox[{"X", "[", "3", "]"}]}], "}"}]]],
 " spans the subspace spanned by ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}]}], "}"}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "Gram-Schmidt  ",
 StyleBox["Step j",
  FontColor->GrayLevel[0]],
 ":"
}], "Subsubsection"],

Cell[TextData[{
 "Put \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y", "[", "j", "]"}], "=", 
   RowBox[{
    RowBox[{"spanner", "[", "j", "]"}], "-", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], 
      RowBox[{"j", "-", "1"}]], 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "j", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "i", "]"}]}]}]}]}]]],
 ".\n\n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "j", "]"}], "=", 
   FractionBox[
    RowBox[{"Y", "[", "j", "]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"Y", "[", "j", "]"}], ".", 
      RowBox[{"Y", "[", "j", "]"}]}]]]}]]],
 " .\n Note\n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "1", "]"}], ",", 
   RowBox[{"X", "[", "2", "]"}]}]]],
 ",. . . , ",
 Cell[BoxData[
  RowBox[{"X", "[", "j", "]"}]]],
 " are all unit vectors,\n      \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"X", "[", "p", "]"}], ".", 
    RowBox[{"X", "[", "i", "]"}]}], "=", "0"}]]],
 " for i,p = 1,2,...,j-1  with i \[NotEqual] p.\nand\n     ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}], ",", 
    RowBox[{"X", "[", "3", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"X", "[", "j", "]"}]}], "}"}]]],
 " \n spans the subspace spanned by \n     ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}], ",", "...", ",", 
    RowBox[{"spanner", "[", "j", "]"}]}], "}"}]]],
 "\n\nStarting with\n given spanning set   \n      ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 ",\nthe process stops when  j = k and produces vectors \n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}], ",", "...", ",", 
    RowBox[{"X", "[", "k", "]"}]}], "}"}]]],
 " \nwith the guarantees that:\n1) Each ",
 Cell[BoxData[
  RowBox[{"X", "[", "i", "]"}]]],
 " is a unit vector .\n2) And for each stage j, \n       ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}], ",", "...", ",", 
    RowBox[{"X", "[", "j", "]"}]}], "}"}]]],
 " \nspans the same subspace as\n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"spanner", "[", "1", "]"}], ",", 
     RowBox[{"spanner", "[", "2", "]"}], ",", 
     RowBox[{".", " ", ".", " ", "."}], ",", 
     RowBox[{"spanner", "[", "j", "]"}]}], "}"}], "."}]]],
 "\n \n This tells you that\n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}], ",", "...", ",", 
    RowBox[{"X", "[", "k", "]"}]}], "}"}]]],
 "  \n  spans the same subspace as\n         ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"spanner", "[", "k", "]"}]}], "}"}]]],
 " \nSo ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"X", "[", "1", "]"}], ",", 
    RowBox[{"X", "[", "2", "]"}], ",", 
    RowBox[{".", " ", ".", " ", "."}], ",", 
    RowBox[{"X", "[", "k", "]"}]}], "}"}]]],
 "  is guaranteed to be an\n orthonormal basis of S (a perpendicular frame \
that frames up S)."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.a.iii) Trying it out", "Subsubsection"],

Cell["\<\
This is the way students in book courses generate an orthonormal basis from 
a non-orthonormal basis.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Here is the linearly independent spanning set from part i)", "Text",
 Evaluatable->False],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.43", ",", 
      RowBox[{"-", "0.57"}], ",", "2.19", ",", 
      RowBox[{"-", "0.94"}], ",", "1.28"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.97", ",", 
      RowBox[{"-", "3.29"}], ",", 
      RowBox[{"-", "0.83"}], ",", "5.23", ",", "1.26"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.14"}], ",", "3.08", ",", "0.00", ",", 
      RowBox[{"-", "1.97"}], ",", 
      RowBox[{"-", "0.96"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.68"}], ",", "1.22", ",", 
      RowBox[{"-", "3.64"}], ",", 
      RowBox[{"-", "2.14"}], ",", 
      RowBox[{"-", "0.94"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], "Input"],

Cell["An orthonormal basis for the same subspace is:", "Text"],

Cell[BoxData[
 RowBox[{"orthospanners", "=", " ", 
  RowBox[{"Orthogonalize", "[", " ", "spanners", "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Illustrate how the  Gram-Schmidt process produces this orthonormal basis for \
S:\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Copy, paste and edit:\nGo with the given basis   \n      ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], ",", 
    RowBox[{"spanner", "[", "2", "]"}], ",", 
    RowBox[{"spanner", "[", "3", "]"}], ",", 
    RowBox[{"sapnner", "[", "4", "]"}]}], "}"}]]],
 "\nfor  a subspace S of 6D."
}], "SmallText"],

Cell[TextData[{
 "Gram-Schmidt",
 StyleBox[" Step1",
  FontColor->GrayLevel[0]],
 ":"
}], "Subsubsection"],

Cell[TextData[{
 "Put ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y", "[", "1", "]"}], "=", 
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "."}]}]]],
 " \nand put\n     ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "1", "]"}], "=", 
   FractionBox[
    RowBox[{"Y", "[", "1", "]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"Y", "[", "1", "]"}], ".", 
      RowBox[{"Y", "[", "1", "]"}]}]]]}]]],
 ":"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"X", ",", "Y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Y", "[", "1", "]"}], "=", 
    RowBox[{"spanner", "[", "1", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"X", "[", "1", "]"}], "=", 
  FractionBox[
   RowBox[{"Y", "[", "1", "]"}], 
   SqrtBox[
    RowBox[{
     RowBox[{"Y", "[", "1", "]"}], ".", 
     RowBox[{"Y", "[", "1", "]"}]}]]]}]}], "Input"],

Cell[TextData[{
 "Gram-Schmidt  ",
 StyleBox["Step2",
  FontColor->GrayLevel[0]],
 ":"
}], "Subsubsection"],

Cell[TextData[{
 "Put \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"Y", "[", "2", "]"}], "=", 
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "-", 
    RowBox[{"(", 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "2", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "1", "]"}]}], ")"}]}]}]]],
 ".\n Put \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "2", "]"}], "=", 
   FractionBox[
    RowBox[{"Y", "[", "2", "]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"Y", "[", "2", "]"}], ".", 
      RowBox[{"Y", "[", "2", "]"}]}]]]}]]],
 "\n"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Y", "[", "2", "]"}], "=", 
    RowBox[{
     RowBox[{"spanner", "[", "2", "]"}], "-", 
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"spanner", "[", "2", "]"}], ".", 
         RowBox[{"X", "[", "1", "]"}]}], ")"}],
       FontColor->RGBColor[0, 0, 1]], " ", 
      RowBox[{"X", "[", "1", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"X", "[", "2", "]"}], "=", 
  FractionBox[
   RowBox[{"Y", "[", "2", "]"}], 
   SqrtBox[
    RowBox[{
     RowBox[{"Y", "[", "2", "]"}], ".", 
     RowBox[{"Y", "[", "2", "]"}]}]]]}]}], "Input"],

Cell[TextData[{
 "Gram-Schmidt  ",
 StyleBox["Step3",
  FontColor->GrayLevel[0]],
 ":"
}], "Subsubsection"],

Cell["Put ", "SmallText"],

Cell[TextData[{
 "    ",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"Y", "[", "3", "]"}], "=", 
   RowBox[{"spanner", "[", "3", "]"}]}], "\n", 
  RowBox[{"\t\t", 
   RowBox[{"-", " ", 
    RowBox[{"(", 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "3", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "1", "]"}]}], ")"}]}], " "}]}]],
 "."
}], "SmallText"],

Cell[TextData[{
 "                              ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"-", " ", 
    RowBox[{"(", 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "3", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "2", "]"}]}], ")"}]}]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "\nand put \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "3", "]"}], "=", 
   FractionBox[
    RowBox[{"Y", "[", "3", "]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"Y", "[", "3", "]"}], ".", 
      RowBox[{"Y", "[", "3", "]"}]}]]]}]]],
 ".\n"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Y", "[", "3", "]"}], "=", 
    RowBox[{
     RowBox[{"spanner", "[", "3", "]"}], "-", 
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"spanner", "[", "3", "]"}], ".", 
         RowBox[{"X", "[", "1", "]"}]}], " ", ")"}],
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{"X", "[", "1", "]"}]}], "-", " ", 
     RowBox[{
      StyleBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"spanner", "[", "3", "]"}], ".", 
         RowBox[{"X", "[", "2", "]"}]}], ")"}],
       FontColor->RGBColor[0, 0, 1]], " ", 
      RowBox[{"X", "[", "2", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"X", "[", "3", "]"}], "=", 
  FractionBox[
   RowBox[{"Y", "[", "3", "]"}], 
   SqrtBox[
    RowBox[{
     RowBox[{"Y", "[", "3", "]"}], ".", 
     RowBox[{"Y", "[", "3", "]"}]}]]]}]}], "Input"],

Cell[TextData[{
 "Gram-Schmidt ",
 StyleBox["Step 4",
  FontColor->GrayLevel[0]],
 ":"
}], "Subsubsection"],

Cell["Put ", "SmallText"],

Cell[TextData[{
 "    ",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"Y", "[", "4", "]"}], "=", 
   RowBox[{"spanner", "[", "4", "]"}]}], "\n", 
  RowBox[{"\t\t", 
   RowBox[{"-", " ", 
    RowBox[{"(", 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "4", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "1", "]"}]}], ")"}]}], " "}]}]],
 "."
}], "SmallText"],

Cell[TextData[{
 "                              ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"-", " ", 
    RowBox[{"(", 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "4", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "2", "]"}]}], ")"}]}]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "                              ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"-", " ", 
    RowBox[{"(", 
     RowBox[{"component", " ", "of", " ", 
      RowBox[{"spanner", "[", "4", "]"}], " ", "in", " ", "the", " ", 
      "direction", " ", "of", " ", 
      RowBox[{"X", "[", "3", "]"}]}], ")"}]}]}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "and put \n      ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"X", "[", "4", "]"}], "=", 
   FractionBox[
    RowBox[{"Y", "[", "4", "]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"Y", "[", "4", "]"}], ".", 
      RowBox[{"Y", "[", "4", "]"}]}]]]}]]],
 ".\n"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "i", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Y", "[", "4", "]"}], "=", 
    RowBox[{
     RowBox[{"spanner", "[", "4", "]"}], "-", 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "3"], 
      RowBox[{
       StyleBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"spanner", "[", "4", "]"}], ".", 
          RowBox[{"X", "[", "i", "]"}]}], ")"}],
        FontColor->RGBColor[0, 0, 1]], "  ", 
       RowBox[{"X", "[", "i", "]"}]}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"X", "[", "4", "]"}], "=", 
  FractionBox[
   RowBox[{"Y", "[", "4", "]"}], 
   SqrtBox[
    RowBox[{
     RowBox[{"Y", "[", "4", "]"}], ".", 
     RowBox[{"Y", "[", "4", "]"}]}]]]}]}], "Input"],

Cell["Compare:", "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"X", "[", "1", "]"}], ",", 
   RowBox[{"X", "[", "2", "]"}], ",", 
   RowBox[{"X", "[", "3", "]"}], ",", 
   RowBox[{"X", "[", "4", "]"}]}], "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"orthospanners", "=", " ", 
  RowBox[{"Orthogonalize", "[", " ", "spanners", "]"}]}]], "Input"],

Cell["It will work this way every time.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.6.b.i) SVD versus Gram-Schmidt: They both give you an orthonormal basis. 
Usually they don't give the same basis\
\>", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Given a linearly independent spanning set for a subspace S of nD,
you have your choice of an orthonormal basis S via 
1) By going with the GramSchmidt process (as above) 
or 
2) By going with the SVD hanger frame for the associated SpannerMatrix (as in \
the Basics)
Does it matter which you use?. \
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Try out the two on this spanning set for a subspace S of 6D:", \
"SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"i", ",", "spanner"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.43", ",", 
      RowBox[{"-", "0.57"}], ",", "2.19", ",", 
      RowBox[{"-", "0.94"}], ",", "1.28", ",", "1.00"}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.97", ",", 
      RowBox[{"-", "3.29"}], ",", 
      RowBox[{"-", "0.83"}], ",", "5.23", ",", "1.26", ",", "0.98"}], "}"}]}],
    ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "3", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "6.14"}], ",", "3.08", ",", "0.00", ",", 
      RowBox[{"-", "1.97"}], ",", 
      RowBox[{"-", "0.96"}], ",", "0.75"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "4", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.68"}], ",", "1.22", ",", 
      RowBox[{"-", "3.64"}], ",", 
      RowBox[{"-", "2.14"}], ",", 
      RowBox[{"-", "0.94"}], ",", 
      RowBox[{"-", "1.26"}]}], "}"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"spanner", "[", "5", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"1.23", ",", "1.78", ",", "6.90", ",", 
      RowBox[{"-", "3.77"}], ",", 
      RowBox[{"-", "0.86"}], ",", "2.53"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"spanners", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"spanner", "[", "i", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SpannerMatrix", " ", "=", " ", 
    RowBox[{"Transpose", "[", "spanners", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["SVDorthonormal",
   FontColor->RGBColor[0, 0, 1]], " ", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "SpannerMatrix", " ", "]"}], "[", 
   RowBox[{"[", 
    StyleBox["1",
     FontColor->RGBColor[1, 0, 0]], "]"}], "]"}]}]}], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox["GramSchmidtorthonormal",
   FontColor->RGBColor[0, 0, 1]], "=", " ", 
  RowBox[{"Orthogonalize", "[", " ", "spanners", "]"}]}]], "Input"],

Cell["\<\
The results are different but each gives a fully legitimate orthonormal basis \
for S.

If you are away from the computer, you might prefer Gram-Schmidt because, in \
principle, it can be done by hand.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.b.ii) Down side of Gram Schmidt", "Subsubsection"],

Cell[CellGroupData[{

Cell["What's the down side of Gram-Schmidt?", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The down side of Gram-Schmidt is that before you use it, you have to know \
that the given spanning set is linearly independent (is a basis). There is no \
such problem when you go with SVD. \
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, -1}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.08.T1"->{
  Cell[29519, 803, 303, 6, 111, "Subsection",
   CellTags->"MGM.08.T1"]},
 "MGM.08.T2"->{
  Cell[41538, 1237, 226, 7, 86, "Subsection",
   CellTags->"MGM.08.T2"]},
 "MGM.08.T3"->{
  Cell[58628, 1826, 1788, 68, 229, "Subsection",
   CellTags->"MGM.08.T3"]},
 "MGM.08.T4"->{
  Cell[93325, 3213, 443, 9, 136, "Subsection",
   CellTags->"MGM.08.T4"]},
 "MGM.08.T5"->{
  Cell[108809, 3813, 2799, 102, 261, "Subsection",
   CellTags->"MGM.08.T5"]},
 "MGM.08.T6"->{
  Cell[152307, 5452, 137, 4, 36, "Subsection",
   CellTags->"MGM.08.T6"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.08.T1", 230711, 7511},
 {"MGM.08.T2", 230801, 7514},
 {"MGM.08.T3", 230891, 7517},
 {"MGM.08.T4", 230984, 7520},
 {"MGM.08.T5", 231075, 7523},
 {"MGM.08.T6", 231170, 7526}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 181, 6, 108, "Title"],
Cell[CellGroupData[{
Cell[6418, 138, 193, 7, 28, "Special2"],
Cell[6614, 147, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7931, 189, 38, 0, 31, "Subsubsection"],
Cell[7972, 191, 1344, 31, 156, "Input"],
Cell[9319, 224, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9492, 230, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26863, 713, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27110, 724, 39, 0, 35, "Subsubsection"],
Cell[27152, 726, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29519, 803, 303, 6, 111, "Subsection",
 CellTags->"MGM.08.T1"],
Cell[29825, 811, 1562, 50, 274, "Text"],
Cell[CellGroupData[{
Cell[31412, 865, 71, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[31508, 869, 116, 3, 49, "Text"],
Cell[31627, 874, 27, 0, 23, "Special1"],
Cell[31657, 876, 72, 3, 49, "SmallText"],
Cell[31732, 881, 74, 0, 31, "Subsubsection"],
Cell[31809, 883, 747, 26, 125, "SmallText"],
Cell[32559, 911, 140, 4, 12, "Special2"],
Cell[32702, 917, 68, 0, 23, "Subsubsection"],
Cell[32773, 919, 789, 26, 125, "SmallText"],
Cell[33565, 947, 148, 4, 12, "Special2"],
Cell[33716, 953, 71, 0, 23, "Subsubsection"],
Cell[33790, 955, 1401, 46, 276, "SmallText"],
Cell[35194, 1003, 148, 4, 12, "Special2"],
Cell[35345, 1009, 79, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[35473, 1015, 96, 2, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[35594, 1021, 132, 3, 49, "Text"],
Cell[35729, 1026, 27, 0, 23, "Special1"],
Cell[35759, 1028, 27, 0, 56, "Accident"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[35835, 1034, 108, 2, 31, "Subsubsection"],
Cell[35946, 1038, 111, 3, 24, "Text",
 Evaluatable->False],
Cell[36060, 1043, 1601, 53, 111, "Input"],
Cell[CellGroupData[{
Cell[37686, 1100, 182, 4, 74, "Text"],
Cell[37871, 1106, 27, 0, 23, "Special1"],
Cell[37901, 1108, 206, 5, 99, "SmallText"],
Cell[38110, 1115, 1067, 35, 96, "Input"],
Cell[39180, 1152, 105, 2, 24, "SmallText"],
Cell[39288, 1156, 956, 32, 86, "Input"],
Cell[40247, 1190, 78, 0, 24, "SmallText"],
Cell[40328, 1192, 830, 25, 66, "Input"],
Cell[41161, 1219, 29, 0, 24, "SmallText"],
Cell[41193, 1221, 250, 7, 36, "Input"],
Cell[41446, 1230, 31, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[41538, 1237, 226, 7, 86, "Subsection",
 CellTags->"MGM.08.T2"],
Cell[41767, 1246, 198, 4, 43, "Special5"],
Cell[CellGroupData[{
Cell[41990, 1254, 94, 2, 31, "Subsubsection"],
Cell[42087, 1258, 41, 0, 24, "Text"],
Cell[42131, 1260, 424, 13, 36, "Input"],
Cell[42558, 1275, 40, 0, 20, "Special5"],
Cell[CellGroupData[{
Cell[42623, 1279, 351, 6, 124, "Text"],
Cell[42977, 1287, 27, 0, 23, "Special1"],
Cell[43007, 1289, 135, 4, 49, "SmallText"],
Cell[43145, 1295, 1018, 33, 81, "Input"],
Cell[44166, 1330, 99, 2, 24, "SmallText"],
Cell[44268, 1334, 675, 22, 66, "Input"],
Cell[44946, 1358, 618, 19, 101, "SmallText"],
Cell[45567, 1379, 2302, 72, 201, "Input"],
Cell[47872, 1453, 56, 0, 24, "SmallText"],
Cell[47931, 1455, 111, 3, 24, "SmallText"],
Cell[48045, 1460, 4332, 144, 336, "Input"],
Cell[52380, 1606, 103, 2, 20, "Special5"],
Cell[52486, 1610, 135, 4, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[52670, 1620, 73, 0, 31, "Subsubsection"],
Cell[52746, 1622, 95, 2, 24, "Text"],
Cell[52844, 1626, 77, 2, 20, "Input"],
Cell[52924, 1630, 24, 0, 24, "Text"],
Cell[52951, 1632, 153, 5, 20, "Input"],
Cell[53107, 1639, 38, 0, 24, "Text"],
Cell[53148, 1641, 194, 6, 20, "Input"],
Cell[CellGroupData[{
Cell[53367, 1651, 287, 7, 80, "Text"],
Cell[53657, 1660, 27, 0, 23, "Special1"],
Cell[53687, 1662, 466, 9, 155, "SmallText"],
Cell[54156, 1673, 4332, 144, 336, "Input"],
Cell[58491, 1819, 76, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[58628, 1826, 1788, 68, 229, "Subsection",
 CellTags->"MGM.08.T3"],
Cell[CellGroupData[{
Cell[60441, 1898, 383, 13, 78, "Subsubsection"],
Cell[60827, 1913, 629, 19, 178, "Text"],
Cell[61459, 1934, 749, 25, 66, "Input"],
Cell[62211, 1961, 52, 0, 24, "Text"],
Cell[62266, 1963, 1985, 59, 186, "Input"],
Cell[64254, 2024, 191, 7, 26, "Text"],
Cell[64448, 2033, 27, 0, 23, "Special1"],
Cell[64478, 2035, 51, 0, 24, "SmallText"],
Cell[64532, 2037, 434, 12, 51, "Input"],
Cell[64969, 2051, 235, 9, 51, "SmallText"],
Cell[65207, 2062, 2591, 82, 141, "Input"],
Cell[67801, 2146, 72, 0, 24, "SmallText"],
Cell[67876, 2148, 244, 7, 20, "Input"],
Cell[68123, 2157, 235, 8, 51, "SmallText"]
}, Closed]],
Cell[CellGroupData[{
Cell[68395, 2170, 347, 15, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[68767, 2189, 452, 19, 76, "Text"],
Cell[69222, 2210, 27, 0, 23, "Special1"],
Cell[69252, 2212, 830, 27, 176, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[70131, 2245, 1067, 46, 66, "Subsubsection"],
Cell[71201, 2293, 794, 33, 103, "Text"],
Cell[CellGroupData[{
Cell[72020, 2330, 383, 17, 39, "Text"],
Cell[72406, 2349, 27, 0, 23, "Special1"],
Cell[72436, 2351, 1403, 62, 205, "SmallText"],
Cell[73842, 2415, 439, 21, 27, "SmallText"],
Cell[74284, 2438, 875, 41, 49, "SmallText"],
Cell[75162, 2481, 257, 10, 52, "SmallText"],
Cell[75422, 2493, 347, 14, 39, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[75818, 2513, 426, 18, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[76269, 2535, 494, 20, 103, "Text"],
Cell[76766, 2557, 27, 0, 23, "Special1"],
Cell[76796, 2559, 1234, 53, 156, "SmallText"],
Cell[78033, 2614, 856, 37, 151, "SmallText"],
Cell[78892, 2653, 880, 41, 36, "Special2"],
Cell[79775, 2696, 446, 18, 102, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[80270, 2720, 387, 15, 34, "Subsubsection"],
Cell[CellGroupData[{
Cell[80682, 2739, 439, 16, 76, "Text"],
Cell[81124, 2757, 27, 0, 23, "Special1"],
Cell[81154, 2759, 1410, 59, 234, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[82613, 2824, 104, 2, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[82742, 2830, 317, 9, 74, "Text"],
Cell[83062, 2841, 27, 0, 23, "Special1"],
Cell[83092, 2843, 754, 29, 224, "SmallText"],
Cell[83849, 2874, 59, 0, 31, "Subsubsection"],
Cell[83911, 2876, 490, 13, 99, "SmallText"],
Cell[84404, 2891, 102, 2, 31, "Subsubsection"],
Cell[84509, 2895, 607, 12, 274, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[85165, 2913, 364, 14, 56, "Subsubsection"],
Cell[85532, 2929, 97, 2, 24, "Text"],
Cell[85632, 2933, 1798, 63, 81, "Input"],
Cell[87433, 2998, 66, 0, 24, "Text"],
Cell[87502, 3000, 363, 10, 36, "Input"],
Cell[87868, 3012, 362, 10, 12, "Special2"],
Cell[CellGroupData[{
Cell[88255, 3026, 882, 31, 149, "Text"],
Cell[89140, 3059, 27, 0, 23, "Special1"],
Cell[89170, 3061, 49, 0, 24, "SmallText"],
Cell[89222, 3063, 434, 12, 51, "Input"],
Cell[89659, 3077, 548, 18, 99, "SmallText"],
Cell[90210, 3097, 702, 24, 36, "Input"],
Cell[90915, 3123, 486, 16, 36, "Input"],
Cell[91404, 3141, 127, 3, 49, "SmallText"],
Cell[91534, 3146, 724, 24, 51, "Input"],
Cell[92261, 3172, 247, 8, 49, "SmallText"],
Cell[92511, 3182, 491, 14, 36, "Input"],
Cell[93005, 3198, 259, 8, 74, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[93325, 3213, 443, 9, 136, "Subsection",
 CellTags->"MGM.08.T4"],
Cell[CellGroupData[{
Cell[93793, 3226, 128, 3, 31, "Subsubsection"],
Cell[93924, 3231, 32, 0, 24, "Text"],
Cell[93959, 3233, 473, 15, 36, "Input"],
Cell[94435, 3250, 74, 0, 24, "Text"],
Cell[94512, 3252, 62, 1, 20, "Input"],
Cell[CellGroupData[{
Cell[94599, 3257, 39, 0, 24, "Text"],
Cell[94641, 3259, 27, 0, 23, "Special1"],
Cell[94671, 3261, 32, 0, 24, "SmallText"],
Cell[94706, 3263, 408, 12, 36, "Input"],
Cell[95117, 3277, 209, 4, 74, "SmallText"],
Cell[95329, 3283, 329, 10, 51, "Input"],
Cell[95661, 3295, 71, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[95781, 3301, 381, 10, 76, "Subsubsection"],
Cell[96165, 3313, 38, 0, 24, "Text"],
Cell[96206, 3315, 971, 32, 96, "Input"],
Cell[CellGroupData[{
Cell[97202, 3351, 125, 3, 49, "Text"],
Cell[97330, 3356, 27, 0, 23, "Special1"],
Cell[97360, 3358, 128, 3, 49, "SmallText"],
Cell[97491, 3363, 843, 27, 66, "Input"],
Cell[98337, 3392, 484, 16, 74, "SmallText"],
Cell[CellGroupData[{
Cell[98846, 3412, 122, 2, 12, "Special2"],
Cell[98971, 3416, 309, 11, 49, "SmallText"],
Cell[99283, 3429, 480, 19, 28, "SmallText"],
Cell[CellGroupData[{
Cell[99788, 3452, 124, 2, 12, "Special2"],
Cell[99915, 3456, 121, 5, 24, "SmallText"],
Cell[100039, 3463, 442, 15, 75, "Text"],
Cell[100484, 3480, 453, 17, 50, "Text"],
Cell[100940, 3499, 113, 2, 12, "Special2"],
Cell[101056, 3503, 323, 12, 50, "Text"],
Cell[101382, 3517, 116, 4, 24, "SmallText"],
Cell[101501, 3523, 152, 5, 24, "SmallText"]
}, Closed]],
Cell[101668, 3531, 448, 18, 28, "SmallText"],
Cell[CellGroupData[{
Cell[102141, 3553, 124, 2, 12, "Special2"],
Cell[102268, 3557, 78, 3, 49, "SmallText"],
Cell[102349, 3562, 446, 15, 75, "SmallText"],
Cell[102798, 3579, 587, 19, 75, "SmallText"],
Cell[103388, 3600, 791, 30, 75, "Text"],
Cell[104182, 3632, 294, 12, 49, "SmallText"],
Cell[104479, 3646, 638, 31, 41, "Special2"],
Cell[105120, 3679, 184, 7, 49, "SmallText"],
Cell[105307, 3688, 140, 6, 12, "Special2"],
Cell[105450, 3696, 669, 16, 149, "SmallText"]
}, Closed]]
}, Closed]],
Cell[106146, 3716, 283, 9, 49, "SmallText"],
Cell[106432, 3727, 756, 24, 66, "Input"],
Cell[107191, 3753, 262, 6, 99, "SmallText"],
Cell[107456, 3761, 803, 25, 66, "Input"],
Cell[108262, 3788, 54, 3, 49, "SmallText"],
Cell[108319, 3793, 429, 13, 67, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[108809, 3813, 2799, 102, 261, "Subsection",
 CellTags->"MGM.08.T5"],
Cell[CellGroupData[{
Cell[111633, 3919, 61, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[111719, 3923, 351, 8, 149, "Text"],
Cell[112073, 3933, 27, 0, 23, "Special1"],
Cell[112103, 3935, 246, 6, 99, "SmallText"],
Cell[112352, 3943, 687, 27, 24, "SmallText"],
Cell[113042, 3972, 121, 5, 24, "SmallText"],
Cell[113166, 3979, 331, 13, 49, "SmallText"],
Cell[113500, 3994, 122, 5, 24, "SmallText"],
Cell[113625, 4001, 134, 5, 24, "SmallText"],
Cell[113762, 4008, 687, 27, 24, "SmallText"],
Cell[114452, 4037, 121, 5, 24, "SmallText"],
Cell[114576, 4044, 331, 13, 52, "SmallText"],
Cell[114910, 4059, 122, 5, 24, "SmallText"],
Cell[115035, 4066, 1247, 44, 252, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[116331, 4116, 127, 3, 31, "Subsubsection"],
Cell[116461, 4121, 87, 2, 24, "Text"],
Cell[116551, 4125, 1574, 50, 96, "Input"],
Cell[118128, 4177, 94, 2, 24, "Text"],
Cell[118225, 4181, 945, 31, 66, "Input"],
Cell[CellGroupData[{
Cell[119195, 4216, 221, 6, 124, "Text"],
Cell[119419, 4224, 27, 0, 23, "Special1"],
Cell[119449, 4226, 44, 0, 24, "SmallText"],
Cell[119496, 4228, 577, 19, 51, "Input"],
Cell[120076, 4249, 44, 0, 24, "SmallText"],
Cell[120123, 4251, 488, 15, 51, "Input"],
Cell[120614, 4268, 329, 7, 124, "SmallText"],
Cell[120946, 4277, 244, 8, 30, "Input"],
Cell[121193, 4287, 128, 3, 49, "SmallText"],
Cell[121324, 4292, 856, 30, 51, "Input"],
Cell[122183, 4324, 167, 4, 74, "SmallText"],
Cell[122353, 4330, 323, 10, 20, "Input"],
Cell[122679, 4342, 34, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[122762, 4348, 218, 4, 52, "Subsubsection"],
Cell[122983, 4354, 87, 2, 24, "Text"],
Cell[123073, 4358, 1480, 48, 96, "Input"],
Cell[124556, 4408, 94, 2, 24, "Text"],
Cell[124653, 4412, 1258, 41, 81, "Input"],
Cell[125914, 4455, 215, 5, 99, "Text"],
Cell[126132, 4462, 27, 0, 23, "Special1"],
Cell[126162, 4464, 55, 0, 24, "SmallText"],
Cell[126220, 4466, 1154, 42, 51, "Input"],
Cell[127377, 4510, 55, 0, 24, "SmallText"],
Cell[127435, 4512, 1154, 42, 51, "Input"],
Cell[128592, 4556, 61, 0, 24, "SmallText"],
Cell[128656, 4558, 405, 14, 36, "Input"],
Cell[129064, 4574, 328, 9, 74, "SmallText"],
Cell[129395, 4585, 78, 0, 24, "SmallText"],
Cell[129476, 4587, 230, 5, 20, "Input"],
Cell[129709, 4594, 598, 20, 99, "SmallText"],
Cell[130310, 4616, 1180, 40, 51, "Input"],
Cell[131493, 4658, 81, 2, 24, "SmallText"],
Cell[131577, 4662, 1028, 33, 66, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[132642, 4700, 53, 0, 31, "Subsubsection"],
Cell[132698, 4702, 198, 4, 12, "Special2"],
Cell[CellGroupData[{
Cell[132921, 4710, 477, 12, 149, "Text"],
Cell[133401, 4724, 27, 0, 23, "Special1"],
Cell[133431, 4726, 580, 20, 74, "SmallText"],
Cell[134014, 4748, 139, 4, 12, "Special2"],
Cell[134156, 4754, 231, 5, 49, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[134436, 4765, 4212, 153, 191, "Subsubsection"],
Cell[138651, 4920, 576, 16, 99, "Text"],
Cell[139230, 4938, 59, 3, 49, "Text"],
Cell[139292, 4943, 663, 26, 53, "Text"],
Cell[CellGroupData[{
Cell[139980, 4973, 112, 2, 12, "Special2"],
Cell[140095, 4977, 678, 24, 131, "SmallText"]
}, Closed]],
Cell[140788, 5004, 861, 36, 53, "Text"],
Cell[CellGroupData[{
Cell[141674, 5044, 112, 2, 12, "Special2"],
Cell[141789, 5048, 1110, 42, 156, "SmallText"],
Cell[142902, 5092, 254, 8, 12, "Special2"]
}, Closed]],
Cell[143171, 5103, 1163, 42, 53, "Text"],
Cell[CellGroupData[{
Cell[144359, 5149, 112, 2, 12, "Special2"],
Cell[144474, 5153, 1814, 74, 157, "SmallText"]
}, Closed]],
Cell[146303, 5230, 774, 26, 78, "Text"],
Cell[CellGroupData[{
Cell[147102, 5260, 112, 2, 12, "Special2"],
Cell[147217, 5264, 1163, 34, 274, "SmallText"],
Cell[148383, 5300, 3863, 145, 440, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[152307, 5452, 137, 4, 36, "Subsection",
 CellTags->"MGM.08.T6"],
Cell[CellGroupData[{
Cell[152469, 5460, 67, 0, 31, "Subsubsection"],
Cell[152539, 5462, 111, 3, 24, "Text",
 Evaluatable->False],
Cell[152653, 5467, 1374, 46, 96, "Input"],
Cell[154030, 5515, 41, 0, 24, "Text"],
Cell[154074, 5517, 402, 12, 51, "Input"],
Cell[154479, 5531, 430, 8, 174, "Text"],
Cell[154912, 5541, 118, 2, 20, "Input"],
Cell[CellGroupData[{
Cell[155055, 5547, 39, 0, 24, "Text"],
Cell[155097, 5549, 27, 0, 23, "Special1"],
Cell[155127, 5551, 39, 0, 24, "SmallText"],
Cell[155169, 5553, 118, 2, 20, "Input"],
Cell[155290, 5557, 273, 6, 124, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[155612, 5569, 69, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[155706, 5573, 517, 13, 124, "Text"],
Cell[156226, 5588, 27, 0, 23, "Special1"],
Cell[156256, 5590, 399, 11, 99, "SmallText"],
Cell[156658, 5603, 107, 5, 31, "Subsubsection"],
Cell[156768, 5610, 425, 18, 87, "SmallText"],
Cell[157196, 5630, 103, 4, 31, "Subsubsection"],
Cell[157302, 5636, 1254, 46, 237, "SmallText"],
Cell[158559, 5684, 107, 5, 31, "Subsubsection"],
Cell[158669, 5691, 25, 0, 24, "SmallText"],
Cell[158697, 5693, 430, 14, 70, "SmallText"],
Cell[159130, 5709, 344, 11, 24, "SmallText"],
Cell[159477, 5722, 1358, 53, 262, "SmallText"],
Cell[160838, 5777, 108, 5, 31, "Subsubsection"],
Cell[160949, 5784, 3767, 117, 822, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[164765, 5907, 49, 0, 31, "Subsubsection"],
Cell[164817, 5909, 176, 5, 23, "Special2"],
Cell[164996, 5916, 95, 1, 24, "Text",
 Evaluatable->False],
Cell[165094, 5919, 1374, 46, 96, "Input"],
Cell[166471, 5967, 62, 0, 24, "Text"],
Cell[166536, 5969, 118, 2, 20, "Input"],
Cell[CellGroupData[{
Cell[166679, 5975, 105, 3, 24, "Text"],
Cell[166787, 5980, 27, 0, 23, "Special1"],
Cell[166817, 5982, 356, 10, 99, "SmallText"],
Cell[167176, 5994, 106, 5, 31, "Subsubsection"],
Cell[167285, 6001, 425, 18, 87, "SmallText"],
Cell[167713, 6021, 469, 17, 77, "Input"],
Cell[168185, 6040, 107, 5, 31, "Subsubsection"],
Cell[168295, 6047, 647, 23, 137, "SmallText"],
Cell[168945, 6072, 636, 22, 62, "Input"],
Cell[169584, 6096, 107, 5, 31, "Subsubsection"],
Cell[169694, 6103, 25, 0, 24, "SmallText"],
Cell[169722, 6105, 426, 14, 45, "SmallText"],
Cell[170151, 6121, 344, 11, 24, "SmallText"],
Cell[170498, 6134, 291, 12, 112, "SmallText"],
Cell[170792, 6148, 896, 30, 62, "Input"],
Cell[171691, 6180, 107, 5, 31, "Subsubsection"],
Cell[171801, 6187, 25, 0, 24, "SmallText"],
Cell[171829, 6189, 426, 14, 45, "SmallText"],
Cell[172258, 6205, 344, 11, 24, "SmallText"],
Cell[172605, 6218, 344, 11, 24, "SmallText"],
Cell[172952, 6231, 289, 12, 87, "SmallText"],
Cell[173244, 6245, 815, 28, 111, "Input"],
Cell[174062, 6275, 29, 0, 24, "SmallText"],
Cell[174094, 6277, 208, 6, 20, "Input"],
Cell[174305, 6285, 118, 2, 20, "Input"],
Cell[174426, 6289, 54, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[174529, 6295, 147, 3, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[174701, 6302, 322, 8, 174, "Text"],
Cell[175026, 6312, 27, 0, 23, "Special1"],
Cell[175056, 6314, 83, 1, 24, "SmallText"],
Cell[175142, 6317, 1728, 56, 111, "Input"],
Cell[176873, 6375, 433, 13, 36, "Input"],
Cell[177309, 6390, 173, 4, 20, "Input"],
Cell[177485, 6396, 230, 6, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[177764, 6408, 60, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[177849, 6412, 53, 0, 24, "Text"],
Cell[177905, 6414, 27, 0, 23, "Special1"],
Cell[177935, 6416, 220, 4, 74, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
