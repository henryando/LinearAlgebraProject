(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    248312,       8010]
NotebookOptionsPosition[    180510,       6488]
NotebookOutlinePosition[    233807,       7605]
CellTagsIndexPosition[    233583,       7595]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.04 SVD Analysis of 2D Matrices\n",
 StyleBox["TUTORIALS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.1) The issue of rank. When an SVD stretch factor is 0", "Subsection",
 CellTags->"MGM.04.T1"],

Cell[CellGroupData[{

Cell["T.1.a.i) Only one positive stretch factor", "Subsubsection"],

Cell[TextData[{
 "Here is the matrix\n         ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   TagBox[
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", "0.7"}], "1.4"},
       {"0.5", 
        RowBox[{"-", "1.0"}]}
      }], ")"}],
    MatrixForm[#]& ]}]]],
 " \nand an SVD analysis of its stretch factors:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", 
     TagBox[
      RowBox[{"(", GridBox[{
         {
          RowBox[{"-", "0.7"}], "1.4"},
         {"0.5", 
          RowBox[{"-", "1.0"}]}
        }], ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell["\<\
1 <-----> hangerframe      2 <-----> stretches     3 <-----> alignerframe
                         \
\>", "Special5"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " reports only one stretch factor.\nHow do you interpret this?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "When ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " reports just one stretch factor, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is telling you that there are really two stretch factors but one of them \
is 0. ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " does not bother to give you the 0 stretch factor. \nThis signals that the \
given matrix A is not invertible.\nCheck:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Inverse", "[", "A", "]"}]], "Input"],

Cell["This checks.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1.a.ii) Only one hangerframe vector, only one aligner frame vector, only \
one stretch factor\
\>", "Subsubsection"],

Cell[TextData[{
 "Stay with the same matrix \n          ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   TagBox[
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", "0.7"}], "1.4"},
       {"0.5", 
        RowBox[{"-", "1.0"}]}
      }], ")"}],
    MatrixForm[#]& ]}]]],
 "  \nand look at the full SVD analysis of it:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", "=", 
     TagBox[
      RowBox[{"(", GridBox[{
         {
          RowBox[{"-", "0.7"}], "1.4"},
         {"0.5", 
          RowBox[{"-", "1.0"}]}
        }], ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{"alignerframe", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["3",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"hangerframe", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["1",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]], "Input"],

Cell["\<\
1 <-----> hangerframe      2 <-----> stretches     3 <-----> alignerframe
                         \
\>", "Special5"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " reports \n             only one alignerframe vector,\n             only \
one stretch factor, and \n             only one hangerframe vector.\nWhat \
information do you get from this?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Because A is not invertible,you know that the matrix A hangs all its hits on \
a line through {0,0}. 
This is the line through {0,0} defined by the lone vector in the hangerframe.\
\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"hangerframe", "[", "1", "]"}], "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   RowBox[{
    StyleBox["1",
     FontColor->RGBColor[1, 0, 0]], ",", "1"}], 
   "\[RightDoubleBracket]"}]}]}], "Input"],

Cell["\<\
See it happen by taking some random points and hitting A on them.\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "2"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"points", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "k_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", "0.3"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{
           "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"A", ".", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
         "-", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "k", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"lineplot", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.01", "]"}], ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "b"}], " ", 
           RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
          RowBox[{"b", " ", 
           RowBox[{"hangerframe", "[", "1", "]"}]}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", 
    RowBox[{"1.8", " ", "a"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"pointplot", ",", "lineplot", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<x\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Points before the hit with A\>\""}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", "actionarrows", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action arrows\>\""}]}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"hitpointplot", ",", "lineplot", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<u\>\"", ",", "\"\<v\>\""}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", "\"\<Same points after the hit with A\>\""}]}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["\<\
The plotted line is the line through {0,0} defined by the lone hangerframe \
vector:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"hangerframe", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "1", 
   "\[RightDoubleBracket]"}]}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.1.a.iii) Rank", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Stay with the same matrix as in parts i) and ii).
Some folks say that this the rank of this matrix is 1.
The same folks say that the rank of any invertible 2D matrix  is 2.
What do they mean by this?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The rank of a matrix is the number of dimensions the matrix uses to hang its \
hits.

The matrix in parts i) and ii) hangs all its hits on a one dimensional \
straight line. That's why folks say the rank of this matrix is 1. 

On the other hand, invertible 2D matrices use all of 2D to hang their hits. \
That's why folks say that the rank of an invertible 2D matrix is 2.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell["\<\
T.1.a.iv) Hangers with just one column and aligners with just one row\
\>", "Subsubsection"],

Cell[TextData[{
 "Here's a new matrix\n             ",
 Cell[BoxData[
  RowBox[{"A", "=", 
   TagBox[
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", "0.6"}], "2.7"},
       {"0.4", 
        RowBox[{"-", "1.8"}]}
      }], ")"}],
    MatrixForm[#]& ]}]]],
 ":\nand a look at its SVD stretch factors:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", GridBox[{
        {
         RowBox[{"-", "0.6"}], "2.7"},
        {"0.4", 
         RowBox[{"-", "1.8"}]}
       }], ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"stretches", "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
   StyleBox["2",
    FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}]}], "Input"],

Cell["\<\
This matrix is rank 1.
Here are the SVD aligner,  stretcher and  hanger for A:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["Transpose",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"SingularValues", "[", "A", "]"}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["\[LeftDoubleBracket]",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["1",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["\[RightDoubleBracket]",
       FontColor->RGBColor[0, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["stretcher",
     FontColor->RGBColor[1, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[1, 0, 1]], 
    RowBox[{
     StyleBox["DiagonalMatrix",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 1]], 
     RowBox[{
      StyleBox[
       RowBox[{"SingularValues", "[", "A", "]"}],
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["\[LeftDoubleBracket]",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["2",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox["\[RightDoubleBracket]",
       FontColor->RGBColor[1, 0, 1]]}], 
     StyleBox["]",
      FontColor->RGBColor[1, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["aligner",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox[
      RowBox[{"SingularValues", "[", "A", "]"}],
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["\[LeftDoubleBracket]",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["3",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["\[RightDoubleBracket]",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell["Check:", "Text"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["What happened here?", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " took:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  StyleBox["hanger",
   FontColor->RGBColor[0, 0, 1]], "]"}]], "Input"],

Cell["\<\
This is not a \"column\" vector.
This is a matrix with two rows and one column.
                         \
\>", "Special5"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  StyleBox["stretcher",
   FontColor->RGBColor[1, 0, 1]], "]"}]], "Input"],

Cell["\<\
This is not a number.
This is a matrix with one row and one column.
                         \
\>", "Special5"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  StyleBox["aligner",
   FontColor->RGBColor[0, 0, 1]], "]"}]], "Input"],

Cell["\<\
This is not a vector.
This is a matrix with one row and two columns.
                         \
\>", "Special5"],

Cell["and multiplied them out to duplicate A:", "SmallText"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[TextData[{
 "You can do this by hand if you like.\n\nhanger.stretcher.aligner \n         \
          = ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "0.83205029433784361`"}]},
      {"0.55470019622522928`"}
     }], ")"}],
   MatrixForm[#]& ]]],
 ".",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", 
    StyleBox["3.32415402771893297`",
     FontColor->RGBColor[1, 0, 1]], ")"}],
   MatrixForm[#]& ]], "Output"],
 ".",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {"0.216930457818656119`", 
       RowBox[{"-", "0.976187060183952581`"}]}
     }], ")"}],
   MatrixForm[#]& ]], "Output"],
 "\n                   \n                   = ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {
       RowBox[{"-", "0.83205029433784361`"}]},
      {"0.55470019622522928`"}
     }], ")"}],
   MatrixForm[#]& ]]],
 ".",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", 
    RowBox[{
     StyleBox["3.32415",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[1, 0, 1]], "\[Times]", GridBox[{
       {
        RowBox[{"0.216930457818656119`", ",", 
         RowBox[{
          StyleBox["3.32415",
           FontColor->RGBColor[1, 0, 1]], 
          StyleBox[" ",
           FontColor->RGBColor[1, 0, 1]], "\[Times]"}]}], 
        RowBox[{"-", "0.976187060183952581`"}]}
      }]}], ")"}],
   MatrixForm[#]& ]], "Output"],
 " \n\n                   = ",
 Cell[BoxData[
  TagBox[
   RowBox[{"(", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], ")"}],
   MatrixForm[#]& ]]],
 "\nwith \n        a = (-0.83205) ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", "3.32415", ")"}], " ", 
   RowBox[{"(", "0.216930457818656119`", ")"}]}]]],
 "\n        b = (-0.83205) ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", "3.32415", ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"-", "0.976187"}], ")"}]}]]],
 "\n        c  = (0.5547) ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", "3.32415", ")"}], " ", 
   RowBox[{"(", "0.216930457818656119`", ")"}]}]]],
 " \n        d = (0.5547) ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", "3.32415", ")"}], " ", 
   RowBox[{"(", 
    RowBox[{"-", "0.976187"}], ")"}]}]]],
 ".\n"
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.2)  ",
 StyleBox["Det[A .B]",
  FontColor->RGBColor[0, 0, 1]],
 "   = ",
 StyleBox["Det[A] Det[B]\n",
  FontColor->RGBColor[0, 0, 1]],
 "If A is a 2D diagonal matrix, then ",
 StyleBox["Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["= ",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["product of diagonal entries\n",
  FontColor->RGBColor[0, 0, 1]],
 "Why ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["] ",
  FontColor->RGBColor[0, 0, 1]],
 " =  ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", " ", "[", "A", "]"}]]]],
 "\n",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "If A is a 2D hanger or aligner based on a",
 StyleBox[" right",
  FontColor->RGBColor[0, 0, 1]],
 " hand frame, then ",
 StyleBox["Det[A]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["  =",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["  1",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["\n ",
  FontColor->RGBColor[0, 0, 1]],
 "If A is a 2D hanger or aligner based on a",
 StyleBox[" left",
  FontColor->RGBColor[0, 0, 1]],
 " hand frame, then ",
 StyleBox["Det[A]  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" \[LongDash]1",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" Why ",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["A",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" and ",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox[" have the same stretch factors and why  ",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Det[A]",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 CellTags->"MGM.04.T2"],

Cell[CellGroupData[{

Cell[TextData[{
 "T.2.a)    ",
 StyleBox["Det[A .B]  =  Det[A] Det[B]",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell["Look at these calculations based on the formula ", "Text"],

Cell[TextData[{
 "           Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "]  =   ",
 StyleBox["a d",
  FontColor->RGBColor[1, 0, 0]],
 "  ",
 StyleBox["-",
  FontSize->18],
 " ",
 StyleBox["b c",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell["involving cleared matrices:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "r", ",", "s", ",", "t", ",", "u",
      ",", "w", ",", "x", ",", "y", ",", "z"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", " ", "=", " ", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"a", "b"},
        {"c", "d"}
       }], "\[NegativeThinSpace]", ")"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"P", "=", " ", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"r", "s"},
        {"t", "u"}
       }], "\[NegativeThinSpace]", ")"}]}],
    FontColor->RGBColor[1, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"T", "=", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"w", "x"},
        {"y", "z"}
       }], "\[NegativeThinSpace]", ")"}]}],
    FontColor->RGBColor[1, 0, 0]], ";"}], " "}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Det", "[", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox["P",
      FontColor->RGBColor[1, 0, 1]]}], "]"}], "]"}], " ", "==", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"Det", "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}], " ", 
    RowBox[{"Det", "[", 
     StyleBox["P",
      FontColor->RGBColor[1, 0, 1]], "]"}]}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Det", "[", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox["P",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["T",
      FontColor->RGBColor[1, 0, 0]]}], "]"}], "]"}], " ", "==", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"Det", "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}], " ", 
    RowBox[{"Det", "[", 
     StyleBox["P",
      FontColor->RGBColor[1, 0, 1]], "]"}], " ", 
    RowBox[{"Det", "[", 
     StyleBox["T",
      FontColor->RGBColor[1, 0, 0]], "]"}]}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["What's the message?", "Text"],

Cell["Answer:", "Special1"],

Cell["Look again:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Det", "[", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox["P",
      FontColor->RGBColor[1, 0, 1]]}], "]"}], "]"}], " ", "==", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"Det", "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}], " ", 
    RowBox[{"Det", "[", 
     StyleBox["P",
      FontColor->RGBColor[1, 0, 1]], "]"}]}], "]"}]}]], "Input"],

Cell["\<\
This tells you that the determinant of the product of two matrices is the \
product of their determinants.
Now look at this one:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Det", "[", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox["P",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["T",
      FontColor->RGBColor[1, 0, 0]]}], "]"}], "]"}], " ", "==", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"Det", "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}], " ", 
    RowBox[{"Det", "[", 
     StyleBox["P",
      FontColor->RGBColor[1, 0, 1]], "]"}], " ", 
    RowBox[{"Det", "[", 
     StyleBox["T",
      FontColor->RGBColor[1, 0, 0]], "]"}]}], "]"}]}]], "Input"],

Cell["\<\
This tells you that the determinant of the product of three matrices is the \
product of their determinants.

The same story holds up for any number of matrices.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.2.b) If A is diagonal matrix , then ",
 StyleBox["Det[A] = product of diagonal entries",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell["Here's a random diagonal matrix", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "diagonalentry", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diagonalentry", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diagonalentry", "[", "2", "]"}], " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"diagonalmatrix", "=", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         RowBox[{"diagonalentry", "[", "1", "]"}], "0"},
        {"0", 
         RowBox[{"diagonalentry", "[", "2", "]"}]}
       }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "diagonalmatrix", "]"}]}], "Input"],

Cell["Det[diagonalmatrix] is:", "Text"],

Cell[BoxData[
 RowBox[{"Det", "[", "diagonalmatrix", "]"}]], "Input"],

Cell["Compare:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagonalentry", "[", 
   StyleBox["1",
    FontColor->RGBColor[0, 0, 1]], "]"}], " ", 
  RowBox[{"diagonalentry", "[", 
   StyleBox["2",
    FontColor->RGBColor[0, 0, 1]], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Explain why the same thing happens for any and all diagonal matrices.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\

The easiest way to see this is to use the formula\
\>", "SmallText"],

Cell[TextData[{
 "           Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "]  =   ",
 StyleBox["a d",
  FontColor->RGBColor[1, 0, 0]],
 "  ",
 StyleBox["-",
  FontSize->18],
 " ",
 StyleBox["b c",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell["\<\
from the Basics.
Applying this formula to\
\>", "SmallText"],

Cell[TextData[{
 StyleBox["          Det[diagonalmatrix ]  = Det[",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox[
       RowBox[{"diagonalentry", "[", "1", "]"}],
       FontColor->RGBColor[1, 0, 0]], "0"},
     {"0", 
      StyleBox[
       RowBox[{"diagonalentry", "[", "2", "]"}],
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 StyleBox["]",
  FontColor->GrayLevel[0]]
}], "SmallText"],

Cell[TextData[{
 " \ngives \n         ",
 StyleBox["  Det[diagonalmatrix ] ",
  FontColor->GrayLevel[0]],
 " =",
 StyleBox[" diagonalentry[1] diagonalentry[2]",
  FontColor->RGBColor[1, 0, 0]],
 " -",
 StyleBox[" 0 0",
  FontColor->RGBColor[0, 0, 1]],
 " = diagonalentry[1]",
 StyleBox[" ",
  FontColor->RGBColor[1, 0, 0]],
 "diagonalentry[2]",
 StyleBox[".",
  FontColor->GrayLevel[0]]
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.2.c)  Why ",
 StyleBox["  Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " =  ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", " ", "[", "A", "]"}]]]]
}], "Subsubsection"],

Cell[TextData[{
 "Look at these calculations of ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", "[", "A", "]"}]]]],
 " for a random matrix A:"
}], "Text"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"A", " ", "=", " ", 
      RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
         {
          RowBox[{"Random", "[", 
           RowBox[{"Real", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
          RowBox[{"Random", "[", 
           RowBox[{"Real", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]},
         {
          RowBox[{"Random", "[", 
           RowBox[{"Real", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
          RowBox[{"Random", "[", 
           RowBox[{"Real", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}
        }], "\[NegativeThinSpace]", ")"}]}],
     FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Det", "[", 
    RowBox[{
     StyleBox["Inverse",
      FontColor->RGBColor[1, 0, 0]], "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Det", "[", 
   StyleBox["A",
    FontColor->RGBColor[0, 0, 1]], "]"}]]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Apparently,   ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["] = ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", " ", "[", "A", "]"}]]],
  FontColor->RGBColor[0, 0, 1]],
 ".\n\nExplain why this is guaranteed for any and all invertible 2D matrices \
A."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "         Identity =  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 ". A\nSo\n        1  = Det[Identity] = ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " Det[A].\nAnd so\n        ",
 Cell[BoxData[
  StyleBox[
   FractionBox["1", 
    RowBox[{"Det", " ", "[", "A", "]"}]],
   FontColor->GrayLevel[0]]],
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["] .",
  FontColor->RGBColor[0, 0, 1]],
 "\n",
 "That's all there is to it."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.2.d.i) If A is a hanger or aligner based on a",
 StyleBox[" right",
  FontColor->RGBColor[0, 0, 1]],
 " hand frame, then ",
 StyleBox["Det[A] = 1",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell["Here's a random right hand perpendicular frame:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}], ",", 
        RowBox[{"Sin", "[", 
         RowBox[{"s", "+", 
          FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"rightframeplot", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.6", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.6", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<Right Hand\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.8"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
  " "}]}], "Input"],

Cell["The hanger matrix based on this perpendicular frame is", "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"MatrixForm", "[", "hanger", "]"}],
  FontColor->GrayLevel[0]]}], "Input"],

Cell["Its determinant is:", "Text"],

Cell[BoxData[
 RowBox[{"Det", "[", "hanger", "]"}]], "Input"],

Cell["The aligner matrix based on this perpendicular frame is", "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], ",", 
       RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"MatrixForm", "[", "aligner", "]"}],
  FontColor->GrayLevel[0]]}], "Input"],

Cell["Its determinant is:", "Text"],

Cell[BoxData[
 RowBox[{"Det", "[", "aligner", "]"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Explain why the same thing happens for all aligners and hangers based on \
right hand perpendicular frames.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Hits with hangers or aligners don't change any area measurements so both \
their stretch factors are equal to 1.\n         So ",
 StyleBox["|Det[aligner]| = |Det[hanger]|  =  1",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"],

Cell[TextData[{
 "To see why ",
 StyleBox["Det[hanger] = 1",
  FontColor->RGBColor[0, 0, 1]],
 ", look at"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "rightframeplot", "]"}], " "}]], "Input"],

Cell[TextData[{
 "The first column of hanger is perpframe[1] and the second column of hanger \
is perpframe[2].\n\nBecause {perpframe[1],perpframe[2]} is a right hand \
frame, the columns of hanger are positively oriented. \nSo ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0, 1]],
 " gets the ",
 StyleBox["plus ",
  FontWeight->"Bold"],
 "sign. \nIn other words ",
 StyleBox["Det[hanger] = 1",
  FontColor->RGBColor[0, 0, 1]],
 " .\n\nTo see why ",
 StyleBox["Det[aligner] = 1,",
  FontColor->RGBColor[0, 0, 1]],
 " remember\n                 ",
 StyleBox["aligner",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 Cell[BoxData[
  SuperscriptBox["hanger", 
   RowBox[{"-", "1"}]]]],
 ".\nThis gives ",
 StyleBox["Det[aligner]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{
    RowBox[{"Det", " ", "[", "hanger", "]"}], " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 " =  ",
 Cell[BoxData[
  FractionBox["1", "1"]],
  FontColor->RGBColor[0, 0, 1]],
 " = 1."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.2.d.ii) If A is a hanger or aligner based on a ",
 StyleBox["left",
  FontColor->RGBColor[0, 0, 1]],
 " hand frame, then ",
 StyleBox["Det[A] = \[LongDash]1",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell["Here's a random left hand perpendicular frame:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], ",", 
        RowBox[{"Sin", "[", "s", "]"}]}], "}"}], ",", 
      RowBox[{
       StyleBox["-",
        FontColor->RGBColor[1, 0, 0]], 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}]}], "}"}]}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"leftframeplot", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.2"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.6", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.6", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<Left Hand\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0.8"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}]}], "]"}], 
  " "}]}], "Input"],

Cell["The hanger matrix based on this perpendicular frame is", "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"perpframe", "[", "1", "]"}], ",", 
        RowBox[{"perpframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"MatrixForm", "[", "hanger", "]"}],
  FontColor->GrayLevel[0]]}], "Input"],

Cell["Its determinant is:", "Text"],

Cell[BoxData[
 RowBox[{"Det", "[", "hanger", "]"}]], "Input"],

Cell["The aligner matrix based on this perpendicular frame is", "Text"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"perpframe", "[", "1", "]"}], ",", 
       RowBox[{"perpframe", "[", "2", "]"}]}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"MatrixForm", "[", "aligner", "]"}],
  FontColor->GrayLevel[0]]}], "Input"],

Cell["Its determinant is:", "Text"],

Cell[BoxData[
 RowBox[{"Det", "[", "aligner", "]"}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Explain why the same thing happens for all aligners and hangers based on left \
hand perpendicular frames.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Hits with hangers or aligners don't change any area measurements so both \
their stretch factors are equal to 1.\n         So ",
 StyleBox["|Det[aligner]| = |Det[hanger]|  =  1",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"],

Cell[TextData[{
 "To see why ",
 StyleBox["Det[hanger] = -1",
  FontColor->RGBColor[0, 0, 1]],
 ", look at"
}], "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "leftframeplot", "]"}], " "}]], "Input"],

Cell[TextData[{
 "The first column of hanger is perpframe[1] and the second column of hanger \
is perpframe[2].\n\nBecause {perpframe[1],perpframe[2]} is a left hand frame, \
the columns of hanger are",
 StyleBox[" negatively ",
  FontWeight->"Bold"],
 "oriented. \n\nSo ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0, 1]],
 " gets the ",
 StyleBox["minus ",
  FontWeight->"Bold"],
 "sign. \nIn other words ",
 StyleBox["Det[hanger] = -1",
  FontColor->RGBColor[0, 0, 1]],
 " .\n\nTo see why ",
 StyleBox["Det[aligner] = -1,",
  FontColor->RGBColor[0, 0, 1]],
 " remember\n                 ",
 StyleBox["aligner",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 Cell[BoxData[
  SuperscriptBox["hanger", 
   RowBox[{"-", "1"}]]]],
 ".\nThis gives ",
 StyleBox["Det[aligner]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{
    RowBox[{"Det", " ", "[", "hanger", "]"}], " "}]]],
  FontColor->RGBColor[0, 0, 1]],
 " =  ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["-1",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.2.e)   ",
 "Why  A and   ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", "t"],
   FontSize->12]]],
 "  have the same stretch factors and why ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["Det[A]",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[TextData[{
 "Look at these calculations of Det[A] and Det[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] for random 2D matrices A:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}
      }], "\[NegativeThinSpace]", ")"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", 
  RowBox[{"Transpose", "[", "A", "]"}], "]"}]}], "Input"],

Cell["Rerun many times.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell[TextData[{
 "This is strong evidence that when you go with any 2D matrix A , then both A \
and ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " have the same determinant. \nExplain why this is guaranteed."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with any 2D matrix \n        A = ",
 StyleBox["hanger",
  FontColor->RGBColor[0, 0.392187, 0]],
 ".stretcher.",
 StyleBox["aligner",
  FontColor->RGBColor[0, 0, 1]],
 ".\nThis gives\n        ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " = ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["aligner", "t"],
   FontColor->RGBColor[0, 0, 1]]]],
 ".stretcher.",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[".",
  FontColor->RGBColor[0, 0.392187, 0]]
}], "SmallText"],

Cell[TextData[{
 "This tells you why A and ",
 "  ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["A", "t"],
   FontSize->10]]],
 "  have the same stretch factors"
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\nSo \n         Det[A] = ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0.392187, 0]],
 " Det[stretcher] ",
 StyleBox["Det[aligner]",
  FontColor->RGBColor[0, 0, 1]],
 " \nand\n        Det[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] = ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " Det[stretcher] ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["].",
  FontColor->RGBColor[0, 0.392187, 0]],
 "\n   \nBut ",
 StyleBox[" Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Det[aligner]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0.392187, 0]],
 " = ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["]",
  FontColor->RGBColor[0, 0.392187, 0]]
}], "SmallText"],

Cell[TextData[{
 "Reasons: If the aligner frame is a right hand frame, then",
 Cell[BoxData[
  RowBox[{"  ", 
   StyleBox[
    SuperscriptBox["aligner", "t"],
    FontSize->12]}]]],
 " is a hanger based on the same right hand frame. \nSo Det[aligner] = Det[",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["aligner", "t"],
   FontSize->12]]],
 "] = 1.\n If the aligner frame is a ",
 StyleBox["left",
  FontColor->RGBColor[1, 0, 0]],
 " hand frame, then",
 Cell[BoxData[
  RowBox[{"  ", 
   SuperscriptBox["aligner", "t"]}]],
  FontSize->12],
 " is a hanger based on the same left hand frame.\n  So Det[aligner] = Det[",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["aligner", "t"],
   FontSize->12]]],
 "] = ",
 StyleBox["-1",
  FontColor->RGBColor[1, 0, 0]],
 ".\n   If the hanger frame is a right hand frame, then",
 Cell[BoxData[
  RowBox[{"  ", 
   StyleBox[
    SuperscriptBox["hanger", "t"],
    FontSize->12]}]]],
 " is a aligner based on the same right hand frame. \nSo Det[hanger] = Det[",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["hanger", "t"],
   FontSize->12]]],
 "] = 1.\n If the hanger frame is a ",
 StyleBox["left",
  FontColor->RGBColor[1, 0, 0]],
 " hand frame, then",
 Cell[BoxData[
  RowBox[{"  ", 
   SuperscriptBox["hanger", "t"]}]],
  FontSize->12],
 " is a aligner based on the same left hand frame.\n  So Det[hanger] = Det[",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["hanger", "t"],
   FontSize->12]]],
 "] = ",
 StyleBox["-1",
  FontColor->RGBColor[1, 0, 0]],
 "."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "The upshot: Det[A] and  Det[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] are both the product of the same three numbers. \nThis makes them equal."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.3) Hits with 2D matrices with positive determinants preserve orientation. 
 Hits with 2D matrices with negative determinants reverse orientation\
\>", "Subsection",
 CellTags->"MGM.04.T3"],

Cell[CellGroupData[{

Cell["\<\
T.3.a.i) If A is a 2D matrix with a positive determinant, then hits with A \
preserve orientation\
\>", "Subsubsection"],

Cell["Here is a 3D matrix A with a positive determinant", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"(", GridBox[{
       {"1.2", "0.5"},
       {
        RowBox[{"-", "0.1"}], "1.6"}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", "A", "]"}]}], "Input"],

Cell["Here are random two vectors in 2D:", "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "vector", "]"}], ";"}], " ", "\[IndentingNewLine]", 
   
   StyleBox[
    RowBox[{
     RowBox[{"Clear", "[", "a", "]"}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\n", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "i_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}]}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["\[IndentingNewLine]",
    FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vector", "[", "1", "]"}], " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "1", "]"}], ",", 
       RowBox[{"a", "[", "2", "]"}]}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vector", "[", "2", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "3", "]"}], ",", 
       RowBox[{"a", "[", "4", "]"}]}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ranger", " ", "=", " ", "1.5"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"before", " ", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"vector", "[", "k", "]"}], ",", 
          RowBox[{"Tail", "->", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", " ", "\n", 
      "     ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<vector[1]\>\"", ",", 
         RowBox[{"0.4", " ", 
          RowBox[{"vector", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
      "     ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<vector[2]\>\"", ",", 
         RowBox[{"0.7", " ", 
          RowBox[{"vector", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", " ", "->", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"vector", "[", "1", "]"}], ",", 
             RowBox[{"vector", "[", "2", "]"}]}], "}"}], "]"}], ">", "0"}], 
         ",", "\"\<Positive Orientation\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"vector", "[", "1", "]"}], ",", 
               RowBox[{"vector", "[", "2", "]"}]}], "}"}], "]"}], "<", "0"}], 
           ",", "\"\<Negative Orientation\>\"", ",", 
           "\"\<No Orientation\>\""}], "]"}]}], "]"}]}], ",", "\n", "      ", 
      
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], 
     "]"}]}]}]}]], "Input"],

Cell["Now look at A.vector[1] and A.vector[2]:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"newranger", " ", "=", " ", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"SingularValues", "[", "A", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "ranger"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"after", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\n", "     ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"vector", "[", "k", "]"}]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", " ", "\n", 
    "     ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<A.vector[1]\>\"", ",", 
       RowBox[{"0.4", "  ", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"vector", "[", "1", "]"}]}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<A.vector[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"vector", "[", "2", "]"}]}]}]}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", " ", "->", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Det", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"A", 
            StyleBox[".",
             FontColor->RGBColor[0, 0, 1]], 
            RowBox[{"vector", "[", "1", "]"}]}], ",", 
           RowBox[{"A", 
            StyleBox[".",
             FontColor->RGBColor[0, 0, 1]], 
            RowBox[{"vector", "[", "2", "]"}]}]}], "}"}], "]"}], ">", "0"}], 
       ",", "\"\<Positive Orientation\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"A", 
              StyleBox[".",
               FontColor->RGBColor[0, 0, 1]], 
              RowBox[{"vector", "[", "1", "]"}]}], ",", 
             RowBox[{"A", 
              StyleBox[".",
               FontColor->RGBColor[0, 0, 1]], 
              RowBox[{"vector", "[", "2", "]"}]}]}], "}"}], "]"}], "<", "0"}],
          ",", "\"\<Negative Orientation\>\"", ",", 
         "\"\<No Orientation\>\""}], "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "newranger"}], ",", "newranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "newranger"}], ",", "newranger"}], "}"}]}], "}"}]}], 
    ",", "\n", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input"],

Cell["See them both.", "Text"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", "after"}], "}"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Notice that {",
 StyleBox["A.vector[1]",
  FontColor->RGBColor[0, 0, 1]],
 ",",
 StyleBox["A.vector[2]",
  FontColor->RGBColor[0, 0, 1]],
 "} have the same orientation as {",
 StyleBox["vector[1]",
  FontColor->RGBColor[0, 0, 1]],
 ",",
 StyleBox["vector[2]",
  FontColor->RGBColor[0, 0, 1]],
 "}.\n\nExplain this: \nIf A is a 2D matrix with a positive determinant, then \
 hits with A preserve orientation in the sense that: \n \
\[FilledVerySmallSquare] If ",
 StyleBox["{vector[1],vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 "are positively oriented, then so are  ",
 StyleBox["{A.vector[1],A,vector[2]}.\n ",
  FontColor->RGBColor[0, 0, 1]],
 " \[FilledVerySmallSquare] If ",
 StyleBox["{vector[1],vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 "are negatively oriented, then so are  ",
 StyleBox["{A.vector[1],A,vector[2]}.",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with a matrix A with Det[A] > 0.\nMake a new matrix  \n           ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"vector", "[", "1", "]"}], 
        RowBox[{"vector", "[", "2", "]"}]},
       {"\[DownArrow]", "\[DownArrow]"}
      }], ")"}]}]}]]],
 "."
}], "SmallText"],

Cell[" vector[j] is in column[j] of B", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "The sign of Det[B] determines the orientation (positive or negative) of {",
 StyleBox["vector[1],vector[2]",
  FontColor->RGBColor[0, 0, 1]],
 "}.\n\nThe product A.B  = ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "1", "]"}]}], 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "2", "]"}]}]},
      {"\[DownArrow]", "\[DownArrow]"}
     }], ")"}]}]]],
 ".\nThe sign of Det[A.B] determines the orientation (positive or negative) \
of {",
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["vector[1],",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["vector[2]",
  FontColor->RGBColor[0, 0, 1]],
 "}.\n\nBut\n      Det[A.B] =  Det[A] Det[B].\nAnd because Det[A] > 0, you \
are guaranteed that Det[A.B] has the sign of Det[B].\n\nThe upshot:\n \
\[FilledVerySmallSquare]  If ",
 StyleBox["{vector[1], vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 "are positively oriented, then so are  \n ",
 StyleBox["{A.vector[1], A.vector[2]}.\n ",
  FontColor->RGBColor[0, 0, 1]],
 " \[FilledVerySmallSquare]  If ",
 StyleBox["{vector[1], vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 "are negatively oriented, then so are \n  ",
 StyleBox["{A.vector[1], A.vector[2]}.",
  FontColor->RGBColor[0, 0, 1]],
 "\n  And you're out of here."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.3.a.ii) If A is a 2D matrix with a negative determinant, then hits with A \
reverse orientation\
\>", "Subsubsection"],

Cell["Here is a 3D matrix A with a negative determinant", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"(", GridBox[{
       {"0.4", "1.8"},
       {"1.5", "0.3"}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", "A", "]"}]}], "Input"],

Cell["Here are random two vectors in 2D:", "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "vector", "]"}], ";"}], " ", "\[IndentingNewLine]", 
   
   StyleBox[
    RowBox[{
     RowBox[{"Clear", "[", "a", "]"}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], "\n", 
   StyleBox[
    RowBox[{
     RowBox[{
      RowBox[{"a", "[", "i_", "]"}], " ", ":=", " ", 
      RowBox[{
       RowBox[{"(", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], 
         RowBox[{"Random", "[", 
          RowBox[{"Integer", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}]}], "]"}]], ")"}], 
       RowBox[{"Random", "[", 
        RowBox[{"Real", ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", "1.5"}], "}"}]}], "]"}]}]}], ";"}],
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["\[IndentingNewLine]",
    FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vector", "[", "1", "]"}], " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "1", "]"}], ",", 
       RowBox[{"a", "[", "2", "]"}]}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vector", "[", "2", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "[", "3", "]"}], ",", 
       RowBox[{"a", "[", "4", "]"}]}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ranger", " ", "=", " ", "1.5"}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"before", " ", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\n", "     ", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"vector", "[", "k", "]"}], ",", 
          RowBox[{"Tail", "->", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", " ", "\n", 
      "     ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<vector[1]\>\"", ",", " ", 
         RowBox[{"0.4", 
          RowBox[{"vector", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
      "     ", 
      RowBox[{"Graphics", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<vector[2]\>\"", ",", " ", 
         RowBox[{"0.8", 
          RowBox[{"vector", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotLabel", " ", "->", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"vector", "[", "1", "]"}], ",", 
             RowBox[{"vector", "[", "2", "]"}]}], "}"}], "]"}], ">", "0"}], 
         ",", "\"\<Positive\\nOrientation\>\"", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Det", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"vector", "[", "1", "]"}], ",", 
               RowBox[{"vector", "[", "2", "]"}]}], "}"}], "]"}], "<", "0"}], 
           ",", "\"\<Negative\\nOrientation\>\"", ",", 
           "\"\<No Orientation\>\""}], "]"}]}], "]"}]}], ",", "\n", "      ", 
      
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "->", "True"}], ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], 
     "]"}]}]}]}]], "Input"],

Cell["Now look at A.vector[1] and A.vector[2]:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"newranger", " ", "=", " ", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"SingularValues", "[", "A", "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "]"}], " ", "ranger"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"after", " ", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\n", "     ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"vector", "[", "k", "]"}]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", " ", "\n", 
    "     ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<A.vector[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"vector", "[", "1", "]"}]}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<A.vector[2]\>\"", ",", " ", 
       RowBox[{"0.8", 
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"vector", "[", "2", "]"}]}]}]}], "]"}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotLabel", " ", "->", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Det", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            StyleBox["A",
             FontColor->RGBColor[0, 0, 1]], 
            StyleBox[".",
             FontColor->RGBColor[0, 0, 1]], 
            RowBox[{"vector", "[", "1", "]"}]}], ",", 
           RowBox[{
            StyleBox["A",
             FontColor->RGBColor[0, 0, 1]], 
            StyleBox[".",
             FontColor->RGBColor[0, 0, 1]], 
            RowBox[{"vector", "[", "2", "]"}]}]}], "}"}], "]"}], ">", "0"}], 
       ",", "\"\<Positive\\nOrientation\>\"", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Det", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              StyleBox["A",
               FontColor->RGBColor[0, 0, 1]], 
              StyleBox[".",
               FontColor->RGBColor[0, 0, 1]], 
              RowBox[{"vector", "[", "1", "]"}]}], ",", 
             RowBox[{
              StyleBox["A",
               FontColor->RGBColor[0, 0, 1]], 
              StyleBox[".",
               FontColor->RGBColor[0, 0, 1]], 
              RowBox[{"vector", "[", "2", "]"}]}]}], "}"}], "]"}], "<", "0"}],
          ",", "\"\<Negative\\nOrientation\>\"", ",", 
         "\"\<No Orientation\>\""}], "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", "  ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "newranger"}], ",", "newranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "newranger"}], ",", "newranger"}], "}"}]}], "}"}]}], 
    ",", "\n", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]}], "Input"],

Cell["See them both.", "Text"],

Cell[BoxData[
 RowBox[{"GraphicsRow", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", "after"}], "}"}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Notice that the orientation of {",
 StyleBox["A.vector[1]",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["A.vector[2]",
  FontColor->RGBColor[0, 0, 1]],
 "} is opposite to the orientation of {",
 StyleBox["vector[1]",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["vector[2]",
  FontColor->RGBColor[0, 0, 1]],
 "}.\n\nExplain this: \nIf A is a 2D matrix with a negative determinant ,then \
 hits with A reverse orientation in the sense that: \n \
\[FilledVerySmallSquare] If ",
 StyleBox["{vector[1], vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 "are positively oriented, then ",
 StyleBox["{A.vector[1], A.vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 " are negatively oriented.\n  \[FilledVerySmallSquare] If ",
 StyleBox["{vector[1], vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 "are negatively oriented, then ",
 StyleBox["{A.vector[1], A.vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 " are positively oriented."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
This is a copy,paste and edit of the answer to part i) above.
The edits are highlighted in green.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Go with a matrix A with Det[A]",
 StyleBox[" <",
  FontColor->RGBColor[0, 0.392187, 0]],
 " 0.\nMake a new matrix  \n           ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"vector", "[", "1", "]"}], 
        RowBox[{"vector", "[", "2", "]"}]},
       {"\[DownArrow]", "\[DownArrow]"}
      }], ")"}]}]}]]],
 "."
}], "SmallText"],

Cell[" vector[j] is in column[j] of B", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "The sign of Det[B] determines the orientation (positive or negative) of {",
 StyleBox["vector[1],vector[2]",
  FontColor->RGBColor[0, 0, 1]],
 "}.\n\nThe product A.B  = ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "1", "]"}]}], 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "2", "]"}]}]},
      {"\[DownArrow]", "\[DownArrow]"}
     }], ")"}]}]]],
 ".\nThe sign of Det[A.B] determines the orientation (positive or negative) \
of \n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[1, 0, 0]], ".", 
     RowBox[{"vector", "[", "1", "]"}]}], ",", " ", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[1, 0, 0]], ".", 
     RowBox[{"vector", "[", "2", "]"}]}]}], "}"}]]],
 ".\n\nBut\n      Det[A.B] =  Det[A] Det[B].\nAnd because Det[A] ",
 StyleBox["< ",
  FontColor->RGBColor[0, 0.392187, 0]],
 "0, you are guaranteed that Det[A.B] has the sign ",
 StyleBox["opposite to the sign of",
  FontColor->RGBColor[0, 0.392187, 0]],
 "  Det[B].\n\nThe upshot:\n \[FilledVerySmallSquare] If ",
 StyleBox["{vector[1], vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 "are positively oriented, then  ",
 StyleBox["{A.vector[1], A.vector[2]}",
  FontColor->RGBColor[0, 0, 1]],
 " are",
 StyleBox[" negatively",
  FontColor->RGBColor[0, 0.392187, 0]],
 " oriented. \n  \[FilledVerySmallSquare] If ",
 StyleBox["{vector[1], vector[2]} ",
  FontColor->RGBColor[0, 0, 1]],
 "are negatively oriented, then  ",
 StyleBox["{A.vector[1], A.vector[2]}",
  FontColor->RGBColor[0, 0, 1]],
 " are ",
 StyleBox["positively",
  FontColor->RGBColor[0, 0.392187, 0]],
 " oriented. \n  And you're ",
 StyleBox["really ",
  FontColor->RGBColor[0, 0.392187, 0]],
 "out of here."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.4",
 ") Revealing the cross product formula:\nIf ",
 StyleBox["X = ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["{",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["a",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["b",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["c",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontColor->RGBColor[0, 0.392187, 0]],
 " and  ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " = {",
 StyleBox["r",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["s",
  FontColor->RGBColor[1, 0, 1]],
 ", ",
 StyleBox["t",
  FontColor->RGBColor[1, 0, 0]],
 "}, then\n         ",
 StyleBox["X ",
  FontColor->RGBColor[0, 0, 1]],
 "\[Times] ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " = {Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "], ",
 StyleBox["\[Dash]",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 "Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "], Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "]}."
}], "Subsection",
 CellTags->"MGM.04.T4"],

Cell[CellGroupData[{

Cell["T.4.a.i) The formula for the cross product of two 3D vectors", \
"Subsubsection"],

Cell["Look at this:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "r", ",", "s", ",", "t"}], "]"}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["X",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["{",
      FontColor->RGBColor[0, 0.392187, 0]], 
     RowBox[{
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[",",
       FontColor->RGBColor[0, 0.392187, 0]], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[",",
       FontColor->RGBColor[0, 0.392187, 0]], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]}], 
     StyleBox["}",
      FontColor->RGBColor[0, 0.392187, 0]]}]}], " ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["Y",
     FontColor->RGBColor[0, 0, 1]], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], ",", 
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]], ",", 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Det", "[", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        StyleBox["b",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox["c",
         FontColor->RGBColor[1, 0, 0]]},
       {
        StyleBox["s",
         FontColor->RGBColor[1, 0, 1]], 
        StyleBox["t",
         FontColor->RGBColor[1, 0, 0]]}
      }], "\[NegativeThinSpace]", ")"}], "]"}], ",", 
   RowBox[{
    StyleBox["-",
     FontColor->RGBColor[0.889998, 0.149996, 0.209995]], 
    RowBox[{"Det", "[", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         StyleBox["a",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["c",
          FontColor->RGBColor[1, 0, 0]]},
        {
         StyleBox["r",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["t",
          FontColor->RGBColor[1, 0, 0]]}
       }], "\[NegativeThinSpace]", ")"}], "]"}]}], ",", 
   RowBox[{"Det", "[", 
    RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
       {
        StyleBox["a",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["b",
         FontColor->RGBColor[1, 0, 1]]},
       {
        StyleBox["r",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["s",
         FontColor->RGBColor[1, 0, 1]]}
      }], "\[NegativeThinSpace]", ")"}], "]"}]}], 
  "}"}], "\[IndentingNewLine]"}], "Input"],

Cell[TextData[{
 "Compare with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s calculation of ",
 StyleBox["X ",
  FontColor->RGBColor[0, 0, 1]],
 "\[Times] ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 ":"
}], "Text"],

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{
   StyleBox["X",
    FontColor->RGBColor[0, 0, 1]], ",", 
   StyleBox["Y",
    FontColor->RGBColor[0, 0, 1]]}], "]"}]], "Input"],

Cell[CellGroupData[{

Cell["What's the message?", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "The message is:\nIf ",
 StyleBox["X = ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["{",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["a",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["b",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["c",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontColor->RGBColor[0, 0.392187, 0]],
 " and  ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " = {",
 StyleBox["r",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["s",
  FontColor->RGBColor[1, 0, 1]],
 ", ",
 StyleBox["t",
  FontColor->RGBColor[1, 0, 0]],
 "}, then\n         ",
 StyleBox["X ",
  FontColor->RGBColor[0, 0, 1]],
 "\[Times] ",
 StyleBox["Y",
  FontColor->RGBColor[0, 0, 1]],
 " = {Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "], ",
 StyleBox["\[Dash]",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 "Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "], Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]]],
 "]}:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "r", ",", "s", ",", "t"}], "]"}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["X",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["{",
      FontColor->RGBColor[0, 0.392187, 0]], 
     RowBox[{
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[",",
       FontColor->RGBColor[0, 0.392187, 0]], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox[",",
       FontColor->RGBColor[0, 0.392187, 0]], 
      StyleBox[" ",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]}], 
     StyleBox["}",
      FontColor->RGBColor[0, 0.392187, 0]]}]}], " ", ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["Y",
     FontColor->RGBColor[0, 0, 1]], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], ",", 
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]], ",", 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Cross", "[", 
   RowBox[{
    StyleBox["X",
     FontColor->RGBColor[0, 0, 1]], ",", 
    StyleBox["Y",
     FontColor->RGBColor[0, 0, 1]]}], "]"}], " ", "==", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Det", "[", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         StyleBox["b",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["c",
          FontColor->RGBColor[1, 0, 0]]},
        {
         StyleBox["s",
          FontColor->RGBColor[1, 0, 1]], 
         StyleBox["t",
          FontColor->RGBColor[1, 0, 0]]}
       }], "\[NegativeThinSpace]", ")"}], "]"}], ",", 
    RowBox[{
     StyleBox["-",
      FontColor->RGBColor[0.889998, 0.149996, 0.209995]], 
     RowBox[{"Det", "[", 
      RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
         {
          StyleBox["a",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox["c",
           FontColor->RGBColor[1, 0, 0]]},
         {
          StyleBox["r",
           FontColor->RGBColor[0, 0, 1]], 
          StyleBox["t",
           FontColor->RGBColor[1, 0, 0]]}
        }], "\[NegativeThinSpace]", ")"}], "]"}]}], ",", 
    RowBox[{"Det", "[", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {
         StyleBox["a",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["b",
          FontColor->RGBColor[1, 0, 1]]},
        {
         StyleBox["r",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox["s",
          FontColor->RGBColor[1, 0, 1]]}
       }], "\[NegativeThinSpace]", ")"}], "]"}]}], "}"}]}]}], "Input"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.5) Using SVD matrix analysis to set the plot range ", "Subsection",
 CellTags->"MGM.04.T5"],

Cell[CellGroupData[{

Cell["T.5.a.i) Using stretch factors to help set the plot range", \
"Subsubsection"],

Cell["Here's a curve:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"2", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "t", "]"}], "5"]}], ",", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "t", "]"}], "3"]}], "}"}]}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2.7"}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "hitplotter", ",", "hitpointplotter", ",", "pointcolor", ",", 
     "actionarrows", ",", "matrix2D"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "16"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"matrix2D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Thickness", "[", "0.01", "]"}], ",", "Blue"}], "}"}], 
        "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix2D_", "]"}], ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"matrix2D", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"before", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
    RowBox[{"hitpointplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit with A\>\""}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
Here's a 2D matrix A and an attempt to plot what a hit with A does to this \
curve:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.8", "1.9"},
        {
         RowBox[{"-", "0.9"}], "1.8"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"MatrixForm", "[", "A", "]"}], "\n"}], "\n", 
 RowBox[{"after", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", "A", "]"}], ",", 
    RowBox[{"hitpointplotter", "[", "A", "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit with A\>\""}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["What went wrong?", "Text"],

Cell["Answer:", "Special1"],

Cell["Look at:", "SmallText"],

Cell[BoxData["ranger"], "Input",
 AspectRatioFixed->True],

Cell["\<\
The plot range specification through
          PlotRange -> {{-ranger,ranger},{-ranger,ranger}} 
did not accommodate the full curve in the second plot. \
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.5.a.ii) Automatic setting of the PlotRange", "Subsubsection"],

Cell[CellGroupData[{

Cell["Is there a way to set ranger in advance to avoid guessing?", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Of course.  If there were no way, this question would not have been asked.
Here's how it goes:
First plot the original curve in true scale using 
           AspectRatio -> Automatic
           and PlotRange -> All:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"originalcurve", "=", 
  RowBox[{"ParametricPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Thickness", "[", "0.015", "]"}], ",", "Blue"}], "}"}], 
      "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}], 
  " "}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
Now eyeball a circle centered on {0,0} that snugly surrounds the curve:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"radius", "=", "2.0"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"originalcurve", ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "radius"}], "]"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], " "}]}], "Input",
 AspectRatioFixed->True],

Cell["Look at the stretch factors:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
  RowBox[{
   RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
   "\[RightDoubleBracket]"}]}]], "Input"],

Cell["Redefine ranger:", "SmallText"],

Cell[BoxData[
 RowBox[{
  StyleBox["ranger",
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox["=",
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], 
  RowBox[{
   RowBox[{
    StyleBox["Max",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["[",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["{",
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{
      StyleBox["1.0",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[",",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[
       RowBox[{"Max", "[", 
        RowBox[{"{", 
         RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}],
       FontColor->RGBColor[1, 0, 0]]}], 
     StyleBox["}",
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox["]",
     FontColor->RGBColor[0, 0, 1]]}], 
   StyleBox[" ",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["radius",
    FontColor->RGBColor[0, 0, 1]]}]}]], "Input"],

Cell["Now run the plots:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"before", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"hitplotter", "[", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
     RowBox[{"hitpointplotter", "[", 
      RowBox[{"IdentityMatrix", "[", "2", "]"}], "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit with A\>\""}]}], 
    "]"}]}], "\n"}], "\n", 
 RowBox[{"after", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", "A", "]"}], ",", 
    RowBox[{"hitpointplotter", "[", "A", "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit with A\>\""}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
Now both plots are accommodated automatically and the same scale is used in \
both.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.5.a.iii) The math behind the scene", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
What guarantees that setting
        ranger = radius Max[{xstretch,ystretch,1}]
will always work?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Once you identify the radius = r of a circle centered on {0,0} completely \
enclosing the curve, then you are sure that the hit with A stretches this \
circle and everything inside it by no more than a factor of
             Max[{xstretch,ystretch}].
So the plot of the hit curve must come out inside the circle of radius
            r Max[{xstretch,ystretch,1}].\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["T.6)  Hand Calculations:\n ",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" Fat's tips on memorizing the formulas for the determinant and \
cross product and templates for hand calculation of solutions of linear \
systems (Cramer's rule), inverse matrices  and SVD          ",
  FontColor->RGBColor[0, 0.392187, 0]]
}], "Subsection",
 CellTags->"MGM.04.T6"],

Cell[CellGroupData[{

Cell[TextData[{
 "HC.a) ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Fat's tips on memorizing the formula for the 2D determinant"
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "The formula for the determinant is:\n          ",
 StyleBox["  Det[",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontWeight->"Bold"],
 StyleBox["]  =   ",
  FontWeight->"Bold"],
 StyleBox["a d",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["  ",
  FontWeight->"Bold"],
 StyleBox["-",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["b c",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "\nWhat are ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Fats's tips for memorizing it?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Fats says the formula is\n                        ",
 StyleBox["Det[",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[1, 0, 0]], "b"},
     {"c", 
      StyleBox["d",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontWeight->"Bold"],
 StyleBox["]  =   ",
  FontWeight->"Bold"],
 StyleBox["a d",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["  ",
  FontWeight->"Bold"],
 StyleBox["-",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["b c",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " \nTo memorize it, I draw this diagram:"
}], "SmallText"],

Cell[TextData[{
 "                        ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: 1 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.25 5 0.25 5 [
[ 0 0 0 0 ]
[ 1 1 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 0 m
1 0 L
1 1 L
0 1 L
closepath
clip
newpath
1 0 0 r
gsave
.25 .75 -73.7812 -14.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 28.6875 translate 1 -1 scale
63.000 21.688 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 21.688 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 36.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(a) show
84.562 21.688 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 1 r
gsave
.75 .75 -73.7812 -17.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 35 translate 1 -1 scale
63.000 28.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 1.000 setrgbcolor
0.000 0.000 rmoveto
63.000 28.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 36.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 1.000 setrgbcolor
(b) show
84.562 28.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 1.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.25 .25 -73.7812 -14.3438 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 28.6875 translate 1 -1 scale
63.000 21.688 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 1.000 setrgbcolor
0.000 0.000 rmoveto
63.000 21.688 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 36.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 1.000 setrgbcolor
(c) show
84.562 21.688 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 1.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
1 0 0 r
gsave
.75 .25 -73.7812 -17.5 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 35 translate 1 -1 scale
63.000 28.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 28.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 36.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(d) show
84.562 28.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
1 .549 0 r
.005 w
[ ] 0 setdash
.75 .75 m
.32 .32 L
s
.25 .25 m
.313 .367 L
.32 .32 L
.367 .313 L
.25 .25 L
F
.25 .75 m
.68 .32 L
s
.75 .25 m
.633 .313 L
.68 .32 L
.687 .367 L
.75 .25 L
F
1 0 0 r
gsave
.375 .625 -70.1875 -11.0625 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 22.125 translate 1 -1 scale
63.000 15.125 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 15.125 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 24.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
(+) show
77.375 15.125 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
1.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 1 r
gsave
.625 .625 -70.1875 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding ISOLatin1Encoding def
        currentdict
    end

    newfontname exch definefont pop
} def

0 20 translate 1 -1 scale
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 1.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Math1Mono
%%IncludeFont: Math1Mono
/Math1Mono findfont 24.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 1.000 setrgbcolor
(-) show
77.375 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 1.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
       GeneratedCell->False,
       CellAutoOverwrite->False,
       ImageSize->{162, 162},
       ImageMargins->{{0, 0}, {0, 1}},
       ImageRegion->{{0, 1}, {0, 1}},
       ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzdWTtvG0cQXvN45EmK80AQREHgmLKdBLT8fkhR7NiSldiJIsWGynSSEcAO
EPhBdypVXqtSleHSpf4CfwL/AkuVbC/77czs7h1HEi9V4IL3mMc3+5iZ2xlu
bL159tc/W2+eP93qPHq99fLZ86e9zsMXry0pOWWMeYtfx+C5sI98eVsUo6Fl
fHC3nrslRZHvFsXKUoHpNtw1LYosIxp4o2FR9A9M0/Gs/Ows0az2NwT1SqCG
g6Lodp1gW8QBtf2nvB0F8dLdZggCbLv07odnjAJ0qOCO9yzDOI05R/rneQjD
4bDY3TksrndH9g2b2Cw+zUbFysrI0QeD4aoTTWWk9NtcAzSoYSY0DBo1mznH
/F7vUFRN5q5Jsbnp4J3EfbGxvxdsYCWsjXZsg3i08Gxjzt1aDk9U8ePhN1i9
3x/KMHimRJOF/cldm7K39Mt3p4S80ysieLbd4XFvbwfbndkRltWOKCwxlhMm
G7jeF0hMULQGfW+pf6BYOsuWsGLxLGFpii1hxqBhM50RtxUz/qkE1SwtmF2Z
9ZM14BmiYdduXZtI/8BPZNA/aiJuAzZEDs4kcjs9rw63PUbdra/d3dz8It7z
/t2Y9yTsHVZMtjoERpZps8QGRrNs8WrkRlwJAnaNy55LMRuig5OFV3IGOW9M
sBvOakoAlrSsBBqWyF3LcZ5O4DX2nfzTLcyKf0oF+Fhvj6LZrYVdJMoEGTBc
ILXxlAgaMkfvb3KIsmcdFbx4P3jvgxcxtJcfugk76DveXLsKKTnn3X7IOS1c
pyG+CO4UnrKq4nneCTGGoLUeL8kCMwUJY3BQNyE/o0Jdwu00WFfx9BGepqpC
l3H7GKx5/zQmdMWP96Z/8hkxZGQzpuN8h9xfnN8s+I3OBCJ8O0oQbtjNkv+G
AKKhxLScvfFaVTtRtK8rNCdMDAJx7KYieTXIxwGtA6QKwGWFlvhccoMgtDFq
YPP6XE4Gaym07oRGeZp3FNb3E5piiLsK61uFRqb4G1lmnVdoBGvuKaw5hUaw
nErLrLMKjWDNssI6o9AIlpJchfW1QiNY80BhfaXQCNasKqwvFRrBmp8V1hcK
jWD5A1dmfa7QCNY8VFifKTSCNY8U1icKjWDNrwrrtEIjWPObwppRaARr1hTW
lEIjWPO7wmorNII16wpLizCCNRsKS8toBGv+ELzqWcOmx8ck8riqbVlPiPVE
AT5ZawKbNWdRc41q7kDN/a3pPTV9s6bn14yrmlFbMyfUzDg181nNbFkzF7vv
Q0MOHdEBpaPo3NN0JvuiBB3to3a3KvSdIsRfvh9wm4aQ9r37sSp0hp7swWqJ
WEuKlrM5V5V0IOPnGyd8UUFZJLVF3QAraseUBVJcUFiJV7ykcG+T4m2FNXYw
tG+3SPzWkUgahIqkzZGPWDcUlrbmfO7RTmTxcUrqhga3RNAoQA2FOt9WfnFJ
ABLKqQuEfO1IRyNxRmfkJC58bNokGiDL3s2nXi2YtAG3XaWOGga1DOSlprFD
8KZdMcNYFHghllBJl5pcCVXUqGzzXS4KWkWpRs+NtKCWmY23aHTOoh0JfU1S
N6i48LPzlvn6RBB6A9wi4+JUSp88jK/bLecMmSdGgPVAq6QdmY67GbbWlDWg
I+d0tQYu1LZat5vEKclQGnPJNonMy7jaHNzYiqjULVlulht6+3v+/C7NsZw3
ZTU241ppnEbFTFz229nGZtywszjXhKkGXK34a3nuGB4kqcYX4LK2GRu4dg5J
VQMgx605PA8HaomYVBYnlT5j+OWGzzTHLhIWstyNoyiAZ/QPwiEK0ULeomwM
unLV/ZdOXXn/vdPDJvXUcNip4LErh7043p2lHeK8B9E0Oxt60wgZirBo4M0o
P4ihZmSIm5kyeAnZee8GDiU9IRNZus9E3DKNM9FFMRuvf5aNrayWOwVqrgIV
u8/mWgRFPTQ4AvfC4wSPDIUO14U4RaYhSIHKDuHDBUHATfyGEhgr3vSVSt6N
2jGZTyy7XvFBVXFsd7vdsLuSsAd9OovGiq9OJLyIvlqlz8uE/P/Fvzb/9WZO
/QuNfxIn\
\>"],
       ImageRangeCache->{{{0, 161}, {161, 0}} -> {0, 0, 0, 0}}]}
    }], ")"}]]]
}], "SmallText"],

Cell[TextData[{
 "The way I think about it: \nIt's just opposite from the way you want it to \
be. \nThe arrow with the ",
 StyleBox["negative",
  FontWeight->"Bold"],
 StyleBox[" slope",
  FontWeight->"Bold"],
 " carries a ",
 StyleBox["plus",
  FontWeight->"Bold"],
 " sign. \nThe arrow with the ",
 StyleBox["positive slope",
  FontWeight->"Bold"],
 " carries a ",
 StyleBox["minus ",
  FontWeight->"Bold"],
 "sign."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "HC.b) ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Fat's tips on memorizing the formula for the cross product"
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "The formula for the cross product is:\n If ",
 StyleBox["X = ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["{",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["a",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["b",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["c",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 " and  ",
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = {",
  FontWeight->"Bold"],
 StyleBox["r",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["s",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["t",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontWeight->"Bold"],
 ", then\n         ",
 StyleBox["X ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Times] ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = {Det[",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontWeight->"Bold"],
 StyleBox["], ",
  FontWeight->"Bold"],
 StyleBox["\[Dash]",
  FontWeight->"Bold",
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["Det[",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontWeight->"Bold"],
 StyleBox["], Det[",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontWeight->"Bold"],
 StyleBox["]}",
  FontWeight->"Bold"],
 ".\nWhat are ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " Fats's tips for memorizing it?"
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Fats says:\nStart with\n",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["X = ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["{",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["a",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["b",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["c",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 " and ",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = {",
  FontWeight->"Bold"],
 StyleBox["r",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["s",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["t",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontWeight->"Bold"],
 ", \n and make this box",
 "; ",
 "\n                       ",
 Cell[BoxData[
  StyleBox[GridBox[{
     {"a", 
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {"r", 
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    },
    GridBoxDividers->{
     "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
      "RowsIndexed" -> {}}],
   FontSize->18]]]
}], "SmallText"],

Cell[TextData[{
 "To get the ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " slot of   ",
 StyleBox["X ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Times] ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 "  scratch out the",
 StyleBox[" first ",
  FontColor->RGBColor[0, 0, 1]],
 "vertical column to get this box:\n                       ",
 Cell[BoxData[
  StyleBox[GridBox[{
     {"\[FilledSquare]", 
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {"\[FilledSquare]", 
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    },
    GridBoxDividers->{
     "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
      "RowsIndexed" -> {}}],
   FontSize->18]]]
}], "SmallText"],

Cell[TextData[{
 "This gives you a 2D matrix. \nThe ",
 StyleBox["first",
  FontColor->RGBColor[0, 0, 1]],
 " slot of   ",
 StyleBox["X ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Times] ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "  is ",
 StyleBox["Det[",
  FontSize->18],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->18],
 StyleBox["]",
  FontSize->18],
 ".\n"
}], "SmallText"],

Cell[TextData[{
 "To get the ",
 StyleBox["second",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " slot of slot of  ",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["X ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Times] ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 "  go back to\n         ",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["X = ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["{",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["a",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["b",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["c",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 " and ",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = {",
  FontWeight->"Bold"],
 StyleBox["r",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["s",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["t",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontWeight->"Bold"],
 ", \nand then go back to this box:\n                       ",
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[GridBox[{
    {"a", 
     StyleBox["b",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["c",
      FontColor->RGBColor[1, 0, 0]]},
    {"r", 
     StyleBox["s",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["t",
      FontColor->RGBColor[1, 0, 0]]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]],
  FontSize->18]
}], "SmallText"],

Cell[TextData[{
 "Scratch out the ",
 StyleBox["second",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "vertical column to get this box\n                       ",
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[GridBox[{
    {"a", 
     StyleBox["\[FilledSquare]",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["c",
      FontColor->RGBColor[1, 0, 0]]},
    {"r", 
     StyleBox["\[FilledSquare]",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["t",
      FontColor->RGBColor[1, 0, 0]]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]],
  FontSize->18]
}], "SmallText"],

Cell[TextData[{
 "This gives you another 2D matrix. \nThe",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["second",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontWeight->"Bold"],
 "slot of   ",
 StyleBox["X ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Times] ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " is  ",
 StyleBox[" ",
  FontSize->18],
 StyleBox["-",
  FontSize->18,
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" ",
  FontSize->18,
  FontWeight->"Bold"],
 StyleBox["Det[",
  FontSize->18],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->18],
 StyleBox["]",
  FontSize->18],
 "."
}], "SmallText"],

Cell["Note the minus sign on the second slot.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "To get the ",
 StyleBox["third",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 " slot of slot of   ",
 StyleBox["X ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Times] ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontColor->RGBColor[0, 0, 1]],
 " \n go back to\n         ",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["X = ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["{",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["a",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["b",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["c",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 " and ",
 StyleBox[" ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = {",
  FontWeight->"Bold"],
 StyleBox["r",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["s",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["t",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontWeight->"Bold"],
 ", \nand then go back to this box\n                         ",
 Cell[BoxData[GridBox[{
    {"a", 
     StyleBox["b",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["c",
      FontColor->RGBColor[1, 0, 0]]},
    {"r", 
     StyleBox["s",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["t",
      FontColor->RGBColor[1, 0, 0]]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]],
  FontSize->18]
}], "SmallText"],

Cell[TextData[{
 "Scratch out the ",
 StyleBox["third",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "vertical column to get this box\n                      ",
 StyleBox[" ",
  FontSize->18],
 "  ",
 Cell[BoxData[GridBox[{
    {"a", 
     StyleBox["b",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["\[FilledSquare]",
      FontColor->RGBColor[1, 0, 0]]},
    {"r", 
     StyleBox["s",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox["\[FilledSquare]",
      FontColor->RGBColor[1, 0, 0]]}
   },
   GridBoxDividers->{
    "Columns" -> {{True}}, "ColumnsIndexed" -> {}, "Rows" -> {{True}}, 
     "RowsIndexed" -> {}}]],
  FontSize->18]
}], "SmallText"],

Cell[TextData[{
 "This gives you another 2D matrix. \nThe ",
 StyleBox["third",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 " slot of   ",
 StyleBox["X ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Times] ",
  FontWeight->"Bold"],
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 "  is  ",
 StyleBox["Det[",
  FontSize->18],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->18],
 StyleBox["]",
  FontSize->18],
 "."
}], "SmallText"],

Cell[TextData[{
 "There you go:\nIf ",
 StyleBox["X = ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["{",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["a",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["b",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[",",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" ",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["c",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["}",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0.392187, 0]],
 " and  ",
 StyleBox["Y",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = {",
  FontWeight->"Bold"],
 StyleBox["r",
  FontWeight->"Bold",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["s",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[", ",
  FontWeight->"Bold"],
 StyleBox["t",
  FontWeight->"Bold",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["},",
  FontWeight->"Bold"],
 " then\n      ",
 StyleBox["   ",
  FontSize->18],
 StyleBox["X ",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["\[Times] ",
  FontSize->18],
 StyleBox["Y",
  FontSize->18,
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" = {Det[",
  FontSize->18],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->18],
 StyleBox["], ",
  FontSize->18],
 StyleBox["\[Dash]",
  FontSize->18,
  FontColor->RGBColor[0.889998, 0.149996, 0.209995]],
 StyleBox["Det[",
  FontSize->18],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["c",
       FontColor->RGBColor[1, 0, 0]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["t",
       FontColor->RGBColor[1, 0, 0]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->18],
 StyleBox["], Det[",
  FontSize->18],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {
      StyleBox["a",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["b",
       FontColor->RGBColor[1, 0, 1]]},
     {
      StyleBox["r",
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox["s",
       FontColor->RGBColor[1, 0, 1]]}
    }], "\[NegativeThinSpace]", ")"}]],
  FontSize->18],
 StyleBox["]}",
  FontSize->18],
 ":"
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["HC.d) Cramer's rule formulas for solutions of linear systems", \
"Subsubsection"],

Cell[TextData[{
 "In your grandfather's day, Cramer's rule was a hot topic. If you want to \
talk with your grandfather about matrices, you might want to know about \
Cramer's rule.\nHere it is:\nIf Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "b"},
     {"c", "d"}
    }], "\[NegativeThinSpace]", ")"}]]],
 "] is not 0, then the solutions {x,y} of\n             ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "b"},
     {"c", "d"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".{x,y} = ",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 " \nare given by   "
}], "Text"],

Cell[TextData[{
 "     ",
 "   x  =",
 Cell[BoxData[
  StyleBox[
   FractionBox[
    RowBox[{"Det", "[", 
     RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
        {
         StyleBox["u",
          FontColor->RGBColor[1, 0, 0]], "b"},
        {
         StyleBox["v",
          FontColor->RGBColor[1, 0, 0]], 
         RowBox[{"d", "  "}]}
       }], "\[NegativeThinSpace]", ")"}], " ", "]"}], 
    RowBox[{"Det", "[", 
     RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
        {"a", "b"},
        {"c", 
         RowBox[{"d", "  "}]}
       }], "\[NegativeThinSpace]", ")"}], " ", "]"}]],
   FontSize->24]]],
 "    and    y  =",
 Cell[BoxData[
  FractionBox[
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", 
        StyleBox["u",
         FontColor->RGBColor[1, 0, 0]]},
       {"c", 
        RowBox[{
         StyleBox["v",
          FontColor->RGBColor[1, 0, 0]], " "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}], 
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", "b"},
       {"c", 
        RowBox[{"d", "  "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}]]],
  FontSize->24]
}], "Text"],

Cell["Check:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "u", ",", "v"}], "]"}], 
   ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"linsystem", "  ", "=", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"a", "b"},
        {"c", "d"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ], ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], " ", "==", " ", 
   RowBox[{"{", 
    RowBox[{"u", ",", "v"}], "}"}]}]}]}], "Input"],

Cell[BoxData[
 RowBox[{"x", "=", 
  FractionBox[
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {
        StyleBox["u",
         FontColor->RGBColor[1, 0, 0]], "b"},
       {
        StyleBox["v",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"d", "  "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}], 
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", "b"},
       {"c", 
        RowBox[{"d", "  "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}]]}]], "Input"],

Cell[BoxData[
 RowBox[{"y", "=", 
  FractionBox[
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", 
        StyleBox["u",
         FontColor->RGBColor[1, 0, 0]]},
       {"c", 
        RowBox[{
         StyleBox["v",
          FontColor->RGBColor[1, 0, 0]], " "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}], 
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", "b"},
       {"c", 
        RowBox[{"d", "  "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}]]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"a", "b"},
        {"c", "d"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ], ".", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], " ", "]"}], "==", " ", 
  RowBox[{"{", 
   RowBox[{"u", ",", "v"}], "}"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
It works any time the determinant of the coefficient matrix is not 0.
Explain where these formulas come from.\
\>", "Text"],

Cell["Answer:", "Subsubsection"],

Cell["Go with ", "SmallText"],

Cell[TextData[{
 "             ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "b"},
     {"c", "d"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".{x,y} = ",
 StyleBox["{u,v}",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "a", ",", "b", ",", "c", ",", "d", ",", "x", ",", "y", ",", "u", ",", 
     "v"}], "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], "\[NegativeThinSpace]", ")"}], ".", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "==", 
  RowBox[{"{", 
   RowBox[{"u", ",", "v"}], "}"}]}]}], "Input"],

Cell["Put col[1] = {a,c} and col[2] = {b,d} and note that", "SmallText"],

Cell[TextData[{
 "             ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "b"},
     {"c", "d"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".{x,y} = {u,v}"
}], "SmallText"],

Cell[TextData[{
 "is the same as the vector equation: \n            ",
 "x",
 StyleBox[" col[1] + ",
  FontColor->RGBColor[0, 0, 1]],
 "y",
 StyleBox[" col[2]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["{u,v}:",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "col", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"col", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", "c"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"col", "[", "2", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"b", ",", "d"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"col", "[", "1", "]"}],
      FontColor->RGBColor[0, 0, 1]]}], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["+",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{"y", 
     StyleBox[" ",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[
      RowBox[{"col", "[", "2", "]"}],
      FontColor->RGBColor[0, 0, 1]]}]}], " ", "==", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"u", ",", "v"}], "}"}],
    FontColor->RGBColor[0, 0, 1]]}]}]}], "Input"],

Cell["\<\
Make vectors perpendicular to each column:
          perpcol[1] = {c,-a}
         perpcol[2]  = {d,-b}\
\>", "SmallText"],

Cell[TextData[{
 "Now remember  \n                      ",
 StyleBox[" x col[1] + y col[2]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["{u,v}",
  FontColor->RGBColor[0, 0, 1]],
 "\nDot perpcol[2] on both sides  to get\n            ",
 StyleBox[" perpcol[2]",
  FontColor->RGBColor[1, 0, 0]],
 ". (",
 StyleBox[" x col[1] + y] col[2])",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["{u,v}\n",
  FontColor->RGBColor[0, 0, 1]],
 "This is the same as",
 StyleBox["\n              x ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" perpcol[2]",
  FontColor->RGBColor[1, 0, 0]],
 ". ",
 StyleBox["col[1] +y ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["perpcol[2]",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".col[2]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["{u,v}",
  FontColor->RGBColor[0, 0, 1]],
 "\n      \nBecause ",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[1, 0, 0]],
 " is perpendicular to ",
 StyleBox["col[2], ",
  FontColor->RGBColor[0, 0, 1]],
 "this reduces to\n\n     ",
 StyleBox["        x ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" perpcol[2]",
  FontColor->RGBColor[1, 0, 0]],
 ". ",
 StyleBox["col[1]  + 0 ",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["perpcol[2]",
  FontColor->RGBColor[1, 0, 0]],
 ".",
 StyleBox["{u,v}",
  FontColor->RGBColor[0, 0, 1]],
 "\n      \nSo the solution for x is:\n                    ",
 Cell[BoxData[
  RowBox[{"x", "=", 
   FractionBox[
    RowBox[{
     StyleBox[
      RowBox[{"perpcol", "[", "2", "]"}],
      FontColor->RGBColor[1, 0, 0]], ".", 
     RowBox[{"{", 
      RowBox[{"u", ".", "v"}], "}"}]}], 
    RowBox[{
     StyleBox[
      RowBox[{"perpcol", "[", "2", "]"}],
      FontColor->RGBColor[1, 0, 0]], ".", 
     RowBox[{"col", "[", 
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], "]"}]}]]}]]],
 "\n                    \nSimilarly the solution for y is\n                   \
  ",
 Cell[BoxData[
  RowBox[{"y", "=", 
   FractionBox[
    RowBox[{
     StyleBox[
      RowBox[{"perpcol", "[", "1", "]"}],
      FontColor->RGBColor[1, 0, 0]], ".", 
     RowBox[{"{", 
      RowBox[{"u", ",", "v"}], "}"}]}], 
    RowBox[{
     StyleBox[
      RowBox[{"perpcol", "[", "1", "]"}],
      FontColor->RGBColor[1, 0, 0]], ".", 
     RowBox[{"col", "[", 
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]], "]"}]}]]}]]],
 "."
}], "SmallText"],

Cell["Try it running on cleared constants:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "x", ",", "u", ",", "v"}],
     "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], "\[NegativeThinSpace]", ")"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "[", "1", "]"}], ",", 
     RowBox[{"x", "[", "2", "]"}]}], "}"}]}], "==", 
  RowBox[{"{", 
   RowBox[{"u", ",", "v"}], "}"}]}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "col", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"col", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"a", ",", "c"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"col", "[", "2", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"b", ",", "d"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"perpcol", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"c", ",", 
      RowBox[{"-", "a"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"perpcol", "[", "2", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"-", "b"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{"x", "=", 
  FractionBox[
   RowBox[{
    StyleBox[
     RowBox[{"perpcol", "[", "2", "]"}],
     FontColor->RGBColor[1, 0, 0]], ".", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v"}], "}"}]}], 
   RowBox[{
    StyleBox[
     RowBox[{"perpcol", "[", "2", "]"}],
     FontColor->RGBColor[1, 0, 0]], ".", 
    RowBox[{"col", "[", 
     StyleBox["1",
      FontColor->RGBColor[0, 0, 1]], "]"}]}]]}]}], "Input"],

Cell["This is the same as:", "SmallText"],

Cell[BoxData[
 RowBox[{"Cramerx", "=", 
  FractionBox[
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {
        StyleBox["u",
         FontColor->RGBColor[1, 0, 0]], "b"},
       {
        StyleBox["v",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"d", "  "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}], 
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", "b"},
       {"c", 
        RowBox[{"d", "  "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}]]}]], "Input"],

Cell["Similarly the solution for y is:", "SmallText"],

Cell[BoxData[
 RowBox[{"y", "=", 
  FractionBox[
   RowBox[{
    StyleBox[
     RowBox[{"perpcol", "[", "1", "]"}],
     FontColor->RGBColor[1, 0, 0]], ".", 
    RowBox[{"{", 
     RowBox[{"u", ",", "v"}], "}"}]}], 
   RowBox[{
    StyleBox[
     RowBox[{"perpcol", "[", "1", "]"}],
     FontColor->RGBColor[1, 0, 0]], ".", 
    RowBox[{"col", "[", 
     StyleBox["2",
      FontColor->RGBColor[0, 0, 1]], "]"}]}]]}]], "Input"],

Cell["This is the same as:", "SmallText"],

Cell[BoxData[
 RowBox[{"Cramery", "=", 
  FractionBox[
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", 
        StyleBox["u",
         FontColor->RGBColor[1, 0, 0]]},
       {"c", 
        RowBox[{
         StyleBox["v",
          FontColor->RGBColor[1, 0, 0]], " "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}], 
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", "b"},
       {"c", 
        RowBox[{"d", "  "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}]]}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["HC.e) Hand calculation of inverse matrices", "Subsubsection"],

Cell[TextData[{
 "Explain this: If  Det[",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "b"},
     {"c", "d"}
    }], "\[NegativeThinSpace]", ")"}]]],
 "] is not zero, then"
}], "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "                ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], "\[NegativeThinSpace]", ")"}], 
   RowBox[{"-", "1"}]]]],
 "  =      ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", "b"},
       {"c", 
        RowBox[{"d", "  "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}]]]],
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"d", 
      RowBox[{"-", "b"}]},
     {
      RowBox[{"-", "c"}], "a"}
    }], "\[NegativeThinSpace]", ")"}]]]
}], "Text"],

Cell["Answer:", "Subsubsection"],

Cell[TextData[{
 "According to Cramer's rule:\nThe solutions {x,y} of\n             ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "b"},
     {"c", "d"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".{x,y} = ",
 StyleBox["{u,v}",
  FontColor->RGBColor[1, 0, 0]],
 " \nare given by   "
}], "SmallText"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "u", ",", "v"}], 
  "]"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"Det", "[", 
      RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
         {
          StyleBox["u",
           FontColor->RGBColor[1, 0, 0]], "b"},
         {
          StyleBox["v",
           FontColor->RGBColor[1, 0, 0]], 
          RowBox[{"d", "  "}]}
        }], "\[NegativeThinSpace]", ")"}], " ", "]"}], 
     RowBox[{"Det", "[", 
      RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
         {"a", "b"},
         {"c", 
          RowBox[{"d", "  "}]}
        }], "\[NegativeThinSpace]", ")"}], " ", "]"}]], "   ", ",", 
    FractionBox[
     RowBox[{"Det", "[", 
      RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
         {"a", 
          StyleBox["u",
           FontColor->RGBColor[1, 0, 0]]},
         {"c", 
          RowBox[{
           StyleBox["v",
            FontColor->RGBColor[1, 0, 0]], " "}]}
        }], "\[NegativeThinSpace]", ")"}], " ", "]"}], 
     RowBox[{"Det", "[", 
      RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
         {"a", "b"},
         {"c", 
          RowBox[{"d", "  "}]}
        }], "\[NegativeThinSpace]", ")"}], " ", "]"}]]}], "}"}]}]}], "Input"],

Cell[TextData[{
 "The matrix you hit on {u,v} to get {x,y} is the inverse of ",
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"a", "b"},
     {"c", "d"}
    }], "\[NegativeThinSpace]", ")"}]]],
 ".\nFrom the output above, you can see that that matrix is:"
}], "SmallText"],

Cell[TextData[{
 "              ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
      {"a", "b"},
      {"c", "d"}
     }], "\[NegativeThinSpace]", ")"}], 
   RowBox[{"-", "1"}]]]],
 " = ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{
    RowBox[{"a", " ", "d"}], " ", "-", 
    RowBox[{"b", " ", "c"}]}]]]],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"d", 
      RowBox[{"-", "b"}]},
     {
      RowBox[{"-", "c"}], "a"}
    }], "\[NegativeThinSpace]", ")"}]]],
 "\n                      \n                            =",
 StyleBox[" ",
  FontSize->18],
 " ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", "[", 
    RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
       {"a", "b"},
       {"c", 
        RowBox[{"d", "  "}]}
      }], "\[NegativeThinSpace]", ")"}], " ", "]"}]]]],
 StyleBox[" ",
  FontSize->18],
 Cell[BoxData[
  RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
     {"d", 
      RowBox[{"-", "b"}]},
     {
      RowBox[{"-", "c"}], "a"}
    }], "\[NegativeThinSpace]", ")"}]]],
 StyleBox["\n  ",
  FontSize->18]
}], "SmallText"],

Cell[TextData[{
 "because ",
 StyleBox[" a d - b c = ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{"Det", "[", 
   RowBox[{"(", " \[NegativeThinSpace]", GridBox[{
      {"a", "b"},
      {"c", 
       RowBox[{"d", "  "}]}
     }], "\[NegativeThinSpace]", ")"}], " ", "]"}]],
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["HC.f) Hand calculation of SVD: Tedious but possible", "Subsubsection"],

Cell[TextData[StyleBox["Thanks go to Professor Todd Will of Davidson College \
for suggesting this.",
 FontVariations->{"CompatibilityType"->0}]], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Here is a 2D matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.8", 
         RowBox[{"-", "2.1"}]},
        {"1.3", "0.2"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Use hand-style calculations to duplicate this matrix by coming up by with \
an aligner frame, stretch factors and a hanger frame so that\n    ",
 StyleBox[" A = hanger.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["stretcher",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[".aligner",
  FontColor->RGBColor[0, 0, 1]]
}], "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
First notice that no matter what x is,the vectors
     {x, 1 - x} and {x - 1 ,x} 
are perpendicular:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "x", "]"}], ";"}], " "}], "\n", 
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"1", "-", "x"}]}], "}"}], ".", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "-", "1"}], ",", "x"}], "}"}]}], "]"}]}], "Input"],

Cell[TextData[{
 "Now find a solution x of\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"1", "-", "x"}]}], "}"}]}], ")"}], ".", 
    RowBox[{"(", 
     RowBox[{"A", ".", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "-", "1"}], ",", "x"}], "}"}]}], ")"}]}], "=", "0"}]]],
 ": "
}], "SmallText"],

Cell[BoxData[
 RowBox[{"SVDeqn", " ", "=", "  ", 
  RowBox[{
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"1", "-", "x"}]}], "}"}]}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "-", "1"}], ",", "x"}], "}"}]}], ")"}]}], "]"}], " ", "==",
    " ", "0"}]}]], "Input"],

Cell["\<\
This is an ordinary quadratic equation which is readily solved by the \
quadratic formula:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"xsols", " ", "=", " ", 
  RowBox[{"Solve", "[", "SVDeqn", "]"}]}]], "Input"],

Cell["Go with one of the solutions:", "SmallText"],

Cell["The smaller one will be the most easily managed.", "Special5"],

Cell[BoxData[
 RowBox[{"goodx", " ", "=", " ", 
  RowBox[{"x", "/.", 
   RowBox[{"xsols", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input"],

Cell[TextData[{
 "Use this x and put\n\t",
 Cell[BoxData[
  RowBox[{
   RowBox[{"alignerframe", "[", "1", "]"}], "=", 
   FractionBox[
    RowBox[{"{", 
     RowBox[{"goodx", ",", 
      RowBox[{"1", "-", "goodx"}]}], "}"}], 
    RowBox[{"(", 
     SqrtBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{"goodx", ",", 
         RowBox[{"1", "-", "goodx"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"goodx", ",", 
         RowBox[{"1", "-", "goodx"}]}], "}"}]}]], ")"}]]}]]],
 "\nand\n\t",
 Cell[BoxData[
  RowBox[{
   RowBox[{"alignerframe", "[", "2", "]"}], "=", 
   FractionBox[
    RowBox[{"{", 
     RowBox[{
      RowBox[{"goodx", "-", "1"}], ",", "goodx"}], "}"}], 
    RowBox[{"(", 
     SqrtBox[
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"goodx", "-", "1"}], ",", "goodx"}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"goodx", "-", "1"}], ",", "goodx"}], "}"}]}]], ")"}]]}]]],
 ":\n"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "alignerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"goodx", ",", 
       RowBox[{"1", "-", "goodx"}]}], "}"}], "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"goodx", ",", 
         RowBox[{"1", "-", "goodx"}]}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{"goodx", ",", 
         RowBox[{"1", "-", "goodx"}]}], "}"}]}], "]"}]}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", "2", "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"goodx", " ", "-", " ", "1"}], ",", "goodx"}], "}"}], "/", 
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"goodx", " ", "-", " ", "1"}], ",", "goodx"}], "}"}], ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"goodx", " ", "-", " ", "1"}], ",", "goodx"}], "}"}]}], 
      "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell[TextData[{
 "The stretch factors are:\n           ",
 Cell[BoxData[{
  RowBox[{"xstretch", "=", 
   RowBox[{"||", 
    RowBox[{"A", ".", 
     RowBox[{"alignerframe", "[", "1", "]"}]}], "||"}]}], "\n", 
  RowBox[{" "}]}]],
 " \n           ",
 Cell[BoxData[
  RowBox[{"=", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"alignerframe", "[", "1", "]"}]}], ")"}], ".", 
     RowBox[{"(", 
      RowBox[{"A", ".", 
       RowBox[{"alignerframe", "[", "1", "]"}]}], ")"}]}]]}]]],
 "\nand\n            ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{
    RowBox[{"ystretch", "=", 
     RowBox[{"||", 
      RowBox[{"A", ".", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], "||"}]}], " ", "\n", 
    "\t\t ", "\n", "           ", 
    RowBox[{"=", 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A", ".", 
         RowBox[{"alignerframe", "[", "2", "]"}]}], ")"}], ".", 
       RowBox[{"(", 
        RowBox[{"A", ".", 
         RowBox[{"alignerframe", "[", "2", "]"}]}], ")"}]}]]}]}]}]]],
 "\nso your stretcher is:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xstretch", " ", "=", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "1", "]"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "1", "]"}]}], ")"}]}]]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ystretch", " ", "=", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "2", "]"}]}], ")"}], ".", 
      RowBox[{"(", 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "2", "]"}]}], ")"}]}]]}], ";"}], 
  " "}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
        {"xstretch", "0"},
        {"0", "ystretch"}
       }], "\[NegativeThinSpace]", ")"}]}], ";"}], " "}],
  FontColor->RGBColor[1, 0, 1]], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input"],

Cell[TextData[{
 "Your hangerframe is:\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"hangerframe", "[", "1", "]"}], "=", 
   RowBox[{
    FractionBox["1", "xstretch"], 
    RowBox[{"A", ".", 
     RowBox[{"alignerframe", "[", "1", "]"}]}]}]}]]],
 "\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"hangerframe", "[", "2", "]"}], "=", 
   RowBox[{
    FractionBox["1", "ystretch"], 
    RowBox[{"A", ".", 
     RowBox[{"alignerframe", "[", "2", "]"}]}]}]}]]]
}], "SmallText"],

Cell["\<\
This makes it automatic that
A.alignerframe[1] = xstretch hangerframe[1] 
and
A.alignerframe[2] = ystretch hangerframe[2]\
\>", "Special5"],

Cell["So your hanger is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "hangerframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{"\t", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       FractionBox["1", "xstretch"], 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "1", "]"}]}]}], ",", 
      RowBox[{
       FractionBox["1", "ystretch"], 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "2", "]"}]}]}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], " ", "]"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]"}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["Try them out by comparing A with:", "SmallText"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["hanger",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["stretcher",
    FontColor->RGBColor[1, 0, 1]], 
   StyleBox[".",
    FontColor->RGBColor[0, 0, 1]], 
   StyleBox["aligner",
    FontColor->RGBColor[0, 0, 1]]}], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["\<\
It's within the reach of low-level but tedious hand algebra.
\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, 128}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.04.T1"->{
  Cell[29469, 802, 101, 1, 36, "Subsection",
   CellTags->"MGM.04.T1"]},
 "MGM.04.T2"->{
  Cell[48635, 1507, 2130, 81, 177, "Subsection",
   CellTags->"MGM.04.T2"]},
 "MGM.04.T3"->{
  Cell[80012, 2711, 200, 4, 61, "Subsection",
   CellTags->"MGM.04.T3"]},
 "MGM.04.T4"->{
  Cell[103272, 3456, 2170, 88, 109, "Subsection",
   CellTags->"MGM.04.T4"]},
 "MGM.04.T5"->{
  Cell[114076, 3876, 99, 1, 36, "Subsection",
   CellTags->"MGM.04.T5"]},
 "MGM.04.T6"->{
  Cell[123886, 4224, 478, 11, 111, "Subsection",
   CellTags->"MGM.04.T6"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.04.T1", 233027, 7574},
 {"MGM.04.T2", 233116, 7577},
 {"MGM.04.T3", 233209, 7580},
 {"MGM.04.T4", 233299, 7583},
 {"MGM.04.T5", 233393, 7586},
 {"MGM.04.T6", 233483, 7589}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 131, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6368, 137, 193, 7, 28, "Special2"],
Cell[6564, 146, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7881, 188, 38, 0, 31, "Subsubsection"],
Cell[7922, 190, 1344, 31, 156, "Input"],
Cell[9269, 223, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9442, 229, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26813, 712, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27060, 723, 39, 0, 35, "Subsubsection"],
Cell[27102, 725, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29469, 802, 101, 1, 36, "Subsection",
 CellTags->"MGM.04.T1"],
Cell[CellGroupData[{
Cell[29595, 807, 66, 0, 31, "Subsubsection"],
Cell[29664, 809, 321, 13, 97, "Text"],
Cell[29988, 824, 366, 14, 55, "Input"],
Cell[30357, 840, 214, 5, 20, "Input"],
Cell[30574, 847, 127, 3, 31, "Special5"],
Cell[CellGroupData[{
Cell[30726, 854, 141, 4, 49, "Text"],
Cell[30870, 860, 27, 0, 23, "Special1"],
Cell[30900, 862, 437, 13, 124, "SmallText"],
Cell[31340, 877, 60, 1, 20, "Input"],
Cell[31403, 880, 33, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[31485, 886, 128, 3, 31, "Subsubsection"],
Cell[31616, 891, 328, 13, 97, "Text"],
Cell[31947, 906, 366, 14, 55, "Input"],
Cell[32316, 922, 217, 5, 20, "Input"],
Cell[32536, 929, 214, 5, 20, "Input"],
Cell[32753, 936, 216, 5, 20, "Input"],
Cell[32972, 943, 127, 3, 31, "Special5"],
Cell[CellGroupData[{
Cell[33124, 950, 264, 6, 124, "Text"],
Cell[33391, 958, 27, 0, 23, "Special1"],
Cell[33421, 960, 210, 5, 74, "SmallText"],
Cell[33634, 967, 365, 11, 36, "Input"],
Cell[34002, 980, 94, 2, 24, "SmallText"],
Cell[34099, 984, 6263, 194, 432, "Input"],
Cell[40365, 1180, 113, 3, 24, "SmallText"],
Cell[40481, 1185, 172, 4, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[40702, 1195, 40, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[40767, 1199, 223, 5, 99, "Text"],
Cell[40993, 1206, 27, 0, 23, "Special1"],
Cell[41023, 1208, 401, 9, 174, "SmallText"]
}, Closed]]
}, Closed]],
Cell[41451, 1221, 102, 2, 31, "Subsubsection"],
Cell[41556, 1225, 321, 13, 97, "Text"],
Cell[41880, 1240, 460, 16, 55, "Input"],
Cell[42343, 1258, 102, 3, 49, "Text"],
Cell[42448, 1263, 771, 25, 36, "Input"],
Cell[43222, 1290, 782, 25, 36, "Input"],
Cell[44007, 1317, 569, 18, 36, "Input"],
Cell[44579, 1337, 22, 0, 24, "Text"],
Cell[44604, 1339, 404, 13, 36, "Input"],
Cell[CellGroupData[{
Cell[45033, 1356, 35, 0, 24, "Text"],
Cell[45071, 1358, 27, 0, 23, "Special1"],
Cell[45101, 1360, 91, 4, 24, "SmallText"],
Cell[45195, 1366, 114, 3, 20, "Input"],
Cell[45312, 1371, 133, 4, 43, "Special5"],
Cell[45448, 1377, 117, 3, 20, "Input"],
Cell[45568, 1382, 121, 4, 43, "Special5"],
Cell[45692, 1388, 115, 3, 20, "Input"],
Cell[45810, 1393, 122, 4, 43, "Special5"],
Cell[45935, 1399, 60, 0, 24, "SmallText"],
Cell[45998, 1401, 404, 13, 36, "Input"],
Cell[46405, 1416, 2181, 85, 418, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[48635, 1507, 2130, 81, 177, "Subsection",
 CellTags->"MGM.04.T2"],
Cell[CellGroupData[{
Cell[50790, 1592, 124, 4, 31, "Subsubsection"],
Cell[50917, 1598, 64, 0, 24, "Text"],
Cell[50984, 1600, 454, 20, 47, "SmallText"],
Cell[51441, 1622, 43, 0, 24, "Text"],
Cell[51487, 1624, 1009, 33, 121, "Input"],
Cell[52499, 1659, 535, 18, 20, "Input"],
Cell[53037, 1679, 743, 25, 20, "Input"],
Cell[CellGroupData[{
Cell[53805, 1708, 35, 0, 24, "Text"],
Cell[53843, 1710, 27, 0, 23, "Special1"],
Cell[53873, 1712, 32, 0, 24, "SmallText"],
Cell[53908, 1714, 535, 18, 20, "Input"],
Cell[54446, 1734, 157, 4, 74, "SmallText"],
Cell[54606, 1740, 743, 25, 20, "Input"],
Cell[55352, 1767, 190, 5, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[55591, 1778, 161, 4, 31, "Subsubsection"],
Cell[55755, 1784, 47, 0, 24, "Text"],
Cell[55805, 1786, 1129, 36, 101, "Input"],
Cell[56937, 1824, 39, 0, 24, "Text"],
Cell[56979, 1826, 69, 1, 20, "Input"],
Cell[57051, 1829, 24, 0, 24, "Text"],
Cell[57078, 1831, 225, 7, 20, "Input"],
Cell[CellGroupData[{
Cell[57328, 1842, 93, 2, 24, "Text"],
Cell[57424, 1846, 27, 0, 23, "Special1"],
Cell[57454, 1848, 79, 3, 49, "SmallText"],
Cell[57536, 1853, 454, 20, 47, "SmallText"],
Cell[57993, 1875, 70, 3, 49, "SmallText"],
Cell[58066, 1880, 490, 16, 47, "SmallText"],
Cell[58559, 1898, 403, 16, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[59011, 1920, 336, 14, 45, "Subsubsection"],
Cell[59350, 1936, 367, 15, 35, "Text"],
Cell[59720, 1953, 1192, 36, 71, "Input"],
Cell[60915, 1991, 125, 4, 42, "Input"],
Cell[CellGroupData[{
Cell[61065, 1999, 437, 16, 85, "Text"],
Cell[61505, 2017, 27, 0, 23, "Special1"],
Cell[61535, 2019, 818, 33, 166, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[62402, 2058, 220, 7, 31, "Subsubsection"],
Cell[62625, 2067, 63, 0, 24, "Text"],
Cell[62691, 2069, 2589, 79, 175, "Input"],
Cell[65283, 2150, 70, 0, 24, "Text"],
Cell[65356, 2152, 437, 13, 36, "Input"],
Cell[65796, 2167, 35, 0, 24, "Text"],
Cell[65834, 2169, 61, 1, 20, "Input"],
Cell[65898, 2172, 71, 0, 24, "Text"],
Cell[65972, 2174, 396, 12, 36, "Input"],
Cell[66371, 2188, 35, 0, 24, "Text"],
Cell[66409, 2190, 62, 1, 20, "Input"],
Cell[CellGroupData[{
Cell[66496, 2195, 131, 3, 49, "Text"],
Cell[66630, 2200, 27, 0, 23, "Special1"],
Cell[66660, 2202, 251, 6, 74, "SmallText"],
Cell[66914, 2210, 123, 5, 24, "SmallText"],
Cell[67040, 2217, 88, 2, 20, "Input"],
Cell[67131, 2221, 1015, 36, 289, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[68195, 2263, 231, 7, 31, "Subsubsection"],
Cell[68429, 2272, 62, 0, 24, "Text"],
Cell[68494, 2274, 2673, 82, 175, "Input"],
Cell[71170, 2358, 70, 0, 24, "Text"],
Cell[71243, 2360, 437, 13, 36, "Input"],
Cell[71683, 2375, 35, 0, 24, "Text"],
Cell[71721, 2377, 61, 1, 20, "Input"],
Cell[71785, 2380, 71, 0, 24, "Text"],
Cell[71859, 2382, 396, 12, 36, "Input"],
Cell[72258, 2396, 35, 0, 24, "Text"],
Cell[72296, 2398, 62, 1, 20, "Input"],
Cell[CellGroupData[{
Cell[72383, 2403, 130, 3, 49, "Text"],
Cell[72516, 2408, 27, 0, 23, "Special1"],
Cell[72546, 2410, 251, 6, 74, "SmallText"],
Cell[72800, 2418, 124, 5, 24, "SmallText"],
Cell[72927, 2425, 87, 2, 20, "Input"],
Cell[73017, 2429, 1133, 43, 314, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[74199, 2478, 425, 18, 35, "Subsubsection"],
Cell[74627, 2498, 153, 5, 26, "Text"],
Cell[74783, 2505, 1028, 31, 70, "Input"],
Cell[75814, 2538, 84, 2, 12, "Special2"],
Cell[CellGroupData[{
Cell[75923, 2544, 224, 6, 76, "Text"],
Cell[76150, 2552, 27, 0, 23, "Special1"],
Cell[76180, 2554, 541, 21, 101, "SmallText"],
Cell[76724, 2577, 226, 10, 12, "Special2"],
Cell[76953, 2589, 1242, 48, 178, "SmallText"],
Cell[78198, 2639, 1562, 58, 177, "Special2"],
Cell[79763, 2699, 188, 5, 51, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[80012, 2711, 200, 4, 61, "Subsection",
 CellTags->"MGM.04.T3"],
Cell[CellGroupData[{
Cell[80237, 2719, 130, 3, 31, "Subsubsection"],
Cell[80370, 2724, 65, 0, 24, "Text"],
Cell[80438, 2726, 264, 9, 55, "Input"],
Cell[80705, 2737, 50, 0, 24, "Text"],
Cell[80758, 2739, 3850, 114, 252, "Input"],
Cell[84611, 2855, 56, 0, 24, "Text"],
Cell[84670, 2857, 3319, 98, 156, "Input"],
Cell[87992, 2957, 30, 0, 24, "Text"],
Cell[88025, 2959, 120, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[88170, 2966, 897, 27, 249, "Text"],
Cell[89070, 2995, 27, 0, 23, "Special1"],
Cell[89100, 2997, 362, 12, 99, "SmallText"],
Cell[89465, 3011, 98, 2, 12, "Special2"],
Cell[89566, 3015, 1642, 50, 449, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91257, 3071, 130, 3, 31, "Subsubsection"],
Cell[91390, 3076, 65, 0, 24, "Text"],
Cell[91458, 3078, 240, 8, 55, "Input"],
Cell[91701, 3088, 50, 0, 24, "Text"],
Cell[91754, 3090, 3854, 114, 252, "Input"],
Cell[95611, 3206, 56, 0, 24, "Text"],
Cell[95670, 3208, 3594, 106, 156, "Input"],
Cell[99267, 3316, 30, 0, 24, "Text"],
Cell[99300, 3318, 120, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[99445, 3325, 965, 28, 249, "Text"],
Cell[100413, 3355, 27, 0, 23, "Special1"],
Cell[100443, 3357, 172, 5, 23, "Special2"],
Cell[100618, 3364, 421, 15, 99, "SmallText"],
Cell[101042, 3381, 98, 2, 12, "Special2"],
Cell[101143, 3385, 2068, 64, 474, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[103272, 3456, 2170, 88, 109, "Subsection",
 CellTags->"MGM.04.T4"],
Cell[CellGroupData[{
Cell[105467, 3548, 87, 1, 31, "Subsubsection"],
Cell[105557, 3551, 29, 0, 24, "Text"],
Cell[105589, 3553, 2796, 96, 101, "Input"],
Cell[108388, 3651, 239, 12, 24, "Text"],
Cell[108630, 3665, 177, 6, 20, "Input"],
Cell[CellGroupData[{
Cell[108832, 3675, 35, 0, 24, "Text"],
Cell[108870, 3677, 27, 0, 23, "Special1"],
Cell[108900, 3679, 2114, 86, 97, "SmallText"],
Cell[111017, 3767, 2998, 102, 84, "Input"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[114076, 3876, 99, 1, 36, "Subsection",
 CellTags->"MGM.04.T5"],
Cell[CellGroupData[{
Cell[114200, 3881, 84, 1, 31, "Subsubsection"],
Cell[114287, 3884, 31, 0, 24, "Text"],
Cell[114321, 3886, 3819, 122, 334, "Input"],
Cell[118143, 4010, 107, 3, 24, "Text"],
Cell[118253, 4015, 611, 20, 100, "Input"],
Cell[CellGroupData[{
Cell[118889, 4039, 32, 0, 24, "Text"],
Cell[118924, 4041, 27, 0, 23, "Special1"],
Cell[118954, 4043, 29, 0, 24, "SmallText"],
Cell[118986, 4045, 57, 1, 20, "Input"],
Cell[119046, 4048, 181, 4, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[119276, 4058, 69, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[119370, 4062, 74, 0, 24, "Text"],
Cell[119447, 4064, 27, 0, 23, "Special1"],
Cell[119477, 4066, 243, 6, 124, "SmallText"],
Cell[119723, 4074, 756, 22, 51, "Input"],
Cell[120482, 4098, 100, 2, 24, "SmallText"],
Cell[120585, 4102, 428, 13, 36, "Input"],
Cell[121016, 4117, 49, 0, 24, "SmallText"],
Cell[121068, 4119, 223, 6, 20, "Input"],
Cell[121294, 4127, 37, 0, 24, "SmallText"],
Cell[121334, 4129, 980, 36, 20, "Input"],
Cell[122317, 4167, 39, 0, 24, "SmallText"],
Cell[122359, 4169, 670, 18, 96, "Input"],
Cell[123032, 4189, 112, 3, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[123193, 4198, 61, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[123279, 4202, 121, 4, 74, "Text"],
Cell[123403, 4208, 27, 0, 23, "Special1"],
Cell[123433, 4210, 392, 7, 149, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[123886, 4224, 478, 11, 111, "Subsection",
 CellTags->"MGM.04.T6"],
Cell[CellGroupData[{
Cell[124389, 4239, 160, 5, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[124574, 4248, 809, 33, 98, "Text"],
Cell[125386, 4283, 27, 0, 23, "Special1"],
Cell[125416, 4285, 758, 30, 98, "SmallText"],
Cell[126177, 4317, 9228, 369, 177, "SmallText"],
Cell[135408, 4688, 436, 17, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[135893, 4711, 159, 5, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[136077, 4720, 2998, 121, 122, "Text"],
Cell[139078, 4843, 27, 0, 23, "Special1"],
Cell[139108, 4845, 1825, 77, 164, "SmallText"],
Cell[140936, 4924, 963, 36, 89, "SmallText"],
Cell[141902, 4962, 780, 33, 103, "SmallText"],
Cell[142685, 4997, 2214, 93, 140, "SmallText"],
Cell[144902, 5092, 715, 26, 90, "SmallText"],
Cell[145620, 5120, 1053, 47, 78, "SmallText"],
Cell[146676, 5169, 106, 2, 12, "Special2"],
Cell[146785, 5173, 2195, 91, 164, "SmallText"],
Cell[148983, 5266, 720, 27, 90, "SmallText"],
Cell[149706, 5295, 807, 34, 78, "SmallText"],
Cell[150516, 5331, 2841, 120, 103, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[153406, 5457, 87, 1, 31, "Subsubsection"],
Cell[153496, 5460, 640, 19, 195, "Text"],
Cell[154139, 5481, 1196, 43, 93, "Text"],
Cell[155338, 5526, 22, 0, 24, "Text"],
Cell[155363, 5528, 532, 18, 54, "Input"],
Cell[155898, 5548, 560, 18, 72, "Input"],
Cell[156461, 5568, 561, 18, 70, "Input"],
Cell[157025, 5588, 361, 13, 38, "Input"],
Cell[CellGroupData[{
Cell[157411, 5605, 133, 3, 49, "Text"],
Cell[157547, 5610, 32, 0, 31, "Subsubsection"],
Cell[157582, 5612, 29, 0, 24, "SmallText"],
Cell[157614, 5614, 253, 10, 47, "SmallText"],
Cell[157870, 5626, 484, 16, 54, "Input"],
Cell[158357, 5644, 72, 0, 24, "SmallText"],
Cell[158432, 5646, 206, 8, 47, "SmallText"],
Cell[158641, 5656, 270, 11, 49, "SmallText"],
Cell[158914, 5669, 1092, 40, 66, "Input"],
Cell[160009, 5711, 131, 4, 74, "SmallText"],
Cell[160143, 5717, 2482, 93, 427, "SmallText"],
Cell[162628, 5812, 57, 0, 24, "SmallText"],
Cell[162688, 5814, 530, 17, 54, "Input"],
Cell[163221, 5833, 1224, 44, 119, "Input"],
Cell[164448, 5879, 41, 0, 24, "SmallText"],
Cell[164492, 5881, 566, 18, 72, "Input"],
Cell[165061, 5901, 53, 0, 24, "SmallText"],
Cell[165117, 5903, 427, 15, 42, "Input"],
Cell[165547, 5920, 41, 0, 24, "SmallText"],
Cell[165591, 5922, 567, 18, 70, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[166207, 5946, 67, 0, 31, "Subsubsection"],
Cell[166277, 5948, 215, 8, 47, "Text"],
Cell[CellGroupData[{
Cell[166517, 5960, 689, 27, 60, "Text"],
Cell[167209, 5989, 32, 0, 31, "Subsubsection"],
Cell[167244, 5991, 329, 11, 122, "SmallText"],
Cell[167576, 6004, 1351, 42, 93, "Input"],
Cell[168930, 6048, 296, 8, 72, "SmallText"],
Cell[169229, 6058, 1122, 45, 162, "SmallText"],
Cell[170354, 6105, 344, 13, 47, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[170747, 6124, 76, 0, 31, "Subsubsection"],
Cell[170826, 6126, 205, 4, 12, "Special2"],
Cell[171034, 6132, 36, 0, 24, "Text"],
Cell[171073, 6134, 312, 11, 55, "Input"],
Cell[CellGroupData[{
Cell[171410, 6149, 343, 9, 74, "Text"],
Cell[171756, 6160, 27, 0, 23, "Special1"],
Cell[171786, 6162, 129, 4, 74, "SmallText"],
Cell[171918, 6168, 313, 11, 36, "Input"],
Cell[172234, 6181, 418, 16, 49, "SmallText"],
Cell[172655, 6199, 442, 15, 20, "Input"],
Cell[173100, 6216, 119, 3, 24, "SmallText"],
Cell[173222, 6221, 100, 2, 20, "Input"],
Cell[173325, 6225, 50, 0, 24, "SmallText"],
Cell[173378, 6227, 68, 0, 20, "Special5"],
Cell[173449, 6229, 145, 4, 20, "Input"],
Cell[173597, 6235, 978, 36, 166, "SmallText"],
Cell[174578, 6273, 1475, 48, 126, "Input"],
Cell[176056, 6323, 1088, 38, 238, "SmallText"],
Cell[177147, 6363, 1011, 34, 109, "Input"],
Cell[178161, 6399, 481, 17, 95, "SmallText"],
Cell[178645, 6418, 149, 5, 55, "Special5"],
Cell[178797, 6425, 39, 0, 24, "SmallText"],
Cell[178839, 6427, 1074, 34, 121, "Input"],
Cell[179916, 6463, 54, 0, 24, "SmallText"],
Cell[179973, 6465, 404, 13, 36, "Input"],
Cell[180380, 6480, 90, 3, 49, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
