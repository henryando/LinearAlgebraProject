(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    365383,      11204]
NotebookOptionsPosition[    291277,       9517]
NotebookOutlinePosition[    344577,      10634]
CellTagsIndexPosition[    344347,      10624]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztXcuNwzgSJbBzdwILCAPs3SH4vhcDm4CAScAhKASHoAzaIei6N4egBAgo
BI/VIsVisYo/qe3unnoA0W6J4rceWVWkqD//uvzvr38ppf77DP9/hj/UG/Ex
HZ7hbH637yyKQPCtMPPhY5qeYTD/Pz5/f0ynN5dMIHgfZvn/mO6GDw/EDxv6
Z2jeXFKB4HWY5f1juiEecPx4mLml+9TBBILfisXG6Aj5T/HDhnG1UQSC34TF
xhgjsp/DDxfvYzq+uUYCwXYsNsaQIfMl/IC2iehcgp+HRZfqC2S9hh/ONhEI
fgqWOWMqlPNafkDbROYSwc/AwpGUvbEXPwYlayWCbwz97/+cn+FqfvfPsKxZ
fEyXgrmklB8z/1qT5wnk383/v6clBAKHpxwen2F4hsf811ybf09GTg8Ftkgu
P9b1kJmHz3BD+dvy9J/5CwQvxix3Rv4eIEB+2DA+w7KfavbJxn1ZOfyY1xUb
k3/H5D+Aa588fVc7Cf55eMrbxcjdI4Mf671V55nX+GjbJMaPu7UxZr4l8h+I
ezNPZW1R8GUwOv7IyH+KHzY4nWfRkaYEPyZkY1Cyn8MPyFPZzyXYDUbHj8lc
CT98nWfZi9Uz/LgCGwPrcrX8sOGqxTYRbIDR8a8ZslbKj1DnWfzBljPYxqB0
qa38sDy9vKt9BT8Xmtfx9+QH1HmOKP+zjutye/AD8lT8wYIs6EXPL+XGFn7M
4Q7ybyq4sYUfliNilwii0ItOY0P3An7MPLT2d4P+doU8reHHuk6Tww/D3RMK
7HNE3Op5Si9rTZvTEdRDu7ljlVnt1t/25scqlyYP+/xqv2t6nWUvfvQm73Us
yGgfaszombhHKt8NfTPskY6gHoYfq7zZccpcv+/EjxuSy4l5ftTGftdp324J
P+6gXi3Iv5YfExP3Ivz4XUD88MZZc59bG8zhx4jkcsx8fpaLY+S5XH7AeZHk
e0b7UPx4aELf4cqxoW+EH28Gww8rW7NsWNuE8vty8r36UXV8Hkjxq9e+bYR5
GuOHLXujI/piRvtw/LiieIfaPCJ5Cz/ejAg/4BxgdZ4G9Rkl31cg030i7Rz9
DHINyzrFD06X25sfI4p3zsnDlG1uIzyX3TXaD8Pxw9TtZu7bcEBlwWPC/P8J
pd+iNOQcMoQMfqyyqJ3OY9cqoHzP90v9UCX2/ahD2wjyA95vdaa/OKN9OH48
NPBj6chYAOLkrL2eQXyOHwN6ps0pBxEX1032dSIU8MOGuf0P5tkz/psrlxX8
gDy1PDzhv4Ts7M0PyPsLiMfW29w/6HDMGInnRpBmwA9C/i+Jsg4o3wn0n/Aj
gQp+2DaG/dKUyuUGftiw7qfSZT7hrfyA+djyY79uINeoreeyw7nnxsTHbdri
sqCyQh6MqH3gPeuzaLXoV1Fs4Aecp2vlcws/OtT/na7YA5DRPpgfWEbnvKFf
19oFZB7a2UatSXvQaA4BcTE/YLijdHE/9tpfp4Rpkes3ghAV/ID2t30Pyo5H
R102j9Tw49P+VuB8a73odSX7frfwA/upWlRn/D+2q5PlA/FTbQnnIHLtJdbu
gjQK+DHocE0E7k+H7zPl2iEl/FjX+JQ7ew7b57nvjVTzw1zzfGgEfwJ+mOuU
z6rT+fpVMFaAuMKPL0AGP0bt279j0M7x92FjOk+uf9fOUyf0vi7l3x00s1a+
Iz/amLwy/MDye47lQaWjnb0Nr8G+gdfFltgBEX7APVENM5ZR/KDOU+gr+bHY
4P47VcH7uUzZep2x7zKjfSh+cGuBdv6i+IHLaG2nuX3uVJkoLpj4VBviMt21
vyZi13iv4FqrxT6PguEHlK2Yz57jB3ceD+7v2P6SxqSN38nN5QfF8WAdPaN9
uLGdWpO3Mk/xA48Rc9lGptxHLh1zHfdJy+Qxmrg37c+jR6puWvy7ARA/Bu3v
e0r5g1L8CM5zQ+lS+xOtjcGd6VDCD5gu3Pe4jtcZ7cPxA+tLA7hH8YMah+BY
780TXDrmOvbXjuB6ak/pBNpC+JGAdjYFKT878cOG3uhcVuex8u3WU9JnAtXw
A/Lf8zFktE+rgQ4Crjea0U30MmZTz5xR296073+14RRLB5Q/eAbcw31o5xLo
82o1UwfBAu30qEbnv/dRyw9nm6AyqA3nWxfww4Z1bVEgSEFvfL+2UKbd+VYW
i/1dfb51BT+sntHQLSIQ+NDps6725Eev8DcGy74bspUfc3z53o4gCaD74rW/
r+DHuoaoljW+m/mNr6fs8lp+zPz37KxkAy3lGVCg9fRFR8Rx69fiFlvstIbw
PsznSqTwswHrjr8fZs+HcuFLdAHt+1Xg3pGcvdi5/FjPRETzBH7+ZnQt+93C
lM6Vy49PP68m7KxkA9HfT6R5tfjcwnLWAs+n4f2gLX4VYvUL+yUcP3aADv2O
63q1Tu/LzeFHZ+R9lvuerHPIJfgM9d3bEn70Gp3JAEOygfjvi4b2PedfqIXw
4zvyw4Z1v5Pm91PF+JEzF8SeH5U/59y55xl+DDpjn0mygXh+hDoWpxfWQvgR
48dJvV6/osJN8+8FUvI9KmdLpNb4cuafQfm2SXC+NeIHnP9OOqF7JRuI58cN
xTuydQjTbEzb2L69eP273KfGhJOCtgjdlgfTTmG6fhkOqAxnhedE3/45JtNf
yn0x99ogPT/dFuTtx3X5wvrdvbK4NrIBlx3XL1YezDW4lpTiB9bf4R5tKN/T
Z9u4+g0qLve5/LChN3WG31TH/IA2Rp9Rry38mFC8S5IfaR/dNZGnn2Y4juDx
w4YzKmvHxJu8uHgvKJ3+ZPqbKvMdyf38/Mi2p9MXUrIzEPmdMur3WGXUySml
l9jydJn8sGEEY/P8rkdn8rkC2e0z5b2UH2uZzTON/a0Xnxu0MbLXcjbww5e7
WJ8u92nbPQxtIk+OHzFfxgjKec0ow5GoUyz92L2uIN/J9Gs9P/LysWekc9xY
QyE/At0etHvJdwdr+eH6G42JERtpb37ANu1BPFw+LMsH0D6T6ceW6M+bcvP9
iO51a+DbbVCUT2OJfyLqcjZh8srAc36IyO9AyNxA5H1XTufBZW0VPUaMyteV
Qn6EOu4E0ptQWjhuZ/roBPrkVsmPOUDZOBF9+ZX8sH1h7aImZWfsyA8oz6OJ
c/aucXa1a/sDujYq3CaUfIZlw7JwjD4bzu3QdsDz20GF8wfUYaZI3mEfL9cv
Cvo1nI3gy2kqHbpfoFzbAOd3y8+7KQfOt1ehLXWo4Mc6d2i3B70BZS6ZQ2r4
MSo3P67vn5u/bekcEshcKIO4H/C4c0T9co3K9dJPveLHk1p+YPmh+DEEz/gB
y9uQmT6+FytXq5Y5g5OTLfxItReU/wOT/2TKdynkB14X+TyHwOQF7YISG6SE
H3BdxOYB7XO4tpltgwRtGLap3w/LNSjbHfo/9E24domt5byCHyVj1778iNvC
r+FH2H5toixjJj86Tb+Lh+V7lhP4faghkX8uP2Yu2DkK2jnYf7Xuk9eZ+5Ez
2pDih69jwd+h7FDP2DpRdvCr5o9R+T5NHJqd+QG5Ma15hPFfx48lnUZRc74J
CX7AtQ9Kd+HkewB936qULhHjj/NLnIh0uPXBEeiAc/3Y91ky2o/ix4kpr/XP
UrIZrNuAPO7kvf35gecvag/AiUmjnh+hToptkL340aNr0CZqzLWbcn7kcG0I
rdkx/MDyxdm+KfmGft9OhfM79/zk1SHmL1HR/SUD4negcwXtE7ZXyI/lOr/O
QMsmrt9Zub2PtByE8nxV/lpdKT9a9MxduTH8DPKj1iG28AOPJ3at76IoHx2d
zsOU8aSsbz/kB5VPYwKevxqT913hvRAgLuIH1k/6hH6Sox/BdcMG9Tn1/Fxv
y6mULzvFj5R+uIUfeKyawD1KNrEcROtE5h1vtzQ/UN9H+yzNgRJ+NJl1x/wY
2Dj8+gf3DAwXov8sn7xrgB/rO3W68HzpzHqPyteV7qifb8qNZa3KsyVz+WG5
D/0Lw0Z+hP7BmGwudabqxPu7+PfGtvAD+22pfqLmwa32B5bnh3LrE/DaDaTD
ranG+JHyg1g/UpOI99k3GnyHT1eeL50hx357OR4c0V/Lm/y0VPH7UXDfZfod
KbzPx793AgH6Do/kM/7+pAtoh1geB+XvVeqU7wOxAb8fQZfBv9+R6dJpxNKn
3s0I7/l5tsraP/G0YJvZcAzajN47Bp9x7R2mj9vXi6vLzwXdwg+fx04Gcnyf
e/DDhl7LO+iCDOiN50tXyLWzSZbnrf3+Sn50wg9BCSrmkRp+QJ+W1RNyfFV7
8WP1WQsENdD5+zRK+DGo0P6Gz48qvtaxlR/ufGuBYCN0wfnSCRkelW9Phmth
PI/gWnktP9zZcwLBztAZ50tHbIyULy32fKfS6yApfsg5cIKXQNP7NDj57pW/
bh4d/yP34Tp6uO+P58cgNobgHdDE+dJIN8rZd5XLDxvuwDaB+2MwP2ab6UyV
WyB4FTQ6X1qFZ43k+qBK/V89sE06ZdZajU+qo8oqEHwL8N+w2ZMfzq7hzqIQ
CL4b+L1FX8EPG0bhiODHoO4d9Fp+DIraSyMQfHeUnWNSyo+Zf2J/C3428t7d
KOGHW0sRCH4L0uco5vCjFztD8KvBn8Mb48eg8LsAAsFvRvgOOsWPmUdtIiWB
4HfCPx8L8kPWNQTfDn8DHM4nIA==
    "], {{0, 74}, {200, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, Interleaving -> True, 
    Magnification -> Automatic],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{200, 74},
  PlotRange->{{0, 200}, {0, 74}}]]]], "LogoPrefaceTitle"],

Cell[TextData[{
 "Make: Matrices & Geometry\n",
 StyleBox["Authors:  Bill Davis and Jerry Uhl  ", "Subtitle"],
 StyleBox["\[Copyright]1996-2010", "Subtitle",
  FontSize->12],
 StyleBox["\n", "Subtitle"],
 StyleBox["Publisher:  ", "Subtitle",
  FontSize->12],
 StyleBox[ButtonBox["Make: Mathematics",
  BaseStyle->"MakeMathHyperlink",
  ButtonData:>{
    URL["http://www.makemathematics.com"], None}],
  FontSize->12]
}], "PrefaceTitle",
 CellMargins->{{Inherited, Inherited}, {Inherited, 0}}],

Cell[TextData[{
 "MGM.05 3D Matrices\n",
 StyleBox["TUTORIALS",
  FontSize->16,
  FontSlant->"Italic"]
}], "Title"],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 8.0 Initializations"
}], "Special2",
 CellChangeTimes->{3.503085586908386*^9},
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"General", "::", "\"\<spell\>\""}], "]"}], ";"}], "\n", 
 RowBox[{"  ", 
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"General", "::", "\"\<spell1\>\""}], "]"}], ";"}], 
  "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{"SingularValues", "::", "\"\<deprec\>\""}], "]"}], ";"}], "  ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Needs", "[", "\"\<Units`\>\"", "]"}], ";"}], "  ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListAnimate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"Animate", ",", " ", 
     RowBox[{"AnimationRepetitions", " ", "\[Rule]", " ", "4"}]}], "]"}], 
   ";"}], "  "}], "\n", 
 RowBox[{
  RowBox[{"CMView", "=", 
   RowBox[{"{", 
    RowBox[{"2.7", ",", "1.6", ",", "1.2"}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.503146559282848*^9, 3.503146563276721*^9}, {
   3.503166885868726*^9, 3.503166892893751*^9}, 3.5032320558203287`*^9, 
   3.503232106276367*^9},
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Vector Drawer", "Subsubsection"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{":", 
     RowBox[{"Date", ":", "  ", 
      RowBox[{
       RowBox[{"Copyright", " ", "1993"}], "-", "2011"}]}]}], ",", " ", 
    RowBox[{"Math", " ", "Everywhere"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\n", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
   "Original", " ", "Conception", " ", "to", " ", "create", " ", "a", " ", 
    "vector", " ", "drawer", " ", "is", " ", "due", " ", "to", " ", "Bill", 
    " ", 
    RowBox[{"Davis", ".", "\[IndentingNewLine]", "Current"}], " ", "code", 
    " ", "is", " ", "by", " ", "Bruce", " ", 
    RowBox[{"Carpenter", "."}]}], "\[IndentingNewLine]", "*)"}], "\n", 
  RowBox[{"(*", "  ", 
   RowBox[{
    RowBox[{
     RowBox[{":", 
      RowBox[{"Drawbacks", ":", "  ", 
       RowBox[{
       "Since", " ", "the", " ", "vectors", " ", "are", " ", "drawn", " ", 
        "out", " ", "of"}]}]}], " ", "\n", "     ", "context"}], ",", " ", 
    RowBox[{
    "the", " ", "shapes", " ", "of", " ", "the", " ", "arrowheads", " ", 
     "are", " ", "only", " ", "\n", "     ", "correct", " ", "with", " ", 
     "AspectRatio", " ", "set", " ", "to", " ", 
     RowBox[{"Automatic", "."}]}]}], "\n", "*)"}]}]], "Input",
 CellChangeTimes->{{3.503083622365877*^9, 3.5030836228723288`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<Vector3D`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.5028932309285393`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Axes3D", "::", "usage"}], "MessageName"], "=", 
   "\"\<Axes3D[a, b] creates a Graphics3D object of cartesian axes with x, y, \
and z running from -a/3 to a, and with axes labels b units beyond the tips of \
the axes.  Axes3D[a] is Axes3D[a, a/8].\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Perpend", "::", "usage"}], "MessageName"], "=", 
   "\"\<Perpend[a] returns a unit vector which is perpendicular to the vector \
a.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Vector", "::", "usage"}], "MessageName"], "=", 
   "\"\<Vector[a] produces a 2 or 3 dimensional vector from the origin to a. \
Arrow[a, Tail \[Rule] tail] gives a vector from tail to a.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"CandMArrow", "::", "usage"}], "MessageName"], "=", 
   "\"\<CandMArrow[a, b] gives a 2D or 3D arrow from a to b.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"VectorHead", "::", "usage"}], "MessageName"], "=", 
   "\"\<VectorHead[a, vec] produces an arrowhead with its tip placed at the \
point a, pointing in the direction of the vector vec.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Tail", "::", "usage"}], "MessageName"], "=", 
   "\"\<Tail \[Rule] point puts the tail of the vector at point.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"Aperture", "::", "usage"}], "MessageName"], "=", 
   "\"\<Aperture is the ratio of the radius of the base to the length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipSize specifies an absolute size for the inner tip length of the \
head of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"TipRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<TipRatio is the ratio of the inner length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadRatio", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadRatio is the ratio of the outer length of the arrowhead to the \
length of the shaft of a vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"HeadSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<HeadSize specifies an absolute size for the head of a vector.\>\""}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ScaleFactor", "::", "usage"}], "MessageName"], "=", 
   "\"\<ScaleFactor specifies the amount to scale a vector in length and may \
be either a number or a pure function.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"ZeroVectorPointSize", "::", "usage"}], "MessageName"], "=", 
   "\"\<ZeroVectorPointSize is the size of the point used to represent a zero \
vector.\>\""}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Vector", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "CandMArrow", "]"}], "=", 
    RowBox[{
     RowBox[{"Options", "[", "VectorHead", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HeadRatio", "\[Rule]", "0.18"}], ",", 
       RowBox[{"TipRatio", "\[Rule]", "0.14"}], ",", 
       RowBox[{"Aperture", "\[Rule]", "0.3"}], ",", 
       RowBox[{"ScaleFactor", "\[Rule]", "1"}], ",", 
       RowBox[{"HeadType", "\[Rule]", "Polygon"}], ",", 
       RowBox[{"ShaftQ", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgesQ", "\[Rule]", "True"}], ",", 
       RowBox[{"VectorColor", "\[Rule]", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0", ",", "0", ",", "1"}], "]"}]}], ",", 
       RowBox[{"ShaftWidth", "\[Rule]", "0.005"}], ",", 
       RowBox[{"ZeroVectorPointSize", "\[Rule]", "0.01"}]}], "}"}]}]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ParametricPlot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Graphics", ",", 
    RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", 
             RowBox[{"-", 
              FractionBox["u", "3"]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Axes3D", "[", "u_", "]"}], ":=", 
   RowBox[{"Axes3D", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
       ",", 
       RowBox[{"-", 
        RowBox[{
        "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      "}"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "2"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Perpend", "[", 
    RowBox[{"a_", "?", "VectorQ"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Normalize", "[", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        "\[Equal]", "0"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"a", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"-", 
          RowBox[{
          "a", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
         "0"}], "}"}]}], "]"}], "]"}], "/;", 
    RowBox[{
     RowBox[{"Length", "[", "a", "]"}], "\[Equal]", "3"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Base3D", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}], ",", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "k", " ", "\[Pi]"}], "8."], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "8"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "sw", ",", "ht", ",", "hs", ",", "hr", ",", "ts", ",", 
         "tr", ",", "ap", ",", "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "ShaftWidth", ",", "HeadType", ",", "HeadSize", ",", 
           "HeadRatio", ",", "TipSize", ",", "TipRatio", ",", "Aperture", ",",
            "ScaleFactor", ",", "VectorColor", ",", "ZeroVectorPointSize"}], 
          "}"}], "/.", "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{
         RowBox[{"hr", "=", 
          FractionBox["hs", 
           RowBox[{"Norm", "[", "diff", "]"}]]}], ";", 
         RowBox[{"tr", "=", 
          RowBox[{"0.75", " ", "hr"}]}]}]}], "]"}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "ts", "]"}], ",", 
        RowBox[{"tr", "=", 
         FractionBox["ts", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"With", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"trans", "=", 
             RowBox[{"ap", " ", "hr", " ", 
              RowBox[{"Norm", "[", "diff", "]"}], " ", 
              RowBox[{"Perpend", "[", "diff", "]"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"ht", "[", 
              RowBox[{"{", 
               RowBox[{"tip", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "+", "trans"}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}], ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"hr", " ", "diff"}], "-", "trans"}], ",", "tip"}], 
               "}"}], "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "2"}]}]}], "\n", 
 RowBox[{
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"from_", "?", "VectorQ"}], ",", 
    RowBox[{"to_", "?", "VectorQ"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "tr", ",", "ap", 
       ",", "sf", ",", "vc", ",", "zvps", ",", 
       RowBox[{"diff", "=", 
        RowBox[{"to", "-", "from"}]}], ",", "tip"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "sq", ",", "eq", ",", "sw", ",", "hs", ",", "hr", ",", "ap", ",", 
         "sf", ",", "vc", ",", "zvps"}], "}"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "ShaftQ", ",", "EdgesQ", ",", "ShaftWidth", ",", "HeadSize", ",", 
           "HeadRatio", ",", "Aperture", ",", "ScaleFactor", ",", 
           "VectorColor", ",", "ZeroVectorPointSize"}], "}"}], "/.", 
         "\[InvisibleSpace]", 
         RowBox[{"{", "opts", "}"}]}], "/.", "\[InvisibleSpace]", 
        RowBox[{"Options", "[", "Vector", "]"}]}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"from", "\[Equal]", "to"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"Graphics3D", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"PointSize", "[", "zvps", "]"}], ",", "vc", ",", 
            RowBox[{"Point", "[", "from", "]"}]}], "}"}], "]"}], "]"}]}], 
       "]"}], ";", 
      RowBox[{"diff", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"N", "[", "sf", "]"}], "]"}], ",", 
         RowBox[{"sf", " ", "diff"}], ",", 
         RowBox[{"sf", "[", "diff", "]"}]}], "]"}]}], ";", 
      RowBox[{"tip", "=", 
       RowBox[{"from", "+", "diff"}]}], ";", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"NumberQ", "[", "hs", "]"}], ",", 
        RowBox[{"hr", "=", 
         FractionBox["hs", 
          RowBox[{"Norm", "[", "diff", "]"}]]}]}], "]"}], ";", 
      RowBox[{"tr", "=", 
       FractionBox["hr", "2"]}], ";", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"sq", ",", 
           RowBox[{"{", 
            RowBox[{"vc", ",", 
             RowBox[{"Thickness", "[", "sw", "]"}], ",", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"from", ",", 
                RowBox[{"tip", "-", 
                 RowBox[{"tr", " ", "diff"}]}]}], "}"}], "]"}]}], "}"}], ",", 
           
           RowBox[{"{", "}"}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"eq", ",", 
           RowBox[{"{", "}"}], ",", 
           RowBox[{"EdgeForm", "[", "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"SurfaceColor", "[", "vc", "]"}], ",", 
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"temp", "=", 
               RowBox[{"Perpend", "[", "diff", "]"}]}], "}"}], ",", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Polygon", "[", 
                 RowBox[{"Append", "[", 
                  RowBox[{"#1", ",", "tip"}], "]"}], "]"}], "&"}], ")"}], "/@", 
              RowBox[{"Partition", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"tip", "-", 
                    RowBox[{"hr", " ", "diff"}], "+", "#1"}], "&"}], ")"}], "/@", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"ap", " ", "hr", " ", 
                    RowBox[{"Norm", "[", "diff", "]"}], " ", "Base3D"}], 
                    ")"}], ".", 
                   RowBox[{"{", 
                    RowBox[{"temp", ",", 
                    RowBox[{"Normalize", "[", 
                    RowBox[{"temp", "\[Cross]", "diff"}], "]"}]}], "}"}]}], 
                  ")"}]}], ",", "2", ",", "1"}], "]"}]}]}], "]"}]}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}], "/;", 
   RowBox[{
    RowBox[{"Length", "[", "from", "]"}], "\[Equal]", 
    RowBox[{"Length", "[", "to", "]"}], "\[Equal]", "3"}]}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", 
    RowBox[{"Tail", "\[Rule]", "b_"}], ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{"b", ",", 
    RowBox[{"a", "+", "b"}], ",", "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"Vector", "[", 
   RowBox[{"a_", ",", "opts___"}], "]"}], ":=", 
  RowBox[{"CandMArrow", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", 
       RowBox[{"Length", "[", "a", "]"}], "}"}]}], "]"}], ",", "a", ",", 
    "opts"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"VectorHead", "[", 
    RowBox[{"a_", ",", "b_", ",", "opts___"}], "]"}], ":=", 
   RowBox[{"CandMArrow", "[", 
    RowBox[{
     RowBox[{"a", "-", "b"}], ",", "a", ",", 
     RowBox[{"ShaftQ", "\[Rule]", "False"}], ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.502893231567974*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics`Colors`GosiaGreen", "=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{"0", ",", " ", "0.392187", ",", " ", "0"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["ThreeAxes[u,v]", "Subsubsection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u_", ",", "v_"}], "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "u"}], ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "0", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<x\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"u", "+", "v"}], ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"-", "u"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "u", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<y\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "v"}], ",", "0"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}], "]"}]}], "}"}],
       ",", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<z\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{"u", "+", "v"}]}], "}"}]}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "[", "u_", "]"}], ":=", 
   RowBox[{"ThreeAxes", "[", 
    RowBox[{"u", ",", 
     FractionBox["u", "8"]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ThreeAxes", "::", "\"\<usage\>\""}], "=", 
   "\"\<ThreeAxes[a,b] makes a standard cartesian axis graphics object with \
x, y, and z running from -a to a, and with axis labels b units beyond the \
tips of the axes.  ThreeAxes[a] is ThreeAxes[a,a/8].\>\""}], ";"}]}], "Input",\

 InitializationCell->True,
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1) Making 3D perpendicular projections onto planes.
 Making 3D positive definite matrices (frame stretchers).  
 Making 3D reflection matrices (plane flippers) 
 Making matrices for bouncing light rays off surfaces in 3D\
\>", "Subsection",
 CellTags->"MGM.05.T1"],

Cell[CellGroupData[{

Cell["T.1.a) Making a  perpendicular projection onto a plane", "Subsubsection"],

Cell["\<\
Any two non-parallel vectors determine a plane through {0,0,0}.
Here's a sample:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "planevector", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"planevector", "[", "1", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.95", ",", "1.71", ",", 
      RowBox[{"-", "1.19"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"planevector", "[", "2", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"0.24", ",", "1.83", ",", "1.06"}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"b", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planeplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Polygon", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", 
          RowBox[{"planevector", "[", "1", "]"}]}], "-", 
         RowBox[{"b", " ", 
          RowBox[{"planevector", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], " ", 
          RowBox[{"planevector", "[", "1", "]"}]}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"planevector", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"b", " ", 
          RowBox[{"planevector", "[", "1", "]"}]}], "+", 
         RowBox[{"b", " ", 
          RowBox[{"planevector", "[", "2", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"b", " ", 
          RowBox[{"planevector", "[", "1", "]"}]}], "-", 
         RowBox[{"b", " ", 
          RowBox[{"planevector", "[", "2", "]"}]}]}]}], "}"}], "]"}], "]"}]}],
    ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"planeplot", ",", 
    RowBox[{"ThreeAxes", "[", "2", "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}], " "}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
The question here is to come up with a matrix P so that when you hit a point \
{x,y,z} with your matrix P, you get the point on the plane that is closest to \
{x,y,z}.
Illustrate the action of your matrix with decisive plots.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Lots of folks like to call this matrix by the name \"perpendicular \
projection.\"\
\>", "Special5"],

Cell["This is a job for a custom perpendicular frame. Here's one:", \
"SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"normal", "=", 
    StyleBox[
     RowBox[{
      RowBox[{"planevector", "[", "1", "]"}], 
      StyleBox["\[Cross]",
       FontSize->18], 
      RowBox[{"planevector", "[", "2", "]"}]}],
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"unitnormal", "=", 
    FractionBox["normal", 
     SqrtBox[
      RowBox[{"normal", ".", "normal"}]]]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "3", "]"}], "=", "unitnormal"}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], "=", 
    FractionBox[
     RowBox[{"planevector", "[", "1", "]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"planevector", "[", "1", "]"}], ".", 
       RowBox[{"planevector", "[", "1", "]"}]}]]]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "2", "]"}], "=", 
    RowBox[{
     RowBox[{"perpframe", "[", "3", "]"}], "\[Cross]", 
     RowBox[{"perpframe", "[", "1", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"scalefactor", "=", 
    RowBox[{"0.7", " ", "b"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"scalefactor", " ", 
         RowBox[{"perpframe", "[", "k", "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"newplaneplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"frameplot", ",", "planeplot", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}], " "}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
The normal vector is perpframe[3].
 perpframe[1] and perpframe[2] frame the whole plane:\
\>", "Special5"],

Cell[TextData[{
 "The job is to come up with a matrix P so that when you hit a point ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 " with your matrix ",
 Cell[BoxData["P"]],
 ", you get the point on the plane that is closest to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 ".\nNotice that if ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 " is on the plane, then ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 "\nis the point on the plane closest to \n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], "+", 
   RowBox[{"any", " ", "multiple", " ", "of", " ", 
    RowBox[{"perpframe", "[", "3", "]"}]}]}]]],
 "."
}], "SmallText"],

Cell["\<\
perpframe[3] is normal to the plane 
and 
the shortest distance from a point to the plane is the perpendicular distance.\
\>", "Special5"],

Cell[TextData[{
 "In other words, if ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 " is on the plane, then \n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"P", ".", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "+", " ", 
      RowBox[{"any", " ", "multiple", " ", "of", " ", 
       RowBox[{"perpframe", "[", "3", "]"}]}]}], ")"}]}], "=", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]]],
 ". \n This tells you that \n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"P", ".", 
    RowBox[{"prepframe", "[", 
     StyleBox["3",
      FontColor->RGBColor[1, 0, 0]], "]"}]}], "=", 
   StyleBox[
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "0"}], "}"}],
    FontColor->RGBColor[1, 0, 0]]}]]],
 "\nAlso if ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 " is on the plane, then ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 " is the point on the plane closest to ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]]],
 ".  \nAnd because ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "1", "]"}]]],
 " and ",
 Cell[BoxData[
  RowBox[{"perpframe", "[", "2", "]"}]]],
 " are on the plane, you now know that\n          ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"P", ".", 
    RowBox[{"perpframe", "[", "1", "]"}]}], "=", 
   RowBox[{"perpframe", "[", "1", "]"}]}]]],
 "\nand\n           ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"P", ".", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "=", 
   RowBox[{"perpframe", "[", "2", "]"}]}]]],
 ".\nThis tells all. \nThe matrix ",
 Cell[BoxData["P"]],
 " you want is:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "hangerframe", ",", "k"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}], ",", 
      RowBox[{"alignerframe", "[", "3", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}], ",", 
       RowBox[{"alignerframe", "[", "3", "]"}]}], "}"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", 
      StyleBox["0",
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"stretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "]"}]}],
     ";"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}], ",", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}], ",", 
        RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], "]"}]}], ";"}], " ", 
   "\n"}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["P",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "P", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Check it:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"P", ".", 
   RowBox[{"perpframe", "[", "1", "]"}]}], "==", 
  RowBox[{"perpframe", "[", "1", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"P", ".", 
   RowBox[{"perpframe", "[", "2", "]"}]}], "==", 
  RowBox[{"perpframe", "[", "2", "]"}]}], "\n", 
 RowBox[{"Chop", "[", 
  RowBox[{"P", ".", 
   RowBox[{"perpframe", "[", "3", "]"}]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Watch this matrix do its work in this action movie:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "3"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"k", ",", "pointcolor"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"points", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}], ",", 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "a"}], ",", "a"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "40"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "k_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", 
          FractionBox[
           RowBox[{"2", " ", "\[Pi]", " ", "k"}], 
           RowBox[{"Length", "[", "points", "]"}]], "]"}], "+", "1"}], 
        ")"}]}], ",", "0.3"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}], 
          "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.04", "]"}], ",", 
         RowBox[{"pointcolor", "[", "k", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"P", ".", 
           RowBox[{
           "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}],
           "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"actionarrows", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"P", ".", 
          RowBox[{
          "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
         "-", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{
         "points", "\[LeftDoubleBracket]", "k", "\[RightDoubleBracket]"}]}], 
        ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"pointcolor", "[", "k", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "points", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"before", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"pointplot", ",", "newplaneplot", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit\>\""}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"action", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", "actionarrows", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Action Arrows\>\""}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"hitpointplot", ",", "newplaneplot", ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<y\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit\>\""}]}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "action", ",", " ", "after"}], "}"}], 
  "]"}]}], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->0.5],

Cell["See the same thing from the view point of 6 perpframe[1].", "SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"action", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", "\n", 
    RowBox[{"Show", "[", 
     RowBox[{"after", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input",
 AspectRatioFixed->True,
 AnimationDisplayTime->1],

Cell["\<\
You can see why some folks call this matrix by the name \"perpendicular \
projection\".\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1.b) Making a 3D positive definite matrix (frame stretcher)\
\>", "Subsubsection"],

Cell["Here's a 3D perpendicular frame:", "Text"],

Cell["\<\
Where this formula comes from will be explained in one of the later Tutorials\
\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "s", ",", "t"}], "}"}], "=", 
    RowBox[{"N", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.1", " ", "\[Pi]"}], ",", 
       FractionBox["\[Pi]", "6"], ",", 
       RowBox[{"0.2", " ", "\[Pi]"}]}], "}"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "t", "]"}]}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "1"}], ";"}], " "}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Vector", "[", 
      RowBox[{
       RowBox[{"perpframe", "[", "k", "]"}], ",", 
       RowBox[{"Tail", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
       RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<perpframe[1]\>\"", ",", 
      RowBox[{"0.6", " ", 
       RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<perpframe[2]\>\"", ",", 
      RowBox[{"0.6", " ", 
       RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{"Text", "[", 
     RowBox[{"\"\<perpframe[3]\>\"", ",", 
      RowBox[{"0.6", " ", 
       RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}], ",", 
   RowBox[{"ThreeAxes", "[", "1", "]"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Make a 3D positive definite ( a frame stretcher) matrix A whose hits stretch 
  vectors in the direction of perpframe[1] by a factor of 2.5,
  vectors in the direction of perpframe[2] by a factor of 4.1, and
  vectors in the direction of perpframe[3] by a factor of 3.2.
Illustrate with plots.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "You want a matrix A with \n       ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "1", "]"}]}], "=", 
   RowBox[{
    StyleBox["2.5",
     FontColor->RGBColor[1, 0, 0]], " ", 
    RowBox[{"perpframe", "[", "1", "]"}]}]}]]],
 "\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "2", "]"}]}], "=", 
   RowBox[{
    StyleBox["4.1",
     FontColor->RGBColor[1, 0, 0]], " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}]}]]],
 "\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"perpframe", "[", "3", "]"}]}], "=", 
   RowBox[{
    StyleBox["3.2",
     FontColor->RGBColor[1, 0, 0]], " ", 
    RowBox[{"perpframe", "[", "3", "]"}]}]}]]],
 ".\nTo make A, you go with the given perpendicular frame for both your \
aligner frame  and your hanger frame and use the indicated numbers for your \
stretches.\nHere you go:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "hangerframe", ",", "k"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}], ",", 
      RowBox[{"alignerframe", "[", "3", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}], ",", 
       RowBox[{"alignerframe", "[", "3", "]"}]}], "}"}]}], ";"}], " ", "\n"}],
  
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "=", 
    RowBox[{"{", 
     StyleBox[
      RowBox[{"2.5", ",", "4.1", ",", "3.2"}],
      FontColor->RGBColor[1, 0, 0]], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"stretcher", "=", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "]"}]}],
     ";"}],
   FontColor->RGBColor[1, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[1, 0, 1]], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}], ",", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}], ",", 
        RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], "]"}]}], ";"}], " ", 
   "\n"}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"perpframe", "[", "1", "]"}]}], "==", 
  RowBox[{"xstretch", " ", 
   RowBox[{"perpframe", "[", "1", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"perpframe", "[", "2", "]"}]}], "==", 
  RowBox[{"ystretch", " ", 
   RowBox[{"perpframe", "[", "2", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"perpframe", "[", "3", "]"}]}], "==", 
  RowBox[{"zstretch", " ", 
   RowBox[{"perpframe", "[", "3", "]"}]}]}]}], "Input"],

Cell["\<\
To illustrate, hit the unit sphere with A and see the resulting football: \
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "s", ",", "t", ",", "pointcolor"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", 
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "zstretch", ",", "1.2"}], 
      "}"}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"s", ",", "t"}], "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"y", "[", 
          RowBox[{"s", ",", "t"}], "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"s", ",", "t"}], "]"}], "+", "1"}], ")"}]}]}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sjump", "=", 
    FractionBox[
     RowBox[{"shigh", "-", "slow"}], "12"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "12"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "hitpointplotter", ",", "matrix3D"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"matrix3D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitpointplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Graphics3D", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"pointcolor", "[", 
              RowBox[{"s", ",", "t"}], "]"}], ",", 
             RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
             RowBox[{"Point", "[", 
              RowBox[{"matrix3D", ".", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"s", ",", "t"}], "]"}], ",", 
                 RowBox[{"y", "[", 
                  RowBox[{"s", ",", "t"}], "]"}], ",", 
                 RowBox[{"z", "[", 
                  RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], "]"}]}], "}"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "slow", ",", 
            RowBox[{"shigh", "-", "sjump"}], ",", "sjump"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", "tlow", ",", 
            RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}], 
        ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vector", "[", 
           RowBox[{
            RowBox[{"matrix3D", ".", 
             RowBox[{"alignerframe", "[", "k", "]"}]}], ",", 
            RowBox[{"Tail", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Vector", "[", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"matrix3D", ".", 
              RowBox[{"alignerframe", "[", "k", "]"}]}]}], ",", 
            RowBox[{"Tail", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
            RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitframeplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"matrix3D", ".", 
           RowBox[{"alignerframe", "[", "k", "]"}]}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Vector", "[", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"matrix3D", ".", 
            RowBox[{"alignerframe", "[", "k", "]"}]}]}], ",", 
          RowBox[{"Tail", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
          RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointsbefore", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"hitframeplotter", "[", 
       RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Before the hit\>\""}]}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointsafter", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitpointplotter", "[", "A", "]"}], ",", 
      RowBox[{"hitframeplotter", "[", "A", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit\>\""}]}], "]"}]}], 
   ";"}], " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"pointsbefore", ",", " ", "pointsafter"}], "}"}], "]"}]}], "Input"],

Cell["\<\
See the same thing from the view points of each of the given perpendicular \
frame vectors:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"pointsbefore", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"10", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"pointsafter", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"10", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"pointsbefore", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"10", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"pointsafter", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"10", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"pointsbefore", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"10", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"pointsafter", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"10", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell["About as sensual as math gets.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.1.c) Making a 3D reflection matrix ( plane flipper)", "Subsubsection"],

Cell["Here is a single vector in 3D:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"normal", "=", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", "0.4", ",", "1.3"}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", 
    RowBox[{"Max", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "normal", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       
       RowBox[{
       "normal", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       
       RowBox[{
       "normal", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
      "}"}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Vector", "[", 
    RowBox[{"normal", ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Green"}]}], "]"}], ",", 
   RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Make this vector into a unit vector and plot:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["unitnormal",
     FontColor->RGBColor[0, 0, 1]], "=", 
    FractionBox["normal", 
     SqrtBox[
      RowBox[{"normal", ".", "normal"}]]]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "1"}], ";"}], " "}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Vector", "[", 
    RowBox[{"unitnormal", ",", 
     RowBox[{"Tail", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
     RowBox[{"VectorColor", "\[Rule]", "Green"}]}], "]"}], ",", 
   RowBox[{"Axes3D", "[", "1", "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Axes", "\[Rule]", "True"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
   
   RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[TextData[{
 "Envision this unit vector as a unit normal for a plane passing through \
{0,0,0}.\n Call\n            perpframe[3] = ",
 StyleBox["unitnormal ",
  FontColor->RGBColor[0, 0, 1]],
 "\nYou can use cross products to come up with \n           perpframe[1] and \
perpframe[2] \nto frame this plane. \nHere's how it goes: "
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "3", "]"}], "=", 
    StyleBox["unitnormal",
     FontColor->RGBColor[0, 0, 1]]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"throwawayvector", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planevector", "=", 
    RowBox[{"throwawayvector", 
     StyleBox["\[Cross]",
      FontSize->18,
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{"perpframe", "[", "3", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], "=", 
    FractionBox["planevector", 
     RowBox[{"Norm", "[", "planevector", "]"}]]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "2", "]"}], "=", 
    RowBox[{
     RowBox[{"perpframe", "[", "3", "]"}], "\[Cross]", 
     RowBox[{"perpframe", "[", "1", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"framelabels", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[1]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[2]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{"Text", "[", 
        RowBox[{"\"\<perpframe[3]\>\"", ",", 
         RowBox[{"0.6", " ", 
          RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}]}], "}"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"customframe", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{"frameplot", ",", "framelabels", ",", 
    RowBox[{"ThreeAxes", "[", "1", "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input"],

Cell["Rerun until you get a nice one.", "Special5"],

Cell["\<\
Throw in a plot of the plane framed by perpframe[1] and perpframe[2]:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "1.4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"planeplotter", ",", "s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"planeplotter", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
     RowBox[{"t", " ", 
      RowBox[{"perpframe", "[", "2", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planeplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"planeplotter", "[", 
       RowBox[{"s", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"planeframe", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"customframe", ",", "planeplot", ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", "All"}]}], "]"}]}]}], "Input"],

Cell["\<\
Rerun both cells several times. You will probably get different perpframe[1] \
and perpframe[2] vectors each time, but you will always get the same plane \
because you get the same normal vector (perpframe[3]) each time.
Here's a new plane through {0,0,0} and a perpendicular frame set so that \
perpframe[1] and perpframe[2] frame the plane:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"normal", "=", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", 
      RowBox[{"-", "0.3"}], ",", "1.1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "3", "]"}], "=", 
    FractionBox["normal", 
     RowBox[{"Norm", "[", "normal", "]"}]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"throwawayvector", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planevector", "=", 
    RowBox[{"throwawayvector", "\[Cross]", 
     RowBox[{"perpframe", "[", "3", "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], "=", 
    FractionBox["planevector", 
     RowBox[{"Norm", "[", "planevector", "]"}]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "2", "]"}], "=", 
    RowBox[{
     RowBox[{"perpframe", "[", "3", "]"}], "\[Cross]", 
     RowBox[{"perpframe", "[", "1", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "3"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2"}], ",", "3"}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"planeplotter", ",", "s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"planeplotter", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"perpframe", "[", "1", "]"}]}], "+", 
     RowBox[{"t", " ", 
      RowBox[{"perpframe", "[", "2", "]"}]}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planeplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"planeplotter", "[", 
       RowBox[{"s", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"planeandframe", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"planeplot", ",", "frameplot", ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
That's perpframe[3] = unit normal vector sticking out of the plane.\
\>", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell["Throw in a 3D surface:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "s", ",", "t", ",", "pointcolor"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "1.5"}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1.5", " ", 
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "t"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "s"}], "]"}]}]}], "}"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "\[Pi]"}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sjump", "=", 
    FractionBox[
     RowBox[{"shigh", "-", "slow"}], "5"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "5"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "2.8"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "matrix"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"matrix3D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"before", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", "planeandframe", 
    ",", 
    RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}], ",", " ", 
    RowBox[{"PlotRange", " ", "->", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Use a 3D matrix hit to flip this surface underneath the plane.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Remember that perpframe[3] is perpendicular to the plane and perpframe[1] \
and perpframe[2] frame the plane.\nTo make a matrix whose hits flip about the \
plane,\n\[Rule] align with {perpframe[1], perpframe[2], perpframe[3]}\n\
\[Rule] go with stretch factors all equal to 1 \n\[Rule] hang on the reversed \
frame {perpframe[1], perpframe[2],",
 StyleBox[" -perpframe[3]",
  FontColor->RGBColor[1, 0, 0]],
 "}: "
}], "SmallText"],

Cell["Note the minus sign on perpframe[3].", "Special5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}], ",", 
      RowBox[{"alignerframe", "[", "3", "]"}]}], "}"}], " ", "=", "  ", "\n", 
    "\t\t                                          ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], " ", "=", 
    " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}], ",", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], " ", "=", "  ", "\n", 
    "\t\t    ", "                                    ", "  ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      StyleBox[
       RowBox[{"-", 
        RowBox[{"perpframe", "[", "3", "]"}]}],
       FontColor->RGBColor[1, 0, 0]]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"aligner", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}], ",", 
       RowBox[{"alignerframe", "[", "3", "]"}]}], "}"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"stretcher", " ", "=", " ", 
     RowBox[{"DiagonalMatrix", "[", 
      RowBox[{"{", 
       RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "]"}]}],
     ";"}], " "}],
  FontColor->RGBColor[1, 0, 1]], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"hanger", " ", "=", " ", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}], ",", 
        RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n", 
  StyleBox["\t\t",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox["=",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[" ",
     FontColor->RGBColor[0, 0, 1]], 
    RowBox[{
     StyleBox["hanger",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["stretcher",
      FontColor->RGBColor[1, 0, 1]], 
     StyleBox[".",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["aligner",
      FontColor->RGBColor[0, 0, 1]]}]}], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["\<\
Hits with this matrix preserve everything in the plane framed by perpframe[1] \
and perpframe[2]:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"s", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"Expand", "[", 
  RowBox[{"A", ".", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"perpframe", "[", "1", "]"}]}], " ", "+", " ", 
     RowBox[{"t", " ", 
      RowBox[{"perpframe", "[", "2", "]"}]}]}], ")"}]}], "]"}]}], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"s", " ", 
   RowBox[{"perpframe", "[", "1", "]"}]}], " ", "+", " ", 
  RowBox[{"t", " ", 
   RowBox[{"perpframe", "[", "2", "]"}]}]}]], "Input"],

Cell["\<\
Hits with this matrix reverse the direction of anything in the direction of \
perpframe[3]:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"A", ".", 
  RowBox[{"(", 
   RowBox[{"s", " ", 
    RowBox[{"perpframe", "[", "3", "]"}]}], ")"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "s"}], " ", 
  RowBox[{"perpframe", "[", "3", "]"}]}]], "Input"],

Cell["See a hit with this matrix do the flip:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"after", "=", 
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", "A", "]"}], ",", "planeandframe", ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<After the hit\>\""}], ",", " ", 
      RowBox[{"PlotRange", " ", "->", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], "]"}]}], ";"}],
   " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{"before", ",", " ", "after"}], "}"}], "]"}]}], "Input"],

Cell["See both from the viewpoint of perpframe[1]:", "SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"20", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"after", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"20", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell["See both from the viewpoint of perpframe[2]:", "SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{"before", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"20", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}]}], "]"}], ",", " ", 
    RowBox[{"Show", "[", 
     RowBox[{"after", ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"20", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}]}], "]"}]}], "}"}], 
  "]"}]], "Input"],

Cell["Just a little groovy.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1.d.i) Making a matrix for bouncing a light ray off a 3D surface \
\>", "Subsubsection"],

Cell["\<\
Here are a surface in 3D and a point above the surface all plotted in true \
scale:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "r", ",", "s", ",", "t"}], "]"}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "0"}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"2", " ", 
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], ",", 
       RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}]}], ";"}], " ", "\n"}], "\n", 

 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"tlow", ",", "thigh"}], "}"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.2", ",", "1.5"}], "}"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"point", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "0.5"}], ",", "3"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "surfaceplotter", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"surfaceplotter", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s", ",", "t"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s", ",", "t"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"surfaceplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"surfaceplotter", "[", 
       RowBox[{"s", ",", "t"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pointplot", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Orange", ",", 
       RowBox[{"PointSize", "[", "0.05", "]"}], ",", 
       RowBox[{"Point", "[", "point", "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{"surfaceplot", ",", "pointplot", ",", 
   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
   RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["A light ray emanates from the point and hits the surface:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "ray", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ray", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"surfaceplotter", "[", 
      RowBox[{"s", ",", "t"}], "]"}], "-", "point"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sjump", "=", 
    FractionBox[
     RowBox[{"shigh", "-", "slow"}], "2"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "2"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rayplots", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"ray", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", "point"}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.15"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"slow", "+", "sjump"}], ",", 
        RowBox[{"shigh", "-", "sjump"}], ",", "sjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"tlow", "+", "tjump"}], ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"setup", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"surfaceplot", ",", "pointplot", ",", "rayplots", ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Your job is to plot the reflected light ray. 
 Do it.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 StyleBox["At a point ",
  Evaluatable->False,
  AspectRatioFixed->True],
 StyleBox[" ",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontFamily->"Courier",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"z", "[", 
     RowBox[{"s", ",", "t"}], "]"}]}], "}"}]]],
 StyleBox[" on the surface, the vectors\n       ",
  Evaluatable->False,
  AspectRatioFixed->True],
 Cell[BoxData[
  RowBox[{
   RowBox[{"tan1", "[", 
    RowBox[{"s", ",", "t"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "s"}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "s"}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "s"}], "]"}]}], "}"}]}]]],
 "; ",
 StyleBox["\nand\n         ",
  Evaluatable->False,
  AspectRatioFixed->True],
 Cell[BoxData[
  RowBox[{
   RowBox[{"tan2", "[", 
    RowBox[{"s", ",", "t"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "t"}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "t"}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "t"}], "]"}]}], "}"}]}]]],
 StyleBox[" \nare tangent to the surface.\nAt each point \n       ",
  Evaluatable->False,
  AspectRatioFixed->True],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"z", "[", 
     RowBox[{"s", ",", "t"}], "]"}]}], "}"}]]],
 StyleBox["\non the surface, use these two tangential vectors to make a 3D \
perpendicular frame including two tangential vectors and one normal vector \
and plot:",
  Evaluatable->False,
  AspectRatioFixed->True]
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"tan1", ",", "tan2"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tan1", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "s"], 
       RowBox[{"x", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "s"], 
       RowBox[{"y", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "s"], 
       RowBox[{"z", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tan2", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       RowBox[{"x", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       RowBox[{"y", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       RowBox[{"z", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "s", ",", "t", ",", "cross"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "s_", ",", "t_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{"tan1", "[", 
      RowBox[{"s", ",", "t"}], "]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"tan1", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ".", 
       RowBox[{"tan1", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]]]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cross", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"tan1", "[", 
      RowBox[{"s", ",", "t"}], "]"}], 
     StyleBox["\[Cross]",
      FontSize->18,
      FontColor->RGBColor[1, 0, 0]], 
     RowBox[{"tan2", "[", 
      RowBox[{"s", ",", "t"}], "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[0, 0, 1]], ",", "s_", ",", "t_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{"cross", "[", 
      RowBox[{"s", ",", "t"}], "]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"cross", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ".", 
       RowBox[{"cross", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]], ",", "s_", ",", "t_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"alignerframe", "[", 
      RowBox[{
       StyleBox["1",
        FontColor->RGBColor[0, 0, 1]], ",", "s", ",", "t"}], "]"}], 
     StyleBox["\[Cross]",
      FontSize->18,
      FontColor->RGBColor[1, 0, 0]], 
     RowBox[{"alignerframe", "[", 
      RowBox[{
       StyleBox["3",
        FontColor->RGBColor[0, 0, 1]], ",", "s", ",", "t"}], "]"}]}]}], ";"}],
   " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplots", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"alignerframe", "[", 
         RowBox[{"k", ",", "s", ",", "t"}], "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Magenta"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"slow", "+", "sjump"}], ",", 
        RowBox[{"shigh", "-", "sjump"}], ",", "sjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"tlow", "+", "tjump"}], ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"step1", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"setup", ",", "rayplots", ",", "frameplots"}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
The two tangential vectors are alignerframe[1,s,t] and alignerframe[2,s,t]. 
The normal vector is alignerframe[3,s,t].\
\>", "Special5"],

Cell["Now reverse the light vector:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"reversedrayplots", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"ray", "[", 
          RowBox[{"s", ",", "t"}], "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"slow", "+", "sjump"}], ",", 
        RowBox[{"shigh", "-", "sjump"}], ",", "sjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"tlow", "+", "tjump"}], ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"step2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "surfaceplot", ",", "pointplot", ",", "reversedrayplots", ",", 
    "frameplots", ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
alignerframe[1,s,t] and alignerframe[2,s,t] are tangent to the surface.\
\>", "Special5"],

Cell["\<\
These are not the reflected rays. To get the reflected rays, just use these \
choices of aligner, stretcher and hanger and plot:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "aligner", ",", "hanger", ",", "hangerframe", ",", "reflectormatrix"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aligner", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", 
       RowBox[{"1", ",", "s", ",", "t"}], "]"}], ",", 
      RowBox[{"alignerframe", "[", 
       RowBox[{"2", ",", "s", ",", "t"}], "]"}], ",", 
      RowBox[{"alignerframe", "[", 
       RowBox[{"3", ",", "s", ",", "t"}], "]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], " ", "=", 
    " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stretcher", " ", "=", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", 
       RowBox[{"1", ",", "s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"hangerframe", "[", 
       RowBox[{"2", ",", "s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"hangerframe", "[", 
       RowBox[{"3", ",", "s_", ",", "t_"}], "]"}]}], "}"}], " ", "=", "\n", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      StyleBox[
       RowBox[{"-", 
        RowBox[{"alignerframe", "[", 
         RowBox[{"1", ",", "s", ",", "t"}], "]"}]}],
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"-", 
        RowBox[{"alignerframe", "[", 
         RowBox[{"2", ",", "s", ",", "t"}], "]"}]}],
       FontColor->RGBColor[1, 0, 0]], ",", 
      RowBox[{"alignerframe", "[", 
       RowBox[{"3", ",", "s", ",", "t"}], "]"}]}], "}"}]}], ";"}], " ", "\n", 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hanger", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", 
    RowBox[{"Transpose", "[", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hangerframe", "[", 
        RowBox[{"1", ",", "s", ",", "t"}], "]"}], ",", 
       RowBox[{"hangerframe", "[", 
        RowBox[{"2", ",", "s", ",", "t"}], "]"}], ",", 
       RowBox[{"hangerframe", "[", 
        RowBox[{"3", ",", "s", ",", "t"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"reflectormatrix", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"hanger", "[", 
      RowBox[{"s", ",", "t"}], "]"}], ".", 
     RowBox[{"(", 
      RowBox[{"stretcher", ".", 
       RowBox[{"aligner", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}], ")"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"reflectedrayplots", " ", "=", " ", "\n", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"reflectormatrix", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ".", 
         StyleBox[
          RowBox[{"(", 
           RowBox[{"-", 
            RowBox[{"ray", "[", 
             RowBox[{"s", ",", "t"}], "]"}]}], ")"}],
          FontColor->RGBColor[0, 0, 1]]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Orange"}]}], "]"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{"s", ",", 
        RowBox[{"slow", "+", "sjump"}], " ", ",", 
        RowBox[{"shigh", "-", "sjump"}], ",", "sjump"}], "}"}], ",", "\n", 
      "                   ", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"tlow", "+", " ", "tjump"}], ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], "  ", "\n"}], "\n", 
 RowBox[{"step3", " ", "=", "  ", 
  RowBox[{"Show", "[", 
   RowBox[{
   "surfaceplot", ",", "pointplot", ",", "reversedrayplots", ",", 
    "frameplots", ",", "reversedrayplots", ",", "reflectedrayplots", ",", 
    "frameplots", ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "Input"],

Cell["\<\
Clean it up with a plot showing both the incoming rays and the reflected rays:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"finalproduct", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"setup", ",", "rayplots", ",", "reflectedrayplots"}], 
   "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell["Done.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.1.d.ii) Making  matrices for bouncing lots of light rays off a 3D surface\
\>", "Subsubsection"],

Cell["\<\
Here's the same setup as in part i), but this time there are many light rays \
hitting the surface:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "ray", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ray", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"surfaceplotter", "[", 
      RowBox[{"s", ",", "t"}], "]"}], "-", "point"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sjump", "=", 
    FractionBox[
     RowBox[{"shigh", "-", "slow"}], "2"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "2"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"rayplots", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"ray", "[", 
         RowBox[{"s", ",", "t"}], "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", "point"}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Orange"}], ",", 
        RowBox[{"HeadSize", "\[Rule]", "0.1"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh", ",", "sjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"setup", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"surfaceplot", ",", "pointplot", ",", "rayplots", ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
Your job is to plot the reflected light rays. 
Do it.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 StyleBox["At a point ",
  Evaluatable->False,
  AspectRatioFixed->True],
 StyleBox[" ",
  Evaluatable->False,
  AspectRatioFixed->True,
  FontFamily->"Courier",
  FontWeight->"Bold"],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"z", "[", 
     RowBox[{"s", ",", "t"}], "]"}]}], "}"}]]],
 StyleBox[" on the surface, the vectors\n       ",
  Evaluatable->False,
  AspectRatioFixed->True],
 Cell[BoxData[
  RowBox[{
   RowBox[{"tan1", "[", 
    RowBox[{"s", ",", "t"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "s"}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "s"}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "s"}], "]"}]}], "}"}]}]]],
 "; ",
 StyleBox["\nand\n         ",
  Evaluatable->False,
  AspectRatioFixed->True],
 Cell[BoxData[
  RowBox[{
   RowBox[{"tan2", "[", 
    RowBox[{"s", ",", "t"}], "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "t"}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"y", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "t"}], "]"}], ",", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"z", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ",", "t"}], "]"}]}], "}"}]}]]],
 StyleBox[" \nare tangent to the surface.\nAt each point \n       ",
  Evaluatable->False,
  AspectRatioFixed->True],
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"y", "[", 
     RowBox[{"s", ",", "t"}], "]"}], ",", 
    RowBox[{"z", "[", 
     RowBox[{"s", ",", "t"}], "]"}]}], "}"}]]],
 StyleBox["\non the surface, use these two tangential vectors to make a 3D \
perpendicular frame including two tangential vectors and one normal vector \
and plot:",
  Evaluatable->False,
  AspectRatioFixed->True]
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"tan1", ",", "tan2"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tan1", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "s"], 
       RowBox[{"x", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "s"], 
       RowBox[{"y", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "s"], 
       RowBox[{"z", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"tan2", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       RowBox[{"x", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       RowBox[{"y", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}], ",", 
      RowBox[{
       SubscriptBox["\[PartialD]", "t"], 
       RowBox[{"z", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "s", ",", "t", ",", "cross"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", 
     RowBox[{
      StyleBox["1",
       FontColor->RGBColor[0, 0, 1]], ",", "s_", ",", "t_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{"tan1", "[", 
      RowBox[{"s", ",", "t"}], "]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"tan1", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ".", 
       RowBox[{"tan1", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]]]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cross", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"tan1", "[", 
      RowBox[{"s", ",", "t"}], "]"}], 
     StyleBox["\[Cross]",
      FontSize->18,
      FontColor->RGBColor[1, 0, 0]], 
     RowBox[{"tan2", "[", 
      RowBox[{"s", ",", "t"}], "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", 
     RowBox[{
      StyleBox["3",
       FontColor->RGBColor[0, 0, 1]], ",", "s_", ",", "t_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{"cross", "[", 
      RowBox[{"s", ",", "t"}], "]"}], 
     SqrtBox[
      RowBox[{
       RowBox[{"cross", "[", 
        RowBox[{"s", ",", "t"}], "]"}], ".", 
       RowBox[{"cross", "[", 
        RowBox[{"s", ",", "t"}], "]"}]}]]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"alignerframe", "[", 
     RowBox[{
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]], ",", "s_", ",", "t_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"alignerframe", "[", 
      RowBox[{
       StyleBox["1",
        FontColor->RGBColor[0, 0, 1]], ",", "s", ",", "t"}], "]"}], 
     StyleBox["\[Cross]",
      FontSize->18,
      FontColor->RGBColor[1, 0, 0]], 
     RowBox[{"alignerframe", "[", 
      RowBox[{
       StyleBox["3",
        FontColor->RGBColor[0, 0, 1]], ",", "s", ",", "t"}], "]"}]}]}], ";"}],
   " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplots", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"alignerframe", "[", 
         RowBox[{"k", ",", "s", ",", "t"}], "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Magenta"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh", ",", "sjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"step1", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"setup", ",", "rayplots", ",", "frameplots"}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
At each point,the two tangential vectors are alignerframe[1,s,t] and \
alignerframe[2,s,t]. 
The normal vector is alignerframe[3,s,t].\
\>", "Special5"],

Cell["Now reverse the light vectors:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"reversedrayplots", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"ray", "[", 
          RowBox[{"s", ",", "t"}], "]"}]}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", 
         RowBox[{"Darker", "[", "Yellow", "]"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh", ",", "sjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}]}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"step2", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
   "surfaceplot", ",", "pointplot", ",", "reversedrayplots", ",", 
    "frameplots", ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
These are not the reflected rays. To get the reflected rays, just use these \
choices of aligner, stretcher and hanger and plot:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "aligner", ",", "hanger", ",", "hangerframe", ",", "reflectormatrix"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"aligner", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", 
       RowBox[{"1", ",", "s", ",", "t"}], "]"}], ",", 
      RowBox[{"alignerframe", "[", 
       RowBox[{"2", ",", "s", ",", "t"}], "]"}], ",", 
      RowBox[{"alignerframe", "[", 
       RowBox[{"3", ",", "s", ",", "t"}], "]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], " ", "=", 
    " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1", ",", "1"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stretcher", " ", "=", " ", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch", ",", "zstretch"}], "}"}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", 
       RowBox[{"1", ",", "s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"hangerframe", "[", 
       RowBox[{"2", ",", "s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"hangerframe", "[", 
       RowBox[{"3", ",", "s_", ",", "t_"}], "]"}]}], "}"}], " ", "=", "\n", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      StyleBox[
       RowBox[{"-", 
        RowBox[{"alignerframe", "[", 
         RowBox[{"1", ",", "s", ",", "t"}], "]"}]}],
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[",",
       FontColor->RGBColor[1, 0, 0]], 
      StyleBox[
       RowBox[{"-", 
        RowBox[{"alignerframe", "[", 
         RowBox[{"2", ",", "s", ",", "t"}], "]"}]}],
       FontColor->RGBColor[1, 0, 0]], ",", 
      RowBox[{"alignerframe", "[", 
       RowBox[{"3", ",", "s", ",", "t"}], "]"}]}], "}"}]}], ";"}], " ", "\n", 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hanger", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", 
    RowBox[{"Transpose", "[", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hangerframe", "[", 
        RowBox[{"1", ",", "s", ",", "t"}], "]"}], ",", 
       RowBox[{"hangerframe", "[", 
        RowBox[{"2", ",", "s", ",", "t"}], "]"}], ",", 
       RowBox[{"hangerframe", "[", 
        RowBox[{"3", ",", "s", ",", "t"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"reflectormatrix", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"hanger", "[", 
      RowBox[{"s", ",", "t"}], "]"}], ".", "stretcher", ".", 
     RowBox[{"aligner", "[", 
      RowBox[{"s", ",", "t"}], "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"reflectedrayplots", " ", "=", " ", "\n", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"reflectormatrix", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ".", 
         RowBox[{"(", 
          RowBox[{"-", 
           RowBox[{"ray", "[", 
            RowBox[{"s", ",", "t"}], "]"}]}], ")"}]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"y", "[", 
            RowBox[{"s", ",", "t"}], "]"}], ",", 
           RowBox[{"z", "[", 
            RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Orange"}]}], "]"}], ",", "\n", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", " ", ",", "shigh", ",", "sjump"}], "}"}], 
      ",", "\n", "                   ", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh", ",", "tjump"}], "}"}]}], 
     "]"}]}], ";"}], "  ", "\n"}], "\n", 
 RowBox[{"step3", " ", "=", "  ", 
  RowBox[{"Show", "[", 
   RowBox[{
   "surfaceplot", ",", "pointplot", ",", "reversedrayplots", ",", 
    "frameplots", ",", "reversedrayplots", ",", "reflectedrayplots", ",", 
    "frameplots", ",", 
    RowBox[{"PlotRange", "->", "All"}]}], "]"}]}]}], "Input"],

Cell["\<\
Clean it up with a plot showing both the incoming rays and the reflected rays:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"finalproduct", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"setup", ",", "rayplots", ",", "reflectedrayplots"}], 
   "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell["Done.", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.2) 3D rotations: Rotating about lines in 3D ", "Subsection",
 CellTags->"MGM.05.T2"],

Cell[CellGroupData[{

Cell["T.2.a.i) Making matrices whose hits rotate about the z-axis", \
"Subsubsection"],

Cell["Here's a flying saucer shape:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "3.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "s", ",", "t"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "1"}], ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], ",", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "s", "]"}], "3"]}], "}"}]}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "3.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "matrix"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"matrix3D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"surfacebefore", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
    RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}]}], "Input"],

Cell["That line is pointing out the z-axis.", "Special5"],

Cell[CellGroupData[{

Cell["\<\
Use hits with a 3D rotation matrix to rotate this surface about the z-axis.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
In 2D, to rotate by s counterclockwise radians, you hit with:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"rotater2D", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rotater2D", "[", "s_", "]"}], "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        StyleBox[
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], ",", 
          RowBox[{"Sin", "[", "s", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
       RowBox[{"{", 
        StyleBox[
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}]}],
         FontColor->RGBColor[0, 0, 1]], "}"}]}], "}"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"rotater2D", "[", "s", "]"}], "]"}]}], "Input"],

Cell["\<\
You can carry this over a 3D matrix whose hits rotate about the z-axis this \
way:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"zrotater3D", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"zrotater3D", "[", "s_", "]"}], "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          RowBox[{"Cos", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[",",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[",",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}],
          FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         StyleBox["1",
          FontColor->RGBColor[0, 0, 1]]}], "}"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"zrotater3D", "[", "s", "]"}], "]"}]}], "Input"],

Cell["To see why this works, look at: ", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotater2D", "[", "s", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]}]], "Input"],

Cell["And look at:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"zrotater3D", "[", "s", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input"],

Cell["\<\
A hit with rotater3D[s] rotates the x's and y's just the way a hit with \
rotater2D[s] does and rotater3D[s] does not disturb the z's at all.
Watch hits with rotater3D[s] whirl the flying saucer around the z - axis:   \
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "6"]}], ";"}], " "}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"zrotater3D", "[", "s", "]"}], "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"N", "[", "s", "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      FractionBox["jump", "2"], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       FractionBox["jump", "2"]}], ",", "jump"}], "}"}]}], "]"}], " ", 
  "]"}]}], "Input",
 CellChangeTimes->{{3.503249915408517*^9, 3.503249925449814*^9}}],

Cell["\<\
See the same thing from a view point way out the positive z axis.\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "6"]}], ";"}], " "}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"zrotater3D", "[", "s", "]"}], "]"}], ",", 
      RowBox[{"Axes3D", "[", 
       RowBox[{"0.8", " ", "ranger"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"N", "[", "s", "]"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"12", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      FractionBox["jump", "2"], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       FractionBox["jump", "2"]}], ",", "jump"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.503249978253117*^9, 3.503249987938918*^9}}],

Cell["Just as it was made to do.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.2.a.ii)  Making matrices whose hits rotate about the x-axis\
\>", "Subsubsection"],

Cell["Here's another flying saucer:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "4"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "s", ",", "t"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "2"}], "}"}], "+", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], ",", 
       SuperscriptBox[
        RowBox[{"Cos", "[", "s", "]"}], "3"]}], "}"}]}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "3.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"hitplotter", ",", "matrix"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"hitplotter", "[", "matrix3D_", "]"}], ":=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"matrix3D", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"z", "[", 
          RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", "shigh"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"Axes", "\[Rule]", "True"}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
      ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"surfacebefore", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"hitplotter", "[", 
     RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", 
    RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Use hits with a 3D rotation matrix to rotate this surface about the plotted \
x-axis.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
In 2D, to rotate by s counterclockwise radians, you hit with:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"rotater2D", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"rotater2D", "[", "s_", "]"}], "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        StyleBox[
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], ",", 
          RowBox[{"Sin", "[", "s", "]"}]}],
         FontColor->RGBColor[0, 0, 1]], "}"}], ",", 
       RowBox[{"{", 
        StyleBox[
         RowBox[{
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}], ",", 
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}]}],
         FontColor->RGBColor[0, 0, 1]], "}"}]}], "}"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"rotater2D", "[", "s", "]"}], "]"}]}], "Input"],

Cell[TextData[{
 "You can carry this over a 3D matrix whose hits rotate about the ",
 StyleBox["x-axis",
  FontColor->RGBColor[0, 0, 1]],
 " this way:"
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"xrotater3D", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"xrotater3D", "[", "s_", "]"}], "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         StyleBox["1",
          FontColor->RGBColor[0, 0, 1]], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         StyleBox[
          RowBox[{"Cos", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[",",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         StyleBox[
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[",",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}],
          FontColor->RGBColor[0, 0, 1]]}], "}"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"xrotater3D", "[", "s", "]"}], "]"}]}], "Input"],

Cell["To see why this works, look at: ", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rotater2D", "[", "s", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"y", ",", "z"}], "}"}]}]], "Input"],

Cell["And look at:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"xrotater3D", "[", "s", "]"}], ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input"],

Cell["\<\
A hit with xrotater3D[s] rotates the y's and z's just the way a hit with \
rotater2D[s] does and xrotater3D[s] does not disturb the x's at all.
Watch hits with xrotater3D[s] whirl the flying saucer around the x - axis:   \
\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "6"]}], ";"}], " "}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"xrotater3D", "[", "s", "]"}], "]"}], ",", 
      RowBox[{"Axes3D", "[", "ranger", "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"N", "[", "s", "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      FractionBox["jump", "2"], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       FractionBox["jump", "2"]}], ",", "jump"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.503250027259988*^9, 3.503250036961956*^9}}],

Cell["\<\
See the same thing from a view point way out the positive x axis.\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"2", " ", "\[Pi]"}], "6"]}], ";"}], " "}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"xrotater3D", "[", "s", "]"}], "]"}], ",", 
      RowBox[{"Axes3D", "[", 
       RowBox[{"0.8", " ", "ranger"}], "]"}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"N", "[", "s", "]"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"12", " ", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      FractionBox["jump", "2"], ",", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       FractionBox["jump", "2"]}], ",", "jump"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.5032500468843822`*^9, 3.503250054858734*^9}}],

Cell["Just as it was made to do.", "SmallText"],

Cell["Whirlaway.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.a.iii) Rotating about 3D lines through {0,0,0}", "Subsubsection"],

Cell["\<\
Here's the same setup as in part i) shown with a line through {0,0,0}:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"linedirectionvector", "=", 
    RowBox[{"{", 
     RowBox[{"0.1", ",", "1.1", ",", "2.6"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"newline", "=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{"Green", ",", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "linedirectionvector"}], ",", 
          RowBox[{"2", "linedirectionvector"}]}], "}"}], "]"}]}], "}"}], 
     "]"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"hitplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", "newline", ",", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
Use matrix hits to rotate this surface about the plotted line.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Make a custom perpendicular frame, taking care that perpframe[3] is a unit \
vector pointing in the direction of the plotted line:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "3", "]"}], "=", 
    FractionBox["linedirectionvector", 
     RowBox[{"Norm", "[", "linedirectionvector", "]"}]]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"throwawayvector", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
      RowBox[{"Random", "[", 
       RowBox[{"Real", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"planevector", "=", 
    RowBox[{"throwawayvector", 
     StyleBox["\[Cross]",
      FontSize->18,
      FontColor->RGBColor[0, 0, 1]], 
     RowBox[{"perpframe", "[", "3", "]"}]}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], "=", 
    FractionBox["planevector", 
     RowBox[{"Norm", "[", "planevector", "]"}]]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"perpframe", "[", "2", "]"}], "=", 
    RowBox[{
     RowBox[{"perpframe", "[", "3", "]"}], "\[Cross]", 
     RowBox[{"perpframe", "[", "1", "]"}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"frameplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"hitplotter", "[", 
    RowBox[{"IdentityMatrix", "[", "3", "]"}], "]"}], ",", "frameplot", ",", 
   "newline", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], "Input"],

Cell["\<\
Rerun until you see all three unit vectors in the custom frame.\
\>", "Special5"],

Cell["Activate:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"zrotater3D", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"zrotater3D", "[", "s_", "]"}], "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "s", "]"}], ",", 
         RowBox[{"Sin", "[", "s", "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", 
         RowBox[{"Sin", "[", 
          RowBox[{"s", "+", 
           FractionBox["\[Pi]", "2"]}], "]"}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"zrotater3D", "[", "s", "]"}], "]"}]}], "Input"],

Cell["\<\
Use the custom frame for the aligner frame and for the hanger frame:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "hangerframe"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}], ",", 
      RowBox[{"alignerframe", "[", "3", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"aligner", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"alignerframe", "[", "1", "]"}], ",", 
       RowBox[{"alignerframe", "[", "2", "]"}], ",", 
       RowBox[{"alignerframe", "[", "3", "]"}]}], "}"}]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}], ",", 
      RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"hanger", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"hangerframe", "[", "1", "]"}], ",", 
        RowBox[{"hangerframe", "[", "2", "]"}], ",", 
        RowBox[{"hangerframe", "[", "3", "]"}]}], "}"}], "]"}]}], ";"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]], "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["The matrix you want is:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "linerotator", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"linerotater", "[", "s_", "]"}], "=", 
  RowBox[{"Expand", "[", 
   RowBox[{
    StyleBox["hanger",
     FontColor->RGBColor[0, 0, 1]], ".", 
    StyleBox[
     RowBox[{"zrotater3D", "[", "s", "]"}],
     FontColor->RGBColor[1, 0, 1]], ".", 
    StyleBox["aligner",
     FontColor->RGBColor[0, 0, 1]]}], "]"}]}]}], "Input"],

Cell["\<\
Ugly, but effective.
Watch this ugly rotation matrix do its work:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox["\[Pi]", "4"]}], ";"}], " "}], "\n", 
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"linerotater", "[", "s", "]"}], "]"}], ",", "frameplot", ",", 
      "newline", ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"N", "[", "s", "]"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       FractionBox["jump", "2"]}], ",", "jump"}], "}"}]}], "]"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.503250074488627*^9, 3.503250082457842*^9}}],

Cell["See it from the viewpoint of perpframe[3]:", "SmallText"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"hitplotter", "[", 
       RowBox[{"linerotater", "[", "s", "]"}], "]"}], ",", "frameplot", ",", 
      "newline", ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"N", "[", "s", "]"}]}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", 
       RowBox[{"6", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", "0", ",", 
      RowBox[{
       RowBox[{"2", " ", "\[Pi]"}], "-", 
       FractionBox["jump", "2"]}], ",", "jump"}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.503250090987664*^9, 3.503250100138235*^9}}],

Cell["Getting dizzy.", "SmallText"],

Cell[CellGroupData[{

Cell[TextData[{
 "If you want a plain language explanation of why \n",
 StyleBox["linerotater[s] = hanger.",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" zrotater3D[s]",
  FontColor->RGBColor[1, 0, 1]],
 StyleBox[".aligner.",
  FontColor->RGBColor[0, 0, 1]],
 "\ndoes the job, click on the right."
}], "Special5"],

Cell["\<\
The hit with aligner replots the surface with  
       the positive x - axis playing the former role of perpframe[1],
       the positive y - axis playing the former role of perpframe[2], 
 and  the positive z - axis playing the former role of perpframe[3].
 
Then the hit with zrotater3D[s] rotates about the z-axis. 
 
And the hit with hanger replots the rotated surface with
        perpframe[1] playing the former role of the positive x-axis 
        perpframe[2] playing the former role of the positive y-axis   
        perpframe[3] playing the former role of the positive z-axis.

The final result is nothing more or less than a rotation about perpframe[3]   \
    
           \
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.3) Euler angles and the 3D right hand frame maker.
Right and left hand perpendicular frames in 3D.\
\>", "Subsection",
 CellTags->"MGM.05.T3"],

Cell[CellGroupData[{

Cell["\<\
T.3.a.i)  Euler angles r, s and t  and the 3D right hand frame maker \
\>", "Subsubsection"],

Cell["\<\
Here's that nasty formula that produces beautiful 3D right hand perpendicular \
frames.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"perpframe", ",", "r", ",", "s", ",", "t"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}], ",", 
    RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", "r", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "t", "]"}]}], " ", 
        RowBox[{"Sin", "[", "r", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "t", "]"}]}], " ", 
       RowBox[{"Sin", "[", "s", "]"}]}], ",", 
      RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}]}], "Input"],

Cell["See one:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r", "=", 
    FractionBox["\[Pi]", "4"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", 
    FractionBox["\[Pi]", "8"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t", "=", 
    FractionBox["\[Pi]", "3"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "perpframe", "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "t", "]"}]}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "1.0"}], ";"}], " "}], "\n", 
 RowBox[{"frameplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "\[Rule]", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[3]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}], ",", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"2", ",", "0.1"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}], " "}]}], "Input",
 AnimationDisplayTime->1],

Cell["See some more:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"r", " ", "=", "  ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"s", " ", "=", "  ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"t", " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["\[Pi]", "2"]}], ",", 
        FractionBox["\[Pi]", "2"]}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "t", "]"}]}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "1"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"frameplot", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", "  ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[3]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"1", ",", "0.1"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", " ", 
    RowBox[{"Boxed", "->", "False"}], ",", " ", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}], " "}]}], "Input"],

Cell["Rerun many times.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell["Explain what the parameters r, s and t mean.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
This is one situation in which the explanation is easier than the formula.
Dial up the matrix zrot[r] whose hits rotate everything r radians about the \
z-axis:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"zrot", ",", "r"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"zrot", "[", "r_", "]"}], "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        StyleBox["{",
         FontColor->RGBColor[0, 0, 1]], 
        RowBox[{
         StyleBox[
          RowBox[{"Cos", "[", "r", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[",",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "r", "]"}],
          FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          RowBox[{"Cos", "[", 
           RowBox[{"r", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[",",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", 
           RowBox[{"r", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}],
          FontColor->RGBColor[0, 0, 1]], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         StyleBox["1",
          FontColor->RGBColor[0, 0, 1]]}], "}"}]}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"zrot", "[", "r", "]"}], "]"}]}], "Input"],

Cell["\<\
Dial up the matrix xrot[s] whose hits rotate everything s radians about the \
x-axis:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"xrot", ",", "s"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"xrot", "[", "s_", "]"}], "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         StyleBox["1",
          FontColor->RGBColor[0, 0, 1]], ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         StyleBox[
          RowBox[{"Cos", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[",",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", "s", "]"}],
          FontColor->RGBColor[0, 0, 1]]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         StyleBox[
          RowBox[{"Cos", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}],
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[",",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[
          RowBox[{"Sin", "[", 
           RowBox[{"s", "+", 
            FractionBox["\[Pi]", "2"]}], "]"}],
          FontColor->RGBColor[0, 0, 1]]}], "}"}]}], "}"}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"xrot", "[", "s", "]"}], "]"}]}], "Input"],

Cell[TextData[{
 "Now start with the usual x-y-z axes perpendicular frame\n          ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}]]],
 " \nand hit it with zrot[",
 StyleBox["r",
  FontColor->RGBColor[0, 0, 1]],
 "], thereby rotating ",
 StyleBox["r",
  FontColor->RGBColor[0, 0, 1]],
 " radians about the z- axis.\nThis gives a new perpendicular frame:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"zrot", "[", "r", "]"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", "\n", "\t", 
   RowBox[{
    StyleBox[
     RowBox[{"zrot", "[", "r", "]"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", "\n", "\t", 
   RowBox[{
    StyleBox[
     RowBox[{"zrot", "[", "r", "]"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], "}"}]], "Input"],

Cell[TextData[{
 "Hit this perpendicular frame with  ",
 StyleBox["xrot[s],",
  FontColor->RGBColor[1, 0, 0]],
 " thereby rotating ",
 StyleBox["s ",
  FontColor->RGBColor[1, 0, 0]],
 "radians about the x- axis.\nThis gives a new perpendicular frame:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"xrot", "[", "s", "]"}],
     FontColor->RGBColor[1, 0, 0]], ".", 
    StyleBox[
     RowBox[{"zrot", "[", "r", "]"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", "\n", "\t", 
   RowBox[{
    StyleBox[
     RowBox[{"xrot", "[", "s", "]"}],
     FontColor->RGBColor[1, 0, 0]], ".", 
    StyleBox[
     RowBox[{"zrot", "[", "r", "]"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", "\n", "\t", 
   RowBox[{
    RowBox[{
     StyleBox["xrot",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["[",
      FontColor->RGBColor[1, 0, 0]], 
     StyleBox["s",
      FontColor->RGBColor[1, 0, 0]], "]"}], ".", 
    StyleBox[
     RowBox[{"zrot", "[", "r", "]"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], "}"}]], "Input"],

Cell[TextData[{
 "Finally hit this perpendicular frame with ",
 StyleBox[" zrot[t]",
  FontColor->RGBColor[0, 0, 1]],
 ", thereby rotating ",
 StyleBox["t",
  FontColor->RGBColor[0, 0, 1]],
 " radians about the z- axis (again).\nThis is the perpendicular frame \
corresponding to the Euler angles r, s and t:"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"zrot", "[", "t", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{"xrot", "[", "s", "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{"zrot", "[", "r", "]"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], ",", "\n", "\t", 
   RowBox[{
    StyleBox[
     RowBox[{"zrot", "[", "t", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{"xrot", "[", "s", "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{"zrot", "[", "r", "]"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], ",", "\n", "\t", 
   RowBox[{
    StyleBox[
     RowBox[{"zrot", "[", "t", "]"}],
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{"xrot", "[", "s", "]"}],
     FontColor->RGBColor[1, 0, 0]], 
    StyleBox[".",
     FontColor->RGBColor[0, 0, 1]], 
    StyleBox[
     RowBox[{"zrot", "[", "r", "]"}],
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}]}], "}"}]], "Input"],

Cell[TextData[{
 "This is the same as the formula\n",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}], ",", 
    RowBox[{"perpframe", "[", "3", "]"}]}], "}"}]]],
 " =\n",
 StyleBox["{",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "r", "]"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], " ", 
       RowBox[{"Sin", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "s", "]"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}], " ", 
       RowBox[{"Sin", "[", "r", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "r", "]"}], " ", 
      RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}],
   FontSize->10]]],
 ",\n ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "t", "]"}]}], " ", 
       RowBox[{"Sin", "[", "r", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", "r", "]"}], " ", 
       RowBox[{"Cos", "[", "s", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "r", "]"}], " ", 
       RowBox[{"Cos", "[", "s", "]"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "r", "]"}], " ", 
      RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}],
   FontSize->10]]],
 ",\n ",
 Cell[BoxData[
  StyleBox[
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "s", "]"}], " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "t", "]"}]}], " ", 
      RowBox[{"Sin", "[", "s", "]"}]}], ",", 
     RowBox[{"Cos", "[", "s", "]"}]}], "}"}],
   FontSize->10]]],
 StyleBox["}.",
  FontColor->RGBColor[0, 0, 1]],
 "\nNow you know where this formula comes from.\n\nAnd you know that the \
Euler angles ",
 StyleBox["r",
  FontColor->RGBColor[0, 0, 1]],
 ", ",
 StyleBox["s",
  FontColor->RGBColor[1, 0, 0]],
 " and ",
 StyleBox["t",
  FontColor->RGBColor[0, 0, 1]],
 " specify:\n         An initial rotation by ",
 StyleBox["r",
  FontColor->RGBColor[0, 0, 1]],
 " radians about the z-axis, \n         followed by a rotation by ",
 StyleBox["s ",
  FontColor->RGBColor[1, 0, 0]],
 "radians about the x-axis \nand then \n          followed by a rotation by \
",
 StyleBox["t",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" ",
  FontColor->RGBColor[0.930007, 0.570001, 0.129992]],
 "radians about the z-axis.\n"
}], "SmallText"],

Cell["See it happen in stages:", "SmallText"],

Cell["Start with r, s and t zeroed out:", "SmallText"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"r", " ", "=", "  ", "0"}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", "=", "  ", "0"}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"t", " ", "=", " ", "0"}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "t", "]"}]}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "1"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"frameplot0", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\n", "     ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", " ", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[3]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}], ",", "  ", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"1", ",", "0.1"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    "\n", "     ", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Before\>\""}], ",", " ", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}], " "}]}], "Input",
 AnimationDisplayTime->2],

Cell[TextData[{
 "First rotate this frame ",
 StyleBox["r",
  FontColor->RGBColor[0, 0, 1]],
 " radians about the z- axis:"
}], "SmallText",
 AnimationDisplayTime->2],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"r", " ", "=", " ", 
     FractionBox["\[Pi]", "4"]}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"s", " ", "=", "  ", "0"}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"t", " ", "=", " ", "0"}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "t", "]"}]}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "1"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"frameplot1", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\n", "     ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", " ", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[3]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"1", ",", "0.1"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    "\n", "     ", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Rotate r radians about z-axis\>\""}], ",",
     "  ", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}], " "}]}], "Input",
 AnimationDisplayTime->2],

Cell[TextData[{
 "Second rotate the frame above by ",
 StyleBox["s",
  FontColor->RGBColor[1, 0, 0]],
 " radians about the x-axis"
}], "SmallText",
 AnimationDisplayTime->2],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"r", " ", "=", 
     FractionBox["\[Pi]", "4"]}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"s", "=", 
     FractionBox["\[Pi]", "6"]}], ";"}], " "}],
  FontColor->RGBColor[1, 0, 0]], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"t", " ", "=", " ", "0"}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "t", "]"}]}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "1"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"frameplot2", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\n", "     ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", " ", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[3]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"1", ",", "0.1"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    "\n", "     ", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{"PlotLabel", "->", "\"\<Then rotate s radians about x-axis\>\""}],
     ",", " ", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}], " "}]}], "Input",
 AnimationDisplayTime->2],

Cell[TextData[{
 "Finally rotate the frame above by ",
 StyleBox["t ",
  FontColor->RGBColor[0, 0, 1]],
 "radians about the z-axis"
}], "SmallText",
 AnimationDisplayTime->2],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"r", " ", "=", 
     FractionBox["\[Pi]", "4"]}],
    FontColor->RGBColor[1, 0, 0]], 
   StyleBox[";",
    FontColor->RGBColor[0, 0, 1]]}], 
  StyleBox[" ",
   FontColor->RGBColor[0, 0, 1]]}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"s", "=", 
     FractionBox["\[Pi]", "6"]}], ";"}], " "}],
  FontColor->RGBColor[1, 0, 0]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"t", " ", "=", 
     RowBox[{"-", 
      FractionBox["\[Pi]", "4"]}]}], ";"}], " "}],
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"perpframe", "[", "1", "]"}], ",", 
      RowBox[{"perpframe", "[", "2", "]"}], ",", 
      RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Cos", "[", "t", "]"}]}], " ", 
          RowBox[{"Sin", "[", "r", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "r", "]"}], " ", 
          RowBox[{"Cos", "[", "s", "]"}], " ", 
          RowBox[{"Cos", "[", "t", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sin", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Cos", "[", "r", "]"}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "s", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "t", "]"}]}], " ", 
         RowBox[{"Sin", "[", "s", "]"}]}], ",", 
        RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", " ", "=", " ", "1"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"frameplot3", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", "\n", "     ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{"perpframe", "[", "k", "]"}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", " ", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"perpframe", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "2", "]"}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<perpframe[3]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"perpframe", "[", "3", "]"}]}]}], "]"}], "]"}], ",", " ", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"1", ",", "0.1"}], "]"}], ",", " ", 
    RowBox[{"PlotRange", "->", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    "\n", "     ", 
    RowBox[{"Boxed", "->", "False"}], ",", 
    RowBox[{
    "PlotLabel", "->", "\"\<Finally rotate t radians about z-axis\>\""}], ",",
     "\n", "     ", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}], " "}]}], "Input",
 AnimationDisplayTime->2],

Cell["Check it out in sequence:", "Text"],

Cell[BoxData[
 RowBox[{"ListAnimate", "[", 
  RowBox[{"{", 
   RowBox[{
   "frameplot0", ",", "frameplot1", ",", "frameplot2", ",", "frameplot3"}], 
   "}"}], "]"}]], "Input"],

Cell["\<\
Now go back and change the specifications of r, s and t rerun.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.3.a.ii) The 3D frame maker produces right hand perpendicular frames\
\>", "Subsubsection"],

Cell["\<\
A right hand 3D perpendicular frame is any frame that has the same \
orientation as
the x-y-z coordinate frame  {{1,0.0},{0,1,0},{0,0,1}}:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "0", ",", "0"}], "}"}], ".", 
  RowBox[{"Cross", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input"],

Cell[TextData[{
 "So a 3D perpendicular frame  \n          {perpframe[1],  perpframe[2] , \
perpframe[3]} \n is a",
 StyleBox[" right",
  FontColor->RGBColor[0, 0, 1]],
 " hand frame if\n          ",
 StyleBox["perpframe[1]. ( perpframe[2] \[Times] perpframe[3]) = 1.\n         \
 ",
  FontColor->RGBColor[0, 0, 1]],
 "\nAnd a hand 3D perpendicular frame  \n          {perpframe[1],  \
perpframe[2] , perpframe[3]} \n is a",
 StyleBox[" left",
  FontColor->RGBColor[0, 0, 1]],
 " hand frame if\n      ",
 StyleBox["    perpframe[1]. ( perpframe[2] \[Times] perpframe[3]) = ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  RowBox[{
   StyleBox["-",
    FontColor->RGBColor[1, 0, 0]], "1"}]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->RGBColor[0, 0, 1]],
 "\n      \nExplain why the 3D perpendicular frame produced by:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"perpframe", ",", "r", ",", "s", ",", "t"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}], ",", 
    RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", "r", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "t", "]"}]}], " ", 
        RowBox[{"Sin", "[", "r", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "t", "]"}]}], " ", 
       RowBox[{"Sin", "[", "s", "]"}]}], ",", 
      RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["is a right hand frame.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
From the last part  
      {perpframe[1],perpframe[2],perpframe[3]} 
comes from successive rotations of 
         {{1,0.0},{0,1,0},{0,0,1}};  
so it has the same relative orientation as  
         {{1,0.0},{0,1,0},{0,0,1}}.
So the fact that  
         perpframe[1]. ( perpframe[2] \[Times] perpframe[3])  = 1
is guaranteed:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"perpframe", "[", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]], "]"}], ".", 
   RowBox[{"Cross", "[", 
    RowBox[{
     RowBox[{"perpframe", "[", 
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
     RowBox[{"perpframe", "[", 
      StyleBox["3",
       FontColor->RGBColor[0, 0, 1]], "]"}]}], "]"}]}], "]"}]], "Input"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.3.a.iii) Left hand perpendicular frames in 3D", "Subsubsection"],

Cell["Look at this:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"perpframe", ",", "r", ",", "s", ",", "t"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"perpframe", "[", "1", "]"}], ",", 
    RowBox[{"perpframe", "[", "2", "]"}], ",", 
    RowBox[{"perpframe", "[", "3", "]"}]}], "}"}], " ", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}], " ", 
        RowBox[{"Sin", "[", "r", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "t", "]"}]}], " ", 
        RowBox[{"Sin", "[", "r", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "r", "]"}], " ", 
        RowBox[{"Cos", "[", "s", "]"}], " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"Cos", "[", "r", "]"}], " ", 
       RowBox[{"Sin", "[", "s", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "t", "]"}]}], " ", 
       RowBox[{"Sin", "[", "s", "]"}]}], ",", 
      RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], "}"}]}]}], "Input"],

Cell["\<\
Make a new perpendicular frame by interchanging perpframe[1] and perpframe[2] \
and see whether the new frame is a right hand frame:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "newperpframe", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"newperpframe", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"perpframe", "[", "2", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"newperpframe", "[", "2", "]"}], " ", "=", " ", 
    RowBox[{"perpframe", "[", "1", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"newperpframe", "[", "3", "]"}], " ", "=", " ", 
    RowBox[{"perpframe", "[", "3", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"newperpframe", "[", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]], "]"}], ".", 
   RowBox[{"Cross", "[", 
    RowBox[{
     RowBox[{"newperpframe", "[", 
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
     RowBox[{"newperpframe", "[", 
      StyleBox["3",
       FontColor->RGBColor[0, 0, 1]], "]"}]}], "]"}]}], "]"}]}], "Input"],

Cell["\<\
You make the call: 
Is 
        {newperpframe[1],newperpframe[2],{newperpframe[3]} 
a left or a right hand frame in 3D?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Look at  newperpframe[1]. ( newperpframe[2] \[Times] newperpframe[3])  again:\
\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"newperpframe", "[", 
    StyleBox["1",
     FontColor->RGBColor[0, 0, 1]], "]"}], ".", 
   RowBox[{"Cross", "[", 
    RowBox[{
     RowBox[{"newperpframe", "[", 
      StyleBox["2",
       FontColor->RGBColor[0, 0, 1]], "]"}], ",", 
     RowBox[{"newperpframe", "[", 
      StyleBox["3",
       FontColor->RGBColor[0, 0, 1]], "]"}]}], "]"}]}], "]"}]], "Input"],

Cell["\<\
This signals loudly and clearly that   \
{newperpframe[1],newperpframe[2],{newperpframe[3]} is a left hand \
perpendicular frame.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.4)  ",
 StyleBox["Det[A .B]",
  FontColor->RGBColor[0, 0, 1]],
 "   = ",
 StyleBox["Det[A] Det[B]\n",
  FontColor->RGBColor[0, 0, 1]],
 "If A is a 3D diagonal matrix, then ",
 StyleBox["Det[A] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["= ",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["product of diagonal entries\n",
  FontColor->RGBColor[0, 0, 1]],
 "Why ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["] ",
  FontColor->RGBColor[0, 0, 1]],
 " =  ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", " ", "[", "A", "]"}]]]],
 "\n",
 StyleBox[" ",
  FontColor->RGBColor[0, 0, 1]],
 "If A is a 3D hanger or aligner based on a",
 StyleBox[" right",
  FontColor->RGBColor[0, 0, 1]],
 " hand frame, then ",
 StyleBox["Det[A]",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["  =",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["  1",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["\n ",
  FontColor->RGBColor[0, 0, 1]],
 "If A is a 3D hanger or aligner based on a",
 StyleBox[" left",
  FontColor->RGBColor[0, 0, 1]],
 " hand frame, then ",
 StyleBox["Det[A]  ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[" \[LongDash]1",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["\n",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" Why ",
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Det[A]",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsection",
 CellTags->"MGM.05.T4"],

Cell[CellGroupData[{

Cell["T.4.a.)   Det[A.B] = Det[A] Det[B]", "Subsubsection"],

Cell["Here are two random 3D matrices A and B", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "B", "]"}]}], "Input"],

Cell["Here are calculations of Det[A.B] and Det[A] Det[B]:", "Text"],

Cell[BoxData[{
 RowBox[{"Det", "[", 
  RowBox[{"A", ".", "B"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Det", "[", "A", "]"}], " ", 
  RowBox[{"Det", "[", "B", "]"}]}]}], "Input"],

Cell[CellGroupData[{

Cell["\<\
All clued in matrix folks know that when you go with two 3D matrices A and B, \
then you can be sure that
        Det[A.B] = Det[A].Det[B].                         
Explain this.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
This is a job for pure bean-counting. Doing it by hand would be a big \
project. But turning the supreme bean-counter - namely the computer loose on \
this one makes the explanation into a snap.
Enter a cleared matrix 3D A:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "a", ",", "b", ",", "c", ",", "d", ",", "e", ",", "f", ",", "g", ",", "h", 
   ",", "i", ",", "j"}], "]"}], "\n", 
 RowBox[{
  RowBox[{
   StyleBox[
    RowBox[{"A", " ", "=", " ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"a", "b", "c"},
         {"d", "f", "g"},
         {"h", "i", "j"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}],
    FontColor->RGBColor[0, 0, 1]], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", 
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]], "]"}]}], "Input"],

Cell[TextData[{
 "Apply the formula ",
 StyleBox["Det[A] =  col[1].(col[2] \[Times] col[3])",
  FontColor->RGBColor[0, 0, 1]],
 " to calculate Det[A]"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Det", "[", 
  StyleBox["A",
   FontColor->RGBColor[0, 0, 1]], "]"}]], "Input"],

Cell["Enter another cleared matrix B:", "SmallText"],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "r", ",", "s", ",", "t", ",", "u", ",", "v", ",", "w", ",", "x", ",", "y", 
   ",", "z"}], "]"}], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"B", " ", "=", " ", 
     TagBox[
      RowBox[{"(", "\[NoBreak]", GridBox[{
         {"r", "s", "t"},
         {"u", "v", "w"},
         {"x", "y", "z"}
        }], "\[NoBreak]", ")"}],
      MatrixForm[#]& ]}], ";"}], " "}],
  FontColor->RGBColor[1, 0, 0]], "\n", 
 RowBox[{"MatrixForm", "[", 
  StyleBox["B",
   FontColor->RGBColor[1, 0.270604, 0]], "]"}]}], "Input"],

Cell[TextData[{
 "Apply the formula ",
 StyleBox["Det[B] =  col[1].(col[2] \[Times] col[3])",
  FontColor->RGBColor[0, 0, 1]],
 " to calculate Det[B]"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"Det", "[", 
  StyleBox["B",
   FontColor->RGBColor[1, 0.270604, 0]], "]"}]], "Input"],

Cell["Calculate A.B:", "SmallText"],

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{
   StyleBox["A",
    FontColor->RGBColor[0, 0, 1]], ".", 
   StyleBox["B",
    FontColor->RGBColor[1, 0.270604, 0]]}], "]"}]], "Input"],

Cell[TextData[{
 "Apply the formula ",
 StyleBox["Det[A.B] = col[1].(col[2]\[Times]col[3",
  FontColor->RGBColor[0, 0, 1]],
 "]) to calculate Det[A.B]"
}], "SmallText"],

Cell[BoxData[
 RowBox[{"productdet", " ", "=", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{"Det", "[", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox["B",
      FontColor->RGBColor[1, 0.270604, 0]]}], 
    StyleBox["]",
     FontColor->GrayLevel[0]]}], "]"}]}]], "Input"],

Cell["Now calculate Det[A] times Det[B]", "SmallText"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"Det", "[", 
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], "]"}], " ", 
   RowBox[{"Det", "[", 
    StyleBox["B",
     FontColor->RGBColor[1, 0.270604, 0]], "]"}]}], "]"}]], "Input"],

Cell["Both give you the same thing:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Det", "[", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], ".", 
     StyleBox["B",
      FontColor->RGBColor[1, 0.270604, 0]]}], "]"}], "]"}], " ", "==", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"Det", "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}], " ", 
    RowBox[{"Det", "[", 
     StyleBox["B",
      FontColor->RGBColor[1, 0.270604, 0]], "]"}]}], "]"}]}]], "Input"],

Cell[TextData[{
 "And because A and B could stand for any choices of 3D matrices A and B, you \
see conclusively that\n             ",
 StyleBox[" Det[A.B] = Det[A] Det[B]",
  FontColor->RGBColor[0, 0, 1]],
 "\nis a sure bet for any 3D matrices A and B."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.4.b) If A is 3D diagonal matrix , then ",
 StyleBox["Det[A] = product of diagonal entries",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell["Here's a random 3D diagonal matrix", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "diagonalentry", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diagonalentry", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diagonalentry", "[", "2", "]"}], " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"diagonalentry", "[", "3", "]"}], " ", "=", " ", 
    RowBox[{"Random", "[", 
     RowBox[{"Real", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"diagonalmatrix", "=", "\[NegativeThinSpace]", 
     RowBox[{"(", GridBox[{
        {
         RowBox[{"diagonalentry", "[", "1", "]"}], "0", "0"},
        {"0", 
         RowBox[{"diagonalentry", "[", "2", "]"}], "0"},
        {"0", "0", 
         RowBox[{"diagonalentry", "[", "3", "]"}]}
       }], ")"}]}], ";"}], " "}],
  FontColor->RGBColor[0, 0, 1]], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "diagonalmatrix", "]"}]}], "Input"],

Cell["Det[diagonalmatrix] is:", "Text"],

Cell[BoxData[
 RowBox[{"Det", "[", "diagonalmatrix", "]"}]], "Input"],

Cell["Compare:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"diagonalentry", "[", 
   StyleBox["1",
    FontColor->RGBColor[0, 0, 1]], "]"}], " ", 
  RowBox[{"diagonalentry", "[", 
   StyleBox["2",
    FontColor->RGBColor[0, 0, 1]], "]"}], " ", 
  RowBox[{"diagonalentry", "[", 
   StyleBox["3",
    FontColor->RGBColor[0, 0, 1]], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Explain why the same thing happens for any and all 3D diagonal matrices.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\

The easiest way to see this is to use the formula\
\>", "SmallText"],

Cell[TextData[{
 "         ",
 StyleBox["Det[A] =  col[1].(col[2] \[Times] col[3])",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell["\<\
from the Basics.
Applying this formula to\
\>", "SmallText"],

Cell[TextData[{
 StyleBox["          Det[diagonalmatrix ]  = Det[ ",
  FontColor->GrayLevel[0]],
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"diagonalentry", "[", "1", "]"}], "0", "0"},
     {"0", 
      RowBox[{"diagonalentry", "[", "2", "]"}], "0"},
     {"0", "0", 
      RowBox[{"diagonalentry", "[", "3", "]"}]}
    }], ")"}]]],
 "]"
}], "SmallText"],

Cell[TextData[{
 " \ngives          ",
 StyleBox["  ",
  FontColor->GrayLevel[0]]
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"col", ",", "diagonalentry"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"col", "[", "1", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"diagonalentry", "[", "1", "]"}], ",", "0", ",", "0"}], "}"}]}],
    ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"col", "[", "2", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"diagonalentry", "[", "2", "]"}], ",", "0"}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"col", "[", "3", "]"}], " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0", ",", 
      RowBox[{"diagonalentry", "[", "3", "]"}]}], "}"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col", "[", "1", "]"}], ".", 
  RowBox[{"Cross", "[", 
   RowBox[{
    RowBox[{"col", "[", "2", "]"}], ",", 
    RowBox[{"col", "[", "3", "]"}]}], "]"}]}]}], "Input"],

Cell["There you go.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.4.c)  Why ",
 StyleBox["  Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " =  ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", " ", "[", "A", "]"}]]]]
}], "Subsubsection"],

Cell[TextData[{
 "Look at these calculations of ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", "[", "A", "]"}]]]],
 " for a random matrix A:"
}], "Text"],

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"A", " ", "=", " ", 
      RowBox[{"(", "\[NegativeThinSpace]", GridBox[{
         {
          RowBox[{"Random", "[", 
           RowBox[{"Real", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
          RowBox[{"Random", "[", 
           RowBox[{"Real", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]},
         {
          RowBox[{"Random", "[", 
           RowBox[{"Real", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], 
          RowBox[{"Random", "[", 
           RowBox[{"Real", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}
        }], "\[NegativeThinSpace]", ")"}]}],
     FontColor->RGBColor[0, 0, 1]], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Det", "[", 
    RowBox[{
     StyleBox["Inverse",
      FontColor->RGBColor[1, 0, 0]], "[", 
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], "]"}], "]"}]}]}]], "Input"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"Det", "[", 
   StyleBox["A",
    FontColor->RGBColor[0, 0, 1]], "]"}]]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "Apparently,   ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["] = ",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  FractionBox["1", 
   RowBox[{"Det", " ", "[", "A", "]"}]]],
  FontColor->RGBColor[0, 0, 1]],
 ".\n\nExplain why this is guaranteed for any and all invertible 2D matrices \
A."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "         Identity =  ",
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 ". A\nSo\n        1  = Det[Identity] = ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " Det[A].\nAnd so\n        ",
 Cell[BoxData[
  StyleBox[
   FractionBox["1", 
    RowBox[{"Det", " ", "[", "A", "]"}]],
   FontColor->GrayLevel[0]]],
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", 
   RowBox[{"-", "1"}]]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["] .",
  FontColor->RGBColor[0, 0, 1]],
 "\n",
 "That's all there is to it."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.4.d.i) The determinant of a 3D hanger or aligner based on a",
 StyleBox[" right ",
  FontColor->RGBColor[0, 0, 1]],
 "hand perpendicular frame is equal to ",
 StyleBox["+1",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this:\n   The determinant of a hanger or aligner based on a",
 StyleBox[" right",
  FontColor->RGBColor[0, 0, 1]],
 " hand perpendicular frame is equal to ",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with a right hand 3D perpendicular frame \
{perpframe[1],perpframe[2],perpframe[3]} so that  \n              ",
 StyleBox["perpframe[1]. ( perpframe[2] \[Times] perpframe[3]) = 1.",
  FontColor->RGBColor[0, 0, 1]],
 " \n              \nThe hanger matrix based on this right hand perpendicular \
frame is\n           ",
 StyleBox["hanger",
  FontColor->RGBColor[0, 0, 1]],
 "  =    ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"perpframe", "[", "1", "]"}], 
      RowBox[{"perpframe", "[", "2", "]"}], 
      RowBox[{"perpframe", "[", "3", "]"}]},
     {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
    }], ")"}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "           \n In other words ",
 StyleBox["column[j]",
  FontColor->RGBColor[0, 0, 1]],
 " of A is ",
 StyleBox["perpframe[j]",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "So ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["column[1]. ( column[2] \[Times] column[3]) ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->GrayLevel[0]],
 StyleBox[" perpframe[1]. ( perpframe[2] \[Times] perpframe[3])",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" =",
  FontColor->GrayLevel[0]],
 StyleBox[" 1",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->GrayLevel[0]],
 StyleBox["\n",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "The aligner matrix based on this right hand frame is\n        aligner =",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"perpframe", "[", "1", "]"}], "\[RightArrow]"},
     {
      RowBox[{"perpframe", "[", "2", "]"}], "\[RightArrow]"},
     {
      RowBox[{"perpframe", "[", "3", "]"}], "\[RightArrow]"}
    }], ")"}]]],
 ".\nRemembering that hanger and aligner are mutually inverse, you get\n      \
     Identity = hanger.aligner.\n So\n           1 = Det[Identity] = ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0, 1]],
 " Det[aligner].\nAnd because ",
 StyleBox["Det[ hanger] = 1",
  FontColor->RGBColor[0, 0, 1]],
 ", you get\n            1  = ",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 " Det[aligner].\nThis tells you that Det[aligner] = 1.\n"
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.4.d.ii) The determinant of a 3D hanger or aligner based on a",
 StyleBox[" left",
  FontColor->RGBColor[0, 0, 1]],
 " hand perpendicular frame is equal to  ",
 StyleBox["-1",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this:\n   The determinant of a hanger or aligner based on a",
 StyleBox[" left",
  FontColor->RGBColor[0, 0, 1]],
 " hand perpendicular frame is equal to ",
 StyleBox["-1",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Go with a left hand 3D perpendicular frame \
{perpframe[1],perpframe[2],perpframe[3]} so that  \n              ",
 StyleBox["perpframe[1]. ( perpframe[2] \[Times] perpframe[3]) = -1.",
  FontColor->RGBColor[0, 0, 1]],
 " \n              \nThe hanger matrix based on this right hand perpendicular \
frame is\n           ",
 StyleBox["hanger",
  FontColor->RGBColor[0, 0, 1]],
 "  =    ",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"perpframe", "[", "1", "]"}], 
      RowBox[{"perpframe", "[", "2", "]"}], 
      RowBox[{"perpframe", "[", "3", "]"}]},
     {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
    }], ")"}]]],
 "."
}], "SmallText"],

Cell[TextData[{
 "           \n In other words ",
 StyleBox["column[j]",
  FontColor->RGBColor[0, 0, 1]],
 " of A is ",
 StyleBox["perpframe[j]",
  FontColor->RGBColor[0, 0, 1]],
 "."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "So ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["column[1]. ( column[2] \[Times] column[3]) ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["=",
  FontColor->GrayLevel[0]],
 StyleBox[" perpframe[1]. ( perpframe[2] \[Times] perpframe[3])",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" =",
  FontColor->GrayLevel[0]],
 StyleBox["  -1",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[".",
  FontColor->GrayLevel[0]],
 StyleBox["\n",
  FontColor->RGBColor[0, 0, 1]]
}], "SmallText"],

Cell[TextData[{
 "The aligner matrix based on this right hand frame is\n        aligner =",
 Cell[BoxData[
  RowBox[{"(", GridBox[{
     {
      RowBox[{"perpframe", "[", "1", "]"}], "\[RightArrow]"},
     {
      RowBox[{"perpframe", "[", "2", "]"}], "\[RightArrow]"},
     {
      RowBox[{"perpframe", "[", "3", "]"}], "\[RightArrow]"}
    }], ")"}]]],
 ".\nRemembering that hanger and aligner are mutually inverse, you get\n      \
     Identity = hanger.aligner.\n So\n           1 = Det[Identity] = ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0, 1]],
 " Det[aligner].\nAnd because ",
 StyleBox["Det[ hanger] = -1",
  FontColor->RGBColor[0, 0, 1]],
 ", you get\n            1  = -",
 StyleBox["1",
  FontColor->RGBColor[0, 0, 1]],
 " Det[aligner].\nThis tells you that Det[aligner] = -1.\n"
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.e)   Why ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["A", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["] ",
  FontColor->RGBColor[0, 0, 1]],
 "= ",
 StyleBox["Det[A]",
  FontColor->RGBColor[0, 0, 1]]
}], "Subsubsection"],

Cell[TextData[{
 "Look at these calculations of Det[A] and Det[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] for random 3D matrices A:"
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]},
       {
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], 
        RowBox[{"Random", "[", 
         RowBox[{"Real", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]}
      }], ")"}]}], " ", ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", "A", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", 
  RowBox[{"Transpose", "[", "A", "]"}], "]"}]}], "Input"],

Cell["Rerun many times.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[CellGroupData[{

Cell[TextData[{
 "This is strong evidence that when you go with any 3D matrix A , then both A \
and ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " have the same determinant. \nExplain why this is guaranteed."
}], "Text"],

Cell["Answer:", "Special1"],

Cell["This is the same explanation used in 2D in the last lesson.", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "Go with any 3D matrix \n        A = ",
 StyleBox["hanger",
  FontColor->RGBColor[0, 0.392187, 0]],
 ".stretcher.",
 StyleBox["aligner",
  FontColor->RGBColor[0, 0, 1]],
 ".\nThis gives\n        ",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 " = ",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["aligner", "t"],
   FontColor->RGBColor[0, 0, 1]]]],
 ".stretcher.",
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox[".",
  FontColor->RGBColor[0, 0.392187, 0]],
 "\nSo \n         Det[A] = ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0.392187, 0]],
 " Det[stretcher] ",
 StyleBox["Det[aligner]",
  FontColor->RGBColor[0, 0, 1]],
 " \nand\n        Det[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] = ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " Det[stretcher] ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["].",
  FontColor->RGBColor[0, 0.392187, 0]],
 "\n   \nBut ",
 StyleBox[" Det[",
  FontColor->RGBColor[0, 0, 1]],
 Cell[BoxData[
  SuperscriptBox["aligner", "t"]],
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["]",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Det[aligner]",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["Det[hanger]",
  FontColor->RGBColor[0, 0.392187, 0]],
 " = ",
 StyleBox["Det[",
  FontColor->RGBColor[0, 0.392187, 0]],
 Cell[BoxData[
  SuperscriptBox["hanger", "t"]],
  FontColor->RGBColor[0, 0.392187, 0]],
 StyleBox["]",
  FontColor->RGBColor[0, 0.392187, 0]]
}], "SmallText"],

Cell[TextData[{
 "Reasons: If the aligner frame is a right hand frame, then",
 Cell[BoxData[
  RowBox[{"  ", 
   StyleBox[
    SuperscriptBox["aligner", "t"],
    FontSize->12]}]]],
 " is a hanger based on the same right hand frame. \nSo Det[aligner] = Det[",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["aligner", "t"],
   FontSize->12]]],
 "] = 1.\n If the aligner frame is a ",
 StyleBox["left",
  FontColor->RGBColor[1, 0, 0]],
 " hand frame, then",
 Cell[BoxData[
  RowBox[{"  ", 
   SuperscriptBox["aligner", "t"]}]],
  FontSize->12],
 " is a hanger based on the same left hand frame.\n  So Det[aligner] = Det[",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["aligner", "t"],
   FontSize->12]]],
 "] = ",
 StyleBox["-1",
  FontColor->RGBColor[1, 0, 0]],
 ".\n   If the hanger frame is a right hand frame, then",
 Cell[BoxData[
  RowBox[{"  ", 
   StyleBox[
    SuperscriptBox["hanger", "t"],
    FontSize->12]}]]],
 " is a aligner based on the same right hand frame. \nSo Det[hanger] = Det[",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["hanger", "t"],
   FontSize->12]]],
 "] = 1.\n If the hanger frame is a ",
 StyleBox["left",
  FontColor->RGBColor[1, 0, 0]],
 " hand frame, then",
 Cell[BoxData[
  RowBox[{"  ", 
   SuperscriptBox["hanger", "t"]}]],
  FontSize->12],
 " is a aligner based on the same left hand frame.\n  So Det[hanger] = Det[",
 Cell[BoxData[
  StyleBox[
   SuperscriptBox["hanger", "t"],
   FontSize->12]]],
 "] = ",
 StyleBox["-1",
  FontColor->RGBColor[1, 0, 0]],
 "."
}], "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "The upshot: Det[A] and  Det[",
 Cell[BoxData[
  SuperscriptBox["A", "t"]]],
 "] are both the product of the same three numbers. \nThis makes them equal."
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.5) Hits with 3D matrices with positive determinants preserve orientation. 
 Hits with 3D matrices with negative determinants reverse orientation\
\>", "Subsection",
 CellTags->"MGM.05.T5"],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.a.i) Saying that A is a 3D matrix with a positive determinant \nis the \
same as  saying that hits with A preserve orientation in the sense that \n    \
       ",
 StyleBox["vector[1].(vector[2] \[Times] vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["(A.vector[1]).((A.vector[2]) \[Times] (A.vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " \nhave the same sign"
}], "Subsubsection"],

Cell["Here is a 3D matrix A with a positive determinant", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", " ", "=", " ", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"-", "1.2"}], 
        RowBox[{"-", "0.7"}], 
        RowBox[{"-", "1.7"}]},
       {
        RowBox[{"-", "1.8"}], 
        RowBox[{"-", "1.1"}], 
        RowBox[{"-", "0.3"}]},
       {
        RowBox[{"-", "1.4"}], "0.6", 
        RowBox[{"-", "1.4"}]}
      }], ")"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Det", "[", "A", "]"}]}], "Input"],

Cell["Here are three vectors in 3D:", "Text"],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "vector", "]"}], ";"}], " ", "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"vector", "[", "1", "]"}], " ", "=", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "1.7"}], ",", "1.2"}], "}"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vector", "[", "2", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1.3", ",", 
       RowBox[{"-", "0.1"}], ",", 
       RowBox[{"-", "1.8"}]}], "}"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"vector", "[", "3", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"1.6", ",", "0.2", ",", 
       RowBox[{"-", "0.2"}]}], "}"}]}], ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Table", "[", "\n", "     ", 
      RowBox[{
       RowBox[{"Vector", "[", 
        RowBox[{
         RowBox[{"vector", "[", "k", "]"}], ",", 
         RowBox[{"Tail", "->", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
         RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", " ", "\n", 
     "     ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<vector[1]\>\"", ",", 
        RowBox[{"0.4", " ", 
         RowBox[{"vector", "[", "1", "]"}]}]}], "]"}], "]"}], ",", "\n", 
     "     ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<vector[2]\>\"", ",", 
        RowBox[{"0.7", " ", 
         RowBox[{"vector", "[", "2", "]"}]}]}], "]"}], "]"}], ",", "\n", 
     "     ", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{"Text", "[", 
       RowBox[{"\"\<vector[3]\>\"", ",", 
        RowBox[{"0.7", " ", 
         RowBox[{"vector", "[", "3", "]"}]}]}], "]"}], "]"}], ",", "\n", 
     "     ", 
     RowBox[{"Axes3D", "[", 
      RowBox[{"1", ",", "0.1"}], "]"}], ",", "\n", "     ", 
     RowBox[{"PlotRange", "->", "All"}], ",", "\n", "     ", 
     RowBox[{"Boxed", "->", "False"}], ",", "\n", "     ", 
     RowBox[{"Axes", "->", "True"}], ",", 
     RowBox[{"ViewPoint", "->", "CMView"}], ",", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
    "]"}], " "}]}]], "Input"],

Cell["\<\
Check the orientation of {vector[1],vector[2],vector[3]} by calculating
          vector[1]. (vector[2]\[Times]vector[3]):\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"vector", "[", "1", "]"}], ".", 
  RowBox[{"Cross", "[", 
   RowBox[{
    RowBox[{"vector", "[", "2", "]"}], ",", 
    RowBox[{"vector", "[", "3", "]"}]}], "]"}]}]], "Input"],

Cell["{vector[1],vector[2],vector[3]} are positively oriented.", "Text"],

Cell["\<\
Now check the orientation of {A.vector[1],A.vector[2],A.vector[3]} by \
calculating
          (A.vector[1]). ((A.vector[2])\[Times](A.vector[3]))::\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    StyleBox["A",
     FontColor->RGBColor[0, 0, 1]], ".", 
    RowBox[{"vector", "[", "1", "]"}]}], ")"}], ".", 
  RowBox[{"Cross", "[", 
   RowBox[{
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], ".", 
     RowBox[{"vector", "[", "2", "]"}]}], ",", 
    RowBox[{
     StyleBox["A",
      FontColor->RGBColor[0, 0, 1]], ".", 
     RowBox[{"vector", "[", "3", "]"}]}]}], "]"}]}]], "Input"],

Cell["\<\
{A.vector[1],A.vector[2],A.vector[3]} are also positively oriented. 
See them:\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Table", "[", " ", 
     RowBox[{
      RowBox[{"Vector", "[", 
       RowBox[{
        RowBox[{
         StyleBox["A",
          FontColor->RGBColor[0, 0, 1]], 
         StyleBox[".",
          FontColor->RGBColor[0, 0, 1]], 
         RowBox[{"vector", "[", "k", "]"}]}], ",", 
        RowBox[{"Tail", "->", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
        RowBox[{"VectorColor", "->", "Purple"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", " ", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<A.vector[1]\>\"", ",", 
       RowBox[{"0.4", " ", 
        RowBox[{"A", ".", 
         RowBox[{"vector", "[", "1", "]"}]}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<A,vector[2]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"A", ".", 
         RowBox[{"vector", "[", "2", "]"}]}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"Text", "[", 
      RowBox[{"\"\<A.vector[3]\>\"", ",", 
       RowBox[{"0.7", " ", 
        RowBox[{"A", ".", " ", 
         RowBox[{"vector", "[", "3", "]"}]}]}]}], "]"}], "]"}], ",", "\n", 
    "     ", 
    RowBox[{"Axes3D", "[", 
     RowBox[{"1", ",", "0.1"}], "]"}], ",", "\n", "     ", 
    RowBox[{"PlotRange", "->", "All"}], ",", "\n", "     ", 
    RowBox[{"Boxed", "->", "False"}], ",", "\n", "     ", 
    RowBox[{"Axes", "->", "True"}], ",", 
    RowBox[{"ViewPoint", "->", "CMView"}], ",", 
    RowBox[{"AxesLabel", "->", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
   "]"}], " "}]], "Input"],

Cell[CellGroupData[{

Cell[TextData[{
 "\nExplain this: \nSaying that A is a 3D matrix with a positive determinant  \
is the same as saying that hits with A preserve orientation in the sense that \
\n           ",
 StyleBox["vector[1].(vector[2] \[Times] vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["(A.vector[1]).((A.vector[2]) \[Times] (A.vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " \nhave the same sign (positive or negative) no matter what choices you \
make of vector[1],vector[2] and vector[3]."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Make a new matrix  \n           ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"vector", "[", "1", "]"}], 
        RowBox[{"vector", "[", "2", "]"}], 
        RowBox[{"vector", "[", "3", "]"}]},
       {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
      }], ")"}]}]}]]],
 "."
}], "SmallText"],

Cell[" vector[j] is in column[j] of B", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\n\nThe product A.B  = ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "1", "]"}]}], 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "2", "]"}]}], 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "3", "]"}]}]},
      {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
     }], ")"}]}]]],
 ".\n\nOn one hand,\n      Det[A.B] =  ",
 StyleBox["col[1].(col[2] \[Times] col[3]) = ",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[1].(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[2] \[Times] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[3]).\n      ",
  FontColor->RGBColor[0, 0, 1]],
 "\nOn the other hand,\n     Det[A.B] = Det[A] Det[B] = ",
 StyleBox["Det[A]",
  FontWeight->"Bold"],
 " (",
 StyleBox["vector[1].(vector[2] \[Times] vector[3])).\n     ",
  FontColor->RGBColor[0, 0, 1]],
 "\nSo\n ",
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[1].(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[2] \[Times] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Det[A]",
  FontWeight->"Bold"],
 " (",
 StyleBox["vector[1].(vector[2] \[Times] vector[3]))",
  FontColor->RGBColor[0, 0, 1]],
 " .\n \nSo saying that hits with A preserve orientation in the sense that \n \
  ",
 StyleBox["vector[1].(vector[2] \[Times] vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".vector[1]).((",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".vector[2]) \[Times] (",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 "  have the same sign \nis the same as saying that  \n          ",
 StyleBox["Det[A] > 0",
  FontWeight->"Bold"],
 "."
}], "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "T.3.a.ii) Saying that A is a 3D matrix with a negative determinant \nis the \
same as  saying that hits with A reverse orientation in the sense that \n     \
      ",
 StyleBox["vector[1].(vector[2] \[Times] vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["(A.vector[1]).((A.vector[2]) \[Times] (A.vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " \nhave the opposite signs"
}], "Subsubsection"],

Cell[CellGroupData[{

Cell[TextData[{
 "Explain this: \nSaying that A is a 3D matrix with a negative determinant  \
is the same as saying that hits with A reverse orientation in the sense that \
\n           ",
 StyleBox["vector[1].(vector[2] \[Times] vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["(A.vector[1]).((A.vector[2]) \[Times] (A.vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " \nhave opposite signs no matter what choices you make of \
vector[1],vector[2] and vector[3]."
}], "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "Make a new matrix  \n           ",
 Cell[BoxData[
  RowBox[{"  ", 
   RowBox[{"B", " ", "=", " ", 
    RowBox[{"(", GridBox[{
       {
        RowBox[{"vector", "[", "1", "]"}], 
        RowBox[{"vector", "[", "2", "]"}], 
        RowBox[{"vector", "[", "3", "]"}]},
       {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
      }], ")"}]}]}]]],
 "."
}], "SmallText"],

Cell[" vector[j] is in column[j] of B", "Special2",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "\n\nThe product A.B  = ",
 Cell[BoxData[
  RowBox[{" ", 
   RowBox[{"(", GridBox[{
      {
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "1", "]"}]}], 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "2", "]"}]}], 
       RowBox[{
        StyleBox["A",
         FontColor->RGBColor[1, 0, 0]], 
        StyleBox[".",
         FontColor->RGBColor[1, 0, 0]], 
        RowBox[{"vector", "[", "3", "]"}]}]},
      {"\[DownArrow]", "\[DownArrow]", "\[DownArrow]"}
     }], ")"}]}]]],
 ".\n\nOn one hand,\n      Det[A.B] =  ",
 StyleBox["col[1].(col[2] \[Times] col[3]) = ",
  FontColor->RGBColor[0, 0, 1]],
 " ",
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[1].(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[2] \[Times] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[3]).\n      ",
  FontColor->RGBColor[0, 0, 1]],
 "\nOn the other hand,\n     Det[A.B] = Det[A] Det[B] = ",
 StyleBox["Det[A]",
  FontWeight->"Bold"],
 " (",
 StyleBox["vector[1].(vector[2] \[Times] vector[3])).\n     ",
  FontColor->RGBColor[0, 0, 1]],
 "\nSo\n ",
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[1].(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[2] \[Times] ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A.",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " = ",
 StyleBox["Det[A]",
  FontWeight->"Bold"],
 " (",
 StyleBox["vector[1].(vector[2] \[Times] vector[3]))",
  FontColor->RGBColor[0, 0, 1]],
 " .\n \nSo saying that hits with A reverse orientation in the sense that \n  \
 ",
 StyleBox["vector[1].(vector[2] \[Times] vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 " and ",
 StyleBox["(",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".vector[1]).((",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".vector[2]) \[Times] (",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["A",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[".vector[3])",
  FontColor->RGBColor[0, 0, 1]],
 "  have the opposites signs \nis the same as saying that  \n          ",
 StyleBox["Det[A] < 0",
  FontWeight->"Bold"],
 ".",
 StyleBox["\n       ",
  FontColor->RGBColor[0, 0, 1]],
 "\n"
}], "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
T.6) Matrices that hit on 2D and hang in 3D. 
        Matrices that hit on 3D and hang in 2D\
\>", "Subsection",
 CellTags->"MGM.05.T6"],

Cell[CellGroupData[{

Cell["T.6.a.i) Matrices that hit on 2D and hang in 3D", "Subsubsection"],

Cell["Here's a new kind of matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"2.", 
         RowBox[{"-", "0.4"}]},
        {"1.3", "1.8"},
        {
         RowBox[{"-", "0.9"}], "1.2"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
When you hit this matrix on a 2D Point {x,y}, you get a 3D point:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Note the three slots in A.{x,y}.", "Special5"],

Cell["\<\
Watch this matrix hit the 2D unit circle and hang the unit circle in 3D:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{
    "x", ",", "y", ",", "t", ",", "hitplotter", ",", "hitpointplotter", ",", 
     "pointcolor", ",", "actionarrows", ",", "matrix2D"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", 
    RowBox[{"Max", "[", 
     RowBox[{"1.2", ",", 
      RowBox[{"Max", "[", 
       RowBox[{
        RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
        "2", "\[RightDoubleBracket]"}], "]"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", "t_", "]"}], ",", 
      RowBox[{"y", "[", "t_", "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], ",", 
      RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"jump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "16"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"twoDcircleplot", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.01", "]"}], "}"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"twoDpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", "t", "]"}], ",", 
            RowBox[{"y", "[", "t", "]"}]}], "}"}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"before", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"twoDcircleplot", ",", "twoDpointplot", ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeDhitplot", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}]}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeDhitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", "t", "]"}], ",", 
             RowBox[{"y", "[", "t", "]"}]}], "}"}]}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "jump"}], ",", "jump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"after", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"threeDhitplot", ",", "threeDhitpointplot", ",", 
    RowBox[{"ThreeAxes", "[", "2", "]"}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<After\>\""}], ",", 
    RowBox[{"ViewPoint", "\[Rule]", "CMView"}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
When you hit the 2D unit circle with A you get an ellipse centered on {0,0,0} \
 sitting on a plane in 3D.
How do you frame up this ellipse?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["You do exactly the same thing you do for 2D matrices:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "hangerframe", ",", "k"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     StyleBox["3",
      FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     StyleBox["2",
      FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", 
     StyleBox["1",
      FontColor->RGBColor[1, 0, 0]], "\[RightDoubleBracket]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"frameup", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"after", ",", "\[IndentingNewLine]", 
    RowBox[{"Vector", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"xstretch", " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Vector", "[", 
     RowBox[{
      StyleBox[
       RowBox[{
        RowBox[{"-", "xstretch"}], " ", 
        RowBox[{"hangerframe", "[", "1", "]"}]}],
       FontColor->RGBColor[0, 0, 1]], 
      StyleBox[",",
       FontColor->RGBColor[0, 0, 1]], 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Vector", "[", 
     RowBox[{
      StyleBox[
       RowBox[{"ystretch", " ", 
        RowBox[{"hangerframe", "[", "2", "]"}]}],
       FontColor->RGBColor[0, 0, 1]], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       StyleBox[
        RowBox[{"-", "ystretch"}],
        FontColor->RGBColor[0, 0, 1]], 
       StyleBox[" ",
        FontColor->RGBColor[0, 0, 1]], 
       RowBox[{
        StyleBox["hangerframe",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["[",
         FontColor->RGBColor[0, 0, 1]], 
        StyleBox["2",
         FontColor->RGBColor[0, 0, 1]], "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}]}], "]"}], 
  " "}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
There you go.
See the ellipse from a view point perpendicular to the plane determined by \
the ellipse:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"planenormal", "=", 
    RowBox[{"Cross", "[", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", " ", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"frameup", ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"10", " ", "planenormal"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], " "}]}], "Input",
 AspectRatioFixed->True],

Cell["Just like 2D.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.a.ii) Measuring the planar area enclosed by the ellipse", \
"Subsubsection"],

Cell["Take another look at the ellipse from part i)", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"frameup", ",", 
    RowBox[{"ViewPoint", "\[Rule]", 
     RowBox[{"10", " ", "planenormal"}]}], ",", 
    RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}], " "}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Measure the planar area enclosed by this ellipse.", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
Remember that you got this ellipse by hitting the unit circle with A.
The planar area enclosed by this ellipse measures out ( in square units) to\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"circlearea", "=", "\[Pi]"}], ";"}], " "}], "\n", 
 RowBox[{"ellipsearea", "=", 
  RowBox[{"xstretch", "  ", "ystretch", "  ", "circlearea"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Again just like 2D.", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.a.iii) Would the determinant help?", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Could you have used the determinant of A to help in measuring the area \
enclosed by the ellipse?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Try it and see:", "SmallText"],

Cell[BoxData[
 RowBox[{"Det", "[", "A", "]"}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
Useless.
Reason: The determinant of a matrix that hits on 2D and hangs in 3D is not \
defined. 
\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.a.iv) Another way of framing the ellipse", "Subsubsection"],

Cell["Take another look at the frame up of the ellipse in part i):", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"after", ",", "\n", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"xstretch", " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "xstretch"}], " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"ystretch", " ", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "ystretch"}], " ", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}]}], "]"}], " "}]], "Input"],

Cell["Now look at this:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"after", ",", "\n", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"alignerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "1", "]"}]}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}], ",", "\n", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "2", "]"}]}]}], ",", 
      RowBox[{"Tail", "->", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "->", "Red"}]}], "]"}]}], "]"}], " "}]], "Input"],

Cell[CellGroupData[{

Cell["\<\
Exactly the same thing. 
Explain why this was guaranteed to happen.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell[TextData[{
 "In the first plot, the plotted frame ups are\n          ",
 Cell[BoxData[
  RowBox[{"xstretch", " ", 
   RowBox[{"hangerframe", "[", "1", "]"}]}]]],
 "\nand \n          ",
 Cell[BoxData[
  RowBox[{"ystretch", " ", 
   RowBox[{"hangerframe", "[", "2", "]"}]}]]],
 "\nand their negatives.\nIn the second plot, the plotted frame ups are\n     \
    ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "1", "]"}]}]]],
 "\nand \n         ",
 Cell[BoxData[
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "2", "]"}]}]]],
 "\nand their negatives.\nThe plots are the same because, just as in 2D, SVD \
analysis guarantees that\n        ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "1", "]"}]}], "=", 
   RowBox[{"xstretch", " ", 
    RowBox[{"hangerframe", "[", "1", "]"}]}]}]]],
 "\n and\n         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"A", ".", 
    RowBox[{"alignerframe", "[", "2", "]"}]}], "=", 
   RowBox[{"ystretch", " ", 
    RowBox[{"hangerframe", "[", "2", "]"}]}]}]]],
 ": "
}], "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "1", "]"}]}], "==", 
  RowBox[{"xstretch", " ", 
   RowBox[{"hangerframe", "[", "1", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "2", "]"}]}], "==", 
  RowBox[{"ystretch", " ", 
   RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "Input",
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.a.v) The rank of A is 2", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Stay with the same matrix A as in the earlier parts and say why the rank of A \
is 2.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The rank of a matrix is the number of dimensions that matrix uses to hang its \
hits. 
When the above matrix A is hit on all of on all of 2D, it hangs its hits on \
the two dimensional plane (within 3D) defined by hangerframe[1] and \
hangerframe[2]. 
That's why the rank of A is 2.\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.b.i) Matrices that hit on 3D and hang in 2D", "Subsubsection"],

Cell["Here's another new kind of matrix:", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"A", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"2", 
         RowBox[{"-", "0.4"}], "1.2"},
        {"1.3", "1.8", 
         RowBox[{"-", "0.9"}]}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
When you hit this matrix on a 3D Point {x,y,z}, you get a 2D point:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{"A", ".", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "Input",
 AspectRatioFixed->True],

Cell["Note the two slots in A.{x,y,z}.", "Special5"],

Cell["\<\
Watch this matrix hit points on the 3D unit sphere and hang its hits in 2D:\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y", ",", "z", ",", "s", ",", "t", ",", "pointcolor"}], 
    "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"y", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}], ",", 
      RowBox[{"z", "[", 
       RowBox[{"s_", ",", "t_"}], "]"}]}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Cos", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Sin", "[", "s", "]"}], " ", 
       RowBox[{"Sin", "[", "t", "]"}]}], ",", 
      RowBox[{"Cos", "[", "s", "]"}]}], "}"}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"slow", ",", "shigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"ranger", "=", "3.5"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"sjump", "=", 
    FractionBox[
     RowBox[{"shigh", "-", "slow"}], "15"]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox[
     RowBox[{"thigh", "-", "tlow"}], "15"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", 
          RowBox[{"s", ",", "t"}], "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"y", "[", 
          RowBox[{"s", ",", "t"}], "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"z", "[", 
          RowBox[{"s", ",", "t"}], "]"}], "+", "1"}], ")"}]}]}], "]"}]}], 
   ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeDpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"s", ",", "t"}], "]"}], ",", 
            RowBox[{"y", "[", 
             RowBox[{"s", ",", "t"}], "]"}], ",", 
            RowBox[{"z", "[", 
             RowBox[{"s", ",", "t"}], "]"}]}], "}"}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", 
        RowBox[{"shigh", "-", "sjump"}], ",", "sjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"pointsbefore", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"threeDpointplot", ",", 
     RowBox[{"ThreeAxes", "[", "2", "]"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Before in 3D\>\""}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     ",", 
     RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"twoDhitpointplot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", 
          RowBox[{"s", ",", "t"}], "]"}], ",", 
         RowBox[{"PointSize", "[", "0.035", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"s", ",", "t"}], "]"}], ",", 
             RowBox[{"y", "[", 
              RowBox[{"s", ",", "t"}], "]"}], ",", 
             RowBox[{"z", "[", 
              RowBox[{"s", ",", "t"}], "]"}]}], "}"}]}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"s", ",", "slow", ",", 
        RowBox[{"shigh", "-", "sjump"}], ",", "sjump"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{"pointsafter", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"twoDhitpointplot", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Axes", "\[Rule]", "True"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<After in 2D\>\""}]}], 
   "]"}]}]}], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["\<\
After the hit, the points on the 3D unit sphere seems to have been deposited \
on and inside an ellipse in 2D. Try to identify and plot this ellipse.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Do the same thing you do for 2D matrices that are of rank 2", \
"SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"alignerframe", ",", "hangerframe", ",", "k"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "3", 
     "\[RightDoubleBracket]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"aligner", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"alignerframe", "[", "1", "]"}], ",", 
      RowBox[{"alignerframe", "[", "2", "]"}]}], "}"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "aligner", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xstretch", ",", "ystretch"}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "2", 
     "\[RightDoubleBracket]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"stretcher", "=", 
    RowBox[{"DiagonalMatrix", "[", 
     RowBox[{"{", 
      RowBox[{"xstretch", ",", "ystretch"}], "}"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "stretcher", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"hangerframe", "[", "1", "]"}], ",", 
      RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"SingularValues", "[", "A", "]"}], "\[LeftDoubleBracket]", "1", 
     "\[RightDoubleBracket]"}]}], ";", " ", 
   RowBox[{"hanger", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"hangerframe", "[", "1", "]"}], ",", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  "\n"}], "\n", 
 RowBox[{"MatrixForm", "[", "hanger", "]"}]}], "Input"],

Cell["Check:", "SmallText"],

Cell[BoxData[{
 RowBox[{"MatrixForm", "[", 
  RowBox[{"hanger", ".", "stretcher", ".", "aligner"}], "]"}], "\n", 
 RowBox[{"MatrixForm", "[", "A", "]"}]}], "Input"],

Cell["This checks", "SmallText"],

Cell["\<\
The ellipse you are after comes from hitting the two dimensional planar unit \
circle (within 3D) defined by alignerframe[1] and alignerframe[2] with A. 
See it happen:\
\>", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"threeDcircleplotter", ",", "t"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"threeDcircleplotter", "[", "t_", "]"}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "t", "]"}], " ", 
      RowBox[{"alignerframe", "[", "1", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "t", "]"}], " ", 
      RowBox[{"alignerframe", "[", "2", "]"}]}]}]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tlow", ",", "thigh"}], "}"}], "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"2", " ", "\[Pi]"}]}], "}"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeDcircle", "=", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"threeDcircleplotter", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}]}], "]"}]}], ";"}], " ",
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"pointcolor", "[", "t_", "]"}], "=", 
    RowBox[{"RGBColor", "[", 
     RowBox[{
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Cos", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", 
      RowBox[{"0.5", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], "+", "1"}], ")"}]}], ",", "0"}], 
     "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"tjump", "=", 
    FractionBox["\[Pi]", "8"]}], ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"threeDcirclepoints", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics3D", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.025", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"threeDcircleplotter", "[", "t", "]"}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"beforehit", "=", 
   RowBox[{"Show", "[", 
    RowBox[{"threeDcircle", ",", "threeDcirclepoints", ",", 
     RowBox[{"ThreeAxes", "[", "1.5", "]"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "True"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\"", ",", "\"\<z\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Before\>\""}], ",", 
     RowBox[{"ViewPoint", "\[Rule]", "CMView"}]}], "]"}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitthreeDcircle", "=", 
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"threeDcircleplotter", "[", "t", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", "thigh"}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Thickness", "[", "0.01", "]"}], "}"}], "}"}]}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"hitthreeDcirclepoints", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pointcolor", "[", "t", "]"}], ",", 
         RowBox[{"PointSize", "[", "0.03", "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"A", ".", 
           RowBox[{"threeDcircleplotter", "[", "t", "]"}]}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tlow", ",", 
        RowBox[{"thigh", "-", "tjump"}], ",", "tjump"}], "}"}]}], "]"}]}], 
   ";"}], " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"afterhit", "=", 
    RowBox[{"Show", "[", 
     RowBox[{"hitthreeDcircle", ",", "hitthreeDcirclepoints", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", "\"\<Hit circle\>\""}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], ";"}], 
  " ", "\n"}], "\n", 
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"afterhit", ",", "pointsafter", ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", "\"\<Hit circle and hit sphere points\>\""}]}], 
   "]"}], " "}]}], "Input",
 AspectRatioFixed->True],

Cell["\<\
There you go.
When you hit the 3D unit sphere with A, you get everything inside and on this \
ellipse:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"ellipseplot", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"hitthreeDcircle", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "ranger"}], ",", "ranger"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}]], "Input",
 AspectRatioFixed->True],

Cell["A parametric formula for this ellipse is:", "SmallText"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"A", ".", 
   RowBox[{"threeDcircleplotter", "[", "t", "]"}]}], "]"}]], "Input",
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.b.ii) Framing up the ellipse", "Subsubsection"],

Cell["Take another look at the ellipse in part i):", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"pointsafter", ",", "ellipseplot"}], "]"}], " "}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Frame up this ellipse.", "Text"],

Cell["Answer:", "Special1"],

Cell["You've got two choices which end up being the same:", "SmallText"],

Cell[BoxData[
 RowBox[{"frameup", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"ellipseplot", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"xstretch", " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "xstretch"}], " ", 
       RowBox[{"hangerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"ystretch", " ", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "ystretch"}], " ", 
       RowBox[{"hangerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}]}], "]"}], 
  " "}]], "Input",
 AspectRatioFixed->True],

Cell["Or:", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", 
   RowBox[{"ellipseplot", ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"alignerframe", "[", "1", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "1", "]"}]}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"A", ".", 
       RowBox[{"alignerframe", "[", "2", "]"}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}], ",", 
    RowBox[{"Vector", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"A", ".", 
        RowBox[{"alignerframe", "[", "2", "]"}]}]}], ",", 
      RowBox[{"Tail", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}], ",", 
      RowBox[{"VectorColor", "\[Rule]", "Red"}]}], "]"}]}], "]"}], 
  " "}]], "Input",
 AspectRatioFixed->True],

Cell["They are the same because SVD analysis always guarantees:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "1", "]"}]}], "==", 
  RowBox[{"xstretch", " ", 
   RowBox[{"hangerframe", "[", "1", "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"A", ".", 
   RowBox[{"alignerframe", "[", "2", "]"}]}], "==", 
  RowBox[{"ystretch", " ", 
   RowBox[{"hangerframe", "[", "2", "]"}]}]}]}], "Input",
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.b.iii) Measuring the area enclosed by the ellipse", "Subsubsection"],

Cell["Take another look at the framed ellipse in part ii):", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Show", "[", "frameup", "]"}], " "}]], "Input",
 AspectRatioFixed->True],

Cell[CellGroupData[{

Cell["Measure the area enclosed by this ellipse.", "Text"],

Cell["Answer:", "Special1"],

Cell["The area enclosed by the ellipse measures out to:", "SmallText"],

Cell[BoxData[
 RowBox[{"xstretch", "  ", "ystretch", "  ", "\[Pi]"}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
Another way of seeing this is to take the parametric formula for the ellipse:\
\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"A", ".", 
   RowBox[{"threeDcircleplotter", "[", "t", "]"}]}], "]"}]], "Input",
 AspectRatioFixed->True],

Cell["Put:", "SmallText"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"B", "=", 
    TagBox[
     RowBox[{"(", "\[NoBreak]", GridBox[{
        {"1.71884", 
         RowBox[{"-", "1.62653"}]},
        {"1.87581", "1.49042"}
       }], "\[NoBreak]", ")"}],
     MatrixForm[#]& ]}], ";"}], " "}], "\n", 
 RowBox[{"MatrixForm", "[", "B", "]"}]}], "Input",
 AspectRatioFixed->True],

Cell["Note that the ellipse is also parameterized by:", "SmallText"],

Cell[BoxData[
 RowBox[{"B", ".", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cos", "[", "t", "]"}], ",", 
    RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
Knowing what you do about 2D matrices, you find quickly that the area \
enclosed by the ellipse measures out to:\
\>", "SmallText"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"Det", "[", "B", "]"}], "]"}], " ", "\[Pi]"}]], "Input",
 AspectRatioFixed->True]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.b.iv) Would the determinant help? ", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Could you have used the determinant of A to help in measuring the area \
enclosed by the ellipse?\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["Try it and see:", "SmallText"],

Cell[BoxData[
 RowBox[{"Det", "[", "A", "]"}]], "Input",
 AspectRatioFixed->True],

Cell["\<\
Useless.
Reason: The determinant of a matrix that hits on 3D and hangs in 2D is not \
defined. 
\
\>", "SmallText"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["T.6.b.v) The rank of A is 2", "Subsubsection"],

Cell[CellGroupData[{

Cell["\<\
Stay with the same matrix A as in the earlier parts and say why the rank of A \
is 2.\
\>", "Text"],

Cell["Answer:", "Special1"],

Cell["\<\
The rank of a matrix is the number of dimensions that matrix uses to hang its \
hits. 
When the above matrix A is hit on all of on all of 3D, it hangs its hits on \
all of 2D.
That's why the rank of A is 2.\
\>", "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
},
AutoGeneratedPackage->None,
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{632, 433},
WindowMargins->{{4, Automatic}, {Automatic, 1}},
PrivateNotebookOptions->{"ColorPalette"->{RGBColor, -1}},
ShowCellLabel->True,
ShowCellTags->False,
RenderingOptions->{"ObjectDithering"->True,
"RasterDithering"->False},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, \
2010)",
StyleDefinitions->Notebook[{
   Cell[
    CellGroupData[{
      Cell["Style Definitions", "Subtitle"], 
      Cell[
      "The following notebook is copyright 2010 by Make: Mathematics.and may \
not be reproduced, copied, or distributed, in whole or in part, through any \
means electronic or otherwise, without written consent of the copyright \
holder.", "Text"], 
      Cell[
       CellGroupData[{
         Cell["Style Environment Names", "Section"], 
         Cell[
          StyleData[All, "Working"], ScriptMinSize -> 9], 
         Cell[
          StyleData[All, "Printout"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}], 
         Cell[
          StyleData[All, "TwoColumn"], PageWidth -> PaperWidth, 
          PrivateFontOptions -> {"FontType" -> "Outline"}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Notebook Options", "Section"], 
         Cell[
         "The options defined for the style below will be used at the \
Notebook level.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Notebook"], CellGrouping -> Manual, 
             PrintingOptions -> {
              "FirstPageFooter" -> False, "FirstPageHeader" -> False, 
               "RestPagesFooter" -> False, "RestPagesHeader" -> False}, 
             ShowClosedCellArea -> True, StyleMenuListing -> None, Background -> 
             RGBColor[1, 0.940002, 0.900008]], 
            Cell[
             StyleData["Notebook", "Printout"], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Notebook", "TwoColumn"], 
             PageHeaders -> {{None, None, None}, {None, None, None}}, 
             PageHeaderLines -> {False, False}, 
             PrintingOptions -> {"PrintingMargins" -> {{55, 25}, {40, 45}}}, 
             Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Title"], CellFrame -> {{1, 1}, {1, 5}}, 
             ShowCellBracket -> False, CellMargins -> {{24, 24}, {12, 5}}, 
             CellGroupingRules -> {"TitleGrouping", 0}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.1, 1}, 
             CounterAssignments -> {{"Section", 0}, {"Equation", 0}, {
               "Figure", 0}}, FontFamily -> "Times", FontSize -> 24, 
             FontWeight -> "Bold", FontColor -> GrayLevel[0], Background -> 
             RGBColor[0.925002, 0.854978, 0.774975]], 
            Cell[
             StyleData["Title", "Printout"], 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]], 
            Cell[
             StyleData["Title", "TwoColumn"], CellFrame -> {{1, 1}, {5, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, TextAlignment -> Center,
              FontSize -> 16, FontColor -> GrayLevel[0], Background -> 
             GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subtitle"], ShowCellBracket -> False, 
             ShowClosedCellArea -> True, 
             CellMargins -> {{6, Inherited}, {0, 0}}, 
             CellGroupingRules -> {"TitleGrouping", 10}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Left, FontFamily -> "Times", FontSize -> 14], 
            Cell[
             StyleData["Subtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}], 
            Cell[
             StyleData["Subtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubtitle"], CellFrame -> True, ShowClosedCellArea -> 
             True, CellMargins -> {{6, Inherited}, {6, Inherited}}, 
             CellGroupingRules -> {"TitleGrouping", 20}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Times", FontSize -> 24, 
             FontColor -> RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Subsubtitle", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Subsubtitle", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Section"], CellDingbat -> "\[GraySquare]", 
             ShowCellBracket -> True, ShowGroupOpener -> True, 
             CellMargins -> {{22, Inherited}, {Inherited, 20}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Section", 
             CounterAssignments -> {{"Subsection", 0}, {"Subsubsection", 0}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["Section", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 10}}], 
            Cell[
             StyleData["Section", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 10}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsection"], CellDingbat -> "", ShowCellBracket -> 
             True, ShowGroupOpener -> True, 
             CellMargins -> {{19, Inherited}, {Inherited, 18}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, FontFamily -> 
             "Times", FontSize -> 16, FontWeight -> "Bold", FontColor -> 
             RGBColor[0, 0.392187, 0]], 
            Cell[
             StyleData["Subsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 5}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsection", "TwoColumn"], 
             CellFrame -> {{0, 0}, {0, 1}}, 
             CellMargins -> {{14, Inherited}, {2, 10}}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Subsubsection"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, 
             CellMargins -> {{18, Inherited}, {Inherited, 12}}, 
             CellGroupingRules -> {"SectionGrouping", 50}, PageBreakBelow -> 
             False, DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, CounterIncrements -> "Subsubsection", 
             FontFamily -> "Times", FontSize -> 14, FontWeight -> "Bold", 
             FontColor -> RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Subsubsection", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontSize -> 12, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Subsubsection", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 3}}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Body Text", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceText"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1, 1}, LimitsPositioningTokens -> {}, 
             StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10, 
             FontWeight -> "Plain"], 
            Cell[
             StyleData["PrefaceText", "Printout"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["PrefaceText", "TwoColumn"], 
             CellMargins -> {{0, Inherited}, {2, 2}}, LineSpacing -> {1, 1}, 
             FontSize -> 12, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          StyleData["PrefaceHyperlink"], 
          CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, LineSpacing -> {1, 1}, 
          LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, FontFamily -> "Times", 
          FontSize -> 10, FontWeight -> "Plain", 
          FontVariations -> {"Underline" -> True}, FontColor -> 
          RGBColor[0, 0, 1], 
          ButtonBoxOptions -> {
           Active -> True, ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> ButtonData}], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Text"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, 10}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 0.500008]], 
            Cell[
             StyleData["Text", "Printout"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontColor -> GrayLevel[0], Background -> None], 
            Cell[
             StyleData["Text", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {3, 1}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 2}, 
             FontSize -> 14, FontColor -> GrayLevel[0], Background -> None]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["SmallText"], ShowClosedCellArea -> True, 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             LineSpacing -> {1.5, 1}, LimitsPositioningTokens -> {}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["SmallText", "Printout"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True], 
            Cell[
             StyleData["SmallText", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 14]}, Closed]]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Input/Output", "Section"], 
         Cell[
         "The cells in this section define styles used for input and output \
to the kernel.  Be careful when modifying, renaming, or removing these \
styles, because the front end associates special meanings with these style \
names.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Input"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             Evaluatable -> True, CellGroupingRules -> "InputGrouping", 
             CellHorizontalScrolling -> True, GroupPageBreakWithin -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultInputFormatType, 
             AutoItalicWords -> {}, FormatType -> InputForm, 
             ShowStringCharacters -> True, NumberMarks -> True, 
             CounterIncrements -> "Input", FontWeight -> "Bold"], 
            Cell[
             StyleData["Input", "Printout"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 9], 
            Cell[
             StyleData["Input", "TwoColumn"], CellFrame -> {{3, 0}, {0, 0}}, 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Output"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellEditDuplicate -> True, CellGroupingRules -> "OutputGrouping",
              CellHorizontalScrolling -> True, PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, 
             LineSpacing -> {1.5, 0}, FormatType -> StandardForm, FontFamily -> 
             "Courier", FontSize -> 14, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Output", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 10, FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Output", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, PageBreakWithin -> 
             True, GroupPageBreakWithin -> True, LineSpacing -> {1, 0}, 
             FontSize -> 12, FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Message"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", PageBreakWithin -> False, 
             GroupPageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             CellLabelMargins -> {{23, Inherited}, {Inherited, Inherited}}, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, StyleMenuListing -> None, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["Message", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Message", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9, 
             FontColor -> GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Print"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Print", "Printout"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 9], 
            Cell[
             StyleData["Print", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {2, 2}}, FontSize -> 16]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Info"], 
             CellMargins -> {{45, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "OutputGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GroupPageBreakWithin -> False, 
             GeneratedCell -> True, CellAutoOverwrite -> True, ShowCellLabel -> 
             False, CellLabelMargins -> {{23, Inherited}, {
               Inherited, Inherited}}, DefaultFormatType -> 
             DefaultOutputFormatType, FormatType -> InputForm, 
             StyleMenuListing -> None], 
            Cell[
             StyleData["Info", "Printout"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["Info", "TwoColumn"], 
             CellMargins -> {{30, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 12]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Graphics"], 
             CellMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             CellGroupingRules -> "GraphicsGrouping", CellHorizontalScrolling -> 
             True, PageBreakWithin -> False, GeneratedCell -> True, 
             CellAutoOverwrite -> True, ShowCellLabel -> False, 
             DefaultFormatType -> DefaultOutputFormatType, FormatType -> 
             InputForm, ImageMargins -> {{35, Inherited}, {Inherited, 0}}, 
             AnimationDisplayTime -> 0.2, StyleMenuListing -> None, FontSize -> 
             14], 
            Cell[
             StyleData["Graphics", "Printout"], 
             CellMargins -> {{30, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{45, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}, FontSize -> 9], 
            Cell[
             StyleData["Graphics", "TwoColumn"], 
             CellMargins -> {{20, Inherited}, {0, 0}}, CellFrameMargins -> 
             False, ImageSize -> {Inherited, 150}, 
             ImageMargins -> {{0, 0}, {0, 0}}, 
             ImageRegion -> {{0, 1}, {0, 1}}]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["CellLabel"], StyleMenuListing -> None, FontFamily -> 
             "Times", FontSize -> 9, FontColor -> RGBColor[0, 0, 1]], 
            Cell[
             StyleData["CellLabel", "Printout"], FontColor -> GrayLevel[1]], 
            Cell[
             StyleData["CellLabel", "TwoColumn"], FontColor -> GrayLevel[1]]},
            Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Headings", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LogoPrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {0, 5}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {-1, 10}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["LogoPrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LogoPrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {0, 5}}, 
             CellMargins -> {{0, Inherited}, {-1, Inherited}}, FontSize -> 16,
              FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PrefaceTitle"], Selectable -> False, Deletable -> 
             False, CellFrame -> {{1, 1}, {1, 0}}, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 30}, PageBreakBelow -> 
             False, CellFrameMargins -> {{15, Inherited}, {
               Inherited, Inherited}}, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             LineSpacing -> {1.4, 1}, FontFamily -> "Times", FontSize -> 32, 
             FontWeight -> "Bold", FontColor -> GrayLevel[1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125]], 
            Cell[
             StyleData["PrefaceTitle", "Printout"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["PrefaceTitle", "TwoColumn"], 
             CellFrame -> {{1, 1}, {1, 0}}, 
             CellMargins -> {{0, Inherited}, {0, 0}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Special Body Text and Index", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Accident"], CellFrame -> 3, ShowCellBracket -> False, 
             CellMargins -> {{24, 24}, {0, 10}}, 
             CellFrameMargins -> {{15, Inherited}, {Inherited, Inherited}}, 
             TextAlignment -> Center, LineSpacing -> {1.4, 1}, FontFamily -> 
             "Times", FontSize -> 24, FontWeight -> "Bold", FontColor -> 
             RGBColor[1, 0, 0]], 
            Cell[
             StyleData["Accident", "Printout"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Accident", "TwoColumn"], CellFrame -> 2, 
             CellMargins -> {{0, Inherited}, {0, Inherited}}, FontSize -> 16, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["ContentsText"], CellMargins -> {{50, 10}, {5, 5}}, 
             FontFamily -> "Times", FontSize -> 16], 
            Cell[
             StyleData["ContentsText", "Printout"], FontColor -> GrayLevel[0],
              Background -> None], 
            Cell[
             StyleData["ContentsText", "TwoColumn"], FontColor -> 
             GrayLevel[0], Background -> None]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special1"], CellDingbat -> "\[EmptySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, FontFamily -> "Times", FontSize -> 
             14, FontWeight -> "Bold", FontColor -> 
             RGBColor[0.689998, 0.0899977, 0.119997]], 
            Cell[
             StyleData["Special1", "Printout"], FontSize -> 12, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special1", "TwoColumn"], FontSize -> 12, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special2"], CellMargins -> {{6, 0}, {0, 0}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Center, 
             FontFamily -> "Courier", FontSize -> 10, FontColor -> 
             GrayLevel[0.333333]], 
            Cell[
             StyleData["Special2", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["Special2", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special3"], CellDingbat -> "\[GraySquare]", 
             ShowClosedCellArea -> True, DefaultFormatType -> 
             DefaultTextFormatType, DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, FontFamily -> 
             "Courier", FontSize -> 10, FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special3", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special3", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special4"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special4", "Printout"], FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["Special4", "TwoColumn"], FontColor -> GrayLevel[0]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Special5"], ShowClosedCellArea -> True, 
             DefaultFormatType -> DefaultTextFormatType, 
             DefaultInlineFormatType -> DefaultInputInlineFormatType, 
             TextAlignment -> Center, FontFamily -> "Courier", FontSize -> 10,
              FontColor -> GrayLevel[0.333333]], 
            Cell[
             StyleData["Special5", "Printout"]], 
            Cell[
             StyleData["Special5", "TwoColumn"]]}, Closed]], 
         Cell[
          StyleData["IndexEntry"], ShowCellBracket -> False, 
          CellMargins -> {{15, 5}, {0, 5}}, PageBreakBelow -> False, 
          DefaultFormatType -> DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16], 
         Cell[
          StyleData["IndexSubEntry"], ShowCellBracket -> False, 
          CellMargins -> {{45, 5}, {0, 0}}, DefaultFormatType -> 
          DefaultTextFormatType, DefaultInlineFormatType -> 
          DefaultInputInlineFormatType, ParagraphIndent -> -40, 
          StyleMenuListing -> None, FontSize -> 16]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for License Agreement", "Section"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseHeading"], ShowCellBracket -> True, 
             ShowGroupOpener -> True, CellMargins -> {{24, 24}, {-1, 2}}, 
             CellGroupingRules -> {"SectionGrouping", 40}, PageBreakBelow -> 
             False, CounterIncrements -> "Subsection", 
             CounterAssignments -> {{"Subsubsection", 0}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, FontWeight -> 
             "Bold", FontColor -> RGBColor[0.4, 0.300008, 0.6]], 
            Cell[
             StyleData["LicenseHeading", "Printout"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseHeading", "TwoColumn"], FontSize -> 10, 
             FontColor -> GrayLevel[0], Background -> GrayLevel[1]]}, 
           Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LicenseText"], CellFrame -> True, ShowCellBracket -> 
             False, CellMargins -> {{24, 24}, {5, -1}}, StyleMenuListing -> 
             None, FontFamily -> "Helvetica", FontSize -> 12, Background -> 
             RGBColor[1, 0.537743, 0.509071]], 
            Cell[
             StyleData["LicenseText", "Printout"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["LicenseText", "TwoColumn"], FontSize -> 10, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]]}, Closed]], 
      
      Cell[
       CellGroupData[{
         Cell["Styles for Automatic Numbering", "Section"], 
         Cell[
         "The following styles are useful for numbered equations, figures, \
etc.  They automatically give the cell a FrameLabel containing a reference to \
a particular counter, and also increment that counter.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedEquation"], CounterIncrements -> 
             "NumberedEquation"], 
            Cell[
             StyleData["NumberedEquation", "Printout"]], 
            Cell[
             StyleData["NumberedEquation", "TwoColumn"]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedFigure"], CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Figure ", 
                   CounterBox["NumberedFigure"]}]], None}}, CounterIncrements -> 
             "NumberedFigure", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedFigure", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedFigure", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["NumberedTable"], 
             CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
             CellFrameLabels -> {{None, None}, {
                Cell[
                 TextData[{"Table ", 
                   CounterBox["NumberedTable"]}]], None}}, CounterIncrements -> 
             "NumberedTable", FormatTypeAutoConvert -> False, FontFamily -> 
             "Times"], 
            Cell[
             StyleData["NumberedTable", "Printout"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10], 
            Cell[
             StyleData["NumberedTable", "TwoColumn"], 
             CellMargins -> {{14, Inherited}, {Inherited, Inherited}}, 
             FontSize -> 10]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Styles for Headers and Footers", "Section"], 
         Cell[
          StyleData["Header"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontSize -> 10], 
         Cell[
          StyleData["Footer"], CellMargins -> {{0, 0}, {0, 4}}, 
          StyleMenuListing -> None, FontSize -> 9], 
         Cell[
          StyleData["PageNumber"], CellMargins -> {{0, 0}, {4, 1}}, 
          StyleMenuListing -> None, FontFamily -> "Times", FontSize -> 10]}, 
        Closed]], 
      Cell[
       CellGroupData[{
         Cell["Palette Styles", "Section"], 
         Cell[
         "The cells below define styles that define standard ButtonFunctions, \
for use in palette buttons.", "Text"], 
         Cell[
          StyleData["Paste"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, After]}]& )}], 
         Cell[
          StyleData["Evaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["EvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionMove[
                FrontEnd`InputNotebook[], All, Cell, 1], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluate"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluate[
                FrontEnd`InputNotebook[], All]}]& )}], 
         Cell[
          StyleData["CopyEvaluateCell"], StyleMenuListing -> None, 
          ButtonStyleMenuListing -> Automatic, 
          ButtonBoxOptions -> {ButtonFunction :> (FrontEndExecute[{
               FrontEnd`SelectionCreateCell[
                FrontEnd`InputNotebook[], All], 
               FrontEnd`NotebookApply[
                FrontEnd`InputNotebook[], #, All], 
               FrontEnd`SelectionEvaluateCreateCell[
                FrontEnd`InputNotebook[], All]}]& )}]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Hyperlink Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making hypertext \
ButtonBoxes.  The \"Hyperlink\" style is for links within the same Notebook, \
or between Notebooks.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["Hyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontSize -> 14, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0.392187, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& )}], 
            Cell[
             StyleData["Hyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["Hyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["MakeMathHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontSize -> 14, FontWeight -> 
             "Bold", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 1, 1], Background -> 
             RGBColor[0.1172, 0.0742, 0.3125], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Come visit us!"}], 
            Cell[
             StyleData["MakeMathHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]], 
            Cell[
             StyleData["MakeMathHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0], Background -> GrayLevel[1]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Basics"}], 
            Cell[
             StyleData["BasicsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["BasicsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.848096, 0.171878, 0.228321], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Basics"}], 
            Cell[
             StyleData["BasicsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["BasicsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Tutorials"}], 
            Cell[
             StyleData["TutorialsHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["TutorialsIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.0199588, 0.346716, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Tutorials"}], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["TutorialsIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GiveItaTryIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0.497459, 0.196094, 0.543877], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into GiveItaTry"}], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GiveItaTryIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2]}]& ), ButtonNote -> 
               "Go to Literacy"}], 
            Cell[
             StyleData["LiteracyHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["LiteracyIndexHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[1, 0.433326, 0], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEnd`SelectionMove[
                   FrontEnd`SelectedNotebook[], Next, CellGroup], 
                  FrontEndToken["SelectionCloseAllGroups"], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Link into Literacy"}], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["LiteracyIndexHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["PreviewHyperlink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> None, FontWeight -> "Bold", FontSlant -> 
             "Italic", FontVariations -> {"Underline" -> True}, FontColor -> 
             GrayLevel[0.250004], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`NotebookLocate[#2], 
                  FrontEndToken["OpenCloseGroup"]}]& ), ButtonNote -> 
               "Preview of Lesson"}], 
            Cell[
             StyleData["PreviewHyperlink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["PreviewHyperlink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["RefGuideLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, FontFamily -> "Courier", 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["RefGuideLink", #]}]& )}], 
            Cell[
             StyleData["RefGuideLink", "Presentation"]], 
            Cell[
             StyleData["RefGuideLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["RefGuideLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["GettingStartedLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["GettingStarted", #]}]& )}], 
            Cell[
             StyleData["GettingStartedLink", "Presentation"]], 
            Cell[
             StyleData["GettingStartedLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["GettingStartedLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["OtherInformationLink"], StyleMenuListing -> None, 
             ButtonStyleMenuListing -> Automatic, 
             FontVariations -> {"Underline" -> True}, FontColor -> 
             RGBColor[0, 0, 1], 
             ButtonBoxOptions -> {
              Active -> True, Appearance -> {Automatic, None}, 
               ButtonFunction :> (FrontEndExecute[{
                  FrontEnd`HelpBrowserLookup["OtherInformation", #]}]& )}], 
            Cell[
             StyleData["OtherInformationLink", "Presentation"]], 
            Cell[
             StyleData["OtherInformationLink", "Printout"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]], 
            Cell[
             StyleData["OtherInformationLink", "TwoColumn"], 
             FontVariations -> {"Underline" -> False}, FontColor -> 
             GrayLevel[0]]}, Closed]]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["Placeholder Styles", "Section"], 
         Cell[
         "The cells below define styles useful for making placeholder objects \
in palette templates.", "Text"], 
         Cell[
          StyleData["Placeholder"], Editable -> False, Selectable -> False, 
          StyleBoxAutoDelete -> True, Placeholder -> True, StyleMenuListing -> 
          None], 
         Cell[
          StyleData["SelectionPlaceholder"], Editable -> False, Selectable -> 
          False, StyleBoxAutoDelete -> True, Placeholder -> 
          PrimaryPlaceholder, StyleMenuListing -> None, DrawHighlighted -> 
          True]}, Closed]], 
      Cell[
       CellGroupData[{
         Cell["FormatType Styles", "Section"], 
         Cell[
         "The cells below define styles that are mixed in with the styles of \
most cells.  If a cell's FormatType matches the name of one of the styles \
defined below, then that style is applied between the cell's style and its \
own options.", "Text"], 
         Cell[
          StyleData["CellExpression"], PageWidth -> Infinity, 
          CellMargins -> {{6, Inherited}, {Inherited, Inherited}}, 
          ShowCellLabel -> False, ShowSpecialCharacters -> False, 
          AllowInlineCells -> False, StyleMenuListing -> None, FontFamily -> 
          "Courier", FontSize -> 12], 
         Cell[
          StyleData["InputForm"], AllowInlineCells -> False, StyleMenuListing -> 
          None, FontFamily -> "Courier"], 
         Cell[
          StyleData["OutputForm"], PageWidth -> Infinity, TextAlignment -> 
          Left, LineSpacing -> {1, -5}, StyleMenuListing -> None, FontFamily -> 
          "Courier"], 
         Cell[
          StyleData["StandardForm"], LineSpacing -> {1.25, 0}, 
          StyleMenuListing -> None, FontFamily -> "Courier"], 
         Cell[
          StyleData["TraditionalForm"], LineSpacing -> {1.25, 0}, 
          SingleLetterItalics -> True, TraditionalFunctionNotation -> True, 
          DelimiterMatching -> None, StyleMenuListing -> None], 
         Cell[
         "The style defined below is mixed in to any cell that is in an \
inline cell within another.", "Text"], 
         Cell[
          CellGroupData[{
            Cell[
             StyleData["InlineCell"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Presentation"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontFamily -> "Times", FontSize -> 16, FontColor -> 
             RGBColor[0, 0, 1]], 
            Cell[
             StyleData["InlineCell", "Printout"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontColor -> GrayLevel[0]], 
            Cell[
             StyleData["InlineCell", "TwoColumn"], DefaultInlineFormatType -> 
             DefaultInputInlineFormatType, TextAlignment -> Left, ScriptLevel -> 
             1, LimitsPositioningTokens -> {}, StyleMenuListing -> None, 
             FontSize -> 14, FontColor -> GrayLevel[0]]}, Closed]]}, 
        Closed]]}, Open]]}, Visible -> False, FrontEndVersion -> 
  "8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 6, 2010)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "MGM.05.T1"->{
  Cell[29453, 802, 276, 6, 111, "Subsection",
   CellTags->"MGM.05.T1"]},
 "MGM.05.T2"->{
  Cell[128060, 3981, 92, 1, 36, "Subsection",
   CellTags->"MGM.05.T2"]},
 "MGM.05.T3"->{
  Cell[155657, 4906, 154, 4, 61, "Subsection",
   CellTags->"MGM.05.T3"]},
 "MGM.05.T4"->{
  Cell[207646, 6580, 1846, 71, 177, "Subsection",
   CellTags->"MGM.05.T4"]},
 "MGM.05.T5"->{
  Cell[237245, 7691, 200, 4, 61, "Subsection",
   CellTags->"MGM.05.T5"]},
 "MGM.05.T6"->{
  Cell[251848, 8180, 146, 4, 61, "Subsection",
   CellTags->"MGM.05.T6"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"MGM.05.T1", 343793, 10603},
 {"MGM.05.T2", 343883, 10606},
 {"MGM.05.T3", 343973, 10609},
 {"MGM.05.T4", 344064, 10612},
 {"MGM.05.T5", 344158, 10615},
 {"MGM.05.T6", 344249, 10618}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 5169, 90, 104, "LogoPrefaceTitle"],
Cell[5717, 112, 492, 14, 88, "PrefaceTitle"],
Cell[6212, 128, 115, 5, 81, "Title"],
Cell[CellGroupData[{
Cell[6352, 137, 193, 7, 28, "Special2"],
Cell[6548, 146, 1292, 38, 141, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7865, 188, 38, 0, 43, "Subsubsection"],
Cell[7906, 190, 1344, 31, 156, "Input"],
Cell[9253, 223, 170, 4, 20, "Input",
 InitializationCell->True],
Cell[9426, 229, 17368, 481, 1406, "Input",
 InitializationCell->True],
Cell[26797, 712, 210, 6, 20, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[27044, 723, 39, 0, 35, "Subsubsection"],
Cell[27086, 725, 2318, 71, 161, "Input",
 InitializationCell->True]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[29453, 802, 276, 6, 111, "Subsection",
 CellTags->"MGM.05.T1"],
Cell[CellGroupData[{
Cell[29754, 812, 79, 0, 31, "Subsubsection"],
Cell[29836, 814, 104, 3, 49, "Text"],
Cell[29943, 819, 2350, 73, 216, "Input"],
Cell[CellGroupData[{
Cell[32318, 896, 249, 5, 74, "Text"],
Cell[32570, 903, 27, 0, 23, "Special1"],
Cell[32600, 905, 110, 3, 20, "Special5"],
Cell[32713, 910, 82, 1, 24, "SmallText"],
Cell[32798, 913, 2583, 81, 332, "Input"],
Cell[35384, 996, 116, 3, 31, "Special5"],
Cell[35503, 1001, 821, 27, 124, "SmallText"],
Cell[36327, 1030, 148, 4, 43, "Special5"],
Cell[36478, 1036, 1734, 61, 299, "SmallText"],
Cell[38215, 1099, 2910, 95, 216, "Input"],
Cell[41128, 1196, 30, 0, 24, "SmallText"],
Cell[41161, 1198, 404, 12, 51, "Input"],
Cell[41568, 1212, 72, 0, 24, "SmallText"],
Cell[41643, 1214, 6562, 195, 522, "Input"],
Cell[48208, 1411, 78, 0, 24, "SmallText"],
Cell[48289, 1413, 721, 21, 51, "Input"],
Cell[49013, 1436, 116, 3, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[49178, 1445, 94, 2, 31, "Subsubsection"],
Cell[49275, 1449, 48, 0, 24, "Text"],
Cell[49326, 1451, 154, 5, 12, "Special2"],
Cell[49483, 1458, 4240, 125, 266, "Input"],
Cell[CellGroupData[{
Cell[53748, 1587, 317, 6, 124, "Text"],
Cell[54068, 1595, 27, 0, 23, "Special1"],
Cell[54098, 1597, 939, 31, 174, "SmallText"],
Cell[55040, 1630, 2940, 97, 216, "Input"],
Cell[57983, 1729, 27, 0, 24, "SmallText"],
Cell[58013, 1731, 501, 15, 51, "Input"],
Cell[58517, 1748, 103, 2, 24, "SmallText"],
Cell[58623, 1752, 8842, 258, 708, "Input"],
Cell[67468, 2012, 120, 3, 49, "SmallText"],
Cell[67591, 2017, 482, 14, 36, "Input"],
Cell[68076, 2033, 482, 14, 36, "Input"],
Cell[68561, 2049, 482, 14, 36, "Input"],
Cell[69046, 2065, 51, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[69146, 2071, 78, 0, 31, "Subsubsection"],
Cell[69227, 2073, 46, 0, 24, "Text"],
Cell[69276, 2075, 1631, 50, 111, "Input"],
Cell[70910, 2127, 61, 0, 24, "Text"],
Cell[70974, 2129, 1315, 40, 123, "Input"],
Cell[72292, 2171, 346, 7, 174, "Text"],
Cell[72641, 2180, 3545, 107, 331, "Input"],
Cell[76189, 2289, 51, 0, 20, "Special5"],
Cell[76243, 2291, 93, 2, 24, "Text"],
Cell[76339, 2295, 1640, 52, 141, "Input"],
Cell[77982, 2349, 366, 6, 124, "Text"],
Cell[78351, 2357, 3926, 123, 385, "Input"],
Cell[82280, 2482, 142, 4, 12, "Special2"],
Cell[82425, 2488, 38, 0, 24, "Text"],
Cell[82466, 2490, 3964, 125, 335, "Input"],
Cell[CellGroupData[{
Cell[86455, 2619, 86, 2, 24, "Text"],
Cell[86544, 2623, 27, 0, 23, "Special1"],
Cell[86574, 2625, 448, 9, 149, "SmallText"],
Cell[87025, 2636, 56, 0, 20, "Special5"],
Cell[87084, 2638, 3185, 101, 231, "Input"],
Cell[90272, 2741, 126, 3, 49, "SmallText"],
Cell[90401, 2746, 379, 12, 36, "Input"],
Cell[90783, 2760, 179, 5, 20, "Input"],
Cell[90965, 2767, 120, 3, 24, "SmallText"],
Cell[91088, 2772, 134, 4, 20, "Input"],
Cell[91225, 2778, 103, 3, 20, "Input"],
Cell[91331, 2783, 60, 0, 24, "SmallText"],
Cell[91394, 2785, 871, 24, 81, "Input"],
Cell[92268, 2811, 65, 0, 24, "SmallText"],
Cell[92336, 2813, 470, 14, 36, "Input"],
Cell[92809, 2829, 65, 0, 24, "SmallText"],
Cell[92877, 2831, 470, 14, 36, "Input"],
Cell[93350, 2847, 42, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[93441, 2853, 100, 2, 31, "Subsubsection"],
Cell[93544, 2857, 107, 3, 24, "Text"],
Cell[93654, 2862, 3415, 107, 261, "Input"],
Cell[97072, 2971, 73, 0, 24, "Text"],
Cell[97148, 2973, 1896, 56, 258, "Input"],
Cell[CellGroupData[{
Cell[99069, 3033, 77, 3, 49, "Text"],
Cell[99149, 3038, 27, 0, 23, "Special1"],
Cell[99179, 3040, 2267, 78, 224, "SmallText"],
Cell[101449, 3120, 4494, 147, 304, "Input"],
Cell[105946, 3269, 146, 3, 31, "Special5"],
Cell[106095, 3274, 50, 0, 24, "SmallText"],
Cell[106148, 3276, 1602, 44, 126, "Input"],
Cell[107753, 3322, 99, 2, 20, "Special5"],
Cell[107855, 3326, 157, 3, 49, "SmallText"],
Cell[108015, 3331, 4472, 134, 351, "Input"],
Cell[112490, 3467, 107, 2, 24, "SmallText"],
Cell[112600, 3471, 181, 5, 20, "Input"],
Cell[112784, 3478, 26, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[112859, 3484, 108, 2, 31, "Subsubsection"],
Cell[112970, 3488, 123, 3, 49, "Text"],
Cell[113096, 3493, 1725, 51, 228, "Input"],
Cell[CellGroupData[{
Cell[114846, 3548, 77, 3, 49, "Text"],
Cell[114926, 3553, 27, 0, 23, "Special1"],
Cell[114956, 3555, 2267, 78, 224, "SmallText"],
Cell[117226, 3635, 4362, 143, 289, "Input"],
Cell[121591, 3780, 162, 4, 31, "Special5"],
Cell[121756, 3786, 51, 0, 24, "SmallText"],
Cell[121810, 3788, 1472, 40, 111, "Input"],
Cell[123285, 3830, 157, 3, 49, "SmallText"],
Cell[123445, 3835, 4231, 126, 351, "Input"],
Cell[127679, 3963, 107, 2, 24, "SmallText"],
Cell[127789, 3967, 181, 5, 20, "Input"],
Cell[127973, 3974, 26, 0, 24, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[128060, 3981, 92, 1, 36, "Subsection",
 CellTags->"MGM.05.T2"],
Cell[CellGroupData[{
Cell[128177, 3986, 86, 1, 31, "Subsubsection"],
Cell[128266, 3989, 45, 0, 24, "Text"],
Cell[128314, 3991, 3424, 107, 297, "Input"],
Cell[131741, 4100, 57, 0, 20, "Special5"],
Cell[CellGroupData[{
Cell[131823, 4104, 99, 2, 24, "Text"],
Cell[131925, 4108, 27, 0, 23, "Special1"],
Cell[131955, 4110, 90, 2, 24, "SmallText"],
Cell[132048, 4114, 940, 30, 85, "Input"],
Cell[132991, 4146, 111, 3, 24, "SmallText"],
Cell[133105, 4151, 1342, 42, 100, "Input"],
Cell[134450, 4195, 53, 0, 24, "SmallText"],
Cell[134506, 4197, 132, 4, 20, "Input"],
Cell[134641, 4203, 33, 0, 24, "SmallText"],
Cell[134677, 4205, 143, 4, 20, "Input"],
Cell[134823, 4211, 247, 4, 74, "SmallText"],
Cell[135073, 4217, 780, 23, 128, "Input"],
Cell[135856, 4242, 94, 2, 24, "SmallText"],
Cell[135953, 4246, 954, 28, 102, "Input"],
Cell[136910, 4276, 47, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[137006, 4282, 94, 2, 31, "Subsubsection"],
Cell[137103, 4286, 45, 0, 24, "Text"],
Cell[137151, 4288, 3404, 106, 297, "Input"],
Cell[CellGroupData[{
Cell[140580, 4398, 109, 3, 24, "Text"],
Cell[140692, 4403, 27, 0, 23, "Special1"],
Cell[140722, 4405, 90, 2, 24, "SmallText"],
Cell[140815, 4409, 940, 30, 85, "Input"],
Cell[141758, 4441, 168, 5, 24, "SmallText"],
Cell[141929, 4448, 1342, 42, 100, "Input"],
Cell[143274, 4492, 53, 0, 24, "SmallText"],
Cell[143330, 4494, 132, 4, 20, "Input"],
Cell[143465, 4500, 33, 0, 24, "SmallText"],
Cell[143501, 4502, 143, 4, 20, "Input"],
Cell[143647, 4508, 252, 5, 74, "SmallText"],
Cell[143902, 4515, 775, 23, 128, "Input"],
Cell[144680, 4540, 94, 2, 24, "SmallText"],
Cell[144777, 4544, 956, 28, 102, "Input"],
Cell[145736, 4574, 47, 0, 24, "SmallText"],
Cell[145786, 4576, 31, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[145866, 4582, 75, 0, 31, "Subsubsection"],
Cell[145944, 4584, 94, 2, 24, "Text"],
Cell[146041, 4588, 797, 23, 96, "Input"],
Cell[CellGroupData[{
Cell[146863, 4615, 86, 2, 24, "Text"],
Cell[146952, 4619, 27, 0, 23, "Special1"],
Cell[146982, 4621, 159, 3, 49, "SmallText"],
Cell[147144, 4626, 2209, 70, 265, "Input"],
Cell[149356, 4698, 91, 2, 20, "Special5"],
Cell[149450, 4702, 30, 0, 24, "SmallText"],
Cell[149483, 4704, 914, 28, 100, "Input"],
Cell[150400, 4734, 97, 2, 24, "SmallText"],
Cell[150500, 4738, 963, 28, 96, "Input"],
Cell[151466, 4768, 919, 27, 81, "Input"],
Cell[152388, 4797, 44, 0, 24, "SmallText"],
Cell[152435, 4799, 447, 14, 36, "Input"],
Cell[152885, 4815, 94, 3, 49, "SmallText"],
Cell[152982, 4820, 711, 21, 99, "Input"],
Cell[153696, 4843, 63, 0, 24, "SmallText"],
Cell[153762, 4845, 730, 20, 66, "Input"],
Cell[154495, 4867, 35, 0, 24, "SmallText"],
Cell[CellGroupData[{
Cell[154555, 4871, 313, 9, 43, "Special5"],
Cell[154871, 4882, 713, 16, 349, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[155657, 4906, 154, 4, 61, "Subsection",
 CellTags->"MGM.05.T3"],
Cell[CellGroupData[{
Cell[155836, 4914, 102, 2, 31, "Subsubsection"],
Cell[155941, 4918, 111, 3, 24, "Text"],
Cell[156055, 4923, 2182, 66, 96, "Input"],
Cell[158240, 4991, 24, 0, 24, "Text"],
Cell[158267, 4993, 4512, 133, 333, "Input"],
Cell[162782, 5128, 30, 0, 24, "Text"],
Cell[162815, 5130, 5104, 152, 331, "Input"],
Cell[167922, 5284, 84, 2, 12, "Special2"],
Cell[CellGroupData[{
Cell[168031, 5290, 60, 0, 24, "Text"],
Cell[168094, 5292, 27, 0, 23, "Special1"],
Cell[168124, 5294, 189, 4, 49, "SmallText"],
Cell[168316, 5300, 1376, 44, 85, "Input"],
Cell[169695, 5346, 114, 3, 24, "SmallText"],
Cell[169812, 5351, 1318, 42, 85, "Input"],
Cell[171133, 5395, 585, 18, 99, "SmallText"],
Cell[171721, 5415, 613, 20, 51, "Input"],
Cell[172337, 5437, 268, 8, 49, "SmallText"],
Cell[172608, 5447, 1000, 33, 51, "Input"],
Cell[173611, 5482, 326, 9, 74, "SmallText"],
Cell[173940, 5493, 1477, 50, 51, "Input"],
Cell[175420, 5545, 2927, 100, 324, "SmallText"],
Cell[178350, 5647, 45, 0, 24, "SmallText"],
Cell[178398, 5649, 54, 0, 24, "SmallText"],
Cell[178455, 5651, 4698, 138, 276, "Input"],
Cell[183156, 5791, 166, 6, 24, "SmallText"],
Cell[183325, 5799, 4849, 144, 295, "Input"],
Cell[188177, 5945, 173, 6, 24, "SmallText"],
Cell[188353, 5953, 4865, 145, 314, "Input"],
Cell[193221, 6100, 174, 6, 24, "SmallText"],
Cell[193398, 6108, 4926, 148, 332, "Input"],
Cell[198327, 6258, 41, 0, 24, "Text"],
Cell[198371, 6260, 175, 5, 20, "Input"],
Cell[198549, 6267, 91, 2, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[198689, 6275, 102, 2, 31, "Subsubsection"],
Cell[198794, 6279, 162, 4, 49, "Text"],
Cell[198959, 6285, 284, 9, 20, "Input"],
Cell[199246, 6296, 852, 24, 274, "Text"],
Cell[200101, 6322, 2182, 66, 96, "Input"],
Cell[CellGroupData[{
Cell[202308, 6392, 38, 0, 24, "Text"],
Cell[202349, 6394, 27, 0, 23, "Special1"],
Cell[202379, 6396, 352, 10, 224, "SmallText"],
Cell[202734, 6408, 415, 13, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[203198, 6427, 72, 0, 31, "Subsubsection"],
Cell[203273, 6429, 29, 0, 24, "Text"],
Cell[203305, 6431, 2182, 66, 96, "Input"],
Cell[205490, 6499, 156, 3, 49, "Text"],
Cell[205649, 6504, 1073, 35, 81, "Input"],
Cell[206725, 6541, 143, 5, 99, "Text"],
Cell[206871, 6548, 27, 0, 23, "Special1"],
Cell[206901, 6550, 108, 3, 24, "SmallText"],
Cell[207012, 6555, 424, 13, 20, "Input"],
Cell[207439, 6570, 158, 4, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[207646, 6580, 1846, 71, 177, "Subsection",
 CellTags->"MGM.05.T4"],
Cell[CellGroupData[{
Cell[209517, 6655, 59, 0, 31, "Subsubsection"],
Cell[209579, 6657, 55, 0, 24, "Text"],
Cell[209637, 6659, 3459, 108, 142, "Input"],
Cell[213099, 6769, 68, 0, 24, "Text"],
Cell[213170, 6771, 191, 5, 36, "Input"],
Cell[CellGroupData[{
Cell[213386, 6780, 202, 5, 99, "Text"],
Cell[213591, 6787, 27, 0, 23, "Special1"],
Cell[213621, 6789, 252, 5, 99, "SmallText"],
Cell[213876, 6796, 578, 19, 91, "Input"],
Cell[214457, 6817, 167, 5, 24, "SmallText"],
Cell[214627, 6824, 102, 3, 20, "Input"],
Cell[214732, 6829, 52, 0, 24, "SmallText"],
Cell[214787, 6831, 573, 19, 90, "Input"],
Cell[215363, 6852, 167, 5, 24, "SmallText"],
Cell[215533, 6859, 109, 3, 20, "Input"],
Cell[215645, 6864, 35, 0, 24, "SmallText"],
Cell[215683, 6866, 189, 6, 20, "Input"],
Cell[215875, 6874, 168, 5, 24, "SmallText"],
Cell[216046, 6881, 313, 10, 20, "Input"],
Cell[216362, 6893, 54, 0, 24, "SmallText"],
Cell[216419, 6895, 251, 8, 20, "Input"],
Cell[216673, 6905, 50, 0, 24, "SmallText"],
Cell[216726, 6907, 492, 16, 20, "Input"],
Cell[217221, 6925, 271, 6, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[217541, 6937, 164, 4, 31, "Subsubsection"],
Cell[217708, 6943, 50, 0, 24, "Text"],
Cell[217761, 6945, 1472, 48, 136, "Input"],
Cell[219236, 6995, 39, 0, 24, "Text"],
Cell[219278, 6997, 69, 1, 20, "Input"],
Cell[219350, 7000, 24, 0, 24, "Text"],
Cell[219377, 7002, 323, 10, 20, "Input"],
Cell[CellGroupData[{
Cell[219725, 7016, 96, 2, 24, "Text"],
Cell[219824, 7020, 27, 0, 23, "Special1"],
Cell[219854, 7022, 79, 3, 49, "SmallText"],
Cell[219936, 7027, 133, 4, 24, "SmallText"],
Cell[220072, 7033, 70, 3, 49, "SmallText"],
Cell[220145, 7038, 372, 13, 92, "SmallText"],
Cell[220520, 7053, 98, 4, 49, "SmallText"],
Cell[220621, 7059, 1051, 35, 81, "Input"],
Cell[221675, 7096, 34, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[221758, 7102, 336, 14, 45, "Subsubsection"],
Cell[222097, 7118, 367, 15, 35, "Text"],
Cell[222467, 7135, 1192, 36, 71, "Input"],
Cell[223662, 7173, 125, 4, 42, "Input"],
Cell[CellGroupData[{
Cell[223812, 7181, 437, 16, 85, "Text"],
Cell[224252, 7199, 27, 0, 23, "Special1"],
Cell[224282, 7201, 818, 33, 166, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[225149, 7240, 246, 7, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[225420, 7251, 248, 8, 74, "Text"],
Cell[225671, 7261, 27, 0, 23, "Special1"],
Cell[225701, 7263, 679, 19, 174, "SmallText"],
Cell[226383, 7284, 246, 10, 23, "Special2"],
Cell[226632, 7296, 522, 19, 74, "SmallText"],
Cell[227157, 7317, 817, 22, 292, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[228023, 7345, 247, 7, 52, "Subsubsection"],
Cell[CellGroupData[{
Cell[228295, 7356, 248, 8, 74, "Text"],
Cell[228546, 7366, 27, 0, 23, "Special1"],
Cell[228576, 7368, 679, 19, 174, "SmallText"],
Cell[229258, 7389, 246, 10, 23, "Special2"],
Cell[229507, 7401, 524, 19, 74, "SmallText"],
Cell[230034, 7422, 820, 22, 292, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[230903, 7450, 290, 12, 35, "Subsubsection"],
Cell[231196, 7464, 153, 5, 26, "Text"],
Cell[231352, 7471, 1826, 56, 88, "Input"],
Cell[233181, 7529, 84, 2, 12, "Special2"],
Cell[CellGroupData[{
Cell[233290, 7535, 224, 6, 76, "Text"],
Cell[233517, 7543, 27, 0, 23, "Special1"],
Cell[233547, 7545, 126, 2, 12, "Special2"],
Cell[233676, 7549, 1752, 68, 255, "SmallText"],
Cell[235431, 7619, 1562, 58, 177, "Special2"],
Cell[236996, 7679, 188, 5, 51, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[237245, 7691, 200, 4, 61, "Subsection",
 CellTags->"MGM.05.T5"],
Cell[CellGroupData[{
Cell[237470, 7699, 425, 10, 96, "Subsubsection"],
Cell[237898, 7711, 65, 0, 24, "Text"],
Cell[237966, 7713, 476, 17, 73, "Input"],
Cell[238445, 7732, 45, 0, 24, "Text"],
Cell[238493, 7734, 2416, 67, 201, "Input"],
Cell[240912, 7803, 146, 3, 49, "Text"],
Cell[241061, 7808, 208, 6, 20, "Input"],
Cell[241272, 7816, 72, 0, 24, "Text"],
Cell[241347, 7818, 171, 4, 49, "Text"],
Cell[241521, 7824, 463, 16, 20, "Input"],
Cell[241987, 7842, 102, 3, 49, "Text"],
Cell[242092, 7847, 1837, 51, 141, "Input"],
Cell[CellGroupData[{
Cell[243954, 7902, 518, 11, 199, "Text"],
Cell[244475, 7915, 27, 0, 23, "Special1"],
Cell[244505, 7917, 385, 13, 74, "SmallText"],
Cell[244893, 7932, 98, 2, 12, "Special2"],
Cell[244994, 7936, 2603, 90, 474, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[247646, 8032, 430, 10, 96, "Subsubsection"],
Cell[CellGroupData[{
Cell[248101, 8046, 493, 11, 174, "Text"],
Cell[248597, 8059, 27, 0, 23, "Special1"],
Cell[248627, 8061, 385, 13, 74, "SmallText"],
Cell[249015, 8076, 98, 2, 12, "Special2"],
Cell[249116, 8080, 2671, 93, 524, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[251848, 8180, 146, 4, 61, "Subsection",
 CellTags->"MGM.05.T6"],
Cell[CellGroupData[{
Cell[252019, 8188, 72, 0, 31, "Subsubsection"],
Cell[252094, 8190, 44, 0, 24, "Text"],
Cell[252141, 8192, 385, 14, 73, "Input"],
Cell[252529, 8208, 89, 2, 24, "Text"],
Cell[252621, 8212, 227, 8, 36, "Input"],
Cell[252851, 8222, 52, 0, 20, "Special5"],
Cell[252906, 8224, 96, 2, 24, "Text"],
Cell[253005, 8228, 5391, 164, 403, "Input"],
Cell[CellGroupData[{
Cell[258421, 8396, 164, 4, 74, "Text"],
Cell[258588, 8402, 27, 0, 23, "Special1"],
Cell[258618, 8404, 74, 0, 24, "SmallText"],
Cell[258695, 8406, 3221, 99, 156, "Input"],
Cell[261919, 8507, 132, 4, 49, "SmallText"],
Cell[262054, 8513, 495, 15, 51, "Input"],
Cell[262552, 8530, 34, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[262635, 8536, 86, 1, 31, "Subsubsection"],
Cell[262724, 8539, 61, 0, 24, "Text"],
Cell[262788, 8541, 255, 7, 20, "Input"],
Cell[CellGroupData[{
Cell[263068, 8552, 65, 0, 24, "Text"],
Cell[263136, 8554, 27, 0, 23, "Special1"],
Cell[263166, 8556, 174, 3, 49, "SmallText"],
Cell[263343, 8561, 227, 6, 36, "Input"],
Cell[263573, 8569, 40, 0, 24, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[263662, 8575, 63, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[263750, 8579, 121, 3, 49, "Text"],
Cell[263874, 8584, 27, 0, 23, "Special1"],
Cell[263904, 8586, 36, 0, 24, "SmallText"],
Cell[263943, 8588, 81, 2, 20, "Input"],
Cell[264027, 8592, 125, 5, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[264201, 8603, 69, 0, 31, "Subsubsection"],
Cell[264273, 8605, 76, 0, 24, "Text"],
Cell[264352, 8607, 1347, 37, 81, "Input"],
Cell[265702, 8646, 33, 0, 24, "Text"],
Cell[265738, 8648, 1325, 37, 81, "Input"],
Cell[CellGroupData[{
Cell[267088, 8689, 91, 3, 49, "Text"],
Cell[267182, 8694, 27, 0, 23, "Special1"],
Cell[267212, 8696, 1077, 34, 349, "SmallText"],
Cell[268292, 8732, 375, 11, 36, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[268716, 8749, 52, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[268793, 8753, 109, 3, 24, "Text"],
Cell[268905, 8758, 27, 0, 23, "Special1"],
Cell[268935, 8760, 311, 7, 99, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[269295, 8773, 72, 0, 31, "Subsubsection"],
Cell[269370, 8775, 50, 0, 24, "Text"],
Cell[269423, 8777, 374, 13, 55, "Input"],
Cell[269800, 8792, 91, 2, 24, "Text"],
Cell[269894, 8796, 247, 8, 36, "Input"],
Cell[270144, 8806, 52, 0, 20, "Special5"],
Cell[270199, 8808, 99, 2, 24, "Text"],
Cell[270301, 8812, 5759, 177, 470, "Input"],
Cell[CellGroupData[{
Cell[276085, 8993, 173, 3, 49, "Text"],
Cell[276261, 8998, 27, 0, 23, "Special1"],
Cell[276291, 9000, 82, 1, 24, "SmallText"],
Cell[276376, 9003, 782, 25, 81, "Input"],
Cell[277161, 9030, 549, 17, 66, "Input"],
Cell[277713, 9049, 624, 18, 66, "Input"],
Cell[278340, 9069, 27, 0, 24, "SmallText"],
Cell[278370, 9071, 164, 3, 36, "Input"],
Cell[278537, 9076, 32, 0, 24, "SmallText"],
Cell[278572, 9078, 197, 4, 74, "SmallText"],
Cell[278772, 9084, 5036, 151, 521, "Input"],
Cell[283811, 9237, 131, 4, 49, "SmallText"],
Cell[283945, 9243, 547, 16, 51, "Input"],
Cell[284495, 9261, 62, 0, 24, "SmallText"],
Cell[284560, 9263, 154, 4, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[284763, 9273, 57, 0, 31, "Subsubsection"],
Cell[284823, 9275, 60, 0, 24, "Text"],
Cell[284886, 9277, 144, 4, 20, "Input"],
Cell[CellGroupData[{
Cell[285055, 9285, 38, 0, 24, "Text"],
Cell[285096, 9287, 27, 0, 23, "Special1"],
Cell[285126, 9289, 72, 0, 24, "SmallText"],
Cell[285201, 9291, 1373, 39, 81, "Input"],
Cell[286577, 9332, 24, 0, 24, "SmallText"],
Cell[286604, 9334, 1335, 39, 81, "Input"],
Cell[287942, 9375, 78, 0, 24, "SmallText"],
Cell[288023, 9377, 375, 11, 36, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[288447, 9394, 78, 0, 31, "Subsubsection"],
Cell[288528, 9396, 68, 0, 24, "Text"],
Cell[288599, 9398, 106, 3, 20, "Input"],
Cell[CellGroupData[{
Cell[288730, 9405, 58, 0, 24, "Text"],
Cell[288791, 9407, 27, 0, 23, "Special1"],
Cell[288821, 9409, 70, 0, 24, "SmallText"],
Cell[288894, 9411, 104, 2, 20, "Input"],
Cell[289001, 9415, 108, 3, 24, "SmallText"],
Cell[289112, 9420, 154, 4, 20, "Input"],
Cell[289269, 9426, 25, 0, 24, "SmallText"],
Cell[289297, 9428, 353, 12, 55, "Input"],
Cell[289653, 9442, 68, 0, 24, "SmallText"],
Cell[289724, 9444, 185, 6, 20, "Input"],
Cell[289912, 9452, 141, 3, 49, "SmallText"],
Cell[290056, 9457, 139, 4, 20, "Input"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[290244, 9467, 63, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[290332, 9471, 121, 3, 49, "Text"],
Cell[290456, 9476, 27, 0, 23, "Special1"],
Cell[290486, 9478, 36, 0, 24, "SmallText"],
Cell[290525, 9480, 81, 2, 20, "Input"],
Cell[290609, 9484, 125, 5, 74, "SmallText"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[290783, 9495, 52, 0, 31, "Subsubsection"],
Cell[CellGroupData[{
Cell[290860, 9499, 109, 3, 24, "Text"],
Cell[290972, 9504, 27, 0, 23, "Special1"],
Cell[291002, 9506, 235, 6, 74, "SmallText"]
}, Closed]]
}, Closed]]
}, Closed]]
}
]
*)

(* End of internal cache information *)
